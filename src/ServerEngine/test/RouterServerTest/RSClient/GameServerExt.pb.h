// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameServerExt.proto

#ifndef PROTOBUF_GameServerExt_2eproto__INCLUDED
#define PROTOBUF_GameServerExt_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "GameServer.pb.h"
// @@protoc_insertion_point(includes)

namespace GSProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GameServerExt_2eproto();
void protobuf_AssignDesc_GameServerExt_2eproto();
void protobuf_ShutdownFile_GameServerExt_2eproto();

class Cmd_Sc_QueryGodAnimalLevelStep;
class Cmd_Cs_QueryGodAnimalInherit;
class Cmd_Sc_QueryGodAnimalInherit;
class Cmd_Cs_ExeGodAnimalInherit;
class Cmd_Sc_ExeGodAnimalInherit;
class Cmd_Cs_QueryGodAnimalDetai;
class Cmd_Sc_QueryGodAnimalDetai;
class CMD_GODANIMAL_DETAIL_BYID_CS;
class CMD_GODANIMAL_DETAIL_BYID_SC;
class Cmd_Cs_GodAnimalTrain;
class Cmd_Sc_GodAnimalUpdate;
class Cmd_Cs_QueryGodAnimalLevelStep;
class Cmd_Sc_GoldAnimalList;
class CMD_NORMALSHOP_QUERY_SC;
class CMD_NORMALSHOP_BUY_CS;
class CampUnit;
class CMD_QUERY_LEGION_CAMPBATTLE_SC;
class CMD_QUERY_CAMPBATTLE_INFO_CS;
class LegionUnit;
class CMD_QUERY_CAMPBATTLE_INFO_SC;
class CMD_LEGION_CAMPBATTLE_REPORT_CS;
class VSUnit;
class VSLegion;
class VSLegionMemDetail;
class CMD_LEGION_CAMPBATTLE_JOIN_CS;
class CMD_LEGION_CAMPBATTLE_JOIN_SC;
class CMD_LEGION_CAMPBATTLE_ENTER_CS;
class CMD_LEGION_CAMPBATTLE_BATTLE_CS;
class LastFightLogItem;
class CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC;
class CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS;
class VSLegionBase;
class CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC;
class CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS;
class FightRecord;
class CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC;
class CMD_QUERY_CUR_FIGHT_CONDITION_CS;
class CMD_QUERY_CUR_FIGHT_CONDITION_SC;
class CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS;

enum GameServerCMD_Ext {
  CMD_NORMALSHOP_QUERY = 20001,
  CMD_NORMALSHOP_REFRESH = 20002,
  CMD_NORMALSHOP_BUY = 20003,
  CMD_QUERY_LEGION_CAMPBATTLE = 18301,
  CMD_LEGION_CAMPBATTLE_REPORT = 18302,
  CMD_LEGION_CAMPBATTLE_JOIN = 18303,
  CMD_LEGION_CAMPBATTLE_ENTER = 18304,
  CMD_LEGION_CAMPBATTLE_BATTLE = 18305,
  CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG = 18306,
  CMD_QUERY_CUR_FIGHT_CONDITION = 18307,
  CMD_QUERY_CAMPBATTLE_INFO = 18308,
  CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG = 18309,
  CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG = 18310,
  CMD_QUERY_CUR_FIGHT_LEGION_LOG = 18311
};
bool GameServerCMD_Ext_IsValid(int value);
const GameServerCMD_Ext GameServerCMD_Ext_MIN = CMD_QUERY_LEGION_CAMPBATTLE;
const GameServerCMD_Ext GameServerCMD_Ext_MAX = CMD_NORMALSHOP_BUY;
const int GameServerCMD_Ext_ARRAYSIZE = GameServerCMD_Ext_MAX + 1;

const ::google::protobuf::EnumDescriptor* GameServerCMD_Ext_descriptor();
inline const ::std::string& GameServerCMD_Ext_Name(GameServerCMD_Ext value) {
  return ::google::protobuf::internal::NameOfEnum(
    GameServerCMD_Ext_descriptor(), value);
}
inline bool GameServerCMD_Ext_Parse(
    const ::std::string& name, GameServerCMD_Ext* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GameServerCMD_Ext>(
    GameServerCMD_Ext_descriptor(), name, value);
}
enum enCampState {
  enStateNULL = 0,
  enStateBeforReport = 1,
  enStateInReport = 2,
  enStateInBattle = 3,
  enStateAfterBattle = 4,
  enStateNoBattle = 5
};
bool enCampState_IsValid(int value);
const enCampState enCampState_MIN = enStateNULL;
const enCampState enCampState_MAX = enStateNoBattle;
const int enCampState_ARRAYSIZE = enCampState_MAX + 1;

const ::google::protobuf::EnumDescriptor* enCampState_descriptor();
inline const ::std::string& enCampState_Name(enCampState value) {
  return ::google::protobuf::internal::NameOfEnum(
    enCampState_descriptor(), value);
}
inline bool enCampState_Parse(
    const ::std::string& name, enCampState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enCampState>(
    enCampState_descriptor(), name, value);
}
// ===================================================================

class Cmd_Sc_QueryGodAnimalLevelStep : public ::google::protobuf::Message {
 public:
  Cmd_Sc_QueryGodAnimalLevelStep();
  virtual ~Cmd_Sc_QueryGodAnimalLevelStep();

  Cmd_Sc_QueryGodAnimalLevelStep(const Cmd_Sc_QueryGodAnimalLevelStep& from);

  inline Cmd_Sc_QueryGodAnimalLevelStep& operator=(const Cmd_Sc_QueryGodAnimalLevelStep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_QueryGodAnimalLevelStep& default_instance();

  void Swap(Cmd_Sc_QueryGodAnimalLevelStep* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_QueryGodAnimalLevelStep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_QueryGodAnimalLevelStep& from);
  void MergeFrom(const Cmd_Sc_QueryGodAnimalLevelStep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // required bool bTouchMaxLv = 2;
  inline bool has_btouchmaxlv() const;
  inline void clear_btouchmaxlv();
  static const int kBTouchMaxLvFieldNumber = 2;
  inline bool btouchmaxlv() const;
  inline void set_btouchmaxlv(bool value);

  // required .GSProto.GoldAnimalLevelStepInfo curInfo = 3;
  inline bool has_curinfo() const;
  inline void clear_curinfo();
  static const int kCurInfoFieldNumber = 3;
  inline const ::GSProto::GoldAnimalLevelStepInfo& curinfo() const;
  inline ::GSProto::GoldAnimalLevelStepInfo* mutable_curinfo();
  inline ::GSProto::GoldAnimalLevelStepInfo* release_curinfo();
  inline void set_allocated_curinfo(::GSProto::GoldAnimalLevelStepInfo* curinfo);

  // optional .GSProto.GoldAnimalLevelStepInfo nextInfo = 4;
  inline bool has_nextinfo() const;
  inline void clear_nextinfo();
  static const int kNextInfoFieldNumber = 4;
  inline const ::GSProto::GoldAnimalLevelStepInfo& nextinfo() const;
  inline ::GSProto::GoldAnimalLevelStepInfo* mutable_nextinfo();
  inline ::GSProto::GoldAnimalLevelStepInfo* release_nextinfo();
  inline void set_allocated_nextinfo(::GSProto::GoldAnimalLevelStepInfo* nextinfo);

  // repeated .GSProto.ConsumeItem szConsumeItem = 5;
  inline int szconsumeitem_size() const;
  inline void clear_szconsumeitem();
  static const int kSzConsumeItemFieldNumber = 5;
  inline const ::GSProto::ConsumeItem& szconsumeitem(int index) const;
  inline ::GSProto::ConsumeItem* mutable_szconsumeitem(int index);
  inline ::GSProto::ConsumeItem* add_szconsumeitem();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ConsumeItem >&
      szconsumeitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::ConsumeItem >*
      mutable_szconsumeitem();

  // required int32 iLevelStepSilverCost = 6;
  inline bool has_ilevelstepsilvercost() const;
  inline void clear_ilevelstepsilvercost();
  static const int kILevelStepSilverCostFieldNumber = 6;
  inline ::google::protobuf::int32 ilevelstepsilvercost() const;
  inline void set_ilevelstepsilvercost(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_QueryGodAnimalLevelStep)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();
  inline void set_has_btouchmaxlv();
  inline void clear_has_btouchmaxlv();
  inline void set_has_curinfo();
  inline void clear_has_curinfo();
  inline void set_has_nextinfo();
  inline void clear_has_nextinfo();
  inline void set_has_ilevelstepsilvercost();
  inline void clear_has_ilevelstepsilvercost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwobjectid_;
  bool btouchmaxlv_;
  ::GSProto::GoldAnimalLevelStepInfo* curinfo_;
  ::GSProto::GoldAnimalLevelStepInfo* nextinfo_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::ConsumeItem > szconsumeitem_;
  ::google::protobuf::int32 ilevelstepsilvercost_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_QueryGodAnimalLevelStep* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_QueryGodAnimalInherit : public ::google::protobuf::Message {
 public:
  Cmd_Cs_QueryGodAnimalInherit();
  virtual ~Cmd_Cs_QueryGodAnimalInherit();

  Cmd_Cs_QueryGodAnimalInherit(const Cmd_Cs_QueryGodAnimalInherit& from);

  inline Cmd_Cs_QueryGodAnimalInherit& operator=(const Cmd_Cs_QueryGodAnimalInherit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_QueryGodAnimalInherit& default_instance();

  void Swap(Cmd_Cs_QueryGodAnimalInherit* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_QueryGodAnimalInherit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_QueryGodAnimalInherit& from);
  void MergeFrom(const Cmd_Cs_QueryGodAnimalInherit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwAccepObjectID = 1;
  inline bool has_dwaccepobjectid() const;
  inline void clear_dwaccepobjectid();
  static const int kDwAccepObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwaccepobjectid() const;
  inline void set_dwaccepobjectid(::google::protobuf::uint32 value);

  // optional uint32 dwPasserObjectID = 2;
  inline bool has_dwpasserobjectid() const;
  inline void clear_dwpasserobjectid();
  static const int kDwPasserObjectIDFieldNumber = 2;
  inline ::google::protobuf::uint32 dwpasserobjectid() const;
  inline void set_dwpasserobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_QueryGodAnimalInherit)
 private:
  inline void set_has_dwaccepobjectid();
  inline void clear_has_dwaccepobjectid();
  inline void set_has_dwpasserobjectid();
  inline void clear_has_dwpasserobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwaccepobjectid_;
  ::google::protobuf::uint32 dwpasserobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_QueryGodAnimalInherit* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_QueryGodAnimalInherit : public ::google::protobuf::Message {
 public:
  Cmd_Sc_QueryGodAnimalInherit();
  virtual ~Cmd_Sc_QueryGodAnimalInherit();

  Cmd_Sc_QueryGodAnimalInherit(const Cmd_Sc_QueryGodAnimalInherit& from);

  inline Cmd_Sc_QueryGodAnimalInherit& operator=(const Cmd_Sc_QueryGodAnimalInherit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_QueryGodAnimalInherit& default_instance();

  void Swap(Cmd_Sc_QueryGodAnimalInherit* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_QueryGodAnimalInherit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_QueryGodAnimalInherit& from);
  void MergeFrom(const Cmd_Sc_QueryGodAnimalInherit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.GoldAnimalDetail acceptPreDetail = 1;
  inline bool has_acceptpredetail() const;
  inline void clear_acceptpredetail();
  static const int kAcceptPreDetailFieldNumber = 1;
  inline const ::GSProto::GoldAnimalDetail& acceptpredetail() const;
  inline ::GSProto::GoldAnimalDetail* mutable_acceptpredetail();
  inline ::GSProto::GoldAnimalDetail* release_acceptpredetail();
  inline void set_allocated_acceptpredetail(::GSProto::GoldAnimalDetail* acceptpredetail);

  // optional .GSProto.GoldAnimalDetail passerDetail = 2;
  inline bool has_passerdetail() const;
  inline void clear_passerdetail();
  static const int kPasserDetailFieldNumber = 2;
  inline const ::GSProto::GoldAnimalDetail& passerdetail() const;
  inline ::GSProto::GoldAnimalDetail* mutable_passerdetail();
  inline ::GSProto::GoldAnimalDetail* release_passerdetail();
  inline void set_allocated_passerdetail(::GSProto::GoldAnimalDetail* passerdetail);

  // optional .GSProto.GoldAnimalDetail acceptPostDetail = 3;
  inline bool has_acceptpostdetail() const;
  inline void clear_acceptpostdetail();
  static const int kAcceptPostDetailFieldNumber = 3;
  inline const ::GSProto::GoldAnimalDetail& acceptpostdetail() const;
  inline ::GSProto::GoldAnimalDetail* mutable_acceptpostdetail();
  inline ::GSProto::GoldAnimalDetail* release_acceptpostdetail();
  inline void set_allocated_acceptpostdetail(::GSProto::GoldAnimalDetail* acceptpostdetail);

  // optional int32 iInheritSilverCost = 4;
  inline bool has_iinheritsilvercost() const;
  inline void clear_iinheritsilvercost();
  static const int kIInheritSilverCostFieldNumber = 4;
  inline ::google::protobuf::int32 iinheritsilvercost() const;
  inline void set_iinheritsilvercost(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_QueryGodAnimalInherit)
 private:
  inline void set_has_acceptpredetail();
  inline void clear_has_acceptpredetail();
  inline void set_has_passerdetail();
  inline void clear_has_passerdetail();
  inline void set_has_acceptpostdetail();
  inline void clear_has_acceptpostdetail();
  inline void set_has_iinheritsilvercost();
  inline void clear_has_iinheritsilvercost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::GoldAnimalDetail* acceptpredetail_;
  ::GSProto::GoldAnimalDetail* passerdetail_;
  ::GSProto::GoldAnimalDetail* acceptpostdetail_;
  ::google::protobuf::int32 iinheritsilvercost_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_QueryGodAnimalInherit* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_ExeGodAnimalInherit : public ::google::protobuf::Message {
 public:
  Cmd_Cs_ExeGodAnimalInherit();
  virtual ~Cmd_Cs_ExeGodAnimalInherit();

  Cmd_Cs_ExeGodAnimalInherit(const Cmd_Cs_ExeGodAnimalInherit& from);

  inline Cmd_Cs_ExeGodAnimalInherit& operator=(const Cmd_Cs_ExeGodAnimalInherit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_ExeGodAnimalInherit& default_instance();

  void Swap(Cmd_Cs_ExeGodAnimalInherit* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_ExeGodAnimalInherit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_ExeGodAnimalInherit& from);
  void MergeFrom(const Cmd_Cs_ExeGodAnimalInherit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwPasserObjectID = 1;
  inline bool has_dwpasserobjectid() const;
  inline void clear_dwpasserobjectid();
  static const int kDwPasserObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwpasserobjectid() const;
  inline void set_dwpasserobjectid(::google::protobuf::uint32 value);

  // required uint32 dwAccepObjectID = 2;
  inline bool has_dwaccepobjectid() const;
  inline void clear_dwaccepobjectid();
  static const int kDwAccepObjectIDFieldNumber = 2;
  inline ::google::protobuf::uint32 dwaccepobjectid() const;
  inline void set_dwaccepobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_ExeGodAnimalInherit)
 private:
  inline void set_has_dwpasserobjectid();
  inline void clear_has_dwpasserobjectid();
  inline void set_has_dwaccepobjectid();
  inline void clear_has_dwaccepobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwpasserobjectid_;
  ::google::protobuf::uint32 dwaccepobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_ExeGodAnimalInherit* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_ExeGodAnimalInherit : public ::google::protobuf::Message {
 public:
  Cmd_Sc_ExeGodAnimalInherit();
  virtual ~Cmd_Sc_ExeGodAnimalInherit();

  Cmd_Sc_ExeGodAnimalInherit(const Cmd_Sc_ExeGodAnimalInherit& from);

  inline Cmd_Sc_ExeGodAnimalInherit& operator=(const Cmd_Sc_ExeGodAnimalInherit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_ExeGodAnimalInherit& default_instance();

  void Swap(Cmd_Sc_ExeGodAnimalInherit* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_ExeGodAnimalInherit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_ExeGodAnimalInherit& from);
  void MergeFrom(const Cmd_Sc_ExeGodAnimalInherit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.GoldAnimalDetail passerDetail = 1;
  inline bool has_passerdetail() const;
  inline void clear_passerdetail();
  static const int kPasserDetailFieldNumber = 1;
  inline const ::GSProto::GoldAnimalDetail& passerdetail() const;
  inline ::GSProto::GoldAnimalDetail* mutable_passerdetail();
  inline ::GSProto::GoldAnimalDetail* release_passerdetail();
  inline void set_allocated_passerdetail(::GSProto::GoldAnimalDetail* passerdetail);

  // required .GSProto.GoldAnimalDetail acceptDetail = 2;
  inline bool has_acceptdetail() const;
  inline void clear_acceptdetail();
  static const int kAcceptDetailFieldNumber = 2;
  inline const ::GSProto::GoldAnimalDetail& acceptdetail() const;
  inline ::GSProto::GoldAnimalDetail* mutable_acceptdetail();
  inline ::GSProto::GoldAnimalDetail* release_acceptdetail();
  inline void set_allocated_acceptdetail(::GSProto::GoldAnimalDetail* acceptdetail);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_ExeGodAnimalInherit)
 private:
  inline void set_has_passerdetail();
  inline void clear_has_passerdetail();
  inline void set_has_acceptdetail();
  inline void clear_has_acceptdetail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::GoldAnimalDetail* passerdetail_;
  ::GSProto::GoldAnimalDetail* acceptdetail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_ExeGodAnimalInherit* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_QueryGodAnimalDetai : public ::google::protobuf::Message {
 public:
  Cmd_Cs_QueryGodAnimalDetai();
  virtual ~Cmd_Cs_QueryGodAnimalDetai();

  Cmd_Cs_QueryGodAnimalDetai(const Cmd_Cs_QueryGodAnimalDetai& from);

  inline Cmd_Cs_QueryGodAnimalDetai& operator=(const Cmd_Cs_QueryGodAnimalDetai& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_QueryGodAnimalDetai& default_instance();

  void Swap(Cmd_Cs_QueryGodAnimalDetai* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_QueryGodAnimalDetai* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_QueryGodAnimalDetai& from);
  void MergeFrom(const Cmd_Cs_QueryGodAnimalDetai& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwGodAnimalObjectID = 1;
  inline bool has_dwgodanimalobjectid() const;
  inline void clear_dwgodanimalobjectid();
  static const int kDwGodAnimalObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwgodanimalobjectid() const;
  inline void set_dwgodanimalobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_QueryGodAnimalDetai)
 private:
  inline void set_has_dwgodanimalobjectid();
  inline void clear_has_dwgodanimalobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwgodanimalobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_QueryGodAnimalDetai* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_QueryGodAnimalDetai : public ::google::protobuf::Message {
 public:
  Cmd_Sc_QueryGodAnimalDetai();
  virtual ~Cmd_Sc_QueryGodAnimalDetai();

  Cmd_Sc_QueryGodAnimalDetai(const Cmd_Sc_QueryGodAnimalDetai& from);

  inline Cmd_Sc_QueryGodAnimalDetai& operator=(const Cmd_Sc_QueryGodAnimalDetai& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_QueryGodAnimalDetai& default_instance();

  void Swap(Cmd_Sc_QueryGodAnimalDetai* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_QueryGodAnimalDetai* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_QueryGodAnimalDetai& from);
  void MergeFrom(const Cmd_Sc_QueryGodAnimalDetai& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.GoldAnimalDetail detail = 1;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 1;
  inline const ::GSProto::GoldAnimalDetail& detail() const;
  inline ::GSProto::GoldAnimalDetail* mutable_detail();
  inline ::GSProto::GoldAnimalDetail* release_detail();
  inline void set_allocated_detail(::GSProto::GoldAnimalDetail* detail);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_QueryGodAnimalDetai)
 private:
  inline void set_has_detail();
  inline void clear_has_detail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::GoldAnimalDetail* detail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_QueryGodAnimalDetai* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GODANIMAL_DETAIL_BYID_CS : public ::google::protobuf::Message {
 public:
  CMD_GODANIMAL_DETAIL_BYID_CS();
  virtual ~CMD_GODANIMAL_DETAIL_BYID_CS();

  CMD_GODANIMAL_DETAIL_BYID_CS(const CMD_GODANIMAL_DETAIL_BYID_CS& from);

  inline CMD_GODANIMAL_DETAIL_BYID_CS& operator=(const CMD_GODANIMAL_DETAIL_BYID_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GODANIMAL_DETAIL_BYID_CS& default_instance();

  void Swap(CMD_GODANIMAL_DETAIL_BYID_CS* other);

  // implements Message ----------------------------------------------

  CMD_GODANIMAL_DETAIL_BYID_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GODANIMAL_DETAIL_BYID_CS& from);
  void MergeFrom(const CMD_GODANIMAL_DETAIL_BYID_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iGodAnimalID = 1;
  inline bool has_igodanimalid() const;
  inline void clear_igodanimalid();
  static const int kIGodAnimalIDFieldNumber = 1;
  inline ::google::protobuf::int32 igodanimalid() const;
  inline void set_igodanimalid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GODANIMAL_DETAIL_BYID_CS)
 private:
  inline void set_has_igodanimalid();
  inline void clear_has_igodanimalid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 igodanimalid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CMD_GODANIMAL_DETAIL_BYID_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GODANIMAL_DETAIL_BYID_SC : public ::google::protobuf::Message {
 public:
  CMD_GODANIMAL_DETAIL_BYID_SC();
  virtual ~CMD_GODANIMAL_DETAIL_BYID_SC();

  CMD_GODANIMAL_DETAIL_BYID_SC(const CMD_GODANIMAL_DETAIL_BYID_SC& from);

  inline CMD_GODANIMAL_DETAIL_BYID_SC& operator=(const CMD_GODANIMAL_DETAIL_BYID_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GODANIMAL_DETAIL_BYID_SC& default_instance();

  void Swap(CMD_GODANIMAL_DETAIL_BYID_SC* other);

  // implements Message ----------------------------------------------

  CMD_GODANIMAL_DETAIL_BYID_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GODANIMAL_DETAIL_BYID_SC& from);
  void MergeFrom(const CMD_GODANIMAL_DETAIL_BYID_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iGodAnimalID = 1;
  inline bool has_igodanimalid() const;
  inline void clear_igodanimalid();
  static const int kIGodAnimalIDFieldNumber = 1;
  inline ::google::protobuf::int32 igodanimalid() const;
  inline void set_igodanimalid(::google::protobuf::int32 value);

  // required .GSProto.GoldAnimalDetail detail = 2;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 2;
  inline const ::GSProto::GoldAnimalDetail& detail() const;
  inline ::GSProto::GoldAnimalDetail* mutable_detail();
  inline ::GSProto::GoldAnimalDetail* release_detail();
  inline void set_allocated_detail(::GSProto::GoldAnimalDetail* detail);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GODANIMAL_DETAIL_BYID_SC)
 private:
  inline void set_has_igodanimalid();
  inline void clear_has_igodanimalid();
  inline void set_has_detail();
  inline void clear_has_detail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::GoldAnimalDetail* detail_;
  ::google::protobuf::int32 igodanimalid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CMD_GODANIMAL_DETAIL_BYID_SC* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_GodAnimalTrain : public ::google::protobuf::Message {
 public:
  Cmd_Cs_GodAnimalTrain();
  virtual ~Cmd_Cs_GodAnimalTrain();

  Cmd_Cs_GodAnimalTrain(const Cmd_Cs_GodAnimalTrain& from);

  inline Cmd_Cs_GodAnimalTrain& operator=(const Cmd_Cs_GodAnimalTrain& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_GodAnimalTrain& default_instance();

  void Swap(Cmd_Cs_GodAnimalTrain* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_GodAnimalTrain* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_GodAnimalTrain& from);
  void MergeFrom(const Cmd_Cs_GodAnimalTrain& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_GodAnimalTrain)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_GodAnimalTrain* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_GodAnimalUpdate : public ::google::protobuf::Message {
 public:
  Cmd_Sc_GodAnimalUpdate();
  virtual ~Cmd_Sc_GodAnimalUpdate();

  Cmd_Sc_GodAnimalUpdate(const Cmd_Sc_GodAnimalUpdate& from);

  inline Cmd_Sc_GodAnimalUpdate& operator=(const Cmd_Sc_GodAnimalUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_GodAnimalUpdate& default_instance();

  void Swap(Cmd_Sc_GodAnimalUpdate* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_GodAnimalUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_GodAnimalUpdate& from);
  void MergeFrom(const Cmd_Sc_GodAnimalUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.GoldAnimalRoleBase updateInfo = 1;
  inline bool has_updateinfo() const;
  inline void clear_updateinfo();
  static const int kUpdateInfoFieldNumber = 1;
  inline const ::GSProto::GoldAnimalRoleBase& updateinfo() const;
  inline ::GSProto::GoldAnimalRoleBase* mutable_updateinfo();
  inline ::GSProto::GoldAnimalRoleBase* release_updateinfo();
  inline void set_allocated_updateinfo(::GSProto::GoldAnimalRoleBase* updateinfo);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_GodAnimalUpdate)
 private:
  inline void set_has_updateinfo();
  inline void clear_has_updateinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::GoldAnimalRoleBase* updateinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_GodAnimalUpdate* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_QueryGodAnimalLevelStep : public ::google::protobuf::Message {
 public:
  Cmd_Cs_QueryGodAnimalLevelStep();
  virtual ~Cmd_Cs_QueryGodAnimalLevelStep();

  Cmd_Cs_QueryGodAnimalLevelStep(const Cmd_Cs_QueryGodAnimalLevelStep& from);

  inline Cmd_Cs_QueryGodAnimalLevelStep& operator=(const Cmd_Cs_QueryGodAnimalLevelStep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_QueryGodAnimalLevelStep& default_instance();

  void Swap(Cmd_Cs_QueryGodAnimalLevelStep* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_QueryGodAnimalLevelStep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_QueryGodAnimalLevelStep& from);
  void MergeFrom(const Cmd_Cs_QueryGodAnimalLevelStep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_QueryGodAnimalLevelStep)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_QueryGodAnimalLevelStep* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_GoldAnimalList : public ::google::protobuf::Message {
 public:
  Cmd_Sc_GoldAnimalList();
  virtual ~Cmd_Sc_GoldAnimalList();

  Cmd_Sc_GoldAnimalList(const Cmd_Sc_GoldAnimalList& from);

  inline Cmd_Sc_GoldAnimalList& operator=(const Cmd_Sc_GoldAnimalList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_GoldAnimalList& default_instance();

  void Swap(Cmd_Sc_GoldAnimalList* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_GoldAnimalList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_GoldAnimalList& from);
  void MergeFrom(const Cmd_Sc_GoldAnimalList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwActiveObjectID = 1;
  inline bool has_dwactiveobjectid() const;
  inline void clear_dwactiveobjectid();
  static const int kDwActiveObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwactiveobjectid() const;
  inline void set_dwactiveobjectid(::google::protobuf::uint32 value);

  // repeated .GSProto.GoldAnimalRoleBase szGodAnimalList = 2;
  inline int szgodanimallist_size() const;
  inline void clear_szgodanimallist();
  static const int kSzGodAnimalListFieldNumber = 2;
  inline const ::GSProto::GoldAnimalRoleBase& szgodanimallist(int index) const;
  inline ::GSProto::GoldAnimalRoleBase* mutable_szgodanimallist(int index);
  inline ::GSProto::GoldAnimalRoleBase* add_szgodanimallist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::GoldAnimalRoleBase >&
      szgodanimallist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::GoldAnimalRoleBase >*
      mutable_szgodanimallist();

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_GoldAnimalList)
 private:
  inline void set_has_dwactiveobjectid();
  inline void clear_has_dwactiveobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::GoldAnimalRoleBase > szgodanimallist_;
  ::google::protobuf::uint32 dwactiveobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_GoldAnimalList* default_instance_;
};
// -------------------------------------------------------------------

class CMD_NORMALSHOP_QUERY_SC : public ::google::protobuf::Message {
 public:
  CMD_NORMALSHOP_QUERY_SC();
  virtual ~CMD_NORMALSHOP_QUERY_SC();

  CMD_NORMALSHOP_QUERY_SC(const CMD_NORMALSHOP_QUERY_SC& from);

  inline CMD_NORMALSHOP_QUERY_SC& operator=(const CMD_NORMALSHOP_QUERY_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_NORMALSHOP_QUERY_SC& default_instance();

  void Swap(CMD_NORMALSHOP_QUERY_SC* other);

  // implements Message ----------------------------------------------

  CMD_NORMALSHOP_QUERY_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_NORMALSHOP_QUERY_SC& from);
  void MergeFrom(const CMD_NORMALSHOP_QUERY_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.HonerGoodDetail goodsList = 1;
  inline int goodslist_size() const;
  inline void clear_goodslist();
  static const int kGoodsListFieldNumber = 1;
  inline const ::GSProto::HonerGoodDetail& goodslist(int index) const;
  inline ::GSProto::HonerGoodDetail* mutable_goodslist(int index);
  inline ::GSProto::HonerGoodDetail* add_goodslist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HonerGoodDetail >&
      goodslist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::HonerGoodDetail >*
      mutable_goodslist();

  // required int32 untilNextRefreshSeconds = 2;
  inline bool has_untilnextrefreshseconds() const;
  inline void clear_untilnextrefreshseconds();
  static const int kUntilNextRefreshSecondsFieldNumber = 2;
  inline ::google::protobuf::int32 untilnextrefreshseconds() const;
  inline void set_untilnextrefreshseconds(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_NORMALSHOP_QUERY_SC)
 private:
  inline void set_has_untilnextrefreshseconds();
  inline void clear_has_untilnextrefreshseconds();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::HonerGoodDetail > goodslist_;
  ::google::protobuf::int32 untilnextrefreshseconds_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CMD_NORMALSHOP_QUERY_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_NORMALSHOP_BUY_CS : public ::google::protobuf::Message {
 public:
  CMD_NORMALSHOP_BUY_CS();
  virtual ~CMD_NORMALSHOP_BUY_CS();

  CMD_NORMALSHOP_BUY_CS(const CMD_NORMALSHOP_BUY_CS& from);

  inline CMD_NORMALSHOP_BUY_CS& operator=(const CMD_NORMALSHOP_BUY_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_NORMALSHOP_BUY_CS& default_instance();

  void Swap(CMD_NORMALSHOP_BUY_CS* other);

  // implements Message ----------------------------------------------

  CMD_NORMALSHOP_BUY_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_NORMALSHOP_BUY_CS& from);
  void MergeFrom(const CMD_NORMALSHOP_BUY_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_NORMALSHOP_BUY_CS)
 private:
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CMD_NORMALSHOP_BUY_CS* default_instance_;
};
// -------------------------------------------------------------------

class CampUnit : public ::google::protobuf::Message {
 public:
  CampUnit();
  virtual ~CampUnit();

  CampUnit(const CampUnit& from);

  inline CampUnit& operator=(const CampUnit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CampUnit& default_instance();

  void Swap(CampUnit* other);

  // implements Message ----------------------------------------------

  CampUnit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CampUnit& from);
  void MergeFrom(const CampUnit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iId = 1;
  inline bool has_iid() const;
  inline void clear_iid();
  static const int kIIdFieldNumber = 1;
  inline ::google::protobuf::int32 iid() const;
  inline void set_iid(::google::protobuf::int32 value);

  // required string strOwerName = 2;
  inline bool has_strowername() const;
  inline void clear_strowername();
  static const int kStrOwerNameFieldNumber = 2;
  inline const ::std::string& strowername() const;
  inline void set_strowername(const ::std::string& value);
  inline void set_strowername(const char* value);
  inline void set_strowername(const char* value, size_t size);
  inline ::std::string* mutable_strowername();
  inline ::std::string* release_strowername();
  inline void set_allocated_strowername(::std::string* strowername);

  // optional bool bCanReport = 3;
  inline bool has_bcanreport() const;
  inline void clear_bcanreport();
  static const int kBCanReportFieldNumber = 3;
  inline bool bcanreport() const;
  inline void set_bcanreport(bool value);

  // optional bool bCanBattle = 4;
  inline bool has_bcanbattle() const;
  inline void clear_bcanbattle();
  static const int kBCanBattleFieldNumber = 4;
  inline bool bcanbattle() const;
  inline void set_bcanbattle(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.CampUnit)
 private:
  inline void set_has_iid();
  inline void clear_has_iid();
  inline void set_has_strowername();
  inline void clear_has_strowername();
  inline void set_has_bcanreport();
  inline void clear_has_bcanreport();
  inline void set_has_bcanbattle();
  inline void clear_has_bcanbattle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strowername_;
  ::google::protobuf::int32 iid_;
  bool bcanreport_;
  bool bcanbattle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CampUnit* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_LEGION_CAMPBATTLE_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_LEGION_CAMPBATTLE_SC();
  virtual ~CMD_QUERY_LEGION_CAMPBATTLE_SC();

  CMD_QUERY_LEGION_CAMPBATTLE_SC(const CMD_QUERY_LEGION_CAMPBATTLE_SC& from);

  inline CMD_QUERY_LEGION_CAMPBATTLE_SC& operator=(const CMD_QUERY_LEGION_CAMPBATTLE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_LEGION_CAMPBATTLE_SC& default_instance();

  void Swap(CMD_QUERY_LEGION_CAMPBATTLE_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_LEGION_CAMPBATTLE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_LEGION_CAMPBATTLE_SC& from);
  void MergeFrom(const CMD_QUERY_LEGION_CAMPBATTLE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.CampUnit szCampList = 1;
  inline int szcamplist_size() const;
  inline void clear_szcamplist();
  static const int kSzCampListFieldNumber = 1;
  inline const ::GSProto::CampUnit& szcamplist(int index) const;
  inline ::GSProto::CampUnit* mutable_szcamplist(int index);
  inline ::GSProto::CampUnit* add_szcamplist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::CampUnit >&
      szcamplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::CampUnit >*
      mutable_szcamplist();

  // required int32 istatus = 2;
  inline bool has_istatus() const;
  inline void clear_istatus();
  static const int kIstatusFieldNumber = 2;
  inline ::google::protobuf::int32 istatus() const;
  inline void set_istatus(::google::protobuf::int32 value);

  // optional int32 iRemaidSecond = 3;
  inline bool has_iremaidsecond() const;
  inline void clear_iremaidsecond();
  static const int kIRemaidSecondFieldNumber = 3;
  inline ::google::protobuf::int32 iremaidsecond() const;
  inline void set_iremaidsecond(::google::protobuf::int32 value);

  // optional int32 iHaveReportId = 4;
  inline bool has_ihavereportid() const;
  inline void clear_ihavereportid();
  static const int kIHaveReportIdFieldNumber = 4;
  inline ::google::protobuf::int32 ihavereportid() const;
  inline void set_ihavereportid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_LEGION_CAMPBATTLE_SC)
 private:
  inline void set_has_istatus();
  inline void clear_has_istatus();
  inline void set_has_iremaidsecond();
  inline void clear_has_iremaidsecond();
  inline void set_has_ihavereportid();
  inline void clear_has_ihavereportid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::CampUnit > szcamplist_;
  ::google::protobuf::int32 istatus_;
  ::google::protobuf::int32 iremaidsecond_;
  ::google::protobuf::int32 ihavereportid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_LEGION_CAMPBATTLE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_CAMPBATTLE_INFO_CS : public ::google::protobuf::Message {
 public:
  CMD_QUERY_CAMPBATTLE_INFO_CS();
  virtual ~CMD_QUERY_CAMPBATTLE_INFO_CS();

  CMD_QUERY_CAMPBATTLE_INFO_CS(const CMD_QUERY_CAMPBATTLE_INFO_CS& from);

  inline CMD_QUERY_CAMPBATTLE_INFO_CS& operator=(const CMD_QUERY_CAMPBATTLE_INFO_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_CAMPBATTLE_INFO_CS& default_instance();

  void Swap(CMD_QUERY_CAMPBATTLE_INFO_CS* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_CAMPBATTLE_INFO_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_CAMPBATTLE_INFO_CS& from);
  void MergeFrom(const CMD_QUERY_CAMPBATTLE_INFO_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iId = 1;
  inline bool has_iid() const;
  inline void clear_iid();
  static const int kIIdFieldNumber = 1;
  inline ::google::protobuf::int32 iid() const;
  inline void set_iid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_CAMPBATTLE_INFO_CS)
 private:
  inline void set_has_iid();
  inline void clear_has_iid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_CAMPBATTLE_INFO_CS* default_instance_;
};
// -------------------------------------------------------------------

class LegionUnit : public ::google::protobuf::Message {
 public:
  LegionUnit();
  virtual ~LegionUnit();

  LegionUnit(const LegionUnit& from);

  inline LegionUnit& operator=(const LegionUnit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionUnit& default_instance();

  void Swap(LegionUnit* other);

  // implements Message ----------------------------------------------

  LegionUnit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionUnit& from);
  void MergeFrom(const LegionUnit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strName = 1;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 1;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // required int32 iHaveCampCount = 2;
  inline bool has_ihavecampcount() const;
  inline void clear_ihavecampcount();
  static const int kIHaveCampCountFieldNumber = 2;
  inline ::google::protobuf::int32 ihavecampcount() const;
  inline void set_ihavecampcount(::google::protobuf::int32 value);

  // required int32 iAddPercent = 3;
  inline bool has_iaddpercent() const;
  inline void clear_iaddpercent();
  static const int kIAddPercentFieldNumber = 3;
  inline ::google::protobuf::int32 iaddpercent() const;
  inline void set_iaddpercent(::google::protobuf::int32 value);

  // required int32 iLegionIcon = 4;
  inline bool has_ilegionicon() const;
  inline void clear_ilegionicon();
  static const int kILegionIconFieldNumber = 4;
  inline ::google::protobuf::int32 ilegionicon() const;
  inline void set_ilegionicon(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.LegionUnit)
 private:
  inline void set_has_strname();
  inline void clear_has_strname();
  inline void set_has_ihavecampcount();
  inline void clear_has_ihavecampcount();
  inline void set_has_iaddpercent();
  inline void clear_has_iaddpercent();
  inline void set_has_ilegionicon();
  inline void clear_has_ilegionicon();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strname_;
  ::google::protobuf::int32 ihavecampcount_;
  ::google::protobuf::int32 iaddpercent_;
  ::google::protobuf::int32 ilegionicon_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static LegionUnit* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_CAMPBATTLE_INFO_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_CAMPBATTLE_INFO_SC();
  virtual ~CMD_QUERY_CAMPBATTLE_INFO_SC();

  CMD_QUERY_CAMPBATTLE_INFO_SC(const CMD_QUERY_CAMPBATTLE_INFO_SC& from);

  inline CMD_QUERY_CAMPBATTLE_INFO_SC& operator=(const CMD_QUERY_CAMPBATTLE_INFO_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_CAMPBATTLE_INFO_SC& default_instance();

  void Swap(CMD_QUERY_CAMPBATTLE_INFO_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_CAMPBATTLE_INFO_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_CAMPBATTLE_INFO_SC& from);
  void MergeFrom(const CMD_QUERY_CAMPBATTLE_INFO_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.LegionUnit guardLegion = 1;
  inline bool has_guardlegion() const;
  inline void clear_guardlegion();
  static const int kGuardLegionFieldNumber = 1;
  inline const ::GSProto::LegionUnit& guardlegion() const;
  inline ::GSProto::LegionUnit* mutable_guardlegion();
  inline ::GSProto::LegionUnit* release_guardlegion();
  inline void set_allocated_guardlegion(::GSProto::LegionUnit* guardlegion);

  // repeated .GSProto.LegionUnit szAttackList = 2;
  inline int szattacklist_size() const;
  inline void clear_szattacklist();
  static const int kSzAttackListFieldNumber = 2;
  inline const ::GSProto::LegionUnit& szattacklist(int index) const;
  inline ::GSProto::LegionUnit* mutable_szattacklist(int index);
  inline ::GSProto::LegionUnit* add_szattacklist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionUnit >&
      szattacklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionUnit >*
      mutable_szattacklist();

  // required int32 iId = 3;
  inline bool has_iid() const;
  inline void clear_iid();
  static const int kIIdFieldNumber = 3;
  inline ::google::protobuf::int32 iid() const;
  inline void set_iid(::google::protobuf::int32 value);

  // required int32 iCanGetSilver = 4;
  inline bool has_icangetsilver() const;
  inline void clear_icangetsilver();
  static const int kICanGetSilverFieldNumber = 4;
  inline ::google::protobuf::int32 icangetsilver() const;
  inline void set_icangetsilver(::google::protobuf::int32 value);

  // required int32 iReportCost = 5;
  inline bool has_ireportcost() const;
  inline void clear_ireportcost();
  static const int kIReportCostFieldNumber = 5;
  inline ::google::protobuf::int32 ireportcost() const;
  inline void set_ireportcost(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_CAMPBATTLE_INFO_SC)
 private:
  inline void set_has_guardlegion();
  inline void clear_has_guardlegion();
  inline void set_has_iid();
  inline void clear_has_iid();
  inline void set_has_icangetsilver();
  inline void clear_has_icangetsilver();
  inline void set_has_ireportcost();
  inline void clear_has_ireportcost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::LegionUnit* guardlegion_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::LegionUnit > szattacklist_;
  ::google::protobuf::int32 iid_;
  ::google::protobuf::int32 icangetsilver_;
  ::google::protobuf::int32 ireportcost_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_CAMPBATTLE_INFO_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_LEGION_CAMPBATTLE_REPORT_CS : public ::google::protobuf::Message {
 public:
  CMD_LEGION_CAMPBATTLE_REPORT_CS();
  virtual ~CMD_LEGION_CAMPBATTLE_REPORT_CS();

  CMD_LEGION_CAMPBATTLE_REPORT_CS(const CMD_LEGION_CAMPBATTLE_REPORT_CS& from);

  inline CMD_LEGION_CAMPBATTLE_REPORT_CS& operator=(const CMD_LEGION_CAMPBATTLE_REPORT_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_LEGION_CAMPBATTLE_REPORT_CS& default_instance();

  void Swap(CMD_LEGION_CAMPBATTLE_REPORT_CS* other);

  // implements Message ----------------------------------------------

  CMD_LEGION_CAMPBATTLE_REPORT_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_LEGION_CAMPBATTLE_REPORT_CS& from);
  void MergeFrom(const CMD_LEGION_CAMPBATTLE_REPORT_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iId = 1;
  inline bool has_iid() const;
  inline void clear_iid();
  static const int kIIdFieldNumber = 1;
  inline ::google::protobuf::int32 iid() const;
  inline void set_iid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_LEGION_CAMPBATTLE_REPORT_CS)
 private:
  inline void set_has_iid();
  inline void clear_has_iid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CMD_LEGION_CAMPBATTLE_REPORT_CS* default_instance_;
};
// -------------------------------------------------------------------

class VSUnit : public ::google::protobuf::Message {
 public:
  VSUnit();
  virtual ~VSUnit();

  VSUnit(const VSUnit& from);

  inline VSUnit& operator=(const VSUnit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VSUnit& default_instance();

  void Swap(VSUnit* other);

  // implements Message ----------------------------------------------

  VSUnit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VSUnit& from);
  void MergeFrom(const VSUnit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strLegionName = 1;
  inline bool has_strlegionname() const;
  inline void clear_strlegionname();
  static const int kStrLegionNameFieldNumber = 1;
  inline const ::std::string& strlegionname() const;
  inline void set_strlegionname(const ::std::string& value);
  inline void set_strlegionname(const char* value);
  inline void set_strlegionname(const char* value, size_t size);
  inline ::std::string* mutable_strlegionname();
  inline ::std::string* release_strlegionname();
  inline void set_allocated_strlegionname(::std::string* strlegionname);

  // required int32 iStarCount = 2;
  inline bool has_istarcount() const;
  inline void clear_istarcount();
  static const int kIStarCountFieldNumber = 2;
  inline ::google::protobuf::int32 istarcount() const;
  inline void set_istarcount(::google::protobuf::int32 value);

  // required int32 iLegionIcon = 3;
  inline bool has_ilegionicon() const;
  inline void clear_ilegionicon();
  static const int kILegionIconFieldNumber = 3;
  inline ::google::protobuf::int32 ilegionicon() const;
  inline void set_ilegionicon(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.VSUnit)
 private:
  inline void set_has_strlegionname();
  inline void clear_has_strlegionname();
  inline void set_has_istarcount();
  inline void clear_has_istarcount();
  inline void set_has_ilegionicon();
  inline void clear_has_ilegionicon();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strlegionname_;
  ::google::protobuf::int32 istarcount_;
  ::google::protobuf::int32 ilegionicon_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static VSUnit* default_instance_;
};
// -------------------------------------------------------------------

class VSLegion : public ::google::protobuf::Message {
 public:
  VSLegion();
  virtual ~VSLegion();

  VSLegion(const VSLegion& from);

  inline VSLegion& operator=(const VSLegion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VSLegion& default_instance();

  void Swap(VSLegion* other);

  // implements Message ----------------------------------------------

  VSLegion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VSLegion& from);
  void MergeFrom(const VSLegion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.VSUnit guardUnit = 1;
  inline bool has_guardunit() const;
  inline void clear_guardunit();
  static const int kGuardUnitFieldNumber = 1;
  inline const ::GSProto::VSUnit& guardunit() const;
  inline ::GSProto::VSUnit* mutable_guardunit();
  inline ::GSProto::VSUnit* release_guardunit();
  inline void set_allocated_guardunit(::GSProto::VSUnit* guardunit);

  // required .GSProto.VSUnit attUnit = 2;
  inline bool has_attunit() const;
  inline void clear_attunit();
  static const int kAttUnitFieldNumber = 2;
  inline const ::GSProto::VSUnit& attunit() const;
  inline ::GSProto::VSUnit* mutable_attunit();
  inline ::GSProto::VSUnit* release_attunit();
  inline void set_allocated_attunit(::GSProto::VSUnit* attunit);

  // optional int32 iCampId = 3;
  inline bool has_icampid() const;
  inline void clear_icampid();
  static const int kICampIdFieldNumber = 3;
  inline ::google::protobuf::int32 icampid() const;
  inline void set_icampid(::google::protobuf::int32 value);

  // optional int32 iBattleId = 4;
  inline bool has_ibattleid() const;
  inline void clear_ibattleid();
  static const int kIBattleIdFieldNumber = 4;
  inline ::google::protobuf::int32 ibattleid() const;
  inline void set_ibattleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.VSLegion)
 private:
  inline void set_has_guardunit();
  inline void clear_has_guardunit();
  inline void set_has_attunit();
  inline void clear_has_attunit();
  inline void set_has_icampid();
  inline void clear_has_icampid();
  inline void set_has_ibattleid();
  inline void clear_has_ibattleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::VSUnit* guardunit_;
  ::GSProto::VSUnit* attunit_;
  ::google::protobuf::int32 icampid_;
  ::google::protobuf::int32 ibattleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static VSLegion* default_instance_;
};
// -------------------------------------------------------------------

class VSLegionMemDetail : public ::google::protobuf::Message {
 public:
  VSLegionMemDetail();
  virtual ~VSLegionMemDetail();

  VSLegionMemDetail(const VSLegionMemDetail& from);

  inline VSLegionMemDetail& operator=(const VSLegionMemDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VSLegionMemDetail& default_instance();

  void Swap(VSLegionMemDetail* other);

  // implements Message ----------------------------------------------

  VSLegionMemDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VSLegionMemDetail& from);
  void MergeFrom(const VSLegionMemDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iHeadId = 1;
  inline bool has_iheadid() const;
  inline void clear_iheadid();
  static const int kIHeadIdFieldNumber = 1;
  inline ::google::protobuf::int32 iheadid() const;
  inline void set_iheadid(::google::protobuf::int32 value);

  // required int32 iLevel = 2;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 2;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // required string strName = 3;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 3;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // required int32 iFightValue = 4;
  inline bool has_ifightvalue() const;
  inline void clear_ifightvalue();
  static const int kIFightValueFieldNumber = 4;
  inline ::google::protobuf::int32 ifightvalue() const;
  inline void set_ifightvalue(::google::protobuf::int32 value);

  // required bool bICanFight = 5;
  inline bool has_bicanfight() const;
  inline void clear_bicanfight();
  static const int kBICanFightFieldNumber = 5;
  inline bool bicanfight() const;
  inline void set_bicanfight(bool value);

  // required bool bIICanFight = 6;
  inline bool has_biicanfight() const;
  inline void clear_biicanfight();
  static const int kBIICanFightFieldNumber = 6;
  inline bool biicanfight() const;
  inline void set_biicanfight(bool value);

  // required bool bIIICanFight = 7;
  inline bool has_biiicanfight() const;
  inline void clear_biiicanfight();
  static const int kBIIICanFightFieldNumber = 7;
  inline bool biiicanfight() const;
  inline void set_biiicanfight(bool value);

  // required bool bIsNpc = 8;
  inline bool has_bisnpc() const;
  inline void clear_bisnpc();
  static const int kBIsNpcFieldNumber = 8;
  inline bool bisnpc() const;
  inline void set_bisnpc(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.VSLegionMemDetail)
 private:
  inline void set_has_iheadid();
  inline void clear_has_iheadid();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_strname();
  inline void clear_has_strname();
  inline void set_has_ifightvalue();
  inline void clear_has_ifightvalue();
  inline void set_has_bicanfight();
  inline void clear_has_bicanfight();
  inline void set_has_biicanfight();
  inline void clear_has_biicanfight();
  inline void set_has_biiicanfight();
  inline void clear_has_biiicanfight();
  inline void set_has_bisnpc();
  inline void clear_has_bisnpc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iheadid_;
  ::google::protobuf::int32 ilevel_;
  ::std::string* strname_;
  ::google::protobuf::int32 ifightvalue_;
  bool bicanfight_;
  bool biicanfight_;
  bool biiicanfight_;
  bool bisnpc_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static VSLegionMemDetail* default_instance_;
};
// -------------------------------------------------------------------

class CMD_LEGION_CAMPBATTLE_JOIN_CS : public ::google::protobuf::Message {
 public:
  CMD_LEGION_CAMPBATTLE_JOIN_CS();
  virtual ~CMD_LEGION_CAMPBATTLE_JOIN_CS();

  CMD_LEGION_CAMPBATTLE_JOIN_CS(const CMD_LEGION_CAMPBATTLE_JOIN_CS& from);

  inline CMD_LEGION_CAMPBATTLE_JOIN_CS& operator=(const CMD_LEGION_CAMPBATTLE_JOIN_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_LEGION_CAMPBATTLE_JOIN_CS& default_instance();

  void Swap(CMD_LEGION_CAMPBATTLE_JOIN_CS* other);

  // implements Message ----------------------------------------------

  CMD_LEGION_CAMPBATTLE_JOIN_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_LEGION_CAMPBATTLE_JOIN_CS& from);
  void MergeFrom(const CMD_LEGION_CAMPBATTLE_JOIN_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iId = 1;
  inline bool has_iid() const;
  inline void clear_iid();
  static const int kIIdFieldNumber = 1;
  inline ::google::protobuf::int32 iid() const;
  inline void set_iid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_LEGION_CAMPBATTLE_JOIN_CS)
 private:
  inline void set_has_iid();
  inline void clear_has_iid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CMD_LEGION_CAMPBATTLE_JOIN_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_LEGION_CAMPBATTLE_JOIN_SC : public ::google::protobuf::Message {
 public:
  CMD_LEGION_CAMPBATTLE_JOIN_SC();
  virtual ~CMD_LEGION_CAMPBATTLE_JOIN_SC();

  CMD_LEGION_CAMPBATTLE_JOIN_SC(const CMD_LEGION_CAMPBATTLE_JOIN_SC& from);

  inline CMD_LEGION_CAMPBATTLE_JOIN_SC& operator=(const CMD_LEGION_CAMPBATTLE_JOIN_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_LEGION_CAMPBATTLE_JOIN_SC& default_instance();

  void Swap(CMD_LEGION_CAMPBATTLE_JOIN_SC* other);

  // implements Message ----------------------------------------------

  CMD_LEGION_CAMPBATTLE_JOIN_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_LEGION_CAMPBATTLE_JOIN_SC& from);
  void MergeFrom(const CMD_LEGION_CAMPBATTLE_JOIN_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bIsGuard = 1;
  inline bool has_bisguard() const;
  inline void clear_bisguard();
  static const int kBIsGuardFieldNumber = 1;
  inline bool bisguard() const;
  inline void set_bisguard(bool value);

  // repeated .GSProto.VSLegion szVSLegionList = 2;
  inline int szvslegionlist_size() const;
  inline void clear_szvslegionlist();
  static const int kSzVSLegionListFieldNumber = 2;
  inline const ::GSProto::VSLegion& szvslegionlist(int index) const;
  inline ::GSProto::VSLegion* mutable_szvslegionlist(int index);
  inline ::GSProto::VSLegion* add_szvslegionlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::VSLegion >&
      szvslegionlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::VSLegion >*
      mutable_szvslegionlist();

  // optional .GSProto.VSLegion selfVsInfo = 3;
  inline bool has_selfvsinfo() const;
  inline void clear_selfvsinfo();
  static const int kSelfVsInfoFieldNumber = 3;
  inline const ::GSProto::VSLegion& selfvsinfo() const;
  inline ::GSProto::VSLegion* mutable_selfvsinfo();
  inline ::GSProto::VSLegion* release_selfvsinfo();
  inline void set_allocated_selfvsinfo(::GSProto::VSLegion* selfvsinfo);

  // repeated .GSProto.VSLegionMemDetail szMemberList = 4;
  inline int szmemberlist_size() const;
  inline void clear_szmemberlist();
  static const int kSzMemberListFieldNumber = 4;
  inline const ::GSProto::VSLegionMemDetail& szmemberlist(int index) const;
  inline ::GSProto::VSLegionMemDetail* mutable_szmemberlist(int index);
  inline ::GSProto::VSLegionMemDetail* add_szmemberlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::VSLegionMemDetail >&
      szmemberlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::VSLegionMemDetail >*
      mutable_szmemberlist();

  // optional int32 iRemaindSecond = 5;
  inline bool has_iremaindsecond() const;
  inline void clear_iremaindsecond();
  static const int kIRemaindSecondFieldNumber = 5;
  inline ::google::protobuf::int32 iremaindsecond() const;
  inline void set_iremaindsecond(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_LEGION_CAMPBATTLE_JOIN_SC)
 private:
  inline void set_has_bisguard();
  inline void clear_has_bisguard();
  inline void set_has_selfvsinfo();
  inline void clear_has_selfvsinfo();
  inline void set_has_iremaindsecond();
  inline void clear_has_iremaindsecond();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::VSLegion > szvslegionlist_;
  ::GSProto::VSLegion* selfvsinfo_;
  bool bisguard_;
  ::google::protobuf::int32 iremaindsecond_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::VSLegionMemDetail > szmemberlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CMD_LEGION_CAMPBATTLE_JOIN_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_LEGION_CAMPBATTLE_ENTER_CS : public ::google::protobuf::Message {
 public:
  CMD_LEGION_CAMPBATTLE_ENTER_CS();
  virtual ~CMD_LEGION_CAMPBATTLE_ENTER_CS();

  CMD_LEGION_CAMPBATTLE_ENTER_CS(const CMD_LEGION_CAMPBATTLE_ENTER_CS& from);

  inline CMD_LEGION_CAMPBATTLE_ENTER_CS& operator=(const CMD_LEGION_CAMPBATTLE_ENTER_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_LEGION_CAMPBATTLE_ENTER_CS& default_instance();

  void Swap(CMD_LEGION_CAMPBATTLE_ENTER_CS* other);

  // implements Message ----------------------------------------------

  CMD_LEGION_CAMPBATTLE_ENTER_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_LEGION_CAMPBATTLE_ENTER_CS& from);
  void MergeFrom(const CMD_LEGION_CAMPBATTLE_ENTER_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCampId = 1;
  inline bool has_icampid() const;
  inline void clear_icampid();
  static const int kICampIdFieldNumber = 1;
  inline ::google::protobuf::int32 icampid() const;
  inline void set_icampid(::google::protobuf::int32 value);

  // required string strVSLegionName = 2;
  inline bool has_strvslegionname() const;
  inline void clear_strvslegionname();
  static const int kStrVSLegionNameFieldNumber = 2;
  inline const ::std::string& strvslegionname() const;
  inline void set_strvslegionname(const ::std::string& value);
  inline void set_strvslegionname(const char* value);
  inline void set_strvslegionname(const char* value, size_t size);
  inline ::std::string* mutable_strvslegionname();
  inline ::std::string* release_strvslegionname();
  inline void set_allocated_strvslegionname(::std::string* strvslegionname);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_LEGION_CAMPBATTLE_ENTER_CS)
 private:
  inline void set_has_icampid();
  inline void clear_has_icampid();
  inline void set_has_strvslegionname();
  inline void clear_has_strvslegionname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strvslegionname_;
  ::google::protobuf::int32 icampid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CMD_LEGION_CAMPBATTLE_ENTER_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_LEGION_CAMPBATTLE_BATTLE_CS : public ::google::protobuf::Message {
 public:
  CMD_LEGION_CAMPBATTLE_BATTLE_CS();
  virtual ~CMD_LEGION_CAMPBATTLE_BATTLE_CS();

  CMD_LEGION_CAMPBATTLE_BATTLE_CS(const CMD_LEGION_CAMPBATTLE_BATTLE_CS& from);

  inline CMD_LEGION_CAMPBATTLE_BATTLE_CS& operator=(const CMD_LEGION_CAMPBATTLE_BATTLE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_LEGION_CAMPBATTLE_BATTLE_CS& default_instance();

  void Swap(CMD_LEGION_CAMPBATTLE_BATTLE_CS* other);

  // implements Message ----------------------------------------------

  CMD_LEGION_CAMPBATTLE_BATTLE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_LEGION_CAMPBATTLE_BATTLE_CS& from);
  void MergeFrom(const CMD_LEGION_CAMPBATTLE_BATTLE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCampId = 1;
  inline bool has_icampid() const;
  inline void clear_icampid();
  static const int kICampIdFieldNumber = 1;
  inline ::google::protobuf::int32 icampid() const;
  inline void set_icampid(::google::protobuf::int32 value);

  // required int32 iBattleId = 2;
  inline bool has_ibattleid() const;
  inline void clear_ibattleid();
  static const int kIBattleIdFieldNumber = 2;
  inline ::google::protobuf::int32 ibattleid() const;
  inline void set_ibattleid(::google::protobuf::int32 value);

  // required string strMemName = 3;
  inline bool has_strmemname() const;
  inline void clear_strmemname();
  static const int kStrMemNameFieldNumber = 3;
  inline const ::std::string& strmemname() const;
  inline void set_strmemname(const ::std::string& value);
  inline void set_strmemname(const char* value);
  inline void set_strmemname(const char* value, size_t size);
  inline ::std::string* mutable_strmemname();
  inline ::std::string* release_strmemname();
  inline void set_allocated_strmemname(::std::string* strmemname);

  // required int32 iStar = 4;
  inline bool has_istar() const;
  inline void clear_istar();
  static const int kIStarFieldNumber = 4;
  inline ::google::protobuf::int32 istar() const;
  inline void set_istar(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_LEGION_CAMPBATTLE_BATTLE_CS)
 private:
  inline void set_has_icampid();
  inline void clear_has_icampid();
  inline void set_has_ibattleid();
  inline void clear_has_ibattleid();
  inline void set_has_strmemname();
  inline void clear_has_strmemname();
  inline void set_has_istar();
  inline void clear_has_istar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 icampid_;
  ::google::protobuf::int32 ibattleid_;
  ::std::string* strmemname_;
  ::google::protobuf::int32 istar_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CMD_LEGION_CAMPBATTLE_BATTLE_CS* default_instance_;
};
// -------------------------------------------------------------------

class LastFightLogItem : public ::google::protobuf::Message {
 public:
  LastFightLogItem();
  virtual ~LastFightLogItem();

  LastFightLogItem(const LastFightLogItem& from);

  inline LastFightLogItem& operator=(const LastFightLogItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LastFightLogItem& default_instance();

  void Swap(LastFightLogItem* other);

  // implements Message ----------------------------------------------

  LastFightLogItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LastFightLogItem& from);
  void MergeFrom(const LastFightLogItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCampId = 1;
  inline bool has_icampid() const;
  inline void clear_icampid();
  static const int kICampIdFieldNumber = 1;
  inline ::google::protobuf::int32 icampid() const;
  inline void set_icampid(::google::protobuf::int32 value);

  // required bool bIsGuard = 2;
  inline bool has_bisguard() const;
  inline void clear_bisguard();
  static const int kBIsGuardFieldNumber = 2;
  inline bool bisguard() const;
  inline void set_bisguard(bool value);

  // required bool bIsWin = 3;
  inline bool has_biswin() const;
  inline void clear_biswin();
  static const int kBIsWinFieldNumber = 3;
  inline bool biswin() const;
  inline void set_biswin(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.LastFightLogItem)
 private:
  inline void set_has_icampid();
  inline void clear_has_icampid();
  inline void set_has_bisguard();
  inline void clear_has_bisguard();
  inline void set_has_biswin();
  inline void clear_has_biswin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 icampid_;
  bool bisguard_;
  bool biswin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static LastFightLogItem* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC();
  virtual ~CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC();

  CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC(const CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC& from);

  inline CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC& operator=(const CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC& default_instance();

  void Swap(CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC& from);
  void MergeFrom(const CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.LastFightLogItem szFightLogList = 1;
  inline int szfightloglist_size() const;
  inline void clear_szfightloglist();
  static const int kSzFightLogListFieldNumber = 1;
  inline const ::GSProto::LastFightLogItem& szfightloglist(int index) const;
  inline ::GSProto::LastFightLogItem* mutable_szfightloglist(int index);
  inline ::GSProto::LastFightLogItem* add_szfightloglist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LastFightLogItem >&
      szfightloglist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::LastFightLogItem >*
      mutable_szfightloglist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::LastFightLogItem > szfightloglist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS : public ::google::protobuf::Message {
 public:
  CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS();
  virtual ~CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS();

  CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS(const CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS& from);

  inline CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS& operator=(const CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS& default_instance();

  void Swap(CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS& from);
  void MergeFrom(const CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCampId = 1;
  inline bool has_icampid() const;
  inline void clear_icampid();
  static const int kICampIdFieldNumber = 1;
  inline ::google::protobuf::int32 icampid() const;
  inline void set_icampid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS)
 private:
  inline void set_has_icampid();
  inline void clear_has_icampid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 icampid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS* default_instance_;
};
// -------------------------------------------------------------------

class VSLegionBase : public ::google::protobuf::Message {
 public:
  VSLegionBase();
  virtual ~VSLegionBase();

  VSLegionBase(const VSLegionBase& from);

  inline VSLegionBase& operator=(const VSLegionBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VSLegionBase& default_instance();

  void Swap(VSLegionBase* other);

  // implements Message ----------------------------------------------

  VSLegionBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VSLegionBase& from);
  void MergeFrom(const VSLegionBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.VSLegion szVSLegionList = 1;
  inline int szvslegionlist_size() const;
  inline void clear_szvslegionlist();
  static const int kSzVSLegionListFieldNumber = 1;
  inline const ::GSProto::VSLegion& szvslegionlist(int index) const;
  inline ::GSProto::VSLegion* mutable_szvslegionlist(int index);
  inline ::GSProto::VSLegion* add_szvslegionlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::VSLegion >&
      szvslegionlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::VSLegion >*
      mutable_szvslegionlist();

  // @@protoc_insertion_point(class_scope:GSProto.VSLegionBase)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::VSLegion > szvslegionlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static VSLegionBase* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC();
  virtual ~CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC();

  CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC(const CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC& from);

  inline CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC& operator=(const CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC& default_instance();

  void Swap(CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC& from);
  void MergeFrom(const CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strLegionName = 1;
  inline bool has_strlegionname() const;
  inline void clear_strlegionname();
  static const int kStrLegionNameFieldNumber = 1;
  inline const ::std::string& strlegionname() const;
  inline void set_strlegionname(const ::std::string& value);
  inline void set_strlegionname(const char* value);
  inline void set_strlegionname(const char* value, size_t size);
  inline ::std::string* mutable_strlegionname();
  inline ::std::string* release_strlegionname();
  inline void set_allocated_strlegionname(::std::string* strlegionname);

  // required .GSProto.VSLegionBase vsLegionMsg = 2;
  inline bool has_vslegionmsg() const;
  inline void clear_vslegionmsg();
  static const int kVsLegionMsgFieldNumber = 2;
  inline const ::GSProto::VSLegionBase& vslegionmsg() const;
  inline ::GSProto::VSLegionBase* mutable_vslegionmsg();
  inline ::GSProto::VSLegionBase* release_vslegionmsg();
  inline void set_allocated_vslegionmsg(::GSProto::VSLegionBase* vslegionmsg);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC)
 private:
  inline void set_has_strlegionname();
  inline void clear_has_strlegionname();
  inline void set_has_vslegionmsg();
  inline void clear_has_vslegionmsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strlegionname_;
  ::GSProto::VSLegionBase* vslegionmsg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS : public ::google::protobuf::Message {
 public:
  CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS();
  virtual ~CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS();

  CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS(const CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS& from);

  inline CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS& operator=(const CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS& default_instance();

  void Swap(CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS& from);
  void MergeFrom(const CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCampId = 1;
  inline bool has_icampid() const;
  inline void clear_icampid();
  static const int kICampIdFieldNumber = 1;
  inline ::google::protobuf::int32 icampid() const;
  inline void set_icampid(::google::protobuf::int32 value);

  // required string strAttLegionName = 2;
  inline bool has_strattlegionname() const;
  inline void clear_strattlegionname();
  static const int kStrAttLegionNameFieldNumber = 2;
  inline const ::std::string& strattlegionname() const;
  inline void set_strattlegionname(const ::std::string& value);
  inline void set_strattlegionname(const char* value);
  inline void set_strattlegionname(const char* value, size_t size);
  inline ::std::string* mutable_strattlegionname();
  inline ::std::string* release_strattlegionname();
  inline void set_allocated_strattlegionname(::std::string* strattlegionname);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS)
 private:
  inline void set_has_icampid();
  inline void clear_has_icampid();
  inline void set_has_strattlegionname();
  inline void clear_has_strattlegionname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strattlegionname_;
  ::google::protobuf::int32 icampid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS* default_instance_;
};
// -------------------------------------------------------------------

class FightRecord : public ::google::protobuf::Message {
 public:
  FightRecord();
  virtual ~FightRecord();

  FightRecord(const FightRecord& from);

  inline FightRecord& operator=(const FightRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightRecord& default_instance();

  void Swap(FightRecord* other);

  // implements Message ----------------------------------------------

  FightRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightRecord& from);
  void MergeFrom(const FightRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strSelfName = 1;
  inline bool has_strselfname() const;
  inline void clear_strselfname();
  static const int kStrSelfNameFieldNumber = 1;
  inline const ::std::string& strselfname() const;
  inline void set_strselfname(const ::std::string& value);
  inline void set_strselfname(const char* value);
  inline void set_strselfname(const char* value, size_t size);
  inline ::std::string* mutable_strselfname();
  inline ::std::string* release_strselfname();
  inline void set_allocated_strselfname(::std::string* strselfname);

  // required string strenemyLegionName = 2;
  inline bool has_strenemylegionname() const;
  inline void clear_strenemylegionname();
  static const int kStrenemyLegionNameFieldNumber = 2;
  inline const ::std::string& strenemylegionname() const;
  inline void set_strenemylegionname(const ::std::string& value);
  inline void set_strenemylegionname(const char* value);
  inline void set_strenemylegionname(const char* value, size_t size);
  inline ::std::string* mutable_strenemylegionname();
  inline ::std::string* release_strenemylegionname();
  inline void set_allocated_strenemylegionname(::std::string* strenemylegionname);

  // required string strenemyName = 3;
  inline bool has_strenemyname() const;
  inline void clear_strenemyname();
  static const int kStrenemyNameFieldNumber = 3;
  inline const ::std::string& strenemyname() const;
  inline void set_strenemyname(const ::std::string& value);
  inline void set_strenemyname(const char* value);
  inline void set_strenemyname(const char* value, size_t size);
  inline ::std::string* mutable_strenemyname();
  inline ::std::string* release_strenemyname();
  inline void set_allocated_strenemyname(::std::string* strenemyname);

  // required int32 iGetStarCount = 4;
  inline bool has_igetstarcount() const;
  inline void clear_igetstarcount();
  static const int kIGetStarCountFieldNumber = 4;
  inline ::google::protobuf::int32 igetstarcount() const;
  inline void set_igetstarcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.FightRecord)
 private:
  inline void set_has_strselfname();
  inline void clear_has_strselfname();
  inline void set_has_strenemylegionname();
  inline void clear_has_strenemylegionname();
  inline void set_has_strenemyname();
  inline void clear_has_strenemyname();
  inline void set_has_igetstarcount();
  inline void clear_has_igetstarcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strselfname_;
  ::std::string* strenemylegionname_;
  ::std::string* strenemyname_;
  ::google::protobuf::int32 igetstarcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static FightRecord* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC();
  virtual ~CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC();

  CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC(const CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC& from);

  inline CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC& operator=(const CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC& default_instance();

  void Swap(CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC& from);
  void MergeFrom(const CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.VSLegion vsLegion = 1;
  inline bool has_vslegion() const;
  inline void clear_vslegion();
  static const int kVsLegionFieldNumber = 1;
  inline const ::GSProto::VSLegion& vslegion() const;
  inline ::GSProto::VSLegion* mutable_vslegion();
  inline ::GSProto::VSLegion* release_vslegion();
  inline void set_allocated_vslegion(::GSProto::VSLegion* vslegion);

  // repeated .GSProto.FightRecord selfFightRecord = 2;
  inline int selffightrecord_size() const;
  inline void clear_selffightrecord();
  static const int kSelfFightRecordFieldNumber = 2;
  inline const ::GSProto::FightRecord& selffightrecord(int index) const;
  inline ::GSProto::FightRecord* mutable_selffightrecord(int index);
  inline ::GSProto::FightRecord* add_selffightrecord();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightRecord >&
      selffightrecord() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightRecord >*
      mutable_selffightrecord();

  // repeated .GSProto.FightRecord enemyFightRecod = 3;
  inline int enemyfightrecod_size() const;
  inline void clear_enemyfightrecod();
  static const int kEnemyFightRecodFieldNumber = 3;
  inline const ::GSProto::FightRecord& enemyfightrecod(int index) const;
  inline ::GSProto::FightRecord* mutable_enemyfightrecod(int index);
  inline ::GSProto::FightRecord* add_enemyfightrecod();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightRecord >&
      enemyfightrecod() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightRecord >*
      mutable_enemyfightrecod();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC)
 private:
  inline void set_has_vslegion();
  inline void clear_has_vslegion();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::VSLegion* vslegion_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::FightRecord > selffightrecord_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::FightRecord > enemyfightrecod_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_CUR_FIGHT_CONDITION_CS : public ::google::protobuf::Message {
 public:
  CMD_QUERY_CUR_FIGHT_CONDITION_CS();
  virtual ~CMD_QUERY_CUR_FIGHT_CONDITION_CS();

  CMD_QUERY_CUR_FIGHT_CONDITION_CS(const CMD_QUERY_CUR_FIGHT_CONDITION_CS& from);

  inline CMD_QUERY_CUR_FIGHT_CONDITION_CS& operator=(const CMD_QUERY_CUR_FIGHT_CONDITION_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_CUR_FIGHT_CONDITION_CS& default_instance();

  void Swap(CMD_QUERY_CUR_FIGHT_CONDITION_CS* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_CUR_FIGHT_CONDITION_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_CUR_FIGHT_CONDITION_CS& from);
  void MergeFrom(const CMD_QUERY_CUR_FIGHT_CONDITION_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCampId = 1;
  inline bool has_icampid() const;
  inline void clear_icampid();
  static const int kICampIdFieldNumber = 1;
  inline ::google::protobuf::int32 icampid() const;
  inline void set_icampid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_CUR_FIGHT_CONDITION_CS)
 private:
  inline void set_has_icampid();
  inline void clear_has_icampid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 icampid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_CUR_FIGHT_CONDITION_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_CUR_FIGHT_CONDITION_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_CUR_FIGHT_CONDITION_SC();
  virtual ~CMD_QUERY_CUR_FIGHT_CONDITION_SC();

  CMD_QUERY_CUR_FIGHT_CONDITION_SC(const CMD_QUERY_CUR_FIGHT_CONDITION_SC& from);

  inline CMD_QUERY_CUR_FIGHT_CONDITION_SC& operator=(const CMD_QUERY_CUR_FIGHT_CONDITION_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_CUR_FIGHT_CONDITION_SC& default_instance();

  void Swap(CMD_QUERY_CUR_FIGHT_CONDITION_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_CUR_FIGHT_CONDITION_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_CUR_FIGHT_CONDITION_SC& from);
  void MergeFrom(const CMD_QUERY_CUR_FIGHT_CONDITION_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.VSLegion szVSLegionList = 1;
  inline int szvslegionlist_size() const;
  inline void clear_szvslegionlist();
  static const int kSzVSLegionListFieldNumber = 1;
  inline const ::GSProto::VSLegion& szvslegionlist(int index) const;
  inline ::GSProto::VSLegion* mutable_szvslegionlist(int index);
  inline ::GSProto::VSLegion* add_szvslegionlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::VSLegion >&
      szvslegionlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::VSLegion >*
      mutable_szvslegionlist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_CUR_FIGHT_CONDITION_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::VSLegion > szvslegionlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_CUR_FIGHT_CONDITION_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS : public ::google::protobuf::Message {
 public:
  CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS();
  virtual ~CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS();

  CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS(const CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS& from);

  inline CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS& operator=(const CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS& default_instance();

  void Swap(CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS& from);
  void MergeFrom(const CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCampId = 1;
  inline bool has_icampid() const;
  inline void clear_icampid();
  static const int kICampIdFieldNumber = 1;
  inline ::google::protobuf::int32 icampid() const;
  inline void set_icampid(::google::protobuf::int32 value);

  // required string strAttLegionName = 2;
  inline bool has_strattlegionname() const;
  inline void clear_strattlegionname();
  static const int kStrAttLegionNameFieldNumber = 2;
  inline const ::std::string& strattlegionname() const;
  inline void set_strattlegionname(const ::std::string& value);
  inline void set_strattlegionname(const char* value);
  inline void set_strattlegionname(const char* value, size_t size);
  inline ::std::string* mutable_strattlegionname();
  inline ::std::string* release_strattlegionname();
  inline void set_allocated_strattlegionname(::std::string* strattlegionname);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS)
 private:
  inline void set_has_icampid();
  inline void clear_has_icampid();
  inline void set_has_strattlegionname();
  inline void clear_has_strattlegionname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strattlegionname_;
  ::google::protobuf::int32 icampid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServerExt_2eproto();
  friend void protobuf_AssignDesc_GameServerExt_2eproto();
  friend void protobuf_ShutdownFile_GameServerExt_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS* default_instance_;
};
// ===================================================================


// ===================================================================

// Cmd_Sc_QueryGodAnimalLevelStep

// required uint32 dwObjectID = 1;
inline bool Cmd_Sc_QueryGodAnimalLevelStep::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 Cmd_Sc_QueryGodAnimalLevelStep::dwobjectid() const {
  return dwobjectid_;
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// required bool bTouchMaxLv = 2;
inline bool Cmd_Sc_QueryGodAnimalLevelStep::has_btouchmaxlv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::set_has_btouchmaxlv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::clear_has_btouchmaxlv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::clear_btouchmaxlv() {
  btouchmaxlv_ = false;
  clear_has_btouchmaxlv();
}
inline bool Cmd_Sc_QueryGodAnimalLevelStep::btouchmaxlv() const {
  return btouchmaxlv_;
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::set_btouchmaxlv(bool value) {
  set_has_btouchmaxlv();
  btouchmaxlv_ = value;
}

// required .GSProto.GoldAnimalLevelStepInfo curInfo = 3;
inline bool Cmd_Sc_QueryGodAnimalLevelStep::has_curinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::set_has_curinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::clear_has_curinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::clear_curinfo() {
  if (curinfo_ != NULL) curinfo_->::GSProto::GoldAnimalLevelStepInfo::Clear();
  clear_has_curinfo();
}
inline const ::GSProto::GoldAnimalLevelStepInfo& Cmd_Sc_QueryGodAnimalLevelStep::curinfo() const {
  return curinfo_ != NULL ? *curinfo_ : *default_instance_->curinfo_;
}
inline ::GSProto::GoldAnimalLevelStepInfo* Cmd_Sc_QueryGodAnimalLevelStep::mutable_curinfo() {
  set_has_curinfo();
  if (curinfo_ == NULL) curinfo_ = new ::GSProto::GoldAnimalLevelStepInfo;
  return curinfo_;
}
inline ::GSProto::GoldAnimalLevelStepInfo* Cmd_Sc_QueryGodAnimalLevelStep::release_curinfo() {
  clear_has_curinfo();
  ::GSProto::GoldAnimalLevelStepInfo* temp = curinfo_;
  curinfo_ = NULL;
  return temp;
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::set_allocated_curinfo(::GSProto::GoldAnimalLevelStepInfo* curinfo) {
  delete curinfo_;
  curinfo_ = curinfo;
  if (curinfo) {
    set_has_curinfo();
  } else {
    clear_has_curinfo();
  }
}

// optional .GSProto.GoldAnimalLevelStepInfo nextInfo = 4;
inline bool Cmd_Sc_QueryGodAnimalLevelStep::has_nextinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::set_has_nextinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::clear_has_nextinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::clear_nextinfo() {
  if (nextinfo_ != NULL) nextinfo_->::GSProto::GoldAnimalLevelStepInfo::Clear();
  clear_has_nextinfo();
}
inline const ::GSProto::GoldAnimalLevelStepInfo& Cmd_Sc_QueryGodAnimalLevelStep::nextinfo() const {
  return nextinfo_ != NULL ? *nextinfo_ : *default_instance_->nextinfo_;
}
inline ::GSProto::GoldAnimalLevelStepInfo* Cmd_Sc_QueryGodAnimalLevelStep::mutable_nextinfo() {
  set_has_nextinfo();
  if (nextinfo_ == NULL) nextinfo_ = new ::GSProto::GoldAnimalLevelStepInfo;
  return nextinfo_;
}
inline ::GSProto::GoldAnimalLevelStepInfo* Cmd_Sc_QueryGodAnimalLevelStep::release_nextinfo() {
  clear_has_nextinfo();
  ::GSProto::GoldAnimalLevelStepInfo* temp = nextinfo_;
  nextinfo_ = NULL;
  return temp;
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::set_allocated_nextinfo(::GSProto::GoldAnimalLevelStepInfo* nextinfo) {
  delete nextinfo_;
  nextinfo_ = nextinfo;
  if (nextinfo) {
    set_has_nextinfo();
  } else {
    clear_has_nextinfo();
  }
}

// repeated .GSProto.ConsumeItem szConsumeItem = 5;
inline int Cmd_Sc_QueryGodAnimalLevelStep::szconsumeitem_size() const {
  return szconsumeitem_.size();
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::clear_szconsumeitem() {
  szconsumeitem_.Clear();
}
inline const ::GSProto::ConsumeItem& Cmd_Sc_QueryGodAnimalLevelStep::szconsumeitem(int index) const {
  return szconsumeitem_.Get(index);
}
inline ::GSProto::ConsumeItem* Cmd_Sc_QueryGodAnimalLevelStep::mutable_szconsumeitem(int index) {
  return szconsumeitem_.Mutable(index);
}
inline ::GSProto::ConsumeItem* Cmd_Sc_QueryGodAnimalLevelStep::add_szconsumeitem() {
  return szconsumeitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ConsumeItem >&
Cmd_Sc_QueryGodAnimalLevelStep::szconsumeitem() const {
  return szconsumeitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::ConsumeItem >*
Cmd_Sc_QueryGodAnimalLevelStep::mutable_szconsumeitem() {
  return &szconsumeitem_;
}

// required int32 iLevelStepSilverCost = 6;
inline bool Cmd_Sc_QueryGodAnimalLevelStep::has_ilevelstepsilvercost() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::set_has_ilevelstepsilvercost() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::clear_has_ilevelstepsilvercost() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::clear_ilevelstepsilvercost() {
  ilevelstepsilvercost_ = 0;
  clear_has_ilevelstepsilvercost();
}
inline ::google::protobuf::int32 Cmd_Sc_QueryGodAnimalLevelStep::ilevelstepsilvercost() const {
  return ilevelstepsilvercost_;
}
inline void Cmd_Sc_QueryGodAnimalLevelStep::set_ilevelstepsilvercost(::google::protobuf::int32 value) {
  set_has_ilevelstepsilvercost();
  ilevelstepsilvercost_ = value;
}

// -------------------------------------------------------------------

// Cmd_Cs_QueryGodAnimalInherit

// required uint32 dwAccepObjectID = 1;
inline bool Cmd_Cs_QueryGodAnimalInherit::has_dwaccepobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_QueryGodAnimalInherit::set_has_dwaccepobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_QueryGodAnimalInherit::clear_has_dwaccepobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_QueryGodAnimalInherit::clear_dwaccepobjectid() {
  dwaccepobjectid_ = 0u;
  clear_has_dwaccepobjectid();
}
inline ::google::protobuf::uint32 Cmd_Cs_QueryGodAnimalInherit::dwaccepobjectid() const {
  return dwaccepobjectid_;
}
inline void Cmd_Cs_QueryGodAnimalInherit::set_dwaccepobjectid(::google::protobuf::uint32 value) {
  set_has_dwaccepobjectid();
  dwaccepobjectid_ = value;
}

// optional uint32 dwPasserObjectID = 2;
inline bool Cmd_Cs_QueryGodAnimalInherit::has_dwpasserobjectid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Cs_QueryGodAnimalInherit::set_has_dwpasserobjectid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Cs_QueryGodAnimalInherit::clear_has_dwpasserobjectid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Cs_QueryGodAnimalInherit::clear_dwpasserobjectid() {
  dwpasserobjectid_ = 0u;
  clear_has_dwpasserobjectid();
}
inline ::google::protobuf::uint32 Cmd_Cs_QueryGodAnimalInherit::dwpasserobjectid() const {
  return dwpasserobjectid_;
}
inline void Cmd_Cs_QueryGodAnimalInherit::set_dwpasserobjectid(::google::protobuf::uint32 value) {
  set_has_dwpasserobjectid();
  dwpasserobjectid_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_QueryGodAnimalInherit

// required .GSProto.GoldAnimalDetail acceptPreDetail = 1;
inline bool Cmd_Sc_QueryGodAnimalInherit::has_acceptpredetail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_QueryGodAnimalInherit::set_has_acceptpredetail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_QueryGodAnimalInherit::clear_has_acceptpredetail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_QueryGodAnimalInherit::clear_acceptpredetail() {
  if (acceptpredetail_ != NULL) acceptpredetail_->::GSProto::GoldAnimalDetail::Clear();
  clear_has_acceptpredetail();
}
inline const ::GSProto::GoldAnimalDetail& Cmd_Sc_QueryGodAnimalInherit::acceptpredetail() const {
  return acceptpredetail_ != NULL ? *acceptpredetail_ : *default_instance_->acceptpredetail_;
}
inline ::GSProto::GoldAnimalDetail* Cmd_Sc_QueryGodAnimalInherit::mutable_acceptpredetail() {
  set_has_acceptpredetail();
  if (acceptpredetail_ == NULL) acceptpredetail_ = new ::GSProto::GoldAnimalDetail;
  return acceptpredetail_;
}
inline ::GSProto::GoldAnimalDetail* Cmd_Sc_QueryGodAnimalInherit::release_acceptpredetail() {
  clear_has_acceptpredetail();
  ::GSProto::GoldAnimalDetail* temp = acceptpredetail_;
  acceptpredetail_ = NULL;
  return temp;
}
inline void Cmd_Sc_QueryGodAnimalInherit::set_allocated_acceptpredetail(::GSProto::GoldAnimalDetail* acceptpredetail) {
  delete acceptpredetail_;
  acceptpredetail_ = acceptpredetail;
  if (acceptpredetail) {
    set_has_acceptpredetail();
  } else {
    clear_has_acceptpredetail();
  }
}

// optional .GSProto.GoldAnimalDetail passerDetail = 2;
inline bool Cmd_Sc_QueryGodAnimalInherit::has_passerdetail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Sc_QueryGodAnimalInherit::set_has_passerdetail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Sc_QueryGodAnimalInherit::clear_has_passerdetail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Sc_QueryGodAnimalInherit::clear_passerdetail() {
  if (passerdetail_ != NULL) passerdetail_->::GSProto::GoldAnimalDetail::Clear();
  clear_has_passerdetail();
}
inline const ::GSProto::GoldAnimalDetail& Cmd_Sc_QueryGodAnimalInherit::passerdetail() const {
  return passerdetail_ != NULL ? *passerdetail_ : *default_instance_->passerdetail_;
}
inline ::GSProto::GoldAnimalDetail* Cmd_Sc_QueryGodAnimalInherit::mutable_passerdetail() {
  set_has_passerdetail();
  if (passerdetail_ == NULL) passerdetail_ = new ::GSProto::GoldAnimalDetail;
  return passerdetail_;
}
inline ::GSProto::GoldAnimalDetail* Cmd_Sc_QueryGodAnimalInherit::release_passerdetail() {
  clear_has_passerdetail();
  ::GSProto::GoldAnimalDetail* temp = passerdetail_;
  passerdetail_ = NULL;
  return temp;
}
inline void Cmd_Sc_QueryGodAnimalInherit::set_allocated_passerdetail(::GSProto::GoldAnimalDetail* passerdetail) {
  delete passerdetail_;
  passerdetail_ = passerdetail;
  if (passerdetail) {
    set_has_passerdetail();
  } else {
    clear_has_passerdetail();
  }
}

// optional .GSProto.GoldAnimalDetail acceptPostDetail = 3;
inline bool Cmd_Sc_QueryGodAnimalInherit::has_acceptpostdetail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Cmd_Sc_QueryGodAnimalInherit::set_has_acceptpostdetail() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Cmd_Sc_QueryGodAnimalInherit::clear_has_acceptpostdetail() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Cmd_Sc_QueryGodAnimalInherit::clear_acceptpostdetail() {
  if (acceptpostdetail_ != NULL) acceptpostdetail_->::GSProto::GoldAnimalDetail::Clear();
  clear_has_acceptpostdetail();
}
inline const ::GSProto::GoldAnimalDetail& Cmd_Sc_QueryGodAnimalInherit::acceptpostdetail() const {
  return acceptpostdetail_ != NULL ? *acceptpostdetail_ : *default_instance_->acceptpostdetail_;
}
inline ::GSProto::GoldAnimalDetail* Cmd_Sc_QueryGodAnimalInherit::mutable_acceptpostdetail() {
  set_has_acceptpostdetail();
  if (acceptpostdetail_ == NULL) acceptpostdetail_ = new ::GSProto::GoldAnimalDetail;
  return acceptpostdetail_;
}
inline ::GSProto::GoldAnimalDetail* Cmd_Sc_QueryGodAnimalInherit::release_acceptpostdetail() {
  clear_has_acceptpostdetail();
  ::GSProto::GoldAnimalDetail* temp = acceptpostdetail_;
  acceptpostdetail_ = NULL;
  return temp;
}
inline void Cmd_Sc_QueryGodAnimalInherit::set_allocated_acceptpostdetail(::GSProto::GoldAnimalDetail* acceptpostdetail) {
  delete acceptpostdetail_;
  acceptpostdetail_ = acceptpostdetail;
  if (acceptpostdetail) {
    set_has_acceptpostdetail();
  } else {
    clear_has_acceptpostdetail();
  }
}

// optional int32 iInheritSilverCost = 4;
inline bool Cmd_Sc_QueryGodAnimalInherit::has_iinheritsilvercost() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Cmd_Sc_QueryGodAnimalInherit::set_has_iinheritsilvercost() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Cmd_Sc_QueryGodAnimalInherit::clear_has_iinheritsilvercost() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Cmd_Sc_QueryGodAnimalInherit::clear_iinheritsilvercost() {
  iinheritsilvercost_ = 0;
  clear_has_iinheritsilvercost();
}
inline ::google::protobuf::int32 Cmd_Sc_QueryGodAnimalInherit::iinheritsilvercost() const {
  return iinheritsilvercost_;
}
inline void Cmd_Sc_QueryGodAnimalInherit::set_iinheritsilvercost(::google::protobuf::int32 value) {
  set_has_iinheritsilvercost();
  iinheritsilvercost_ = value;
}

// -------------------------------------------------------------------

// Cmd_Cs_ExeGodAnimalInherit

// required uint32 dwPasserObjectID = 1;
inline bool Cmd_Cs_ExeGodAnimalInherit::has_dwpasserobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_ExeGodAnimalInherit::set_has_dwpasserobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_ExeGodAnimalInherit::clear_has_dwpasserobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_ExeGodAnimalInherit::clear_dwpasserobjectid() {
  dwpasserobjectid_ = 0u;
  clear_has_dwpasserobjectid();
}
inline ::google::protobuf::uint32 Cmd_Cs_ExeGodAnimalInherit::dwpasserobjectid() const {
  return dwpasserobjectid_;
}
inline void Cmd_Cs_ExeGodAnimalInherit::set_dwpasserobjectid(::google::protobuf::uint32 value) {
  set_has_dwpasserobjectid();
  dwpasserobjectid_ = value;
}

// required uint32 dwAccepObjectID = 2;
inline bool Cmd_Cs_ExeGodAnimalInherit::has_dwaccepobjectid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Cs_ExeGodAnimalInherit::set_has_dwaccepobjectid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Cs_ExeGodAnimalInherit::clear_has_dwaccepobjectid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Cs_ExeGodAnimalInherit::clear_dwaccepobjectid() {
  dwaccepobjectid_ = 0u;
  clear_has_dwaccepobjectid();
}
inline ::google::protobuf::uint32 Cmd_Cs_ExeGodAnimalInherit::dwaccepobjectid() const {
  return dwaccepobjectid_;
}
inline void Cmd_Cs_ExeGodAnimalInherit::set_dwaccepobjectid(::google::protobuf::uint32 value) {
  set_has_dwaccepobjectid();
  dwaccepobjectid_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_ExeGodAnimalInherit

// required .GSProto.GoldAnimalDetail passerDetail = 1;
inline bool Cmd_Sc_ExeGodAnimalInherit::has_passerdetail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_ExeGodAnimalInherit::set_has_passerdetail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_ExeGodAnimalInherit::clear_has_passerdetail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_ExeGodAnimalInherit::clear_passerdetail() {
  if (passerdetail_ != NULL) passerdetail_->::GSProto::GoldAnimalDetail::Clear();
  clear_has_passerdetail();
}
inline const ::GSProto::GoldAnimalDetail& Cmd_Sc_ExeGodAnimalInherit::passerdetail() const {
  return passerdetail_ != NULL ? *passerdetail_ : *default_instance_->passerdetail_;
}
inline ::GSProto::GoldAnimalDetail* Cmd_Sc_ExeGodAnimalInherit::mutable_passerdetail() {
  set_has_passerdetail();
  if (passerdetail_ == NULL) passerdetail_ = new ::GSProto::GoldAnimalDetail;
  return passerdetail_;
}
inline ::GSProto::GoldAnimalDetail* Cmd_Sc_ExeGodAnimalInherit::release_passerdetail() {
  clear_has_passerdetail();
  ::GSProto::GoldAnimalDetail* temp = passerdetail_;
  passerdetail_ = NULL;
  return temp;
}
inline void Cmd_Sc_ExeGodAnimalInherit::set_allocated_passerdetail(::GSProto::GoldAnimalDetail* passerdetail) {
  delete passerdetail_;
  passerdetail_ = passerdetail;
  if (passerdetail) {
    set_has_passerdetail();
  } else {
    clear_has_passerdetail();
  }
}

// required .GSProto.GoldAnimalDetail acceptDetail = 2;
inline bool Cmd_Sc_ExeGodAnimalInherit::has_acceptdetail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Sc_ExeGodAnimalInherit::set_has_acceptdetail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Sc_ExeGodAnimalInherit::clear_has_acceptdetail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Sc_ExeGodAnimalInherit::clear_acceptdetail() {
  if (acceptdetail_ != NULL) acceptdetail_->::GSProto::GoldAnimalDetail::Clear();
  clear_has_acceptdetail();
}
inline const ::GSProto::GoldAnimalDetail& Cmd_Sc_ExeGodAnimalInherit::acceptdetail() const {
  return acceptdetail_ != NULL ? *acceptdetail_ : *default_instance_->acceptdetail_;
}
inline ::GSProto::GoldAnimalDetail* Cmd_Sc_ExeGodAnimalInherit::mutable_acceptdetail() {
  set_has_acceptdetail();
  if (acceptdetail_ == NULL) acceptdetail_ = new ::GSProto::GoldAnimalDetail;
  return acceptdetail_;
}
inline ::GSProto::GoldAnimalDetail* Cmd_Sc_ExeGodAnimalInherit::release_acceptdetail() {
  clear_has_acceptdetail();
  ::GSProto::GoldAnimalDetail* temp = acceptdetail_;
  acceptdetail_ = NULL;
  return temp;
}
inline void Cmd_Sc_ExeGodAnimalInherit::set_allocated_acceptdetail(::GSProto::GoldAnimalDetail* acceptdetail) {
  delete acceptdetail_;
  acceptdetail_ = acceptdetail;
  if (acceptdetail) {
    set_has_acceptdetail();
  } else {
    clear_has_acceptdetail();
  }
}

// -------------------------------------------------------------------

// Cmd_Cs_QueryGodAnimalDetai

// required uint32 dwGodAnimalObjectID = 1;
inline bool Cmd_Cs_QueryGodAnimalDetai::has_dwgodanimalobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_QueryGodAnimalDetai::set_has_dwgodanimalobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_QueryGodAnimalDetai::clear_has_dwgodanimalobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_QueryGodAnimalDetai::clear_dwgodanimalobjectid() {
  dwgodanimalobjectid_ = 0u;
  clear_has_dwgodanimalobjectid();
}
inline ::google::protobuf::uint32 Cmd_Cs_QueryGodAnimalDetai::dwgodanimalobjectid() const {
  return dwgodanimalobjectid_;
}
inline void Cmd_Cs_QueryGodAnimalDetai::set_dwgodanimalobjectid(::google::protobuf::uint32 value) {
  set_has_dwgodanimalobjectid();
  dwgodanimalobjectid_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_QueryGodAnimalDetai

// required .GSProto.GoldAnimalDetail detail = 1;
inline bool Cmd_Sc_QueryGodAnimalDetai::has_detail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_QueryGodAnimalDetai::set_has_detail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_QueryGodAnimalDetai::clear_has_detail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_QueryGodAnimalDetai::clear_detail() {
  if (detail_ != NULL) detail_->::GSProto::GoldAnimalDetail::Clear();
  clear_has_detail();
}
inline const ::GSProto::GoldAnimalDetail& Cmd_Sc_QueryGodAnimalDetai::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::GSProto::GoldAnimalDetail* Cmd_Sc_QueryGodAnimalDetai::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) detail_ = new ::GSProto::GoldAnimalDetail;
  return detail_;
}
inline ::GSProto::GoldAnimalDetail* Cmd_Sc_QueryGodAnimalDetai::release_detail() {
  clear_has_detail();
  ::GSProto::GoldAnimalDetail* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void Cmd_Sc_QueryGodAnimalDetai::set_allocated_detail(::GSProto::GoldAnimalDetail* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
}

// -------------------------------------------------------------------

// CMD_GODANIMAL_DETAIL_BYID_CS

// required int32 iGodAnimalID = 1;
inline bool CMD_GODANIMAL_DETAIL_BYID_CS::has_igodanimalid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GODANIMAL_DETAIL_BYID_CS::set_has_igodanimalid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GODANIMAL_DETAIL_BYID_CS::clear_has_igodanimalid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GODANIMAL_DETAIL_BYID_CS::clear_igodanimalid() {
  igodanimalid_ = 0;
  clear_has_igodanimalid();
}
inline ::google::protobuf::int32 CMD_GODANIMAL_DETAIL_BYID_CS::igodanimalid() const {
  return igodanimalid_;
}
inline void CMD_GODANIMAL_DETAIL_BYID_CS::set_igodanimalid(::google::protobuf::int32 value) {
  set_has_igodanimalid();
  igodanimalid_ = value;
}

// -------------------------------------------------------------------

// CMD_GODANIMAL_DETAIL_BYID_SC

// required int32 iGodAnimalID = 1;
inline bool CMD_GODANIMAL_DETAIL_BYID_SC::has_igodanimalid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GODANIMAL_DETAIL_BYID_SC::set_has_igodanimalid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GODANIMAL_DETAIL_BYID_SC::clear_has_igodanimalid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GODANIMAL_DETAIL_BYID_SC::clear_igodanimalid() {
  igodanimalid_ = 0;
  clear_has_igodanimalid();
}
inline ::google::protobuf::int32 CMD_GODANIMAL_DETAIL_BYID_SC::igodanimalid() const {
  return igodanimalid_;
}
inline void CMD_GODANIMAL_DETAIL_BYID_SC::set_igodanimalid(::google::protobuf::int32 value) {
  set_has_igodanimalid();
  igodanimalid_ = value;
}

// required .GSProto.GoldAnimalDetail detail = 2;
inline bool CMD_GODANIMAL_DETAIL_BYID_SC::has_detail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_GODANIMAL_DETAIL_BYID_SC::set_has_detail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_GODANIMAL_DETAIL_BYID_SC::clear_has_detail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_GODANIMAL_DETAIL_BYID_SC::clear_detail() {
  if (detail_ != NULL) detail_->::GSProto::GoldAnimalDetail::Clear();
  clear_has_detail();
}
inline const ::GSProto::GoldAnimalDetail& CMD_GODANIMAL_DETAIL_BYID_SC::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::GSProto::GoldAnimalDetail* CMD_GODANIMAL_DETAIL_BYID_SC::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) detail_ = new ::GSProto::GoldAnimalDetail;
  return detail_;
}
inline ::GSProto::GoldAnimalDetail* CMD_GODANIMAL_DETAIL_BYID_SC::release_detail() {
  clear_has_detail();
  ::GSProto::GoldAnimalDetail* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void CMD_GODANIMAL_DETAIL_BYID_SC::set_allocated_detail(::GSProto::GoldAnimalDetail* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
}

// -------------------------------------------------------------------

// Cmd_Cs_GodAnimalTrain

// required uint32 dwObjectID = 1;
inline bool Cmd_Cs_GodAnimalTrain::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_GodAnimalTrain::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_GodAnimalTrain::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_GodAnimalTrain::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 Cmd_Cs_GodAnimalTrain::dwobjectid() const {
  return dwobjectid_;
}
inline void Cmd_Cs_GodAnimalTrain::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_GodAnimalUpdate

// required .GSProto.GoldAnimalRoleBase updateInfo = 1;
inline bool Cmd_Sc_GodAnimalUpdate::has_updateinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_GodAnimalUpdate::set_has_updateinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_GodAnimalUpdate::clear_has_updateinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_GodAnimalUpdate::clear_updateinfo() {
  if (updateinfo_ != NULL) updateinfo_->::GSProto::GoldAnimalRoleBase::Clear();
  clear_has_updateinfo();
}
inline const ::GSProto::GoldAnimalRoleBase& Cmd_Sc_GodAnimalUpdate::updateinfo() const {
  return updateinfo_ != NULL ? *updateinfo_ : *default_instance_->updateinfo_;
}
inline ::GSProto::GoldAnimalRoleBase* Cmd_Sc_GodAnimalUpdate::mutable_updateinfo() {
  set_has_updateinfo();
  if (updateinfo_ == NULL) updateinfo_ = new ::GSProto::GoldAnimalRoleBase;
  return updateinfo_;
}
inline ::GSProto::GoldAnimalRoleBase* Cmd_Sc_GodAnimalUpdate::release_updateinfo() {
  clear_has_updateinfo();
  ::GSProto::GoldAnimalRoleBase* temp = updateinfo_;
  updateinfo_ = NULL;
  return temp;
}
inline void Cmd_Sc_GodAnimalUpdate::set_allocated_updateinfo(::GSProto::GoldAnimalRoleBase* updateinfo) {
  delete updateinfo_;
  updateinfo_ = updateinfo;
  if (updateinfo) {
    set_has_updateinfo();
  } else {
    clear_has_updateinfo();
  }
}

// -------------------------------------------------------------------

// Cmd_Cs_QueryGodAnimalLevelStep

// required uint32 dwObjectID = 1;
inline bool Cmd_Cs_QueryGodAnimalLevelStep::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_QueryGodAnimalLevelStep::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_QueryGodAnimalLevelStep::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_QueryGodAnimalLevelStep::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 Cmd_Cs_QueryGodAnimalLevelStep::dwobjectid() const {
  return dwobjectid_;
}
inline void Cmd_Cs_QueryGodAnimalLevelStep::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_GoldAnimalList

// required uint32 dwActiveObjectID = 1;
inline bool Cmd_Sc_GoldAnimalList::has_dwactiveobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_GoldAnimalList::set_has_dwactiveobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_GoldAnimalList::clear_has_dwactiveobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_GoldAnimalList::clear_dwactiveobjectid() {
  dwactiveobjectid_ = 0u;
  clear_has_dwactiveobjectid();
}
inline ::google::protobuf::uint32 Cmd_Sc_GoldAnimalList::dwactiveobjectid() const {
  return dwactiveobjectid_;
}
inline void Cmd_Sc_GoldAnimalList::set_dwactiveobjectid(::google::protobuf::uint32 value) {
  set_has_dwactiveobjectid();
  dwactiveobjectid_ = value;
}

// repeated .GSProto.GoldAnimalRoleBase szGodAnimalList = 2;
inline int Cmd_Sc_GoldAnimalList::szgodanimallist_size() const {
  return szgodanimallist_.size();
}
inline void Cmd_Sc_GoldAnimalList::clear_szgodanimallist() {
  szgodanimallist_.Clear();
}
inline const ::GSProto::GoldAnimalRoleBase& Cmd_Sc_GoldAnimalList::szgodanimallist(int index) const {
  return szgodanimallist_.Get(index);
}
inline ::GSProto::GoldAnimalRoleBase* Cmd_Sc_GoldAnimalList::mutable_szgodanimallist(int index) {
  return szgodanimallist_.Mutable(index);
}
inline ::GSProto::GoldAnimalRoleBase* Cmd_Sc_GoldAnimalList::add_szgodanimallist() {
  return szgodanimallist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::GoldAnimalRoleBase >&
Cmd_Sc_GoldAnimalList::szgodanimallist() const {
  return szgodanimallist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::GoldAnimalRoleBase >*
Cmd_Sc_GoldAnimalList::mutable_szgodanimallist() {
  return &szgodanimallist_;
}

// -------------------------------------------------------------------

// CMD_NORMALSHOP_QUERY_SC

// repeated .GSProto.HonerGoodDetail goodsList = 1;
inline int CMD_NORMALSHOP_QUERY_SC::goodslist_size() const {
  return goodslist_.size();
}
inline void CMD_NORMALSHOP_QUERY_SC::clear_goodslist() {
  goodslist_.Clear();
}
inline const ::GSProto::HonerGoodDetail& CMD_NORMALSHOP_QUERY_SC::goodslist(int index) const {
  return goodslist_.Get(index);
}
inline ::GSProto::HonerGoodDetail* CMD_NORMALSHOP_QUERY_SC::mutable_goodslist(int index) {
  return goodslist_.Mutable(index);
}
inline ::GSProto::HonerGoodDetail* CMD_NORMALSHOP_QUERY_SC::add_goodslist() {
  return goodslist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HonerGoodDetail >&
CMD_NORMALSHOP_QUERY_SC::goodslist() const {
  return goodslist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::HonerGoodDetail >*
CMD_NORMALSHOP_QUERY_SC::mutable_goodslist() {
  return &goodslist_;
}

// required int32 untilNextRefreshSeconds = 2;
inline bool CMD_NORMALSHOP_QUERY_SC::has_untilnextrefreshseconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_NORMALSHOP_QUERY_SC::set_has_untilnextrefreshseconds() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_NORMALSHOP_QUERY_SC::clear_has_untilnextrefreshseconds() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_NORMALSHOP_QUERY_SC::clear_untilnextrefreshseconds() {
  untilnextrefreshseconds_ = 0;
  clear_has_untilnextrefreshseconds();
}
inline ::google::protobuf::int32 CMD_NORMALSHOP_QUERY_SC::untilnextrefreshseconds() const {
  return untilnextrefreshseconds_;
}
inline void CMD_NORMALSHOP_QUERY_SC::set_untilnextrefreshseconds(::google::protobuf::int32 value) {
  set_has_untilnextrefreshseconds();
  untilnextrefreshseconds_ = value;
}

// -------------------------------------------------------------------

// CMD_NORMALSHOP_BUY_CS

// required int32 index = 1;
inline bool CMD_NORMALSHOP_BUY_CS::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_NORMALSHOP_BUY_CS::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_NORMALSHOP_BUY_CS::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_NORMALSHOP_BUY_CS::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 CMD_NORMALSHOP_BUY_CS::index() const {
  return index_;
}
inline void CMD_NORMALSHOP_BUY_CS::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// CampUnit

// required int32 iId = 1;
inline bool CampUnit::has_iid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CampUnit::set_has_iid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CampUnit::clear_has_iid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CampUnit::clear_iid() {
  iid_ = 0;
  clear_has_iid();
}
inline ::google::protobuf::int32 CampUnit::iid() const {
  return iid_;
}
inline void CampUnit::set_iid(::google::protobuf::int32 value) {
  set_has_iid();
  iid_ = value;
}

// required string strOwerName = 2;
inline bool CampUnit::has_strowername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CampUnit::set_has_strowername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CampUnit::clear_has_strowername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CampUnit::clear_strowername() {
  if (strowername_ != &::google::protobuf::internal::kEmptyString) {
    strowername_->clear();
  }
  clear_has_strowername();
}
inline const ::std::string& CampUnit::strowername() const {
  return *strowername_;
}
inline void CampUnit::set_strowername(const ::std::string& value) {
  set_has_strowername();
  if (strowername_ == &::google::protobuf::internal::kEmptyString) {
    strowername_ = new ::std::string;
  }
  strowername_->assign(value);
}
inline void CampUnit::set_strowername(const char* value) {
  set_has_strowername();
  if (strowername_ == &::google::protobuf::internal::kEmptyString) {
    strowername_ = new ::std::string;
  }
  strowername_->assign(value);
}
inline void CampUnit::set_strowername(const char* value, size_t size) {
  set_has_strowername();
  if (strowername_ == &::google::protobuf::internal::kEmptyString) {
    strowername_ = new ::std::string;
  }
  strowername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CampUnit::mutable_strowername() {
  set_has_strowername();
  if (strowername_ == &::google::protobuf::internal::kEmptyString) {
    strowername_ = new ::std::string;
  }
  return strowername_;
}
inline ::std::string* CampUnit::release_strowername() {
  clear_has_strowername();
  if (strowername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strowername_;
    strowername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CampUnit::set_allocated_strowername(::std::string* strowername) {
  if (strowername_ != &::google::protobuf::internal::kEmptyString) {
    delete strowername_;
  }
  if (strowername) {
    set_has_strowername();
    strowername_ = strowername;
  } else {
    clear_has_strowername();
    strowername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool bCanReport = 3;
inline bool CampUnit::has_bcanreport() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CampUnit::set_has_bcanreport() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CampUnit::clear_has_bcanreport() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CampUnit::clear_bcanreport() {
  bcanreport_ = false;
  clear_has_bcanreport();
}
inline bool CampUnit::bcanreport() const {
  return bcanreport_;
}
inline void CampUnit::set_bcanreport(bool value) {
  set_has_bcanreport();
  bcanreport_ = value;
}

// optional bool bCanBattle = 4;
inline bool CampUnit::has_bcanbattle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CampUnit::set_has_bcanbattle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CampUnit::clear_has_bcanbattle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CampUnit::clear_bcanbattle() {
  bcanbattle_ = false;
  clear_has_bcanbattle();
}
inline bool CampUnit::bcanbattle() const {
  return bcanbattle_;
}
inline void CampUnit::set_bcanbattle(bool value) {
  set_has_bcanbattle();
  bcanbattle_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_LEGION_CAMPBATTLE_SC

// repeated .GSProto.CampUnit szCampList = 1;
inline int CMD_QUERY_LEGION_CAMPBATTLE_SC::szcamplist_size() const {
  return szcamplist_.size();
}
inline void CMD_QUERY_LEGION_CAMPBATTLE_SC::clear_szcamplist() {
  szcamplist_.Clear();
}
inline const ::GSProto::CampUnit& CMD_QUERY_LEGION_CAMPBATTLE_SC::szcamplist(int index) const {
  return szcamplist_.Get(index);
}
inline ::GSProto::CampUnit* CMD_QUERY_LEGION_CAMPBATTLE_SC::mutable_szcamplist(int index) {
  return szcamplist_.Mutable(index);
}
inline ::GSProto::CampUnit* CMD_QUERY_LEGION_CAMPBATTLE_SC::add_szcamplist() {
  return szcamplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::CampUnit >&
CMD_QUERY_LEGION_CAMPBATTLE_SC::szcamplist() const {
  return szcamplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::CampUnit >*
CMD_QUERY_LEGION_CAMPBATTLE_SC::mutable_szcamplist() {
  return &szcamplist_;
}

// required int32 istatus = 2;
inline bool CMD_QUERY_LEGION_CAMPBATTLE_SC::has_istatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_QUERY_LEGION_CAMPBATTLE_SC::set_has_istatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_QUERY_LEGION_CAMPBATTLE_SC::clear_has_istatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_QUERY_LEGION_CAMPBATTLE_SC::clear_istatus() {
  istatus_ = 0;
  clear_has_istatus();
}
inline ::google::protobuf::int32 CMD_QUERY_LEGION_CAMPBATTLE_SC::istatus() const {
  return istatus_;
}
inline void CMD_QUERY_LEGION_CAMPBATTLE_SC::set_istatus(::google::protobuf::int32 value) {
  set_has_istatus();
  istatus_ = value;
}

// optional int32 iRemaidSecond = 3;
inline bool CMD_QUERY_LEGION_CAMPBATTLE_SC::has_iremaidsecond() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_QUERY_LEGION_CAMPBATTLE_SC::set_has_iremaidsecond() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_QUERY_LEGION_CAMPBATTLE_SC::clear_has_iremaidsecond() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_QUERY_LEGION_CAMPBATTLE_SC::clear_iremaidsecond() {
  iremaidsecond_ = 0;
  clear_has_iremaidsecond();
}
inline ::google::protobuf::int32 CMD_QUERY_LEGION_CAMPBATTLE_SC::iremaidsecond() const {
  return iremaidsecond_;
}
inline void CMD_QUERY_LEGION_CAMPBATTLE_SC::set_iremaidsecond(::google::protobuf::int32 value) {
  set_has_iremaidsecond();
  iremaidsecond_ = value;
}

// optional int32 iHaveReportId = 4;
inline bool CMD_QUERY_LEGION_CAMPBATTLE_SC::has_ihavereportid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_QUERY_LEGION_CAMPBATTLE_SC::set_has_ihavereportid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_QUERY_LEGION_CAMPBATTLE_SC::clear_has_ihavereportid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_QUERY_LEGION_CAMPBATTLE_SC::clear_ihavereportid() {
  ihavereportid_ = 0;
  clear_has_ihavereportid();
}
inline ::google::protobuf::int32 CMD_QUERY_LEGION_CAMPBATTLE_SC::ihavereportid() const {
  return ihavereportid_;
}
inline void CMD_QUERY_LEGION_CAMPBATTLE_SC::set_ihavereportid(::google::protobuf::int32 value) {
  set_has_ihavereportid();
  ihavereportid_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_CAMPBATTLE_INFO_CS

// required int32 iId = 1;
inline bool CMD_QUERY_CAMPBATTLE_INFO_CS::has_iid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_CAMPBATTLE_INFO_CS::set_has_iid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_CAMPBATTLE_INFO_CS::clear_has_iid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_CAMPBATTLE_INFO_CS::clear_iid() {
  iid_ = 0;
  clear_has_iid();
}
inline ::google::protobuf::int32 CMD_QUERY_CAMPBATTLE_INFO_CS::iid() const {
  return iid_;
}
inline void CMD_QUERY_CAMPBATTLE_INFO_CS::set_iid(::google::protobuf::int32 value) {
  set_has_iid();
  iid_ = value;
}

// -------------------------------------------------------------------

// LegionUnit

// required string strName = 1;
inline bool LegionUnit::has_strname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegionUnit::set_has_strname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegionUnit::clear_has_strname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegionUnit::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& LegionUnit::strname() const {
  return *strname_;
}
inline void LegionUnit::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void LegionUnit::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void LegionUnit::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionUnit::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* LegionUnit::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionUnit::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iHaveCampCount = 2;
inline bool LegionUnit::has_ihavecampcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionUnit::set_has_ihavecampcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionUnit::clear_has_ihavecampcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionUnit::clear_ihavecampcount() {
  ihavecampcount_ = 0;
  clear_has_ihavecampcount();
}
inline ::google::protobuf::int32 LegionUnit::ihavecampcount() const {
  return ihavecampcount_;
}
inline void LegionUnit::set_ihavecampcount(::google::protobuf::int32 value) {
  set_has_ihavecampcount();
  ihavecampcount_ = value;
}

// required int32 iAddPercent = 3;
inline bool LegionUnit::has_iaddpercent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionUnit::set_has_iaddpercent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionUnit::clear_has_iaddpercent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionUnit::clear_iaddpercent() {
  iaddpercent_ = 0;
  clear_has_iaddpercent();
}
inline ::google::protobuf::int32 LegionUnit::iaddpercent() const {
  return iaddpercent_;
}
inline void LegionUnit::set_iaddpercent(::google::protobuf::int32 value) {
  set_has_iaddpercent();
  iaddpercent_ = value;
}

// required int32 iLegionIcon = 4;
inline bool LegionUnit::has_ilegionicon() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LegionUnit::set_has_ilegionicon() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LegionUnit::clear_has_ilegionicon() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LegionUnit::clear_ilegionicon() {
  ilegionicon_ = 0;
  clear_has_ilegionicon();
}
inline ::google::protobuf::int32 LegionUnit::ilegionicon() const {
  return ilegionicon_;
}
inline void LegionUnit::set_ilegionicon(::google::protobuf::int32 value) {
  set_has_ilegionicon();
  ilegionicon_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_CAMPBATTLE_INFO_SC

// required .GSProto.LegionUnit guardLegion = 1;
inline bool CMD_QUERY_CAMPBATTLE_INFO_SC::has_guardlegion() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_CAMPBATTLE_INFO_SC::set_has_guardlegion() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_CAMPBATTLE_INFO_SC::clear_has_guardlegion() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_CAMPBATTLE_INFO_SC::clear_guardlegion() {
  if (guardlegion_ != NULL) guardlegion_->::GSProto::LegionUnit::Clear();
  clear_has_guardlegion();
}
inline const ::GSProto::LegionUnit& CMD_QUERY_CAMPBATTLE_INFO_SC::guardlegion() const {
  return guardlegion_ != NULL ? *guardlegion_ : *default_instance_->guardlegion_;
}
inline ::GSProto::LegionUnit* CMD_QUERY_CAMPBATTLE_INFO_SC::mutable_guardlegion() {
  set_has_guardlegion();
  if (guardlegion_ == NULL) guardlegion_ = new ::GSProto::LegionUnit;
  return guardlegion_;
}
inline ::GSProto::LegionUnit* CMD_QUERY_CAMPBATTLE_INFO_SC::release_guardlegion() {
  clear_has_guardlegion();
  ::GSProto::LegionUnit* temp = guardlegion_;
  guardlegion_ = NULL;
  return temp;
}
inline void CMD_QUERY_CAMPBATTLE_INFO_SC::set_allocated_guardlegion(::GSProto::LegionUnit* guardlegion) {
  delete guardlegion_;
  guardlegion_ = guardlegion;
  if (guardlegion) {
    set_has_guardlegion();
  } else {
    clear_has_guardlegion();
  }
}

// repeated .GSProto.LegionUnit szAttackList = 2;
inline int CMD_QUERY_CAMPBATTLE_INFO_SC::szattacklist_size() const {
  return szattacklist_.size();
}
inline void CMD_QUERY_CAMPBATTLE_INFO_SC::clear_szattacklist() {
  szattacklist_.Clear();
}
inline const ::GSProto::LegionUnit& CMD_QUERY_CAMPBATTLE_INFO_SC::szattacklist(int index) const {
  return szattacklist_.Get(index);
}
inline ::GSProto::LegionUnit* CMD_QUERY_CAMPBATTLE_INFO_SC::mutable_szattacklist(int index) {
  return szattacklist_.Mutable(index);
}
inline ::GSProto::LegionUnit* CMD_QUERY_CAMPBATTLE_INFO_SC::add_szattacklist() {
  return szattacklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionUnit >&
CMD_QUERY_CAMPBATTLE_INFO_SC::szattacklist() const {
  return szattacklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionUnit >*
CMD_QUERY_CAMPBATTLE_INFO_SC::mutable_szattacklist() {
  return &szattacklist_;
}

// required int32 iId = 3;
inline bool CMD_QUERY_CAMPBATTLE_INFO_SC::has_iid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_QUERY_CAMPBATTLE_INFO_SC::set_has_iid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_QUERY_CAMPBATTLE_INFO_SC::clear_has_iid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_QUERY_CAMPBATTLE_INFO_SC::clear_iid() {
  iid_ = 0;
  clear_has_iid();
}
inline ::google::protobuf::int32 CMD_QUERY_CAMPBATTLE_INFO_SC::iid() const {
  return iid_;
}
inline void CMD_QUERY_CAMPBATTLE_INFO_SC::set_iid(::google::protobuf::int32 value) {
  set_has_iid();
  iid_ = value;
}

// required int32 iCanGetSilver = 4;
inline bool CMD_QUERY_CAMPBATTLE_INFO_SC::has_icangetsilver() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_QUERY_CAMPBATTLE_INFO_SC::set_has_icangetsilver() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_QUERY_CAMPBATTLE_INFO_SC::clear_has_icangetsilver() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_QUERY_CAMPBATTLE_INFO_SC::clear_icangetsilver() {
  icangetsilver_ = 0;
  clear_has_icangetsilver();
}
inline ::google::protobuf::int32 CMD_QUERY_CAMPBATTLE_INFO_SC::icangetsilver() const {
  return icangetsilver_;
}
inline void CMD_QUERY_CAMPBATTLE_INFO_SC::set_icangetsilver(::google::protobuf::int32 value) {
  set_has_icangetsilver();
  icangetsilver_ = value;
}

// required int32 iReportCost = 5;
inline bool CMD_QUERY_CAMPBATTLE_INFO_SC::has_ireportcost() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_QUERY_CAMPBATTLE_INFO_SC::set_has_ireportcost() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_QUERY_CAMPBATTLE_INFO_SC::clear_has_ireportcost() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_QUERY_CAMPBATTLE_INFO_SC::clear_ireportcost() {
  ireportcost_ = 0;
  clear_has_ireportcost();
}
inline ::google::protobuf::int32 CMD_QUERY_CAMPBATTLE_INFO_SC::ireportcost() const {
  return ireportcost_;
}
inline void CMD_QUERY_CAMPBATTLE_INFO_SC::set_ireportcost(::google::protobuf::int32 value) {
  set_has_ireportcost();
  ireportcost_ = value;
}

// -------------------------------------------------------------------

// CMD_LEGION_CAMPBATTLE_REPORT_CS

// required int32 iId = 1;
inline bool CMD_LEGION_CAMPBATTLE_REPORT_CS::has_iid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_LEGION_CAMPBATTLE_REPORT_CS::set_has_iid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_LEGION_CAMPBATTLE_REPORT_CS::clear_has_iid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_LEGION_CAMPBATTLE_REPORT_CS::clear_iid() {
  iid_ = 0;
  clear_has_iid();
}
inline ::google::protobuf::int32 CMD_LEGION_CAMPBATTLE_REPORT_CS::iid() const {
  return iid_;
}
inline void CMD_LEGION_CAMPBATTLE_REPORT_CS::set_iid(::google::protobuf::int32 value) {
  set_has_iid();
  iid_ = value;
}

// -------------------------------------------------------------------

// VSUnit

// required string strLegionName = 1;
inline bool VSUnit::has_strlegionname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VSUnit::set_has_strlegionname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VSUnit::clear_has_strlegionname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VSUnit::clear_strlegionname() {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    strlegionname_->clear();
  }
  clear_has_strlegionname();
}
inline const ::std::string& VSUnit::strlegionname() const {
  return *strlegionname_;
}
inline void VSUnit::set_strlegionname(const ::std::string& value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void VSUnit::set_strlegionname(const char* value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void VSUnit::set_strlegionname(const char* value, size_t size) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* VSUnit::mutable_strlegionname() {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  return strlegionname_;
}
inline ::std::string* VSUnit::release_strlegionname() {
  clear_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strlegionname_;
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void VSUnit::set_allocated_strlegionname(::std::string* strlegionname) {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strlegionname_;
  }
  if (strlegionname) {
    set_has_strlegionname();
    strlegionname_ = strlegionname;
  } else {
    clear_has_strlegionname();
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iStarCount = 2;
inline bool VSUnit::has_istarcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VSUnit::set_has_istarcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VSUnit::clear_has_istarcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VSUnit::clear_istarcount() {
  istarcount_ = 0;
  clear_has_istarcount();
}
inline ::google::protobuf::int32 VSUnit::istarcount() const {
  return istarcount_;
}
inline void VSUnit::set_istarcount(::google::protobuf::int32 value) {
  set_has_istarcount();
  istarcount_ = value;
}

// required int32 iLegionIcon = 3;
inline bool VSUnit::has_ilegionicon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VSUnit::set_has_ilegionicon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VSUnit::clear_has_ilegionicon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VSUnit::clear_ilegionicon() {
  ilegionicon_ = 0;
  clear_has_ilegionicon();
}
inline ::google::protobuf::int32 VSUnit::ilegionicon() const {
  return ilegionicon_;
}
inline void VSUnit::set_ilegionicon(::google::protobuf::int32 value) {
  set_has_ilegionicon();
  ilegionicon_ = value;
}

// -------------------------------------------------------------------

// VSLegion

// required .GSProto.VSUnit guardUnit = 1;
inline bool VSLegion::has_guardunit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VSLegion::set_has_guardunit() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VSLegion::clear_has_guardunit() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VSLegion::clear_guardunit() {
  if (guardunit_ != NULL) guardunit_->::GSProto::VSUnit::Clear();
  clear_has_guardunit();
}
inline const ::GSProto::VSUnit& VSLegion::guardunit() const {
  return guardunit_ != NULL ? *guardunit_ : *default_instance_->guardunit_;
}
inline ::GSProto::VSUnit* VSLegion::mutable_guardunit() {
  set_has_guardunit();
  if (guardunit_ == NULL) guardunit_ = new ::GSProto::VSUnit;
  return guardunit_;
}
inline ::GSProto::VSUnit* VSLegion::release_guardunit() {
  clear_has_guardunit();
  ::GSProto::VSUnit* temp = guardunit_;
  guardunit_ = NULL;
  return temp;
}
inline void VSLegion::set_allocated_guardunit(::GSProto::VSUnit* guardunit) {
  delete guardunit_;
  guardunit_ = guardunit;
  if (guardunit) {
    set_has_guardunit();
  } else {
    clear_has_guardunit();
  }
}

// required .GSProto.VSUnit attUnit = 2;
inline bool VSLegion::has_attunit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VSLegion::set_has_attunit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VSLegion::clear_has_attunit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VSLegion::clear_attunit() {
  if (attunit_ != NULL) attunit_->::GSProto::VSUnit::Clear();
  clear_has_attunit();
}
inline const ::GSProto::VSUnit& VSLegion::attunit() const {
  return attunit_ != NULL ? *attunit_ : *default_instance_->attunit_;
}
inline ::GSProto::VSUnit* VSLegion::mutable_attunit() {
  set_has_attunit();
  if (attunit_ == NULL) attunit_ = new ::GSProto::VSUnit;
  return attunit_;
}
inline ::GSProto::VSUnit* VSLegion::release_attunit() {
  clear_has_attunit();
  ::GSProto::VSUnit* temp = attunit_;
  attunit_ = NULL;
  return temp;
}
inline void VSLegion::set_allocated_attunit(::GSProto::VSUnit* attunit) {
  delete attunit_;
  attunit_ = attunit;
  if (attunit) {
    set_has_attunit();
  } else {
    clear_has_attunit();
  }
}

// optional int32 iCampId = 3;
inline bool VSLegion::has_icampid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VSLegion::set_has_icampid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VSLegion::clear_has_icampid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VSLegion::clear_icampid() {
  icampid_ = 0;
  clear_has_icampid();
}
inline ::google::protobuf::int32 VSLegion::icampid() const {
  return icampid_;
}
inline void VSLegion::set_icampid(::google::protobuf::int32 value) {
  set_has_icampid();
  icampid_ = value;
}

// optional int32 iBattleId = 4;
inline bool VSLegion::has_ibattleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VSLegion::set_has_ibattleid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VSLegion::clear_has_ibattleid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VSLegion::clear_ibattleid() {
  ibattleid_ = 0;
  clear_has_ibattleid();
}
inline ::google::protobuf::int32 VSLegion::ibattleid() const {
  return ibattleid_;
}
inline void VSLegion::set_ibattleid(::google::protobuf::int32 value) {
  set_has_ibattleid();
  ibattleid_ = value;
}

// -------------------------------------------------------------------

// VSLegionMemDetail

// required int32 iHeadId = 1;
inline bool VSLegionMemDetail::has_iheadid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VSLegionMemDetail::set_has_iheadid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VSLegionMemDetail::clear_has_iheadid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VSLegionMemDetail::clear_iheadid() {
  iheadid_ = 0;
  clear_has_iheadid();
}
inline ::google::protobuf::int32 VSLegionMemDetail::iheadid() const {
  return iheadid_;
}
inline void VSLegionMemDetail::set_iheadid(::google::protobuf::int32 value) {
  set_has_iheadid();
  iheadid_ = value;
}

// required int32 iLevel = 2;
inline bool VSLegionMemDetail::has_ilevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VSLegionMemDetail::set_has_ilevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VSLegionMemDetail::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VSLegionMemDetail::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 VSLegionMemDetail::ilevel() const {
  return ilevel_;
}
inline void VSLegionMemDetail::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// required string strName = 3;
inline bool VSLegionMemDetail::has_strname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VSLegionMemDetail::set_has_strname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VSLegionMemDetail::clear_has_strname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VSLegionMemDetail::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& VSLegionMemDetail::strname() const {
  return *strname_;
}
inline void VSLegionMemDetail::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void VSLegionMemDetail::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void VSLegionMemDetail::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* VSLegionMemDetail::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* VSLegionMemDetail::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void VSLegionMemDetail::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iFightValue = 4;
inline bool VSLegionMemDetail::has_ifightvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VSLegionMemDetail::set_has_ifightvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VSLegionMemDetail::clear_has_ifightvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VSLegionMemDetail::clear_ifightvalue() {
  ifightvalue_ = 0;
  clear_has_ifightvalue();
}
inline ::google::protobuf::int32 VSLegionMemDetail::ifightvalue() const {
  return ifightvalue_;
}
inline void VSLegionMemDetail::set_ifightvalue(::google::protobuf::int32 value) {
  set_has_ifightvalue();
  ifightvalue_ = value;
}

// required bool bICanFight = 5;
inline bool VSLegionMemDetail::has_bicanfight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VSLegionMemDetail::set_has_bicanfight() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VSLegionMemDetail::clear_has_bicanfight() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VSLegionMemDetail::clear_bicanfight() {
  bicanfight_ = false;
  clear_has_bicanfight();
}
inline bool VSLegionMemDetail::bicanfight() const {
  return bicanfight_;
}
inline void VSLegionMemDetail::set_bicanfight(bool value) {
  set_has_bicanfight();
  bicanfight_ = value;
}

// required bool bIICanFight = 6;
inline bool VSLegionMemDetail::has_biicanfight() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void VSLegionMemDetail::set_has_biicanfight() {
  _has_bits_[0] |= 0x00000020u;
}
inline void VSLegionMemDetail::clear_has_biicanfight() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void VSLegionMemDetail::clear_biicanfight() {
  biicanfight_ = false;
  clear_has_biicanfight();
}
inline bool VSLegionMemDetail::biicanfight() const {
  return biicanfight_;
}
inline void VSLegionMemDetail::set_biicanfight(bool value) {
  set_has_biicanfight();
  biicanfight_ = value;
}

// required bool bIIICanFight = 7;
inline bool VSLegionMemDetail::has_biiicanfight() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void VSLegionMemDetail::set_has_biiicanfight() {
  _has_bits_[0] |= 0x00000040u;
}
inline void VSLegionMemDetail::clear_has_biiicanfight() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void VSLegionMemDetail::clear_biiicanfight() {
  biiicanfight_ = false;
  clear_has_biiicanfight();
}
inline bool VSLegionMemDetail::biiicanfight() const {
  return biiicanfight_;
}
inline void VSLegionMemDetail::set_biiicanfight(bool value) {
  set_has_biiicanfight();
  biiicanfight_ = value;
}

// required bool bIsNpc = 8;
inline bool VSLegionMemDetail::has_bisnpc() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void VSLegionMemDetail::set_has_bisnpc() {
  _has_bits_[0] |= 0x00000080u;
}
inline void VSLegionMemDetail::clear_has_bisnpc() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void VSLegionMemDetail::clear_bisnpc() {
  bisnpc_ = false;
  clear_has_bisnpc();
}
inline bool VSLegionMemDetail::bisnpc() const {
  return bisnpc_;
}
inline void VSLegionMemDetail::set_bisnpc(bool value) {
  set_has_bisnpc();
  bisnpc_ = value;
}

// -------------------------------------------------------------------

// CMD_LEGION_CAMPBATTLE_JOIN_CS

// required int32 iId = 1;
inline bool CMD_LEGION_CAMPBATTLE_JOIN_CS::has_iid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_LEGION_CAMPBATTLE_JOIN_CS::set_has_iid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_LEGION_CAMPBATTLE_JOIN_CS::clear_has_iid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_LEGION_CAMPBATTLE_JOIN_CS::clear_iid() {
  iid_ = 0;
  clear_has_iid();
}
inline ::google::protobuf::int32 CMD_LEGION_CAMPBATTLE_JOIN_CS::iid() const {
  return iid_;
}
inline void CMD_LEGION_CAMPBATTLE_JOIN_CS::set_iid(::google::protobuf::int32 value) {
  set_has_iid();
  iid_ = value;
}

// -------------------------------------------------------------------

// CMD_LEGION_CAMPBATTLE_JOIN_SC

// required bool bIsGuard = 1;
inline bool CMD_LEGION_CAMPBATTLE_JOIN_SC::has_bisguard() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_LEGION_CAMPBATTLE_JOIN_SC::set_has_bisguard() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_LEGION_CAMPBATTLE_JOIN_SC::clear_has_bisguard() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_LEGION_CAMPBATTLE_JOIN_SC::clear_bisguard() {
  bisguard_ = false;
  clear_has_bisguard();
}
inline bool CMD_LEGION_CAMPBATTLE_JOIN_SC::bisguard() const {
  return bisguard_;
}
inline void CMD_LEGION_CAMPBATTLE_JOIN_SC::set_bisguard(bool value) {
  set_has_bisguard();
  bisguard_ = value;
}

// repeated .GSProto.VSLegion szVSLegionList = 2;
inline int CMD_LEGION_CAMPBATTLE_JOIN_SC::szvslegionlist_size() const {
  return szvslegionlist_.size();
}
inline void CMD_LEGION_CAMPBATTLE_JOIN_SC::clear_szvslegionlist() {
  szvslegionlist_.Clear();
}
inline const ::GSProto::VSLegion& CMD_LEGION_CAMPBATTLE_JOIN_SC::szvslegionlist(int index) const {
  return szvslegionlist_.Get(index);
}
inline ::GSProto::VSLegion* CMD_LEGION_CAMPBATTLE_JOIN_SC::mutable_szvslegionlist(int index) {
  return szvslegionlist_.Mutable(index);
}
inline ::GSProto::VSLegion* CMD_LEGION_CAMPBATTLE_JOIN_SC::add_szvslegionlist() {
  return szvslegionlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::VSLegion >&
CMD_LEGION_CAMPBATTLE_JOIN_SC::szvslegionlist() const {
  return szvslegionlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::VSLegion >*
CMD_LEGION_CAMPBATTLE_JOIN_SC::mutable_szvslegionlist() {
  return &szvslegionlist_;
}

// optional .GSProto.VSLegion selfVsInfo = 3;
inline bool CMD_LEGION_CAMPBATTLE_JOIN_SC::has_selfvsinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_LEGION_CAMPBATTLE_JOIN_SC::set_has_selfvsinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_LEGION_CAMPBATTLE_JOIN_SC::clear_has_selfvsinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_LEGION_CAMPBATTLE_JOIN_SC::clear_selfvsinfo() {
  if (selfvsinfo_ != NULL) selfvsinfo_->::GSProto::VSLegion::Clear();
  clear_has_selfvsinfo();
}
inline const ::GSProto::VSLegion& CMD_LEGION_CAMPBATTLE_JOIN_SC::selfvsinfo() const {
  return selfvsinfo_ != NULL ? *selfvsinfo_ : *default_instance_->selfvsinfo_;
}
inline ::GSProto::VSLegion* CMD_LEGION_CAMPBATTLE_JOIN_SC::mutable_selfvsinfo() {
  set_has_selfvsinfo();
  if (selfvsinfo_ == NULL) selfvsinfo_ = new ::GSProto::VSLegion;
  return selfvsinfo_;
}
inline ::GSProto::VSLegion* CMD_LEGION_CAMPBATTLE_JOIN_SC::release_selfvsinfo() {
  clear_has_selfvsinfo();
  ::GSProto::VSLegion* temp = selfvsinfo_;
  selfvsinfo_ = NULL;
  return temp;
}
inline void CMD_LEGION_CAMPBATTLE_JOIN_SC::set_allocated_selfvsinfo(::GSProto::VSLegion* selfvsinfo) {
  delete selfvsinfo_;
  selfvsinfo_ = selfvsinfo;
  if (selfvsinfo) {
    set_has_selfvsinfo();
  } else {
    clear_has_selfvsinfo();
  }
}

// repeated .GSProto.VSLegionMemDetail szMemberList = 4;
inline int CMD_LEGION_CAMPBATTLE_JOIN_SC::szmemberlist_size() const {
  return szmemberlist_.size();
}
inline void CMD_LEGION_CAMPBATTLE_JOIN_SC::clear_szmemberlist() {
  szmemberlist_.Clear();
}
inline const ::GSProto::VSLegionMemDetail& CMD_LEGION_CAMPBATTLE_JOIN_SC::szmemberlist(int index) const {
  return szmemberlist_.Get(index);
}
inline ::GSProto::VSLegionMemDetail* CMD_LEGION_CAMPBATTLE_JOIN_SC::mutable_szmemberlist(int index) {
  return szmemberlist_.Mutable(index);
}
inline ::GSProto::VSLegionMemDetail* CMD_LEGION_CAMPBATTLE_JOIN_SC::add_szmemberlist() {
  return szmemberlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::VSLegionMemDetail >&
CMD_LEGION_CAMPBATTLE_JOIN_SC::szmemberlist() const {
  return szmemberlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::VSLegionMemDetail >*
CMD_LEGION_CAMPBATTLE_JOIN_SC::mutable_szmemberlist() {
  return &szmemberlist_;
}

// optional int32 iRemaindSecond = 5;
inline bool CMD_LEGION_CAMPBATTLE_JOIN_SC::has_iremaindsecond() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_LEGION_CAMPBATTLE_JOIN_SC::set_has_iremaindsecond() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_LEGION_CAMPBATTLE_JOIN_SC::clear_has_iremaindsecond() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_LEGION_CAMPBATTLE_JOIN_SC::clear_iremaindsecond() {
  iremaindsecond_ = 0;
  clear_has_iremaindsecond();
}
inline ::google::protobuf::int32 CMD_LEGION_CAMPBATTLE_JOIN_SC::iremaindsecond() const {
  return iremaindsecond_;
}
inline void CMD_LEGION_CAMPBATTLE_JOIN_SC::set_iremaindsecond(::google::protobuf::int32 value) {
  set_has_iremaindsecond();
  iremaindsecond_ = value;
}

// -------------------------------------------------------------------

// CMD_LEGION_CAMPBATTLE_ENTER_CS

// required int32 iCampId = 1;
inline bool CMD_LEGION_CAMPBATTLE_ENTER_CS::has_icampid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_LEGION_CAMPBATTLE_ENTER_CS::set_has_icampid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_LEGION_CAMPBATTLE_ENTER_CS::clear_has_icampid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_LEGION_CAMPBATTLE_ENTER_CS::clear_icampid() {
  icampid_ = 0;
  clear_has_icampid();
}
inline ::google::protobuf::int32 CMD_LEGION_CAMPBATTLE_ENTER_CS::icampid() const {
  return icampid_;
}
inline void CMD_LEGION_CAMPBATTLE_ENTER_CS::set_icampid(::google::protobuf::int32 value) {
  set_has_icampid();
  icampid_ = value;
}

// required string strVSLegionName = 2;
inline bool CMD_LEGION_CAMPBATTLE_ENTER_CS::has_strvslegionname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_LEGION_CAMPBATTLE_ENTER_CS::set_has_strvslegionname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_LEGION_CAMPBATTLE_ENTER_CS::clear_has_strvslegionname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_LEGION_CAMPBATTLE_ENTER_CS::clear_strvslegionname() {
  if (strvslegionname_ != &::google::protobuf::internal::kEmptyString) {
    strvslegionname_->clear();
  }
  clear_has_strvslegionname();
}
inline const ::std::string& CMD_LEGION_CAMPBATTLE_ENTER_CS::strvslegionname() const {
  return *strvslegionname_;
}
inline void CMD_LEGION_CAMPBATTLE_ENTER_CS::set_strvslegionname(const ::std::string& value) {
  set_has_strvslegionname();
  if (strvslegionname_ == &::google::protobuf::internal::kEmptyString) {
    strvslegionname_ = new ::std::string;
  }
  strvslegionname_->assign(value);
}
inline void CMD_LEGION_CAMPBATTLE_ENTER_CS::set_strvslegionname(const char* value) {
  set_has_strvslegionname();
  if (strvslegionname_ == &::google::protobuf::internal::kEmptyString) {
    strvslegionname_ = new ::std::string;
  }
  strvslegionname_->assign(value);
}
inline void CMD_LEGION_CAMPBATTLE_ENTER_CS::set_strvslegionname(const char* value, size_t size) {
  set_has_strvslegionname();
  if (strvslegionname_ == &::google::protobuf::internal::kEmptyString) {
    strvslegionname_ = new ::std::string;
  }
  strvslegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_LEGION_CAMPBATTLE_ENTER_CS::mutable_strvslegionname() {
  set_has_strvslegionname();
  if (strvslegionname_ == &::google::protobuf::internal::kEmptyString) {
    strvslegionname_ = new ::std::string;
  }
  return strvslegionname_;
}
inline ::std::string* CMD_LEGION_CAMPBATTLE_ENTER_CS::release_strvslegionname() {
  clear_has_strvslegionname();
  if (strvslegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strvslegionname_;
    strvslegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_LEGION_CAMPBATTLE_ENTER_CS::set_allocated_strvslegionname(::std::string* strvslegionname) {
  if (strvslegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strvslegionname_;
  }
  if (strvslegionname) {
    set_has_strvslegionname();
    strvslegionname_ = strvslegionname;
  } else {
    clear_has_strvslegionname();
    strvslegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_LEGION_CAMPBATTLE_BATTLE_CS

// required int32 iCampId = 1;
inline bool CMD_LEGION_CAMPBATTLE_BATTLE_CS::has_icampid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_LEGION_CAMPBATTLE_BATTLE_CS::set_has_icampid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_LEGION_CAMPBATTLE_BATTLE_CS::clear_has_icampid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_LEGION_CAMPBATTLE_BATTLE_CS::clear_icampid() {
  icampid_ = 0;
  clear_has_icampid();
}
inline ::google::protobuf::int32 CMD_LEGION_CAMPBATTLE_BATTLE_CS::icampid() const {
  return icampid_;
}
inline void CMD_LEGION_CAMPBATTLE_BATTLE_CS::set_icampid(::google::protobuf::int32 value) {
  set_has_icampid();
  icampid_ = value;
}

// required int32 iBattleId = 2;
inline bool CMD_LEGION_CAMPBATTLE_BATTLE_CS::has_ibattleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_LEGION_CAMPBATTLE_BATTLE_CS::set_has_ibattleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_LEGION_CAMPBATTLE_BATTLE_CS::clear_has_ibattleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_LEGION_CAMPBATTLE_BATTLE_CS::clear_ibattleid() {
  ibattleid_ = 0;
  clear_has_ibattleid();
}
inline ::google::protobuf::int32 CMD_LEGION_CAMPBATTLE_BATTLE_CS::ibattleid() const {
  return ibattleid_;
}
inline void CMD_LEGION_CAMPBATTLE_BATTLE_CS::set_ibattleid(::google::protobuf::int32 value) {
  set_has_ibattleid();
  ibattleid_ = value;
}

// required string strMemName = 3;
inline bool CMD_LEGION_CAMPBATTLE_BATTLE_CS::has_strmemname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_LEGION_CAMPBATTLE_BATTLE_CS::set_has_strmemname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_LEGION_CAMPBATTLE_BATTLE_CS::clear_has_strmemname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_LEGION_CAMPBATTLE_BATTLE_CS::clear_strmemname() {
  if (strmemname_ != &::google::protobuf::internal::kEmptyString) {
    strmemname_->clear();
  }
  clear_has_strmemname();
}
inline const ::std::string& CMD_LEGION_CAMPBATTLE_BATTLE_CS::strmemname() const {
  return *strmemname_;
}
inline void CMD_LEGION_CAMPBATTLE_BATTLE_CS::set_strmemname(const ::std::string& value) {
  set_has_strmemname();
  if (strmemname_ == &::google::protobuf::internal::kEmptyString) {
    strmemname_ = new ::std::string;
  }
  strmemname_->assign(value);
}
inline void CMD_LEGION_CAMPBATTLE_BATTLE_CS::set_strmemname(const char* value) {
  set_has_strmemname();
  if (strmemname_ == &::google::protobuf::internal::kEmptyString) {
    strmemname_ = new ::std::string;
  }
  strmemname_->assign(value);
}
inline void CMD_LEGION_CAMPBATTLE_BATTLE_CS::set_strmemname(const char* value, size_t size) {
  set_has_strmemname();
  if (strmemname_ == &::google::protobuf::internal::kEmptyString) {
    strmemname_ = new ::std::string;
  }
  strmemname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_LEGION_CAMPBATTLE_BATTLE_CS::mutable_strmemname() {
  set_has_strmemname();
  if (strmemname_ == &::google::protobuf::internal::kEmptyString) {
    strmemname_ = new ::std::string;
  }
  return strmemname_;
}
inline ::std::string* CMD_LEGION_CAMPBATTLE_BATTLE_CS::release_strmemname() {
  clear_has_strmemname();
  if (strmemname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmemname_;
    strmemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_LEGION_CAMPBATTLE_BATTLE_CS::set_allocated_strmemname(::std::string* strmemname) {
  if (strmemname_ != &::google::protobuf::internal::kEmptyString) {
    delete strmemname_;
  }
  if (strmemname) {
    set_has_strmemname();
    strmemname_ = strmemname;
  } else {
    clear_has_strmemname();
    strmemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iStar = 4;
inline bool CMD_LEGION_CAMPBATTLE_BATTLE_CS::has_istar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_LEGION_CAMPBATTLE_BATTLE_CS::set_has_istar() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_LEGION_CAMPBATTLE_BATTLE_CS::clear_has_istar() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_LEGION_CAMPBATTLE_BATTLE_CS::clear_istar() {
  istar_ = 0;
  clear_has_istar();
}
inline ::google::protobuf::int32 CMD_LEGION_CAMPBATTLE_BATTLE_CS::istar() const {
  return istar_;
}
inline void CMD_LEGION_CAMPBATTLE_BATTLE_CS::set_istar(::google::protobuf::int32 value) {
  set_has_istar();
  istar_ = value;
}

// -------------------------------------------------------------------

// LastFightLogItem

// required int32 iCampId = 1;
inline bool LastFightLogItem::has_icampid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LastFightLogItem::set_has_icampid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LastFightLogItem::clear_has_icampid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LastFightLogItem::clear_icampid() {
  icampid_ = 0;
  clear_has_icampid();
}
inline ::google::protobuf::int32 LastFightLogItem::icampid() const {
  return icampid_;
}
inline void LastFightLogItem::set_icampid(::google::protobuf::int32 value) {
  set_has_icampid();
  icampid_ = value;
}

// required bool bIsGuard = 2;
inline bool LastFightLogItem::has_bisguard() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LastFightLogItem::set_has_bisguard() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LastFightLogItem::clear_has_bisguard() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LastFightLogItem::clear_bisguard() {
  bisguard_ = false;
  clear_has_bisguard();
}
inline bool LastFightLogItem::bisguard() const {
  return bisguard_;
}
inline void LastFightLogItem::set_bisguard(bool value) {
  set_has_bisguard();
  bisguard_ = value;
}

// required bool bIsWin = 3;
inline bool LastFightLogItem::has_biswin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LastFightLogItem::set_has_biswin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LastFightLogItem::clear_has_biswin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LastFightLogItem::clear_biswin() {
  biswin_ = false;
  clear_has_biswin();
}
inline bool LastFightLogItem::biswin() const {
  return biswin_;
}
inline void LastFightLogItem::set_biswin(bool value) {
  set_has_biswin();
  biswin_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC

// repeated .GSProto.LastFightLogItem szFightLogList = 1;
inline int CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC::szfightloglist_size() const {
  return szfightloglist_.size();
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC::clear_szfightloglist() {
  szfightloglist_.Clear();
}
inline const ::GSProto::LastFightLogItem& CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC::szfightloglist(int index) const {
  return szfightloglist_.Get(index);
}
inline ::GSProto::LastFightLogItem* CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC::mutable_szfightloglist(int index) {
  return szfightloglist_.Mutable(index);
}
inline ::GSProto::LastFightLogItem* CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC::add_szfightloglist() {
  return szfightloglist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LastFightLogItem >&
CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC::szfightloglist() const {
  return szfightloglist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::LastFightLogItem >*
CMD_QUERY_CAMPBATTLE_LASTFIGHT_LOG_SC::mutable_szfightloglist() {
  return &szfightloglist_;
}

// -------------------------------------------------------------------

// CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS

// required int32 iCampId = 1;
inline bool CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS::has_icampid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS::set_has_icampid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS::clear_has_icampid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS::clear_icampid() {
  icampid_ = 0;
  clear_has_icampid();
}
inline ::google::protobuf::int32 CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS::icampid() const {
  return icampid_;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_CS::set_icampid(::google::protobuf::int32 value) {
  set_has_icampid();
  icampid_ = value;
}

// -------------------------------------------------------------------

// VSLegionBase

// repeated .GSProto.VSLegion szVSLegionList = 1;
inline int VSLegionBase::szvslegionlist_size() const {
  return szvslegionlist_.size();
}
inline void VSLegionBase::clear_szvslegionlist() {
  szvslegionlist_.Clear();
}
inline const ::GSProto::VSLegion& VSLegionBase::szvslegionlist(int index) const {
  return szvslegionlist_.Get(index);
}
inline ::GSProto::VSLegion* VSLegionBase::mutable_szvslegionlist(int index) {
  return szvslegionlist_.Mutable(index);
}
inline ::GSProto::VSLegion* VSLegionBase::add_szvslegionlist() {
  return szvslegionlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::VSLegion >&
VSLegionBase::szvslegionlist() const {
  return szvslegionlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::VSLegion >*
VSLegionBase::mutable_szvslegionlist() {
  return &szvslegionlist_;
}

// -------------------------------------------------------------------

// CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC

// required string strLegionName = 1;
inline bool CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC::has_strlegionname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC::set_has_strlegionname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC::clear_has_strlegionname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC::clear_strlegionname() {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    strlegionname_->clear();
  }
  clear_has_strlegionname();
}
inline const ::std::string& CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC::strlegionname() const {
  return *strlegionname_;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC::set_strlegionname(const ::std::string& value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC::set_strlegionname(const char* value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC::set_strlegionname(const char* value, size_t size) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC::mutable_strlegionname() {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  return strlegionname_;
}
inline ::std::string* CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC::release_strlegionname() {
  clear_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strlegionname_;
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC::set_allocated_strlegionname(::std::string* strlegionname) {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strlegionname_;
  }
  if (strlegionname) {
    set_has_strlegionname();
    strlegionname_ = strlegionname;
  } else {
    clear_has_strlegionname();
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .GSProto.VSLegionBase vsLegionMsg = 2;
inline bool CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC::has_vslegionmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC::set_has_vslegionmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC::clear_has_vslegionmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC::clear_vslegionmsg() {
  if (vslegionmsg_ != NULL) vslegionmsg_->::GSProto::VSLegionBase::Clear();
  clear_has_vslegionmsg();
}
inline const ::GSProto::VSLegionBase& CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC::vslegionmsg() const {
  return vslegionmsg_ != NULL ? *vslegionmsg_ : *default_instance_->vslegionmsg_;
}
inline ::GSProto::VSLegionBase* CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC::mutable_vslegionmsg() {
  set_has_vslegionmsg();
  if (vslegionmsg_ == NULL) vslegionmsg_ = new ::GSProto::VSLegionBase;
  return vslegionmsg_;
}
inline ::GSProto::VSLegionBase* CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC::release_vslegionmsg() {
  clear_has_vslegionmsg();
  ::GSProto::VSLegionBase* temp = vslegionmsg_;
  vslegionmsg_ = NULL;
  return temp;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_SIMPLELOG_SC::set_allocated_vslegionmsg(::GSProto::VSLegionBase* vslegionmsg) {
  delete vslegionmsg_;
  vslegionmsg_ = vslegionmsg;
  if (vslegionmsg) {
    set_has_vslegionmsg();
  } else {
    clear_has_vslegionmsg();
  }
}

// -------------------------------------------------------------------

// CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS

// required int32 iCampId = 1;
inline bool CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS::has_icampid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS::set_has_icampid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS::clear_has_icampid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS::clear_icampid() {
  icampid_ = 0;
  clear_has_icampid();
}
inline ::google::protobuf::int32 CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS::icampid() const {
  return icampid_;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS::set_icampid(::google::protobuf::int32 value) {
  set_has_icampid();
  icampid_ = value;
}

// required string strAttLegionName = 2;
inline bool CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS::has_strattlegionname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS::set_has_strattlegionname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS::clear_has_strattlegionname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS::clear_strattlegionname() {
  if (strattlegionname_ != &::google::protobuf::internal::kEmptyString) {
    strattlegionname_->clear();
  }
  clear_has_strattlegionname();
}
inline const ::std::string& CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS::strattlegionname() const {
  return *strattlegionname_;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS::set_strattlegionname(const ::std::string& value) {
  set_has_strattlegionname();
  if (strattlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strattlegionname_ = new ::std::string;
  }
  strattlegionname_->assign(value);
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS::set_strattlegionname(const char* value) {
  set_has_strattlegionname();
  if (strattlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strattlegionname_ = new ::std::string;
  }
  strattlegionname_->assign(value);
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS::set_strattlegionname(const char* value, size_t size) {
  set_has_strattlegionname();
  if (strattlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strattlegionname_ = new ::std::string;
  }
  strattlegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS::mutable_strattlegionname() {
  set_has_strattlegionname();
  if (strattlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strattlegionname_ = new ::std::string;
  }
  return strattlegionname_;
}
inline ::std::string* CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS::release_strattlegionname() {
  clear_has_strattlegionname();
  if (strattlegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strattlegionname_;
    strattlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_CS::set_allocated_strattlegionname(::std::string* strattlegionname) {
  if (strattlegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strattlegionname_;
  }
  if (strattlegionname) {
    set_has_strattlegionname();
    strattlegionname_ = strattlegionname;
  } else {
    clear_has_strattlegionname();
    strattlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// FightRecord

// required string strSelfName = 1;
inline bool FightRecord::has_strselfname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightRecord::set_has_strselfname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightRecord::clear_has_strselfname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightRecord::clear_strselfname() {
  if (strselfname_ != &::google::protobuf::internal::kEmptyString) {
    strselfname_->clear();
  }
  clear_has_strselfname();
}
inline const ::std::string& FightRecord::strselfname() const {
  return *strselfname_;
}
inline void FightRecord::set_strselfname(const ::std::string& value) {
  set_has_strselfname();
  if (strselfname_ == &::google::protobuf::internal::kEmptyString) {
    strselfname_ = new ::std::string;
  }
  strselfname_->assign(value);
}
inline void FightRecord::set_strselfname(const char* value) {
  set_has_strselfname();
  if (strselfname_ == &::google::protobuf::internal::kEmptyString) {
    strselfname_ = new ::std::string;
  }
  strselfname_->assign(value);
}
inline void FightRecord::set_strselfname(const char* value, size_t size) {
  set_has_strselfname();
  if (strselfname_ == &::google::protobuf::internal::kEmptyString) {
    strselfname_ = new ::std::string;
  }
  strselfname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FightRecord::mutable_strselfname() {
  set_has_strselfname();
  if (strselfname_ == &::google::protobuf::internal::kEmptyString) {
    strselfname_ = new ::std::string;
  }
  return strselfname_;
}
inline ::std::string* FightRecord::release_strselfname() {
  clear_has_strselfname();
  if (strselfname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strselfname_;
    strselfname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FightRecord::set_allocated_strselfname(::std::string* strselfname) {
  if (strselfname_ != &::google::protobuf::internal::kEmptyString) {
    delete strselfname_;
  }
  if (strselfname) {
    set_has_strselfname();
    strselfname_ = strselfname;
  } else {
    clear_has_strselfname();
    strselfname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strenemyLegionName = 2;
inline bool FightRecord::has_strenemylegionname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightRecord::set_has_strenemylegionname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightRecord::clear_has_strenemylegionname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightRecord::clear_strenemylegionname() {
  if (strenemylegionname_ != &::google::protobuf::internal::kEmptyString) {
    strenemylegionname_->clear();
  }
  clear_has_strenemylegionname();
}
inline const ::std::string& FightRecord::strenemylegionname() const {
  return *strenemylegionname_;
}
inline void FightRecord::set_strenemylegionname(const ::std::string& value) {
  set_has_strenemylegionname();
  if (strenemylegionname_ == &::google::protobuf::internal::kEmptyString) {
    strenemylegionname_ = new ::std::string;
  }
  strenemylegionname_->assign(value);
}
inline void FightRecord::set_strenemylegionname(const char* value) {
  set_has_strenemylegionname();
  if (strenemylegionname_ == &::google::protobuf::internal::kEmptyString) {
    strenemylegionname_ = new ::std::string;
  }
  strenemylegionname_->assign(value);
}
inline void FightRecord::set_strenemylegionname(const char* value, size_t size) {
  set_has_strenemylegionname();
  if (strenemylegionname_ == &::google::protobuf::internal::kEmptyString) {
    strenemylegionname_ = new ::std::string;
  }
  strenemylegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FightRecord::mutable_strenemylegionname() {
  set_has_strenemylegionname();
  if (strenemylegionname_ == &::google::protobuf::internal::kEmptyString) {
    strenemylegionname_ = new ::std::string;
  }
  return strenemylegionname_;
}
inline ::std::string* FightRecord::release_strenemylegionname() {
  clear_has_strenemylegionname();
  if (strenemylegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strenemylegionname_;
    strenemylegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FightRecord::set_allocated_strenemylegionname(::std::string* strenemylegionname) {
  if (strenemylegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strenemylegionname_;
  }
  if (strenemylegionname) {
    set_has_strenemylegionname();
    strenemylegionname_ = strenemylegionname;
  } else {
    clear_has_strenemylegionname();
    strenemylegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strenemyName = 3;
inline bool FightRecord::has_strenemyname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightRecord::set_has_strenemyname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightRecord::clear_has_strenemyname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightRecord::clear_strenemyname() {
  if (strenemyname_ != &::google::protobuf::internal::kEmptyString) {
    strenemyname_->clear();
  }
  clear_has_strenemyname();
}
inline const ::std::string& FightRecord::strenemyname() const {
  return *strenemyname_;
}
inline void FightRecord::set_strenemyname(const ::std::string& value) {
  set_has_strenemyname();
  if (strenemyname_ == &::google::protobuf::internal::kEmptyString) {
    strenemyname_ = new ::std::string;
  }
  strenemyname_->assign(value);
}
inline void FightRecord::set_strenemyname(const char* value) {
  set_has_strenemyname();
  if (strenemyname_ == &::google::protobuf::internal::kEmptyString) {
    strenemyname_ = new ::std::string;
  }
  strenemyname_->assign(value);
}
inline void FightRecord::set_strenemyname(const char* value, size_t size) {
  set_has_strenemyname();
  if (strenemyname_ == &::google::protobuf::internal::kEmptyString) {
    strenemyname_ = new ::std::string;
  }
  strenemyname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FightRecord::mutable_strenemyname() {
  set_has_strenemyname();
  if (strenemyname_ == &::google::protobuf::internal::kEmptyString) {
    strenemyname_ = new ::std::string;
  }
  return strenemyname_;
}
inline ::std::string* FightRecord::release_strenemyname() {
  clear_has_strenemyname();
  if (strenemyname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strenemyname_;
    strenemyname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FightRecord::set_allocated_strenemyname(::std::string* strenemyname) {
  if (strenemyname_ != &::google::protobuf::internal::kEmptyString) {
    delete strenemyname_;
  }
  if (strenemyname) {
    set_has_strenemyname();
    strenemyname_ = strenemyname;
  } else {
    clear_has_strenemyname();
    strenemyname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iGetStarCount = 4;
inline bool FightRecord::has_igetstarcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FightRecord::set_has_igetstarcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FightRecord::clear_has_igetstarcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FightRecord::clear_igetstarcount() {
  igetstarcount_ = 0;
  clear_has_igetstarcount();
}
inline ::google::protobuf::int32 FightRecord::igetstarcount() const {
  return igetstarcount_;
}
inline void FightRecord::set_igetstarcount(::google::protobuf::int32 value) {
  set_has_igetstarcount();
  igetstarcount_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC

// required .GSProto.VSLegion vsLegion = 1;
inline bool CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::has_vslegion() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::set_has_vslegion() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::clear_has_vslegion() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::clear_vslegion() {
  if (vslegion_ != NULL) vslegion_->::GSProto::VSLegion::Clear();
  clear_has_vslegion();
}
inline const ::GSProto::VSLegion& CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::vslegion() const {
  return vslegion_ != NULL ? *vslegion_ : *default_instance_->vslegion_;
}
inline ::GSProto::VSLegion* CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::mutable_vslegion() {
  set_has_vslegion();
  if (vslegion_ == NULL) vslegion_ = new ::GSProto::VSLegion;
  return vslegion_;
}
inline ::GSProto::VSLegion* CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::release_vslegion() {
  clear_has_vslegion();
  ::GSProto::VSLegion* temp = vslegion_;
  vslegion_ = NULL;
  return temp;
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::set_allocated_vslegion(::GSProto::VSLegion* vslegion) {
  delete vslegion_;
  vslegion_ = vslegion;
  if (vslegion) {
    set_has_vslegion();
  } else {
    clear_has_vslegion();
  }
}

// repeated .GSProto.FightRecord selfFightRecord = 2;
inline int CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::selffightrecord_size() const {
  return selffightrecord_.size();
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::clear_selffightrecord() {
  selffightrecord_.Clear();
}
inline const ::GSProto::FightRecord& CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::selffightrecord(int index) const {
  return selffightrecord_.Get(index);
}
inline ::GSProto::FightRecord* CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::mutable_selffightrecord(int index) {
  return selffightrecord_.Mutable(index);
}
inline ::GSProto::FightRecord* CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::add_selffightrecord() {
  return selffightrecord_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightRecord >&
CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::selffightrecord() const {
  return selffightrecord_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightRecord >*
CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::mutable_selffightrecord() {
  return &selffightrecord_;
}

// repeated .GSProto.FightRecord enemyFightRecod = 3;
inline int CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::enemyfightrecod_size() const {
  return enemyfightrecod_.size();
}
inline void CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::clear_enemyfightrecod() {
  enemyfightrecod_.Clear();
}
inline const ::GSProto::FightRecord& CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::enemyfightrecod(int index) const {
  return enemyfightrecod_.Get(index);
}
inline ::GSProto::FightRecord* CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::mutable_enemyfightrecod(int index) {
  return enemyfightrecod_.Mutable(index);
}
inline ::GSProto::FightRecord* CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::add_enemyfightrecod() {
  return enemyfightrecod_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightRecord >&
CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::enemyfightrecod() const {
  return enemyfightrecod_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightRecord >*
CMD_QUERY_CAMPBATTLE_LASTFIGHT_DETAIL_LOG_SC::mutable_enemyfightrecod() {
  return &enemyfightrecod_;
}

// -------------------------------------------------------------------

// CMD_QUERY_CUR_FIGHT_CONDITION_CS

// required int32 iCampId = 1;
inline bool CMD_QUERY_CUR_FIGHT_CONDITION_CS::has_icampid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_CUR_FIGHT_CONDITION_CS::set_has_icampid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_CUR_FIGHT_CONDITION_CS::clear_has_icampid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_CUR_FIGHT_CONDITION_CS::clear_icampid() {
  icampid_ = 0;
  clear_has_icampid();
}
inline ::google::protobuf::int32 CMD_QUERY_CUR_FIGHT_CONDITION_CS::icampid() const {
  return icampid_;
}
inline void CMD_QUERY_CUR_FIGHT_CONDITION_CS::set_icampid(::google::protobuf::int32 value) {
  set_has_icampid();
  icampid_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_CUR_FIGHT_CONDITION_SC

// repeated .GSProto.VSLegion szVSLegionList = 1;
inline int CMD_QUERY_CUR_FIGHT_CONDITION_SC::szvslegionlist_size() const {
  return szvslegionlist_.size();
}
inline void CMD_QUERY_CUR_FIGHT_CONDITION_SC::clear_szvslegionlist() {
  szvslegionlist_.Clear();
}
inline const ::GSProto::VSLegion& CMD_QUERY_CUR_FIGHT_CONDITION_SC::szvslegionlist(int index) const {
  return szvslegionlist_.Get(index);
}
inline ::GSProto::VSLegion* CMD_QUERY_CUR_FIGHT_CONDITION_SC::mutable_szvslegionlist(int index) {
  return szvslegionlist_.Mutable(index);
}
inline ::GSProto::VSLegion* CMD_QUERY_CUR_FIGHT_CONDITION_SC::add_szvslegionlist() {
  return szvslegionlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::VSLegion >&
CMD_QUERY_CUR_FIGHT_CONDITION_SC::szvslegionlist() const {
  return szvslegionlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::VSLegion >*
CMD_QUERY_CUR_FIGHT_CONDITION_SC::mutable_szvslegionlist() {
  return &szvslegionlist_;
}

// -------------------------------------------------------------------

// CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS

// required int32 iCampId = 1;
inline bool CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS::has_icampid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS::set_has_icampid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS::clear_has_icampid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS::clear_icampid() {
  icampid_ = 0;
  clear_has_icampid();
}
inline ::google::protobuf::int32 CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS::icampid() const {
  return icampid_;
}
inline void CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS::set_icampid(::google::protobuf::int32 value) {
  set_has_icampid();
  icampid_ = value;
}

// required string strAttLegionName = 2;
inline bool CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS::has_strattlegionname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS::set_has_strattlegionname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS::clear_has_strattlegionname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS::clear_strattlegionname() {
  if (strattlegionname_ != &::google::protobuf::internal::kEmptyString) {
    strattlegionname_->clear();
  }
  clear_has_strattlegionname();
}
inline const ::std::string& CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS::strattlegionname() const {
  return *strattlegionname_;
}
inline void CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS::set_strattlegionname(const ::std::string& value) {
  set_has_strattlegionname();
  if (strattlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strattlegionname_ = new ::std::string;
  }
  strattlegionname_->assign(value);
}
inline void CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS::set_strattlegionname(const char* value) {
  set_has_strattlegionname();
  if (strattlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strattlegionname_ = new ::std::string;
  }
  strattlegionname_->assign(value);
}
inline void CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS::set_strattlegionname(const char* value, size_t size) {
  set_has_strattlegionname();
  if (strattlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strattlegionname_ = new ::std::string;
  }
  strattlegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS::mutable_strattlegionname() {
  set_has_strattlegionname();
  if (strattlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strattlegionname_ = new ::std::string;
  }
  return strattlegionname_;
}
inline ::std::string* CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS::release_strattlegionname() {
  clear_has_strattlegionname();
  if (strattlegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strattlegionname_;
    strattlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_QUERY_CUR_FIGHT_LEGION_LOG_CS::set_allocated_strattlegionname(::std::string* strattlegionname) {
  if (strattlegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strattlegionname_;
  }
  if (strattlegionname) {
    set_has_strattlegionname();
    strattlegionname_ = strattlegionname;
  } else {
    clear_has_strattlegionname();
    strattlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace GSProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::GameServerCMD_Ext>() {
  return ::GSProto::GameServerCMD_Ext_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::enCampState>() {
  return ::GSProto::enCampState_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GameServerExt_2eproto__INCLUDED
