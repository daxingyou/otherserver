// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameServer.proto

#ifndef PROTOBUF_GameServer_2eproto__INCLUDED
#define PROTOBUF_GameServer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace GSProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GameServer_2eproto();
void protobuf_AssignDesc_GameServer_2eproto();
void protobuf_ShutdownFile_GameServer_2eproto();

class SCMessage;
class CSMessage;
class Cmd_Sc_Error;
class Cmd_Cs_Alogin;
class CMD_REQUEST_REFRESHGOLD_CS;
class Cmd_Sc_Alogin;
class Cmd_Sc_GetRole;
class RoleBase;
class Cmd_Sc_HeroList;
class Cmd_Sc_HeroUpdate;
class Cmd_Sc_HeroDel;
class Cmd_Cs_GetHeroDesc;
class SkillInfo;
class Cmd_Sc_GetHeroDesc;
class HeroTallent;
class HeroFavoriteDesc;
class HeroBaseData;
class Cmd_Cs_NewRole;
class Cmd_Sc_NewRole;
class Cmd_Sc_Kickoff;
class Cmd_Cs_CheckActorName;
class Cmd_Sc_CheckActorName;
class FormationItemData;
class Cmd_Sc_FormationData;
class Cmd_Cs_FormationChg;
class Cmd_Cs_GmMsg;
class FightHero;
class FightMonster;
class FightGodAnimal;
class FightObj;
class ReplaceMemberAction;
class FightSkillAction;
class FightResulSet;
class FightResult;
class FightZiBaoResult;
class FightSyncHPResult;
class FightCreateItemResult;
class FightUseActorSkillResult;
class FightAddBuffResult;
class FightDelBuffResult;
class ReliveResult;
class FightPropChgResult;
class FightSkillDamageResult;
class FightBackDamageResult;
class FightAction;
class DialogAction;
class FightDelBuffAction;
class FightHead;
class FightDataAll;
class Cmd_Sc_FightMember;
class Cmd_Sc_FightAction;
class ItemInfo;
class Cmd_Sc_BagData;
class BagChgInfo;
class Cmd_Sc_BagChg;
class DungeonSection;
class Cmd_Sc_DungeonSectionList;
class DungeonSceneDetail;
class Cmd_Cs_QueryDSectionDetail;
class Cmd_Sc_QueryDSectionDetail;
class Cmd_Sc_SectionUpdate;
class FightAwardItem;
class AwardPay;
class PropItem;
class Cmd_Sc_AttChg;
class FightAwardHero;
class FightAwardResult;
class HeroExpAwardDetail;
class Cmd_Sc_CommFightResult;
class CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC;
class CMD_EQUIPDUNGEON_FP_CS;
class CMD_EQUIPDUNGEON_FP_SC;
class Cmd_Cs_DungeonFight;
class Cmd_Cs_GetSectionAward;
class CMD_GET_SECTION_AWARD_SC;
class Cmd_Sc_ActorLevelUp;
class CMD_ACTOR_VIPLEVELUP_SC;
class FightSoulItem;
class FightSoulPracticeStatus;
class Cmd_Sc_FightSoulBag;
class Cmd_Cs_MoveFightSoul;
class FightSoulChgItem;
class Cmd_Sc_ChgFsContainer;
class Cmd_Sc_FightSoulPractice;
class Cmd_Cs_FightSoulLock;
class CMD_HERO_CONVERT_CS;
class CMD_HERO_CONVERT_SC;
class ConfirmMsg;
class Cmd_Sc_CommDlg;
class Cmd_Cs_HyperLink;
class Cmd_Cs_QueryHeroLevelInfo;
class HeroLevelUpInfo;
class Cmd_Sc_QueryHeroLevelInfo;
class Cmd_Cs_HeroLevelUp;
class Cmd_Sc_HeroLevelUp;
class NoticeHeroList;
class Cmd_Cs_ItemUse;
class CMD_ITEM_USE_SC;
class Cmd_Cs_QueryHeroFightSoul;
class Cmd_Sc_QueryHeroFightSoul;
class Cmd_Cs_QueryHeroTip;
class Cmd_Sc_QueryHeroTip;
class GoldAnimalDetail;
class Cmd_Sc_GoldAnimalTrain;
class Cmd_Cs_GoldAnimalActive;
class Cmd_Sc_GoldAnimalActive;
class GoldAnimalRoleBase;
class ConsumeItem;
class GoldAnimalLevelStepInfo;
class Cmd_Cs_ExeLevelStepUp;
class CMD_HERO_LEVELSTEPUP_CS;
class Cmd_Cs_FightSoulExchange;
class PBPkRole;
class MaidSelfInfo;
class MaidOtherInfo;
class PlayerBase;
class CMD_QUERY_HEROPROGRESS_CS;
class CMD_QUERY_HEROPROGRESS_SC;
class LegionListItem;
class CMD_QUERY_LEGIONLIST_CS;
class CMD_QUERY_LEGIONLIST_SC;
class CMD_APPJOIN_LEGION_CS;
class CMD_APPJOIN_LEGION_SC;
class CMD_CREATE_LEGION_CS;
class LegionBaseInfo;
class CMD_QUERY_LEGION_BASE_SC;
class LegionMember;
class CMD_QUERY_LEGION_MEMBERLIST_SC;
class LegionAppItem;
class CMD_QUERY_LEGION_APP_SC;
class CMD_MODIFY_LEGION_SETTING_CS;
class CMD_DEAL_LEGIONAPP_CS;
class CMD_DEAL_LEGIONAPP_SC;
class CMD_KICK_LEGIONMEMBER_CS;
class CMD_KICK_LEGIONMEMBER_SC;
class CMD_TRANSFER_LEGIONLEADER_CS;
class CMD_TRANSFER_LEGIONLEADER_SC;
class CMD_QUERY_LELGION_CONTRIBUTE_SC;
class CMD_QUERY_OTHERLEGION_CS;
class OtherLegionInfo;
class CMD_QUERY_OTHERLEGION_SC;
class CMD_LEGION_CONTRIBUTE_CS;
class CMD_LEGION_CONTRIBUTE_SC;
class CMD_LEGION_BLESS_CS;
class CMD_LEGION_BLESS_SC;
class LegionPay;
class CMD_QUERY_LEGIONPAY_SC;
class CMD_GET_LEGIONPAY_CS;
class CMD_GET_LEGIONPAY_SC;
class GoodDetail;
class CMD_OPEN_LEGIONSHOP_SC;
class CMD_SELECT_LEGIONSHOP_CS;
class CMD_CHANNEL_CHAT_CS;
class CMD_CHANNEL_CHAT_SC;
class CMD_WHISPER_CS;
class CMD_WHISPER_SC;
class LegionBossRankItem;
class LegionBossPreCall;
class LegionBossFightInfo;
class CMD_QUERY_LEGIONBOSS_SC;
class CMD_LEGIONBOSS_END_SC;
class CMD_CALL_LEGIONBOSS_SC;
class CMD_CHEER_LEGIONBOSS_SC;
class LegionBossUpdate;
class CMD_UPDATE_LEGIONBOSS_SC;
class WorldBossRankItem;
class WorldBossPreStart;
class WorldBossFightInfo;
class CMD_QUERY_WORLDBOSS_SC;
class WorldBossUpdate;
class CMD_UPDATE_WORLDBOSS_SC;
class CMD_WORLDBOSS_END_SC;
class CMD_CHEER_WORLDBOSS_SC;
class ClimbTowerDatail;
class CMD_QUERY_CLIMBTOWERDETAIL_SC;
class CMD_CHALLENGE_TOWER_CS;
class CMD_FAST_CHALLENGE_TOWER_CS;
class CMD_TOWER_FAST_CHALLENGE_RESOULT_SC;
class LegionBattleCityBase;
class BattleLegionReportItem;
class BattleReportLegionInfo;
class LegionBattleReported;
class LegionBattleRecordItem;
class LegionBattleRecordPage;
class LegionFightStateItem;
class LegionFightState;
class LegionFightSelfState;
class LegionBattlePage;
class CMD_QUERY_LEGIONBATTLE_SC;
class LegionCityOwnerItem;
class CMD_QUERY_BATTLEOWNER_SC;
class LegionCityReportState;
class CMD_QUERY_LEGIONBATTLE_REPORT_CS;
class CMD_QUERY_LEGIONBATTLE_REPORT_SC;
class LegionLastBattleMsg;
class CMD_QUERY_LASTBATTLE_LIST_SC;
class CMD_QUERY_SINGLE_LASTBATTLE_CS;
class LegionLastBattlePage;
class CMD_QUERY_SINGLE_LASTBATTLE_SC;
class CMD_REPORT_LEGIONBATTLE_CS;
class CMD_REPORT_LEGIONBATTLE_SC;
class CMD_JOIN_LEGIONBATTLE_SC;
class CMD_QUERY_CURBATTLE_PAGE_SC;
class CMD_ADD_CURBATTLE_RECORD_SC;
class CMD_UPDATE_CURBATTLE_SELFINFO_SC;
class CMD_UPDATE_CURBATTLE_LEGIONINFO_SC;
class LegionBattleSelfRecordItem;
class CMD_QUERY_CURBATTLE_SELFRECORD_SC;
class CMD_QUERY_LASTBATTLE_SELFRECORD_CS;
class CMD_QUERY_LASTBATTLE_SELFRECORD_SC;
class CMD_COMM_QUERYBATTLE_CS;
class HonorRankItem;
class CMD_QUERY_CURBATTLE_HONORRANK_SC;
class CMD_QUERY_LASTBATTLE_HONORRANK_CS;
class CMD_QUERY_LASTBATTLE_HONORRANK_SC;
class CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS;
class CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC;
class GiftCustomBody;
class GiftItem;
class CMD_QUERY_GIFT_SC;
class CMD_GET_GIFT_CS;
class CMD_GET_GIFT_SC;
class CMD_CANCEL_LEGIONAPP_CS;
class CMD_CANCEL_LEGIONAPP_SC;
class ArenaPlayer;
class ArenaChallengeInfo;
class ArenaAppendInfo;
class CMD_OPEN_ARENA_SC;
class ArenaAwardItem;
class CMD_QUERY_ARENA_AWARD_SC;
class CMD_GET_ARENA_AWARD_CS;
class CMD_GET_ARENA_AWARD_SC;
class ArenaRankItem;
class CMD_QUERY_ARENA_RANK_SC;
class ArenaLogItem;
class CMD_QUERY_ARENA_LOG_SC;
class CMD_ARENA_FIGHT_CS;
class RankNodeInfo;
class CampBattlePlayerDetail;
class RemaindTime;
class CMD_CAMPBATTLE_OPEN_SC;
class CampBattleReport;
class CMD_CAMPBATTLE_BATTLE_LOG_SC;
class CMD_CAMPBATTLE_REFREASH_RANKLIST_SC;
class CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC;
class CMD_CAMPBATTLE_REFREASH_TIME_SC;
class CMD_CMAPBATTLE_SYSTEM_CLOSE_SC;
class FriendNodeInfo;
class FriendPhyStrengthDetail;
class CMD_FRIENDSYSTEM_QUERY_SC;
class CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS;
class CMD_FRIENDSYSTEM_DELETE_FRIEND_CS;
class CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC;
class CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS;
class CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC;
class CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC;
class CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS;
class CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC;
class CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS;
class CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC;
class CMD_FRIENDSYSTEM_REQUEST_CS;
class CMD_USENAME_FINED_ACTOR_INFO_CS;
class CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS;
class ActorInfoDetail;
class CMD_FINED_ACTOR_INFO_SC;
class CMD_ATT_COMEUP_SC;
class CMD_MARQUEE_SC;
class CMD_HERO_SANGONG_CS;
class CMD_HERO_SANGONG_SC;
class CMD_QUERY_ACTORINFO_SC;
class CMD_NOTIFY_GUIDE_SC;
class CMD_GUIDE_FINISH_CS;
class TaskDetail;
class CMD_TASK_QUERY_TASKINFO_CS;
class MonthCardInfo;
class CMD_TASK_QUERY_TASKINFO_SC;
class CMD_TASK_GET_REWARD_CS;
class CMD_FIGHT_USEACTORSKILL_CS;
class CMD_FIGHT_USEACTORSKILL_SC;
class GodAnimalSoulUnit;
class CMD_GODANIMAL_ANIMALSOUL_QUERY_SC;
class CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS;
class CMD_GODANIMAL_ANIMALSOUL_SELL_CS;
class CMD_NEWPASS_SECTION_SC;
class CMD_HEROSYSTEM_SELLHERO_CS;
class EquipInfo;
class EquipSuitState;
class CMD_HERO_COVERT_OPEN_SC;
class CMD_EQUIP_BAG_SC;
class CMD_EQUIP_SUITSTATE_UPDATE_SC;
class CMD_QUERY_HEROEQUIP_CS;
class CMD_QUERY_HEROEQUIP_SC;
class EquipChgItem;
class CMD_EQUIP_MOVE_CS;
class CMD_EQUIPCONTAINER_CHG_SC;
class CMD_EQUIP_SELLBYPOS_CS;
class CMD_EQUIP_SELLBYQUALITY_CS;
class CMD_EQUIP_COMBINE_CS;
class CMD_QUERY_EQUIPDESC_BYID_CS;
class CMD_QUERY_EQUIPDESC_BYID_SC;
class CMD_QUERY_EQUIPSOURCE_CS;
class EquipSource;
class CMD_QUERY_EQUIPSOURCE_SC;
class CMD_DELETE_HEROS_SC;
class CMD_EQUIP_QUERYENHANCE_CS;
class CMD_EQUIP_QUERYENHANCE_SC;
class CMD_EQUIP_ENHANCE_CS;
class CMD_EQUIP_ENHANCE_SC;
class CMD_EQUIP_CHIPSELL_CS;
class CMD_EQUIP_CHIPCOMBINE_CS;
class CMD_DUNGEON_SAODANG_CS;
class CMD_DUNGEON_SAODANG_SC;
class MailDetail;
class MailShotDesc;
class CMD_QUERY_MAILLIST_SC;
class CMD_QUERY_MAILDESC_CS;
class CMD_GET_MAILAWARD_CS;
class CMD_GET_MAILAWARD_SC;
class CMD_QUERY_MAILDESC_SC;
class CMD_DREAMLAND_QUERY_SCENEINFO_CS;
class CMD_DREAMLAND_OPEN_REQSECTON_SC;
class SceneDetail;
class CMD_DREAMLAND_QUERY_SCENEINFO_SC;
class DreamLandFormation;
class DreamLandHeroInfo;
class CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC;
class CMD_DREAMLAND_REQUEST_OPENBOX_CS;
class DreamRewardHero;
class CMD_DREAMLAND_REQUEST_OPENBOX_SC;
class CMD_DREAMLAND_QUERY_BOX_CS;
class CMD_DREAMLAND_QUERY_BOX_SC;
class CMD_DREAMLAND_FORMATION_CHG_CS;
class CMD_DREAMLAND_REQUEST_FIGHT_CS;
class CMD_DREAMLAND_QUERY_SCENEFORMATION_CS;
class DreamLandFormationItem;
class CMD_DREAMLAND_QUERY_SCENEFORMATION_SC;
class HeroLevelStepState;
class CMD_HERO_LEVELSTEPUP_SC;
class HeroSoulChg;
class CMD_HERO_SOULCHG_SC;
class CMD_HERO_TALLENT_LEVELUP_CS;
class CMD_HERO_TALLENT_UPDATE_SC;
class CMD_ITEM_SELLITEM_CS;
class GodAnimalLevelStepState;
class CMD_GODANIMAL_EXELEVELSTEPUP_SC;
class CMD_COMMON_GETHERO_SC;
class CMD_CHG_ACTOR_HEAD_CS;
class CMD_EQUIP_RONGLIAN_CS;
class CMD_EQUIP_RONGLIAN_SC;
class CMD_EQUIP_XILIAN_DATA_SC;
class CMD_EQUIP_XILIAN_GEN_CS;
class CMD_EQUIP_XILIAN_GEN_SC;
class CMD_EQUIP_XILIAN_REPLACE_CS;
class CMD_EQUIP_XILIAN_REPLACE_SC;
class CMD_EQUIP_XILIAN_TRANSFER_CS;
class CMD_EQUIP_XILIAN_BUYLOCK_CS;
class CMD_EQUIP_XILIAN_BUYLOCK_SC;
class CMD_EQUIP_XILIAN_TRANSFER_SC;
class ManorResDetail;
class CMD_MANOR_QUERY_SC;
class CMD_MANOR_RES_USE_GOLD_LEVELUP_CS;
class CMD_MANOR_RES_COMMON_LEVELUP_CS;
class MonerHeroSoulDetail;
class ManorHeroSoulBox;
class CMD_MANOR_WUHUNDIAN_QUERY_SC;
class CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS;
class ManorTieJiangPuItemDetail;
class ManorTieJiangPuItemBox;
class CMD_MANOR_TIEJIANGPU_QUERY_SC;
class CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS;
class ManorLootLog;
class CMD_MANOR_QUERY_LOG_SC;
class CMD_MANOR_REVENGE_CS;
class BeLootActorInfo;
class ManorEnemyHeroFormation;
class OtherManorResDetail;
class CMD_MANOR_REQUEST_LOOT_SC;
class CMD_MANOR_REQUEST_LOOT_BATTLE_CS;
class CMD_HERO_CALLHERO_CS;
class CMD_HERO_CALLHERO_SC;
class CMD_HERO_EQUIP_FAVORITE_CS;
class CMD_HERO_EQUIP_FAVORITE_SC;
class CMD_HERO_COMBINE_FAVORITE_CS;
class CMD_HERO_COMBINE_FAVORITE_SC;
class CMD_HERO_QUALITY_UP_CS;
class CMD_HERO_QUALITY_UP_SC;
class CMD_SHOPSYSTEM_RANDITEMORHERO_CS;
class RandReturnUnit;
class CMD_SHOPSYSTEM_RANDITEMORHERO_SC;
class HonerGoodDetail;
class CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC;
class CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS;
class CMD_QUERY_SANGONG_CS;
class CMD_QUERY_SANGONG_SC;
class CMD_CHAT_CHANNEL_QUERY_SC;
class CMD_COINTREE_SHAKE_QUERY_CS;
class CMD_COINTREE_SHAKE_QUERY_SC;
class CoinTreeShakeResoult;
class CoinTreeDetail;
class CMD_COINTREE_SHAKE_SC;
class CMD_COINTREE_SHAKE_CS;
class CMD_MANOR_TIEJIANGPU_LEVELUP_SC;
class CMD_MANOR_WUHUNDIAN_LEVELUP_SC;
class CMD_MANOR_RES_COMMON_LEVELUP_SC;
class CMD_SEND_COVERT_CODE_CS;
class CMD_SEND_COVERT_CODE_SC;
class CMD_QUERY_CANSAVEMONEY_SC;
class CMD_TBT_GETUUID_SC;
class CMD_LEGION_APPOINT_CS;
class CMD_LEGION_QUERY_WORSHIP_SC;
class CMD_LEGION_WORSHIP_MEMBER_CS;
class CMD_LEAVE_LEGION_SC;
class CMD_SHOPSYSTEM_QUERY_SC;
class CMD_PAYMENT_FIRST_PAY_SC;
class CMD_OPERATESYSTEM_QUERY_CHECKIN_SC;
class CMD_OPERATESYSTEM_CHECKIN_CS;
class CMD_OPERATESYSTEM_CHECKIN_SC;
class CMD_PAYMENT_QUERY_SC;
class CMD_PAYMENT_FIRST_QUERY_SC;
class CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC;
class ProtectDetail;
class CMD_MANORSYSTEM_QUERY_PROTECT_SC;
class CMD_MANORSYTEM_BUY_PROTECT_CS;
class GrowupUnitDetail;
class CMD_QUERY_GROWUP_DETAIL_SC;
class CMD_GET_GROWUP_REWARD_CS;
class AccountUnit;
class CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC;
class CMD_QUERY_DAY_PAYMENT_DETAIL_SC;
class CMD_GET_DAY_PAYMENT_REWARD_CS;
class CMD_GET_DAY_PAYMENT_REWARD_SC;
class CMD_GET_ACCOUNT_PAYMENT_REWARD_CS;
class CMD_GET_ACCOUNT_PAYMENT_REWARD_SC;
class CMD_QUERY_OPERATE_ACTIVE_SC;
class CMD_OPERATE_TELPHONE_STREAM_CS;
class CMD_QUERY_ACCOUNT_LOGIN_IN_SC;
class CMD_GET_ACCOUNT_REWARD_CS;
class CMD_GET_ACCOUNT_REWARD_SC;
class CMD_VIVO_ALOGIN_CS;
class CMD_VIVO_ALOGIN_SC;
class CMD_VIVO_BUY_GOOD_CS;
class CMD_VIVO_BUY_GOOD_SC;
class CMD_IOS_BUY_GOODS_CS;
class CMD_IOS_BUY_GOODS_SC;

enum EntityType {
  en_class_Null = 0,
  en_class_Actor = 1,
  en_class_Hero = 2,
  en_class_Ghost = 3,
  en_class_Monster = 4,
  en_class_GodAnimal = 5,
  en_class_Max = 6
};
bool EntityType_IsValid(int value);
const EntityType EntityType_MIN = en_class_Null;
const EntityType EntityType_MAX = en_class_Max;
const int EntityType_ARRAYSIZE = EntityType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EntityType_descriptor();
inline const ::std::string& EntityType_Name(EntityType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EntityType_descriptor(), value);
}
inline bool EntityType_Parse(
    const ::std::string& name, EntityType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntityType>(
    EntityType_descriptor(), name, value);
}
enum SexType {
  en_Sex_Male = 0,
  en_Sex_FeMale = 1
};
bool SexType_IsValid(int value);
const SexType SexType_MIN = en_Sex_Male;
const SexType SexType_MAX = en_Sex_FeMale;
const int SexType_ARRAYSIZE = SexType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SexType_descriptor();
inline const ::std::string& SexType_Name(SexType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SexType_descriptor(), value);
}
inline bool SexType_Parse(
    const ::std::string& name, SexType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SexType>(
    SexType_descriptor(), name, value);
}
enum CommonDef {
  MAX_BATTLE_MEMBER_SIZE = 18,
  MAX_ROLENAME_LEN = 6,
  MAX_FIGHTROUND_NUM = 25,
  ATT_GOLDANIMAL_POS = 18,
  TARGET_GOLDANIMAL_POS = 19,
  MAX_FIGHTSOUL_BAGSIZE = 12,
  MAX_FIGHTSOUL_WEARSIZE = 8,
  LEGION_LIST_PAGESIZE = 10,
  LEGION_BATTLERECORD_PAGECOUNT = 10,
  LEGION_HONORRANK_COUNT = 10,
  MAX_VIP_LEVEL = 15,
  MAX_EQUIP_BAGSIZE = 300,
  MAX_MONEY_VALUE = 2000000000,
  MAX_CHAT_LEN = 144
};
bool CommonDef_IsValid(int value);
const CommonDef CommonDef_MIN = MAX_ROLENAME_LEN;
const CommonDef CommonDef_MAX = MAX_MONEY_VALUE;
const int CommonDef_ARRAYSIZE = CommonDef_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommonDef_descriptor();
inline const ::std::string& CommonDef_Name(CommonDef value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommonDef_descriptor(), value);
}
inline bool CommonDef_Parse(
    const ::std::string& name, CommonDef* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommonDef>(
    CommonDef_descriptor(), name, value);
}
enum KickOffReason {
  en_KickOff_DuplicateAccount = 0,
  en_KickOff_Timeout = 1,
  en_KickOff_GM = 3
};
bool KickOffReason_IsValid(int value);
const KickOffReason KickOffReason_MIN = en_KickOff_DuplicateAccount;
const KickOffReason KickOffReason_MAX = en_KickOff_GM;
const int KickOffReason_ARRAYSIZE = KickOffReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* KickOffReason_descriptor();
inline const ::std::string& KickOffReason_Name(KickOffReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    KickOffReason_descriptor(), value);
}
inline bool KickOffReason_Parse(
    const ::std::string& name, KickOffReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<KickOffReason>(
    KickOffReason_descriptor(), name, value);
}
enum GameServerCMD {
  CMD_BEGIN_CMD = 15000,
  CMD_TEST = 15001,
  CMD_ERROR = 15002,
  CMD_ALOGIN = 15003,
  CMD_GETROLE = 15004,
  CMD_ROLE_FIN = 15005,
  CMD_HERO_LIST = 15006,
  CMD_NEW_ROLE = 15007,
  CMD_KICKOFF_ACCOUNT = 15008,
  CMD_CHECK_ACTORNAME = 15009,
  CMD_FORMATION_DATA = 15010,
  CMD_GM_MSG = 15011,
  CMD_FIGHT_MEMBER = 15012,
  CMD_FIGHT_ACTION = 15013,
  CMD_FIGHT_FIN = 15014,
  CMD_BAG_DATA = 15015,
  CMD_BAG_CHG = 15016,
  CMD_DUNGEON_SECTIONLIST = 15017,
  CMD_QUERY_DSECTIONDETAIL = 15018,
  CMD_SECTION_UPDATE = 15019,
  CMD_COMM_FIGHTRESULT = 15020,
  CMD_ATT_CHG = 15021,
  CMD_DUNGEON_FIGHT = 15022,
  CMD_GET_SECTION_AWARD = 15023,
  CMD_ACTOR_LEVELUP = 15024,
  CMD_FORMATION_CHG = 15025,
  CMD_HERO_UPDATE = 15026,
  CMD_HERO_DEL = 15027,
  CMD_GET_HERODESC = 15028,
  CMD_FIGHTSOUL_BAG = 15029,
  CMD_MOVE_FIGHTSOUL = 15030,
  CMD_CHG_FSCONTAINER = 15031,
  CMD_FIGHTSOUL_PRACTICE = 15032,
  CMD_FIGHTSOUL_AUTOCOMBINE = 15033,
  CMD_FIGHTSOUL_LOCK = 15034,
  CMD_FIGHTSOUL_ADVANCEMODE = 15035,
  CMD_HERO_CONVERT = 15036,
  CMD_COMM_DLG = 15037,
  CMD_HHYPER_LINK = 15038,
  CMD_PING = 15039,
  CMD_HERO_LEVELUP = 15040,
  CMD_QUERY_HERO_LEVELINFO = 15041,
  CMD_HERO_LEVELSTEPUP = 15043,
  CMD_ITEM_USE = 15044,
  CMD_QUERY_HEROFIGHTSOUL = 15045,
  CMD_QUERY_HEROTIP = 15046,
  CMD_GODANIMAL_TRAIN = 15047,
  CMD_GODANIMAL_ACTIVE = 15048,
  CMD_GODANIMAL_LIST = 15049,
  CMD_GODANIMAL_UPDATE = 15050,
  CMD_GODANIMAL_QUERYLEVELSTEP = 15051,
  CMD_GODANIMAL_EXELEVELSTEPUP = 15052,
  CMD_GODANIMAL_EXEINHERIT = 15053,
  CMD_GODANIMAL_QUERYINHERIT = 15054,
  CMD_GODANIMAL_DETAIL = 15055,
  CMD_FIGHTSOUL_PRACTICEFAIL = 15056,
  CMD_FIGHTSOUL_EXCHANGE = 15057,
  CMD_QUERY_HEROPROGRESS = 15065,
  CMD_QUERY_SELFMAID = 15066,
  CMD_CLICK_LEGION = 15068,
  CMD_QUERY_LEGIONLIST = 15069,
  CMD_APPJOIN_LEGION = 15070,
  CMD_CREATE_LEGION = 15072,
  CMD_QUERY_LEGION_BASE = 15073,
  CMD_QUERY_LEGION_MEMBERLIST = 15074,
  CMD_QUERY_LEGION_APP = 15075,
  CMD_MODIFY_LEGION_SETTING = 15076,
  CMD_DEAL_LEGIONAPP = 15077,
  CMD_DISMISS_LEGION = 15078,
  CMD_KICK_LEGIONMEMBER = 15079,
  CMD_TRANSFER_LEGIONLEADER = 15080,
  CMD_QUERY_LELGION_CONTRIBUTE = 15081,
  CMD_LEGION_CONTRIBUTE = 15082,
  CMD_LEGION_BLESS = 15083,
  CMD_QUERY_LEGIONPAY = 15084,
  CMD_GET_LEGIONPAY = 15085,
  CMD_OPEN_LEGIONSHOP = 15086,
  CMD_REFRESH_LEGIONSHOP = 15087,
  CMD_SELECT_LEGIONSHOP = 15089,
  CMD_LEAVE_LEGION = 15091,
  CMD_QUERY_OTHERLEGION = 15092,
  CMD_CANCEL_LEGIONAPP = 15093,
  CMD_UPDATE_LEGIONBOSS = 15095,
  CMD_QUERY_LEGIONBOSS = 15096,
  CMD_CALL_LEGIONBOSS = 15097,
  CMD_CHEER_LEGIONBOSS = 15098,
  CMD_FIGHT_LEGIONBOSS = 15099,
  CMD_LEGIONBOSS_RELIVE = 15100,
  CMD_QUERY_LEGIONBATTLE = 15101,
  CMD_QUERY_BATTLEOWNER = 15102,
  CMD_QUERY_LASTBATTLE_LIST = 15103,
  CMD_QUERY_SINGLE_LASTBATTLE = 15104,
  CMD_REPORT_LEGIONBATTLE = 15105,
  CMD_JOIN_LEGIONBATTLE = 15106,
  CMD_QUERY_CURBATTLE_PAGE = 15107,
  CMD_ADD_CURBATTLE_RECORD = 15108,
  CMD_UPDATE_CURBATTLE_SELFINFO = 15109,
  CMD_UPDATE_CURBATTLE_LEGIONINFO = 15110,
  CMD_QUERY_CURBATTLE_SELFRECORD = 15111,
  CMD_COMM_QUERYBATTLE = 15112,
  CMD_QUERY_CURBATTLE_HONORRANK = 15113,
  CMD_CLOSE_CURBATTLE_PAGE = 15114,
  CMD_QUERY_LASTBATTLE_HONORRANK = 15115,
  CMD_QUERY_LASTBATTLE_RECORD_PAGE = 15116,
  CMD_QUERY_LEGIONBATTLE_REPORT = 15117,
  CMD_QUERY_LASTBATTLE_SELFRECORD = 15118,
  CMD_CHANNEL_CHAT = 15120,
  CMD_WHISPER = 15121,
  CMD_QUERY_GIFT = 15200,
  CMD_GET_GIFT = 15201,
  CMD_QUERY_CLIMBTOWERDETAIL = 15302,
  CMD_RESET_CLIMBTOWER = 15303,
  CMD_CHALLENGE_TOWER = 15304,
  CMD_FAST_CHALLENGE_TOWER = 15305,
  CMD_TOWER_FAST_CHALLENGE_RESOULT = 15306,
  CMD_TOWER_ADD_RESETCOUNT = 15307,
  CMD_LEGIONBOSS_END = 15400,
  CMD_OPEN_ARENA = 15600,
  CMD_QUERY_ARENA_AWARD = 15601,
  CMD_GET_ARENA_AWARD = 15602,
  CMD_QUERY_ARENA_RANK = 15603,
  CMD_QUERY_ARENA_LOG = 15604,
  CMD_ADD_ARENACHALLENGE = 15605,
  CMD_ARENA_FIGHT = 15606,
  CMD_UPDATE_WORLDBOSS = 15700,
  CMD_QUERY_WORLDBOSS = 15701,
  CMD_CHEER_WORLDBOSS = 15702,
  CMD_FIGHT_WORLDBOSS = 15703,
  CMD_WORLDBOSS_RELIVE = 15704,
  CMD_WORLDBOSS_END = 15705,
  CMD_CAMPBATTLE_OPEN = 15800,
  CMD_CAMPBATTLE_JOIN = 15801,
  CMD_CAMPBATTLE_CLOSE = 15802,
  CMD_CAMPBATTLE_BATTLE_LOG = 15803,
  CMD_CAMPBATTLE_REFREASH_RANKLIST = 15804,
  CMD_CAMPBATTLE_REFREASH_ACTORDETAIL = 15805,
  CMD_CAMPBATTLE_REFREASH_TIME = 15806,
  CMD_CAMPBATTLE_JOIN_CANCLE = 15807,
  CMD_CMAPBATTLE_SYSTEM_CLOSE = 15808,
  CMD_BUY_PHYSTRENGTH = 15900,
  CMD_FRIENDSYSTEM_QUERY = 16000,
  CMD_FRIENDSYSTEM_DELETE_FRIEND = 16003,
  CMD_FRIENDSYSTEM_SEARCH_FRIEND = 16004,
  CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND = 16005,
  CMD_FRIENDSYSTEM_QUERY_FRIENDLIST = 16006,
  CMD_FRIENDSYSTEM_QUERY_REQUESTLIST = 16007,
  CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH = 16008,
  CMD_FRIENDSYSTEM_GET_PHYSTENGTH = 16009,
  CMD_FRIENDSYSTEM_REQUEST = 160010,
  CMD_USENAME_FINED_ACTOR_INFO = 160011,
  CMD_USEPBPKROLE_FINED_ACTOR_INFO = 160012,
  CMD_ATT_COMEUP = 160021,
  CMD_MARQUEE = 160041,
  CMD_HERO_SANGONG = 160050,
  CMD_QUERY_SANGONG = 160051,
  CMD_QUERY_ACTORINFO = 17000,
  CMD_QUERY_FIGHTSOUL = 17001,
  CMD_QUERY_FIRSTFIGHT = 17002,
  CMD_NOTIFY_GUIDE = 17005,
  CMD_GUIDE_FINISH = 17006,
  CMD_TASK_QUERY_TASKINFO = 17010,
  CMD_TASK_GET_REWARD = 17011,
  CMD_FIGHT_USEACTORSKILL = 17020,
  CMD_FIGHT_PLAYFINISH = 17021,
  CMD_FIGHT_QUIT = 17022,
  CMD_GODANIMAL_DETAIL_BYID = 17030,
  CMD_GODANIMAL_ANIMALSOUL_QUERY = 17040,
  CMD_GODANIMAL_ANIMALSOUL_ACTIVE = 17041,
  CMD_GODANIMAL_ANIMALSOUL_SELL = 17042,
  CMD_QUERY_HEROCONVERT = 17050,
  CMD_ACTOR_VIPLEVELUP = 17051,
  CMD_TASKSYSTEM_NEWTASKOPEN = 17052,
  CMD_TASKSYSTEM_NEWTASKFINISH = 17053,
  CMD_NEWPASS_SECTION = 17055,
  CMD_HEROSYSTEM_SELLHERO = 17056,
  CMD_HERO_COVERT_OPEN = 17058,
  CMD_EQUIP_BAG = 17060,
  CMD_QUERY_HEROEQUIP = 17061,
  CMD_EQUIP_MOVE = 17062,
  CMD_EQUIPCONTAINER_CHG = 17063,
  CMD_EQUIP_SELLBYPOS = 17064,
  CMD_EQUIP_SELLBYQUALITY = 17065,
  CMD_EQUIP_COMBINE = 17066,
  CMD_QUERY_EQUIPDESC_BYID = 17067,
  CMD_QUERY_EQUIPSOURCE = 17068,
  CMD_DELETE_HEROS = 17070,
  CMD_FIGHTSOUL_AUTOPRACTICE = 17071,
  CMD_EQUIP_SUITSTATE_UPDATE = 17072,
  CMD_EQUIP_QUERYENHANCE = 17073,
  CMD_EQUIP_ENHANCE = 17074,
  CMD_EQUIP_CHIPSELL = 17076,
  CMD_EQUIP_CHIPCOMBINE = 17077,
  CMD_DUNGEON_SAODANG = 17078,
  CMD_QUERY_MAILLIST = 17079,
  CMD_QUERY_MAILDESC = 17080,
  CMD_GET_MAILAWARD = 17081,
  CMD_DREAMLAND_OPEN_REQSECTON = 17090,
  CMD_DREAMLAND_RESET = 17091,
  CMD_DREAMLAND_QUERY_SCENEINFO = 17092,
  CMD_DREAMLAND_QUERY_SCENEFORMATION = 17093,
  CMD_DREAMLAND_REQUEST_OPENBOX = 17084,
  CMD_DREAMLAND_GETACTOR_FORMATION_INFO = 17095,
  CMD_DREAMLAND_FORMATION_CHG = 17086,
  CMD_DREAMLAND_REQUEST_FIGHT = 17097,
  CMD_DREAMLAND_QUERY_BOX = 17098,
  CMD_HERO_CONVERT_CONFIRM = 17200,
  CMD_HERO_SOULCHG = 17201,
  CMD_HERO_TALLENT_LEVELUP = 17202,
  CMD_HERO_TALLENT_UPDATE = 17203,
  CMD_ITEM_SELLITEM = 17204,
  CMD_COMMON_GETHERO = 17205,
  CMD_CHG_ACTOR_HEAD = 17206,
  CMD_EQUIP_RONGLIAN = 17207,
  CMD_EQUIP_XILIAN_DATA = 17208,
  CMD_EQUIP_XILIAN_GEN = 17209,
  CMD_EQUIP_XILIAN_REPLACE = 17210,
  CMD_EQUIP_XILIAN_TRANSFER = 17211,
  CMD_EQUIP_XILIAN_BUYLOCK = 17212,
  CMD_MANOR_QUERY = 17300,
  CMD_MANOR_RES_USE_GOLD_LEVELUP = 17301,
  CMD_MANOR_RES_COMMON_LEVELUP = 17302,
  CMD_MANOR_RES_HARVEST = 17303,
  CMD_MANOR_WUHUNDIAN_QUERY = 17304,
  CMD_MANOR_WUHUNDIAN_LEVELUP = 17305,
  CMD_MANOR_WUHUNDIAN_BEGIN_PRODUCT = 17306,
  CMD_MANOR_WUHUNDIAN_WUXIEKEJIE = 17307,
  CMD_MANOR_WUHUNDIAN_REFRESH = 17308,
  CMD_MANOR_TIEJIANGPU_QUERY = 17309,
  CMD_MANOR_TIEJIANGPU_LEVELUP = 17310,
  CMD_MANOR_TIEJIANGPU_REFRESH = 17311,
  CMD_MANOR_TIEJIANGPU_BEGIN_PRODUCT = 17312,
  CMD_MANOR_TIEJIANGPU_WUXIEKEJI = 17313,
  CMD_MANOR_QUERY_LOG = 17314,
  CMD_MANOR_REVENGE = 17315,
  CMD_MANOR_PUBLISH = 17316,
  CMD_MANOR_WUHUNDIAN_BULID_ADDSPEED = 17317,
  CMD_MANOR_TIEJIANGPU_BULID_ADDSPEED = 17318,
  CMD_MANOR_REQUEST_LOOT = 17319,
  CMD_MANOR_REQUEST_LOOT_BATTLE = 17320,
  CMD_MANOR_WUHUNDIAN_ONEKEY_HARVEST = 17321,
  CMD_MANOR_TIEJIANGPU_ONEKEY_HARVEST = 17322,
  CMD_HERO_CALLHERO = 17800,
  CMD_HERO_EQUIP_FAVORITE = 17801,
  CMD_HERO_COMBINE_FAVORITE = 17802,
  CMD_HERO_QUALITY_UP = 17803,
  CMD_SHOPSYSTEM_RANDITEMORHERO = 17901,
  CMD_SHOPSYSTEM_HONORCONVERT_QUERY = 17902,
  CMD_SHOPSYSTEM_HONORCONVERT_REFRESH = 17903,
  CMD_SHOPSYSTEM_HONORCONVERT_CONVERT = 17904,
  CMD_GODANIMAL_EMPTY = 17905,
  CMD_NOTICE_CLIENT_PUSHVIP_SCENE = 17906,
  CMD_ARENA_CHANGE_CHALLENGELIST = 17907,
  CMD_ARENA_RESET = 17908,
  CMD_CHAT_CHANNEL_QUERY = 17909,
  CMD_COINTREE_SHAKE_QUERY = 17910,
  CMD_COINTREE_SHAKE = 17911,
  CMD_FRIENDSYSTEM_ONEKEY_GET_STRENGTH = 17912,
  CMD_NEED_SILVER = 18000,
  CMD_NEED_HEROEXP = 18001,
  CMD_SEND_COVERT_CODE = 18002,
  CMD_REQUEST_REFRESHGOLD = 18010,
  CMD_QUERY_CANSAVEMONEY = 18011,
  CMD_TBT_GETUUID = 18012,
  CMD_DEAL_LEGIONAPP_ONEKEY = 18013,
  CMD_LEGION_APPOINT = 18014,
  CMD_LEGION_QUERY_WORSHIP = 18015,
  CMD_LEGION_WORSHIP_MEMBER = 18016,
  CMD_LEGION_GET_WORSHIP_REWARD = 18017,
  CMD_SHOPSYSTEM_QUERY = 18018,
  CMD_PAYMENT_FIRST_PAY = 18019,
  CMD_PAYMENT_QUERY = 18020,
  CMD_PAYMENT_FIRST_QUERY = 18021,
  CMD_EQUIPDUNGEON_QUERY_EQUIPINFO = 18100,
  CMD_EQUIPDUNGEON_FP = 18101,
  CMD_OPERATESYSTEM_QUERY_CHECKIN = 18200,
  CMD_OPERATESYSTEM_CHECKIN = 18201,
  CMD_NOTICE_CLIENT_TOLEVELUP_VIP = 18202,
  CMD_TASK_GET_VIGOR = 18203,
  CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION = 18204,
  CMD_MANORSYSTEM_QUERY_PROTECT = 18205,
  CMD_MANORSYTEM_BUY_PROTECT = 18206,
  CMD_QUERY_OPERATE_ACTIVE = 18207,
  CMD_QUERY_GROWUP_DETAIL = 18211,
  CMD_BUY_GROWUP_PLAN = 18212,
  CMD_GET_GROWUP_REWARD = 18213,
  CMD_QUERY_ACCOUNT_PAYMENT_DETAIL = 18214,
  CMD_GET_ACCOUNT_PAYMENT_REWARD = 18215,
  CMD_GET_MONTHCARD_REWARD = 18216,
  CMD_CANBUY_MONTHCARD = 18217,
  CMD_OPERATE_TELPHONE_STREAM = 18218,
  CMD_QUERY_ACCOUNT_LOGIN_IN = 18219,
  CMD_GET_ACCOUNT_REWARD = 18220,
  CMD_VIVO_BUY_GOOD = 18222,
  CMD_IOS_BUY_GOODS = 18223,
  CMD_QUERY_DAY_PAYMENT_DETAIL = 18224,
  CMD_GET_DAY_PAYMENT_REWARD = 18225
};
bool GameServerCMD_IsValid(int value);
const GameServerCMD GameServerCMD_MIN = CMD_BEGIN_CMD;
const GameServerCMD GameServerCMD_MAX = CMD_QUERY_SANGONG;
const int GameServerCMD_ARRAYSIZE = GameServerCMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* GameServerCMD_descriptor();
inline const ::std::string& GameServerCMD_Name(GameServerCMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    GameServerCMD_descriptor(), value);
}
inline bool GameServerCMD_Parse(
    const ::std::string& name, GameServerCMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GameServerCMD>(
    GameServerCMD_descriptor(), name, value);
}
enum LoginResult {
  en_LoginResult_OK = 0,
  en_LoginResult_SuggestUpdata = 1,
  en_LoginResult_MustUpdata = 2,
  en_LoginResult_RoleOnLine = 3
};
bool LoginResult_IsValid(int value);
const LoginResult LoginResult_MIN = en_LoginResult_OK;
const LoginResult LoginResult_MAX = en_LoginResult_RoleOnLine;
const int LoginResult_ARRAYSIZE = LoginResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* LoginResult_descriptor();
inline const ::std::string& LoginResult_Name(LoginResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    LoginResult_descriptor(), value);
}
inline bool LoginResult_Parse(
    const ::std::string& name, LoginResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LoginResult>(
    LoginResult_descriptor(), name, value);
}
enum NewRoleResult {
  en_NewRole_OK = 0,
  en_NewRole_Fail = 1,
  en_NewRole_DunplicateName = 2
};
bool NewRoleResult_IsValid(int value);
const NewRoleResult NewRoleResult_MIN = en_NewRole_OK;
const NewRoleResult NewRoleResult_MAX = en_NewRole_DunplicateName;
const int NewRoleResult_ARRAYSIZE = NewRoleResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* NewRoleResult_descriptor();
inline const ::std::string& NewRoleResult_Name(NewRoleResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    NewRoleResult_descriptor(), value);
}
inline bool NewRoleResult_Parse(
    const ::std::string& name, NewRoleResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NewRoleResult>(
    NewRoleResult_descriptor(), name, value);
}
enum GetRoleResult {
  en_GetRole_OK = 0,
  en_GetRole_NoRole = 1,
  en_GetRole_Error = 2
};
bool GetRoleResult_IsValid(int value);
const GetRoleResult GetRoleResult_MIN = en_GetRole_OK;
const GetRoleResult GetRoleResult_MAX = en_GetRole_Error;
const int GetRoleResult_ARRAYSIZE = GetRoleResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetRoleResult_descriptor();
inline const ::std::string& GetRoleResult_Name(GetRoleResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetRoleResult_descriptor(), value);
}
inline bool GetRoleResult_Parse(
    const ::std::string& name, GetRoleResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetRoleResult>(
    GetRoleResult_descriptor(), name, value);
}
enum BagChgType {
  en_BagChg_Add = 0,
  en_BagChg_StackCountChg = 1,
  en_BagChg_Del = 2
};
bool BagChgType_IsValid(int value);
const BagChgType BagChgType_MIN = en_BagChg_Add;
const BagChgType BagChgType_MAX = en_BagChg_Del;
const int BagChgType_ARRAYSIZE = BagChgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BagChgType_descriptor();
inline const ::std::string& BagChgType_Name(BagChgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BagChgType_descriptor(), value);
}
inline bool BagChgType_Parse(
    const ::std::string& name, BagChgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BagChgType>(
    BagChgType_descriptor(), name, value);
}
enum SkillHitResult {
  en_SkillHitResult_Begin = 0,
  en_SkillHitResult_Hit = 1,
  en_SkillHitResult_Knock = 2,
  en_SkillHitResult_Doge = 3,
  en_SkillHitResult_Block = 4,
  en_SkillHitResult_ImMunity = 5,
  en_SkillHitResult_End = 6
};
bool SkillHitResult_IsValid(int value);
const SkillHitResult SkillHitResult_MIN = en_SkillHitResult_Begin;
const SkillHitResult SkillHitResult_MAX = en_SkillHitResult_End;
const int SkillHitResult_ARRAYSIZE = SkillHitResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* SkillHitResult_descriptor();
inline const ::std::string& SkillHitResult_Name(SkillHitResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    SkillHitResult_descriptor(), value);
}
inline bool SkillHitResult_Parse(
    const ::std::string& name, SkillHitResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SkillHitResult>(
    SkillHitResult_descriptor(), name, value);
}
enum FightType {
  en_FightType_Begin = 0,
  en_FightType_Scene = 1,
  en_FightType_Boss = 4,
  en_FightType_LegionCity = 5,
  en_FightType_Arena = 6,
  en_FightType_ClimbTower = 7,
  en_FightType_CampBattleFactory = 8,
  en_FightType_FirstFight = 9,
  en_FightType_ClimbTower_FASTCHANGE = 10,
  en_FightType_DreamLand = 11,
  en_FightType_ManorSystem = 12,
  en_FightType_EquipScene = 13
};
bool FightType_IsValid(int value);
const FightType FightType_MIN = en_FightType_Begin;
const FightType FightType_MAX = en_FightType_EquipScene;
const int FightType_ARRAYSIZE = FightType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FightType_descriptor();
inline const ::std::string& FightType_Name(FightType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FightType_descriptor(), value);
}
inline bool FightType_Parse(
    const ::std::string& name, FightType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FightType>(
    FightType_descriptor(), name, value);
}
enum ItemType {
  en_ItemType_Item = 0,
  en_ItemType_Equip = 1,
  en_ItemType_Material = 3,
  en_ItemType_Favorite = 4
};
bool ItemType_IsValid(int value);
const ItemType ItemType_MIN = en_ItemType_Item;
const ItemType ItemType_MAX = en_ItemType_Favorite;
const int ItemType_ARRAYSIZE = ItemType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ItemType_descriptor();
inline const ::std::string& ItemType_Name(ItemType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ItemType_descriptor(), value);
}
inline bool ItemType_Parse(
    const ::std::string& name, ItemType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ItemType>(
    ItemType_descriptor(), name, value);
}
enum BagType {
  en_BagType_Item = 0,
  en_BagType_Materail = 2
};
bool BagType_IsValid(int value);
const BagType BagType_MIN = en_BagType_Item;
const BagType BagType_MAX = en_BagType_Materail;
const int BagType_ARRAYSIZE = BagType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BagType_descriptor();
inline const ::std::string& BagType_Name(BagType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BagType_descriptor(), value);
}
inline bool BagType_Parse(
    const ::std::string& name, BagType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BagType>(
    BagType_descriptor(), name, value);
}
enum CommQuality {
  en_Quality_Begin = 0,
  en_Quality_White = 1,
  en_Quality_Green = 2,
  en_Quality_Blue = 3,
  en_Quality_Pure = 4,
  en_Quality_Gold = 5,
  en_Quality_Red = 6,
  en_Quality_End = 7
};
bool CommQuality_IsValid(int value);
const CommQuality CommQuality_MIN = en_Quality_Begin;
const CommQuality CommQuality_MAX = en_Quality_End;
const int CommQuality_ARRAYSIZE = CommQuality_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommQuality_descriptor();
inline const ::std::string& CommQuality_Name(CommQuality value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommQuality_descriptor(), value);
}
inline bool CommQuality_Parse(
    const ::std::string& name, CommQuality* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommQuality>(
    CommQuality_descriptor(), name, value);
}
enum ErrorCodeType {
  en_ErrorCodeType_Normal = 0,
  en_ErrorCodeType_Float = 1
};
bool ErrorCodeType_IsValid(int value);
const ErrorCodeType ErrorCodeType_MIN = en_ErrorCodeType_Normal;
const ErrorCodeType ErrorCodeType_MAX = en_ErrorCodeType_Float;
const int ErrorCodeType_ARRAYSIZE = ErrorCodeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorCodeType_descriptor();
inline const ::std::string& ErrorCodeType_Name(ErrorCodeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorCodeType_descriptor(), value);
}
inline bool ErrorCodeType_Parse(
    const ::std::string& name, ErrorCodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorCodeType>(
    ErrorCodeType_descriptor(), name, value);
}
enum enHeadType {
  en_HeadType_none = 0,
  en_HeadType_Hero = 1,
  en_HeadType_GodAnimal = 2
};
bool enHeadType_IsValid(int value);
const enHeadType enHeadType_MIN = en_HeadType_none;
const enHeadType enHeadType_MAX = en_HeadType_GodAnimal;
const int enHeadType_ARRAYSIZE = enHeadType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enHeadType_descriptor();
inline const ::std::string& enHeadType_Name(enHeadType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enHeadType_descriptor(), value);
}
inline bool enHeadType_Parse(
    const ::std::string& name, enHeadType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enHeadType>(
    enHeadType_descriptor(), name, value);
}
enum FightActionType {
  en_FightAction_Begin = 0,
  en_FightAction_Skill = 1,
  en_FightAction_DelBuff = 2,
  en_FightAction_ReplaceMember = 3,
  en_FightAction_Dlg = 4,
  en_FightAction_GuideUseItem = 5
};
bool FightActionType_IsValid(int value);
const FightActionType FightActionType_MIN = en_FightAction_Begin;
const FightActionType FightActionType_MAX = en_FightAction_GuideUseItem;
const int FightActionType_ARRAYSIZE = FightActionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FightActionType_descriptor();
inline const ::std::string& FightActionType_Name(FightActionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FightActionType_descriptor(), value);
}
inline bool FightActionType_Parse(
    const ::std::string& name, FightActionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FightActionType>(
    FightActionType_descriptor(), name, value);
}
enum FightResultType {
  en_FightResult_Begin = 0,
  en_FightResult_SkillDamage = 1,
  en_FightResult_BackDamage = 2,
  en_FightResult_PropChg = 3,
  en_FightResult_AddBuff = 4,
  en_FightResult_DelBuff = 5,
  en_FightResult_Relive = 6,
  en_FightResult_CreateItem = 7,
  en_FightResult_UseActorSkill = 8,
  en_FightResult_SyncHP = 9,
  en_FightResult_ZiBao = 10
};
bool FightResultType_IsValid(int value);
const FightResultType FightResultType_MIN = en_FightResult_Begin;
const FightResultType FightResultType_MAX = en_FightResult_ZiBao;
const int FightResultType_ARRAYSIZE = FightResultType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FightResultType_descriptor();
inline const ::std::string& FightResultType_Name(FightResultType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FightResultType_descriptor(), value);
}
inline bool FightResultType_Parse(
    const ::std::string& name, FightResultType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FightResultType>(
    FightResultType_descriptor(), name, value);
}
enum Shop_CostType {
  en_Shop_CostType_Silver = 1,
  en_Shop_CostType_Gold = 2,
  en_Shop_CostType_HeroExp = 3,
  en_Shop_CostType_Honor = 4
};
bool Shop_CostType_IsValid(int value);
const Shop_CostType Shop_CostType_MIN = en_Shop_CostType_Silver;
const Shop_CostType Shop_CostType_MAX = en_Shop_CostType_Honor;
const int Shop_CostType_ARRAYSIZE = Shop_CostType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Shop_CostType_descriptor();
inline const ::std::string& Shop_CostType_Name(Shop_CostType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Shop_CostType_descriptor(), value);
}
inline bool Shop_CostType_Parse(
    const ::std::string& name, Shop_CostType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Shop_CostType>(
    Shop_CostType_descriptor(), name, value);
}
enum Shop_GoodType {
  en_ShopType_LifeAttType = 1,
  en_Shop_GoodType_Hero = 2,
  en_Shop_GoodType_GodAnimal = 3,
  en_Shop_GoodType_Item = 4
};
bool Shop_GoodType_IsValid(int value);
const Shop_GoodType Shop_GoodType_MIN = en_ShopType_LifeAttType;
const Shop_GoodType Shop_GoodType_MAX = en_Shop_GoodType_Item;
const int Shop_GoodType_ARRAYSIZE = Shop_GoodType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Shop_GoodType_descriptor();
inline const ::std::string& Shop_GoodType_Name(Shop_GoodType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Shop_GoodType_descriptor(), value);
}
inline bool Shop_GoodType_Parse(
    const ::std::string& name, Shop_GoodType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Shop_GoodType>(
    Shop_GoodType_descriptor(), name, value);
}
enum Section_Type {
  en_SectionType_Normal = 0,
  en_SectionType_Equip = 1
};
bool Section_Type_IsValid(int value);
const Section_Type Section_Type_MIN = en_SectionType_Normal;
const Section_Type Section_Type_MAX = en_SectionType_Equip;
const int Section_Type_ARRAYSIZE = Section_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Section_Type_descriptor();
inline const ::std::string& Section_Type_Name(Section_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Section_Type_descriptor(), value);
}
inline bool Section_Type_Parse(
    const ::std::string& name, Section_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Section_Type>(
    Section_Type_descriptor(), name, value);
}
enum LifeAtt {
  en_LifeAtt_Begin = 0,
  en_LifeAtt_Silver = 1,
  en_LifeAtt_Gold = 2,
  en_LifeAtt_Exp = 3,
  en_LifeAtt_HeroExp = 4,
  en_LifeAtt_MaxHP = 5,
  en_LifeAtt_Att = 6,
  en_LifeAtt_Doge = 7,
  en_LifeAtt_Hit = 8,
  en_LifeAtt_AntiKnock = 9,
  en_LifeAtt_Knock = 10,
  en_LifeAtt_Block = 11,
  en_LifeAtt_Wreck = 12,
  en_LifeAtt_Armor = 13,
  en_LifeAtt_Sunder = 14,
  en_LifeAtt_InitAnger = 15,
  en_LifeAtt_FSChipCount = 16,
  en_LifeAtt_PhyStrength = 17,
  en_LifeAtt_HeroConvertCount = 18,
  en_LifeAtt_FunctionMask = 19,
  en_LifeAtt_Honor = 20,
  en_LifeAtt_HP = 21,
  en_LifeAtt_PhyStrengthLimit = 22,
  en_LifeAtt_VIPLevel = 23,
  en_LifeAtt_Anger = 24,
  en_LifeAtt_FightValue = 25,
  en_LifeAtt_HasFightSoul = 26,
  en_LifeAtt_VIPEXP = 27,
  en_LifeAtt_Notice = 28,
  en_LifeAtt_SkillDamage = 29,
  en_LifeAtt_SkillDef = 30,
  en_LifeAtt_HasEquip = 31,
  en_LifeAtt_Price = 32,
  en_LifeAtt_actorhead = 33,
  en_LifeAtt_actorheadtype = 34,
  en_LifeAtt_actorVigor = 35,
  en_LifeAtt_Quality = 36,
  en_LifeAtt_Def = 37,
  en_LifeAtt_LeftPhyStrength = 38,
  en_LifeAtt_Contribute = 39,
  en_LifeAtt_KnockDamage = 40,
  en_LifeAtt_KnockXiXue = 41,
  en_LifeAtt_ConAttackRate = 42,
  en_LifeAtt_ShowFristPayBtn = 43,
  en_LifeAtt_End = 44
};
bool LifeAtt_IsValid(int value);
const LifeAtt LifeAtt_MIN = en_LifeAtt_Begin;
const LifeAtt LifeAtt_MAX = en_LifeAtt_End;
const int LifeAtt_ARRAYSIZE = LifeAtt_MAX + 1;

const ::google::protobuf::EnumDescriptor* LifeAtt_descriptor();
inline const ::std::string& LifeAtt_Name(LifeAtt value) {
  return ::google::protobuf::internal::NameOfEnum(
    LifeAtt_descriptor(), value);
}
inline bool LifeAtt_Parse(
    const ::std::string& name, LifeAtt* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LifeAtt>(
    LifeAtt_descriptor(), name, value);
}
enum enNoticeGuid {
  en_NoticeGuid_TASK = 0,
  en_NoticeGuid_SHOP = 1,
  en_NoticeGuid_Friend = 2,
  en_NoticeGuid_Formation = 3,
  en_NoticeGuid_LevelUp = 4,
  en_NoticeGuid_StepLevelUp = 5,
  en_NoticeGuid_HaveGift = 6,
  en_NoticeGuid_HaveMail = 7,
  en_NoticeGuid_ArenaHaveNewLog = 8,
  en_NoticeGuid_ManorHaveWuHun = 9,
  en_NoticeGuid_ManorHaveItem = 10,
  en_NoticeGuid_ManorHaveNewLog = 11,
  en_NoticeGuid_TASK_Line = 13,
  en_NoticeGuid_FirstPayMent = 14,
  en_NoticeGuid_CheckIn = 15,
  en_NoticeGuid_Legion_Worship = 16,
  en_NoticeGuid_Legion_Salary = 17,
  en_NoticeGuid_Legion_HaveRequest = 18,
  en_NoticeGuid_GrowUpHaveReward = 19,
  en_NoticeGuid_ACCPaymentHaveReward = 20,
  en_NoticeGuid_ALL = 21
};
bool enNoticeGuid_IsValid(int value);
const enNoticeGuid enNoticeGuid_MIN = en_NoticeGuid_TASK;
const enNoticeGuid enNoticeGuid_MAX = en_NoticeGuid_ALL;
const int enNoticeGuid_ARRAYSIZE = enNoticeGuid_MAX + 1;

const ::google::protobuf::EnumDescriptor* enNoticeGuid_descriptor();
inline const ::std::string& enNoticeGuid_Name(enNoticeGuid value) {
  return ::google::protobuf::internal::NameOfEnum(
    enNoticeGuid_descriptor(), value);
}
inline bool enNoticeGuid_Parse(
    const ::std::string& name, enNoticeGuid* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enNoticeGuid>(
    enNoticeGuid_descriptor(), name, value);
}
enum enFunction {
  en_Function_Legion = 1,
  en_Function_GodAnimal = 3,
  en_Function_Arena = 4,
  en_Function_Friend = 5,
  en_Function_FightSoul = 7,
  en_Function_ClimTower = 9,
  en_Function_CampFight = 10,
  en_Function_HeroCvt = 11,
  en_Function_DreamLand = 12,
  en_Function_Manor = 13,
  en_Function_EquipDungeon = 14,
  en_Function_EquipXilian = 15
};
bool enFunction_IsValid(int value);
const enFunction enFunction_MIN = en_Function_Legion;
const enFunction enFunction_MAX = en_Function_EquipXilian;
const int enFunction_ARRAYSIZE = enFunction_MAX + 1;

const ::google::protobuf::EnumDescriptor* enFunction_descriptor();
inline const ::std::string& enFunction_Name(enFunction value) {
  return ::google::protobuf::internal::NameOfEnum(
    enFunction_descriptor(), value);
}
inline bool enFunction_Parse(
    const ::std::string& name, enFunction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enFunction>(
    enFunction_descriptor(), name, value);
}
enum ActorSkillDefine {
  en_ActorSkill_Damage = 1,
  en_ActorSkill_Heal = 2,
  en_ActorSkill_Control = 3
};
bool ActorSkillDefine_IsValid(int value);
const ActorSkillDefine ActorSkillDefine_MIN = en_ActorSkill_Damage;
const ActorSkillDefine ActorSkillDefine_MAX = en_ActorSkill_Control;
const int ActorSkillDefine_ARRAYSIZE = ActorSkillDefine_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActorSkillDefine_descriptor();
inline const ::std::string& ActorSkillDefine_Name(ActorSkillDefine value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActorSkillDefine_descriptor(), value);
}
inline bool ActorSkillDefine_Parse(
    const ::std::string& name, ActorSkillDefine* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActorSkillDefine>(
    ActorSkillDefine_descriptor(), name, value);
}
enum DungeonSceneStar {
  en_SceneStar_Null = 0,
  en_SceneStar_1 = 1,
  en_SceneStar_2 = 2,
  en_SceneStar_3 = 3
};
bool DungeonSceneStar_IsValid(int value);
const DungeonSceneStar DungeonSceneStar_MIN = en_SceneStar_Null;
const DungeonSceneStar DungeonSceneStar_MAX = en_SceneStar_3;
const int DungeonSceneStar_ARRAYSIZE = DungeonSceneStar_MAX + 1;

const ::google::protobuf::EnumDescriptor* DungeonSceneStar_descriptor();
inline const ::std::string& DungeonSceneStar_Name(DungeonSceneStar value) {
  return ::google::protobuf::internal::NameOfEnum(
    DungeonSceneStar_descriptor(), value);
}
inline bool DungeonSceneStar_Parse(
    const ::std::string& name, DungeonSceneStar* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DungeonSceneStar>(
    DungeonSceneStar_descriptor(), name, value);
}
enum en_FSPracticeGrade {
  en_practice_Begin = 0,
  en_practice_Grade1 = 1,
  en_practice_Grade2 = 2,
  en_practice_Grade3 = 3,
  en_practice_Grade4 = 4,
  en_practice_Grade5 = 5
};
bool en_FSPracticeGrade_IsValid(int value);
const en_FSPracticeGrade en_FSPracticeGrade_MIN = en_practice_Begin;
const en_FSPracticeGrade en_FSPracticeGrade_MAX = en_practice_Grade5;
const int en_FSPracticeGrade_ARRAYSIZE = en_FSPracticeGrade_MAX + 1;

const ::google::protobuf::EnumDescriptor* en_FSPracticeGrade_descriptor();
inline const ::std::string& en_FSPracticeGrade_Name(en_FSPracticeGrade value) {
  return ::google::protobuf::internal::NameOfEnum(
    en_FSPracticeGrade_descriptor(), value);
}
inline bool en_FSPracticeGrade_Parse(
    const ::std::string& name, en_FSPracticeGrade* value) {
  return ::google::protobuf::internal::ParseNamedEnum<en_FSPracticeGrade>(
    en_FSPracticeGrade_descriptor(), name, value);
}
enum en_PracticeMode {
  en_practice_BaseMode = 0,
  en_practice_AdvanceMode = 1
};
bool en_PracticeMode_IsValid(int value);
const en_PracticeMode en_PracticeMode_MIN = en_practice_BaseMode;
const en_PracticeMode en_PracticeMode_MAX = en_practice_AdvanceMode;
const int en_PracticeMode_ARRAYSIZE = en_PracticeMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* en_PracticeMode_descriptor();
inline const ::std::string& en_PracticeMode_Name(en_PracticeMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    en_PracticeMode_descriptor(), value);
}
inline bool en_PracticeMode_Parse(
    const ::std::string& name, en_PracticeMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<en_PracticeMode>(
    en_PracticeMode_descriptor(), name, value);
}
enum en_FSContainerType {
  en_FSConType_Bag = 0,
  en_FSConType_Wear = 1
};
bool en_FSContainerType_IsValid(int value);
const en_FSContainerType en_FSContainerType_MIN = en_FSConType_Bag;
const en_FSContainerType en_FSContainerType_MAX = en_FSConType_Wear;
const int en_FSContainerType_ARRAYSIZE = en_FSContainerType_MAX + 1;

const ::google::protobuf::EnumDescriptor* en_FSContainerType_descriptor();
inline const ::std::string& en_FSContainerType_Name(en_FSContainerType value) {
  return ::google::protobuf::internal::NameOfEnum(
    en_FSContainerType_descriptor(), value);
}
inline bool en_FSContainerType_Parse(
    const ::std::string& name, en_FSContainerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<en_FSContainerType>(
    en_FSContainerType_descriptor(), name, value);
}
enum CreateConsumeReason {
  en_Reason_GM = 0,
  en_Reason_HeroLevelUp = 1,
  en_Reason_HeroConvert = 2,
  en_Reason_HeroLevelStepUp = 3,
  en_Reason_FightSoulPractice = 4,
  en_Reason_FightSoulExchange = 5,
  en_Reason_Award = 6,
  en_Reason_DungeonFight = 7,
  en_Reason_SkillUse = 8,
  en_Reason_FightSoulAdvanceMode = 9,
  en_Reason_GoldMine = 10,
  en_Reason_LoveMaidConsume = 11,
  en_Reason_LoveMaidCreate = 12,
  en_Reason_AdvancePlayConsume = 13,
  en_Reason_PlayGet = 14,
  en_Reason_GoldMineConsume = 15,
  en_Reason_GoldMineCreate = 16,
  en_Reason_FightResConsume = 17,
  en_Reason_FightResCreate = 18,
  en_Reason_CreateLegionConsume = 23,
  en_Reason_CreateLegionFail = 24,
  en_Reason_ContributeCost = 25,
  en_Reason_ContributeCreate = 26,
  en_Reason_BlessCost = 27,
  en_Reason_BlessCreate = 28,
  en_Reason_LegionPay = 29,
  en_Reason_LegionBoss_Consume = 30,
  en_Reason_LegionBoss_Create = 31,
  en_Reason_addTowerRestCount = 32,
  en_Reason_LegionFightKill = 33,
  en_ReaSon_RandomHeroCost = 34,
  en_Reason_LegionBossReliveConsume = 36,
  en_Reason_ArenaRankGet = 40,
  en_Reason_ArenaBuyCountCost = 41,
  en_Reason_ArenaChallengeCreate = 42,
  en_Reason_GiftCreate = 43,
  en_Reason_WorldBossCheerComsume = 44,
  en_Reason_WorldBossDamageCreate = 45,
  en_Reason_WorldBossReliveConsume = 46,
  en_Reason_CampBattleGet = 50,
  en_Reason_BuyPhyStrengthConsume = 51,
  en_Reason_BuyPhyStrengthCreate = 52,
  en_Reason_ResumePhyStrengthCreate = 53,
  en_Reason_LevelUpCreate = 54,
  en_Reason_PerfectPassSection = 55,
  en_Reason_FriendGivePhyStrength = 56,
  en_Reason_GoldAnimaTrain = 57,
  en_Reason_DungeonPhyStrengthReback = 58,
  en_Reason_ClimTowerChallengeAward = 59,
  en_Reason_LegionShopAward = 60,
  en_Reason_TaskFinishReward = 61,
  en_Reason_SELLGODANIMALSOUL = 62,
  en_Reason_ShopSystem_RandomHero = 63,
  en_Reason_ItemUse = 64,
  en_Reason_GodAnimalActive = 65,
  en_Reason_GodAnimalLevelStep = 66,
  en_Reason_SellEquip = 67,
  en_Reason_EquipCombine = 68,
  en_Reason_SELLHERO = 69,
  en_Reason_EquipLevelUp = 70,
  en_Reason_SellEquipChip = 71,
  en_Reason_EquipChipCombine = 72,
  en_Reason_DreamLand_OpenBox = 73,
  en_Reason_GetMailAward = 74,
  en_Reason_TallentUpgrade = 75,
  en_Reason_ItemSell = 76,
  en_Reason_Inherit_Cost = 78,
  en_Reason_ManorSilverResAddSpeed = 79,
  en_Reason_ManorHeroExpResAddSpeed = 80,
  en_Reason_ManorRes_LevelUp = 81,
  en_Reason_ManorRes_Harvest = 82,
  en_Reason_Manor_WuHunDian_LEVELUP_COST = 83,
  en_Reason_Manor_WuHunDian_WUXIEKEJI_Cost = 84,
  en_Reason_Manor_WuHunDian_Refresh = 85,
  en_Reason_Manor_TieJiangPu_LEVELUP_COST = 86,
  en_Reason_Manor_TieJiangPu_Refresh = 87,
  en_Reason_Manor_TieJiangPu_WUXIEKEJI_Cost = 88,
  en_Reason_Manor_WuHunDian_LEVELUP_GOLDADDSPEED = 89,
  en_Reason_Manor_TieJiangPu_LEVELUP_GOLDADDSPEED = 90,
  en_Reason_Manor_Actor_Loot_Other = 91,
  en_Reason_AddHero = 92,
  en_Reason_CallHero = 93,
  en_Reason_EquipFavorite = 94,
  en_Reason_CombineFavorite = 95,
  en_Reason_Manor_Loot = 96,
  en_Reason_SHOPSYSTEM_RefreshHonorConvert = 97,
  en_Reason_SHOPSYSTEM_Honor_Convert = 98,
  en_Reason_RECOVER_VIGOR = 99,
  en_Reason_Manor_Search = 100,
  en_Reason_Arena_ResetCost = 101,
  en_Reason_WORLD_CHATCOST = 102,
  en_Reason_CoinTree_Shake = 103,
  en_Reason_SanGongConsume = 104,
  en_Reason_ConvertCode_Convert = 105,
  en_Reason_Gold_Pay = 106,
  en_Reason_Legin_Worship_GetPhyStrength = 107,
  en_Reason_Legin_Worship = 108,
  en_Reason_LegionShop_BUY = 109,
  en_Reason_Add_Contribute = 110,
  en_Reason_Legion_Shop_Refresh = 111,
  en_Reason_Legion_Shop_Buy = 112,
  en_Reason_RandHero_Get_HeroExp = 113,
  en_Reason_First_Pay = 114,
  en_Reason_EquipFB_FPCostGold = 115,
  en_Reason_CheckInReward = 116,
  en_Reason_LUNCH_GETVIGOR = 117,
  en_Reason_DINNER_GETVIGOR = 118,
  en_Reason_Manor_Protect = 119,
  en_Reason_Item_Use = 120,
  en_Reason_BUY_GROWUP_PLAN = 121,
  en_Reason_GROWUPPLAN_GET = 122,
  en_Reason_ACC_PayMent_GET = 123,
  en_Reason_MonthCard_GET = 124,
  en_Reason_PayReturn = 125,
  en_Reason_Get_Account_Login_Reward = 126,
  en_Reason_Equip_Ronglian = 127,
  en_Reason_Equip_Xilian = 128,
  en_Reason_Equip_XilianTransfer = 129,
  en_Reason_Equip_XilianBuyLock = 130,
  en_Reason_Operate_DayPayment = 131,
  en_Reason_NormalShop_Refresh = 132,
  en_Reason_NormalShop_Buy = 133,
  en_Reason_LEGION_BATTLE = 134
};
bool CreateConsumeReason_IsValid(int value);
const CreateConsumeReason CreateConsumeReason_MIN = en_Reason_GM;
const CreateConsumeReason CreateConsumeReason_MAX = en_Reason_LEGION_BATTLE;
const int CreateConsumeReason_ARRAYSIZE = CreateConsumeReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateConsumeReason_descriptor();
inline const ::std::string& CreateConsumeReason_Name(CreateConsumeReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateConsumeReason_descriptor(), value);
}
inline bool CreateConsumeReason_Parse(
    const ::std::string& name, CreateConsumeReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateConsumeReason>(
    CreateConsumeReason_descriptor(), name, value);
}
enum MonsterType {
  en_MonsterType_Normal = 0,
  en_MonsterType_Elite = 1,
  en_MonsterType_Boss = 2,
  en_MonsterType_WorldBoss = 3
};
bool MonsterType_IsValid(int value);
const MonsterType MonsterType_MIN = en_MonsterType_Normal;
const MonsterType MonsterType_MAX = en_MonsterType_WorldBoss;
const int MonsterType_ARRAYSIZE = MonsterType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MonsterType_descriptor();
inline const ::std::string& MonsterType_Name(MonsterType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MonsterType_descriptor(), value);
}
inline bool MonsterType_Parse(
    const ::std::string& name, MonsterType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MonsterType>(
    MonsterType_descriptor(), name, value);
}
enum MaidPlayState {
  en_MaidPlay_Used = 1,
  en_MaidPlay_Limit = 2,
  en_MaidPlay_Can = 3
};
bool MaidPlayState_IsValid(int value);
const MaidPlayState MaidPlayState_MIN = en_MaidPlay_Used;
const MaidPlayState MaidPlayState_MAX = en_MaidPlay_Can;
const int MaidPlayState_ARRAYSIZE = MaidPlayState_MAX + 1;

const ::google::protobuf::EnumDescriptor* MaidPlayState_descriptor();
inline const ::std::string& MaidPlayState_Name(MaidPlayState value) {
  return ::google::protobuf::internal::NameOfEnum(
    MaidPlayState_descriptor(), value);
}
inline bool MaidPlayState_Parse(
    const ::std::string& name, MaidPlayState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MaidPlayState>(
    MaidPlayState_descriptor(), name, value);
}
enum enLegionOccupation {
  en_LegionOccupation_Leader = 1,
  en_LegionOccupation_ViceLeader = 2,
  en_LegionOccupation_Member = 3,
  en_LegionOccupation_Newer = 4
};
bool enLegionOccupation_IsValid(int value);
const enLegionOccupation enLegionOccupation_MIN = en_LegionOccupation_Leader;
const enLegionOccupation enLegionOccupation_MAX = en_LegionOccupation_Newer;
const int enLegionOccupation_ARRAYSIZE = enLegionOccupation_MAX + 1;

const ::google::protobuf::EnumDescriptor* enLegionOccupation_descriptor();
inline const ::std::string& enLegionOccupation_Name(enLegionOccupation value) {
  return ::google::protobuf::internal::NameOfEnum(
    enLegionOccupation_descriptor(), value);
}
inline bool enLegionOccupation_Parse(
    const ::std::string& name, enLegionOccupation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enLegionOccupation>(
    enLegionOccupation_descriptor(), name, value);
}
enum enLegionPayType {
  en_LegionPay_Day = 0,
  en_LegionPay_Week = 1
};
bool enLegionPayType_IsValid(int value);
const enLegionPayType enLegionPayType_MIN = en_LegionPay_Day;
const enLegionPayType enLegionPayType_MAX = en_LegionPay_Week;
const int enLegionPayType_ARRAYSIZE = enLegionPayType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enLegionPayType_descriptor();
inline const ::std::string& enLegionPayType_Name(enLegionPayType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enLegionPayType_descriptor(), value);
}
inline bool enLegionPayType_Parse(
    const ::std::string& name, enLegionPayType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enLegionPayType>(
    enLegionPayType_descriptor(), name, value);
}
enum enLegionShopItemType {
  en_LegionShop_Item = 1,
  en_LegionShop_LifeAtt = 2,
  en_LegionShop_Hero = 3
};
bool enLegionShopItemType_IsValid(int value);
const enLegionShopItemType enLegionShopItemType_MIN = en_LegionShop_Item;
const enLegionShopItemType enLegionShopItemType_MAX = en_LegionShop_Hero;
const int enLegionShopItemType_ARRAYSIZE = enLegionShopItemType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enLegionShopItemType_descriptor();
inline const ::std::string& enLegionShopItemType_Name(enLegionShopItemType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enLegionShopItemType_descriptor(), value);
}
inline bool enLegionShopItemType_Parse(
    const ::std::string& name, enLegionShopItemType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enLegionShopItemType>(
    enLegionShopItemType_descriptor(), name, value);
}
enum enLegionShopType {
  en_ShopType_Prop = 0,
  en_ShopType_Item = 1,
  en_ShopType_Hero = 2
};
bool enLegionShopType_IsValid(int value);
const enLegionShopType enLegionShopType_MIN = en_ShopType_Prop;
const enLegionShopType enLegionShopType_MAX = en_ShopType_Hero;
const int enLegionShopType_ARRAYSIZE = enLegionShopType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enLegionShopType_descriptor();
inline const ::std::string& enLegionShopType_Name(enLegionShopType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enLegionShopType_descriptor(), value);
}
inline bool enLegionShopType_Parse(
    const ::std::string& name, enLegionShopType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enLegionShopType>(
    enLegionShopType_descriptor(), name, value);
}
enum enChatChannel {
  en_ChatChannel_World = 1,
  en_ChatChannel_Legion = 3,
  en_ChatChannel_System = 4
};
bool enChatChannel_IsValid(int value);
const enChatChannel enChatChannel_MIN = en_ChatChannel_World;
const enChatChannel enChatChannel_MAX = en_ChatChannel_System;
const int enChatChannel_ARRAYSIZE = enChatChannel_MAX + 1;

const ::google::protobuf::EnumDescriptor* enChatChannel_descriptor();
inline const ::std::string& enChatChannel_Name(enChatChannel value) {
  return ::google::protobuf::internal::NameOfEnum(
    enChatChannel_descriptor(), value);
}
inline bool enChatChannel_Parse(
    const ::std::string& name, enChatChannel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enChatChannel>(
    enChatChannel_descriptor(), name, value);
}
enum ArenaAppendState {
  en_ArenaAppendState_Change = 1,
  en_ArenaAppendState_Reset = 2,
  en_ArenaAppendState_BuyOnce = 3
};
bool ArenaAppendState_IsValid(int value);
const ArenaAppendState ArenaAppendState_MIN = en_ArenaAppendState_Change;
const ArenaAppendState ArenaAppendState_MAX = en_ArenaAppendState_BuyOnce;
const int ArenaAppendState_ARRAYSIZE = ArenaAppendState_MAX + 1;

const ::google::protobuf::EnumDescriptor* ArenaAppendState_descriptor();
inline const ::std::string& ArenaAppendState_Name(ArenaAppendState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ArenaAppendState_descriptor(), value);
}
inline bool ArenaAppendState_Parse(
    const ::std::string& name, ArenaAppendState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ArenaAppendState>(
    ArenaAppendState_descriptor(), name, value);
}
enum ArenaRankChgType {
  en_RankChgType_Keep = 0,
  en_RankChgType_Up = 1,
  en_RankChgType_Down = 3
};
bool ArenaRankChgType_IsValid(int value);
const ArenaRankChgType ArenaRankChgType_MIN = en_RankChgType_Keep;
const ArenaRankChgType ArenaRankChgType_MAX = en_RankChgType_Down;
const int ArenaRankChgType_ARRAYSIZE = ArenaRankChgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ArenaRankChgType_descriptor();
inline const ::std::string& ArenaRankChgType_Name(ArenaRankChgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ArenaRankChgType_descriptor(), value);
}
inline bool ArenaRankChgType_Parse(
    const ::std::string& name, ArenaRankChgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ArenaRankChgType>(
    ArenaRankChgType_descriptor(), name, value);
}
enum CampBattleResoultType {
  en_CampBattleResoultType_DoubleHit = 0,
  en_CampBattleResoultType_Win = 1,
  en_CampBattleResoultType_WinEnd = 2
};
bool CampBattleResoultType_IsValid(int value);
const CampBattleResoultType CampBattleResoultType_MIN = en_CampBattleResoultType_DoubleHit;
const CampBattleResoultType CampBattleResoultType_MAX = en_CampBattleResoultType_WinEnd;
const int CampBattleResoultType_ARRAYSIZE = CampBattleResoultType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CampBattleResoultType_descriptor();
inline const ::std::string& CampBattleResoultType_Name(CampBattleResoultType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CampBattleResoultType_descriptor(), value);
}
inline bool CampBattleResoultType_Parse(
    const ::std::string& name, CampBattleResoultType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CampBattleResoultType>(
    CampBattleResoultType_descriptor(), name, value);
}
enum PhyStrengthType {
  en_PhyStrengthType_None = 0,
  en_PhyStrengthType_Have = 1,
  en_PhyStrengthType_HaveGet = 2
};
bool PhyStrengthType_IsValid(int value);
const PhyStrengthType PhyStrengthType_MIN = en_PhyStrengthType_None;
const PhyStrengthType PhyStrengthType_MAX = en_PhyStrengthType_HaveGet;
const int PhyStrengthType_ARRAYSIZE = PhyStrengthType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PhyStrengthType_descriptor();
inline const ::std::string& PhyStrengthType_Name(PhyStrengthType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PhyStrengthType_descriptor(), value);
}
inline bool PhyStrengthType_Parse(
    const ::std::string& name, PhyStrengthType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PhyStrengthType>(
    PhyStrengthType_descriptor(), name, value);
}
enum marQueueType {
  en_marQueue_HeroLevelStep = 1,
  en_marQueue_GodAnimalLevelStep = 2,
  en_marQueue_WorldBossKill = 3,
  en_marQueue_ArenaTopOne = 4,
  en_marQueue_LegionShop = 5,
  en_marQueue_FightSoul = 6,
  en_marQueue_CampKill = 7,
  en_GMOnline_Send = 8
};
bool marQueueType_IsValid(int value);
const marQueueType marQueueType_MIN = en_marQueue_HeroLevelStep;
const marQueueType marQueueType_MAX = en_GMOnline_Send;
const int marQueueType_ARRAYSIZE = marQueueType_MAX + 1;

const ::google::protobuf::EnumDescriptor* marQueueType_descriptor();
inline const ::std::string& marQueueType_Name(marQueueType value) {
  return ::google::protobuf::internal::NameOfEnum(
    marQueueType_descriptor(), value);
}
inline bool marQueueType_Parse(
    const ::std::string& name, marQueueType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<marQueueType>(
    marQueueType_descriptor(), name, value);
}
enum TaskState {
  en_Task_OPen = 1,
  en_Task_Finish = 2,
  en_Task_HaveReward = 3
};
bool TaskState_IsValid(int value);
const TaskState TaskState_MIN = en_Task_OPen;
const TaskState TaskState_MAX = en_Task_HaveReward;
const int TaskState_ARRAYSIZE = TaskState_MAX + 1;

const ::google::protobuf::EnumDescriptor* TaskState_descriptor();
inline const ::std::string& TaskState_Name(TaskState value) {
  return ::google::protobuf::internal::NameOfEnum(
    TaskState_descriptor(), value);
}
inline bool TaskState_Parse(
    const ::std::string& name, TaskState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TaskState>(
    TaskState_descriptor(), name, value);
}
enum enTaskType {
  enTaskType_MainLine = 1,
  enTaskType_DayHave = 2,
  enTaskType_BranchLine = 3,
  enTaskType_MainLineAndBranchLine = 4
};
bool enTaskType_IsValid(int value);
const enTaskType enTaskType_MIN = enTaskType_MainLine;
const enTaskType enTaskType_MAX = enTaskType_MainLineAndBranchLine;
const int enTaskType_ARRAYSIZE = enTaskType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enTaskType_descriptor();
inline const ::std::string& enTaskType_Name(enTaskType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enTaskType_descriptor(), value);
}
inline bool enTaskType_Parse(
    const ::std::string& name, enTaskType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enTaskType>(
    enTaskType_descriptor(), name, value);
}
enum EquipSellType {
  en_EquipSellType_NULL = 0,
  en_EquipSellType_Silver = 1,
  en_EquipSellType_Gold = 2
};
bool EquipSellType_IsValid(int value);
const EquipSellType EquipSellType_MIN = en_EquipSellType_NULL;
const EquipSellType EquipSellType_MAX = en_EquipSellType_Gold;
const int EquipSellType_ARRAYSIZE = EquipSellType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EquipSellType_descriptor();
inline const ::std::string& EquipSellType_Name(EquipSellType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EquipSellType_descriptor(), value);
}
inline bool EquipSellType_Parse(
    const ::std::string& name, EquipSellType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EquipSellType>(
    EquipSellType_descriptor(), name, value);
}
enum EquipContainerType {
  en_EquipContainer_ActorBag = 0,
  en_EquipContainer_HeroWear = 1
};
bool EquipContainerType_IsValid(int value);
const EquipContainerType EquipContainerType_MIN = en_EquipContainer_ActorBag;
const EquipContainerType EquipContainerType_MAX = en_EquipContainer_HeroWear;
const int EquipContainerType_ARRAYSIZE = EquipContainerType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EquipContainerType_descriptor();
inline const ::std::string& EquipContainerType_Name(EquipContainerType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EquipContainerType_descriptor(), value);
}
inline bool EquipContainerType_Parse(
    const ::std::string& name, EquipContainerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EquipContainerType>(
    EquipContainerType_descriptor(), name, value);
}
enum EquipPos {
  en_EquipPos_Weap = 0,
  en_EquipPos_Clothes = 1,
  en_EquipPos_ShouShi = 2,
  en_EquipPos_Qiwu = 3,
  en_EquipPos_Shoes = 4,
  en_EquipPos_Miji = 5,
  en_EquipPos_Reserve = 6
};
bool EquipPos_IsValid(int value);
const EquipPos EquipPos_MIN = en_EquipPos_Weap;
const EquipPos EquipPos_MAX = en_EquipPos_Reserve;
const int EquipPos_ARRAYSIZE = EquipPos_MAX + 1;

const ::google::protobuf::EnumDescriptor* EquipPos_descriptor();
inline const ::std::string& EquipPos_Name(EquipPos value) {
  return ::google::protobuf::internal::NameOfEnum(
    EquipPos_descriptor(), value);
}
inline bool EquipPos_Parse(
    const ::std::string& name, EquipPos* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EquipPos>(
    EquipPos_descriptor(), name, value);
}
enum COVERHEROVIEM {
  enOpenCovert = 1,
  enOpenSell = 2
};
bool COVERHEROVIEM_IsValid(int value);
const COVERHEROVIEM COVERHEROVIEM_MIN = enOpenCovert;
const COVERHEROVIEM COVERHEROVIEM_MAX = enOpenSell;
const int COVERHEROVIEM_ARRAYSIZE = COVERHEROVIEM_MAX + 1;

const ::google::protobuf::EnumDescriptor* COVERHEROVIEM_descriptor();
inline const ::std::string& COVERHEROVIEM_Name(COVERHEROVIEM value) {
  return ::google::protobuf::internal::NameOfEnum(
    COVERHEROVIEM_descriptor(), value);
}
inline bool COVERHEROVIEM_Parse(
    const ::std::string& name, COVERHEROVIEM* value) {
  return ::google::protobuf::internal::ParseNamedEnum<COVERHEROVIEM>(
    COVERHEROVIEM_descriptor(), name, value);
}
enum enMailType {
  enMailType_Com = 1,
  enMailType_DaySend = 2
};
bool enMailType_IsValid(int value);
const enMailType enMailType_MIN = enMailType_Com;
const enMailType enMailType_MAX = enMailType_DaySend;
const int enMailType_ARRAYSIZE = enMailType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enMailType_descriptor();
inline const ::std::string& enMailType_Name(enMailType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enMailType_descriptor(), value);
}
inline bool enMailType_Parse(
    const ::std::string& name, enMailType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enMailType>(
    enMailType_descriptor(), name, value);
}
enum MailState {
  en_MailState_UnRead = 0,
  en_MailState_Readed = 1
};
bool MailState_IsValid(int value);
const MailState MailState_MIN = en_MailState_UnRead;
const MailState MailState_MAX = en_MailState_Readed;
const int MailState_ARRAYSIZE = MailState_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailState_descriptor();
inline const ::std::string& MailState_Name(MailState value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailState_descriptor(), value);
}
inline bool MailState_Parse(
    const ::std::string& name, MailState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailState>(
    MailState_descriptor(), name, value);
}
enum enDreamLandSceneState {
  en_State_NOOPEN = 1,
  en_State_OPEN = 2,
  en_State_FINISH = 3
};
bool enDreamLandSceneState_IsValid(int value);
const enDreamLandSceneState enDreamLandSceneState_MIN = en_State_NOOPEN;
const enDreamLandSceneState enDreamLandSceneState_MAX = en_State_FINISH;
const int enDreamLandSceneState_ARRAYSIZE = enDreamLandSceneState_MAX + 1;

const ::google::protobuf::EnumDescriptor* enDreamLandSceneState_descriptor();
inline const ::std::string& enDreamLandSceneState_Name(enDreamLandSceneState value) {
  return ::google::protobuf::internal::NameOfEnum(
    enDreamLandSceneState_descriptor(), value);
}
inline bool enDreamLandSceneState_Parse(
    const ::std::string& name, enDreamLandSceneState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enDreamLandSceneState>(
    enDreamLandSceneState_descriptor(), name, value);
}
enum ManorResType {
  en_ManorResType_NONE = 0,
  en_ManorResType_Silver = 1,
  en_ManorResType_HEROEXP = 2,
  en_ManorResType_TIEJIANGPU = 3,
  en_ManorResType_WUHUNDIAN = 4
};
bool ManorResType_IsValid(int value);
const ManorResType ManorResType_MIN = en_ManorResType_NONE;
const ManorResType ManorResType_MAX = en_ManorResType_WUHUNDIAN;
const int ManorResType_ARRAYSIZE = ManorResType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ManorResType_descriptor();
inline const ::std::string& ManorResType_Name(ManorResType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ManorResType_descriptor(), value);
}
inline bool ManorResType_Parse(
    const ::std::string& name, ManorResType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ManorResType>(
    ManorResType_descriptor(), name, value);
}
enum RandomType {
  en_RandType_None = 0,
  en_RandType_Token_RandOne = 1,
  en_RandType_Token_RandTen = 2,
  en_RandType_Gold_RandOne = 3,
  en_RandType_Gold_RandTen = 4,
  en_RandType_VIP_RandOne = 5,
  en_RandType_VIP_RandTen = 6
};
bool RandomType_IsValid(int value);
const RandomType RandomType_MIN = en_RandType_None;
const RandomType RandomType_MAX = en_RandType_VIP_RandTen;
const int RandomType_ARRAYSIZE = RandomType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RandomType_descriptor();
inline const ::std::string& RandomType_Name(RandomType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RandomType_descriptor(), value);
}
inline bool RandomType_Parse(
    const ::std::string& name, RandomType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RandomType>(
    RandomType_descriptor(), name, value);
}
enum enRandReturnType {
  enRandReturnType_None = 0,
  enRandReturnType_Hero = 1,
  enRandReturnType_Item = 2,
  enRandReturnType_HeroSoul = 3
};
bool enRandReturnType_IsValid(int value);
const enRandReturnType enRandReturnType_MIN = enRandReturnType_None;
const enRandReturnType enRandReturnType_MAX = enRandReturnType_HeroSoul;
const int enRandReturnType_ARRAYSIZE = enRandReturnType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enRandReturnType_descriptor();
inline const ::std::string& enRandReturnType_Name(enRandReturnType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enRandReturnType_descriptor(), value);
}
inline bool enRandReturnType_Parse(
    const ::std::string& name, enRandReturnType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enRandReturnType>(
    enRandReturnType_descriptor(), name, value);
}
enum CoinTreeShakeType {
  enCoinTreeShakeType_One = 1,
  enCoinTreeShakeType_Ten = 2
};
bool CoinTreeShakeType_IsValid(int value);
const CoinTreeShakeType CoinTreeShakeType_MIN = enCoinTreeShakeType_One;
const CoinTreeShakeType CoinTreeShakeType_MAX = enCoinTreeShakeType_Ten;
const int CoinTreeShakeType_ARRAYSIZE = CoinTreeShakeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CoinTreeShakeType_descriptor();
inline const ::std::string& CoinTreeShakeType_Name(CoinTreeShakeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CoinTreeShakeType_descriptor(), value);
}
inline bool CoinTreeShakeType_Parse(
    const ::std::string& name, CoinTreeShakeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CoinTreeShakeType>(
    CoinTreeShakeType_descriptor(), name, value);
}
enum enWorshipType {
  enWorshipType_Free = 1,
  enWorshipType_UseSilver = 2,
  enWorshipType_UseGold = 3
};
bool enWorshipType_IsValid(int value);
const enWorshipType enWorshipType_MIN = enWorshipType_Free;
const enWorshipType enWorshipType_MAX = enWorshipType_UseGold;
const int enWorshipType_ARRAYSIZE = enWorshipType_MAX + 1;

const ::google::protobuf::EnumDescriptor* enWorshipType_descriptor();
inline const ::std::string& enWorshipType_Name(enWorshipType value) {
  return ::google::protobuf::internal::NameOfEnum(
    enWorshipType_descriptor(), value);
}
inline bool enWorshipType_Parse(
    const ::std::string& name, enWorshipType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enWorshipType>(
    enWorshipType_descriptor(), name, value);
}
enum enSpecialActiveId {
  enSpecialActiveId_GrowUpID = 1,
  enSpecialActiveId_AccPayMent = 2,
  enSpecialActiveId_PhoneStream = 3,
  enSpecialActiveId_AccLogin = 4,
  enSpecialActiveId_DayPayment = 5
};
bool enSpecialActiveId_IsValid(int value);
const enSpecialActiveId enSpecialActiveId_MIN = enSpecialActiveId_GrowUpID;
const enSpecialActiveId enSpecialActiveId_MAX = enSpecialActiveId_DayPayment;
const int enSpecialActiveId_ARRAYSIZE = enSpecialActiveId_MAX + 1;

const ::google::protobuf::EnumDescriptor* enSpecialActiveId_descriptor();
inline const ::std::string& enSpecialActiveId_Name(enSpecialActiveId value) {
  return ::google::protobuf::internal::NameOfEnum(
    enSpecialActiveId_descriptor(), value);
}
inline bool enSpecialActiveId_Parse(
    const ::std::string& name, enSpecialActiveId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enSpecialActiveId>(
    enSpecialActiveId_descriptor(), name, value);
}
// ===================================================================

class SCMessage : public ::google::protobuf::Message {
 public:
  SCMessage();
  virtual ~SCMessage();

  SCMessage(const SCMessage& from);

  inline SCMessage& operator=(const SCMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SCMessage& default_instance();

  void Swap(SCMessage* other);

  // implements Message ----------------------------------------------

  SCMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SCMessage& from);
  void MergeFrom(const SCMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCmd = 1;
  inline bool has_icmd() const;
  inline void clear_icmd();
  static const int kICmdFieldNumber = 1;
  inline ::google::protobuf::int32 icmd() const;
  inline void set_icmd(::google::protobuf::int32 value);

  // optional bytes strMsgBody = 2;
  inline bool has_strmsgbody() const;
  inline void clear_strmsgbody();
  static const int kStrMsgBodyFieldNumber = 2;
  inline const ::std::string& strmsgbody() const;
  inline void set_strmsgbody(const ::std::string& value);
  inline void set_strmsgbody(const char* value);
  inline void set_strmsgbody(const void* value, size_t size);
  inline ::std::string* mutable_strmsgbody();
  inline ::std::string* release_strmsgbody();
  inline void set_allocated_strmsgbody(::std::string* strmsgbody);

  // @@protoc_insertion_point(class_scope:GSProto.SCMessage)
 private:
  inline void set_has_icmd();
  inline void clear_has_icmd();
  inline void set_has_strmsgbody();
  inline void clear_has_strmsgbody();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strmsgbody_;
  ::google::protobuf::int32 icmd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static SCMessage* default_instance_;
};
// -------------------------------------------------------------------

class CSMessage : public ::google::protobuf::Message {
 public:
  CSMessage();
  virtual ~CSMessage();

  CSMessage(const CSMessage& from);

  inline CSMessage& operator=(const CSMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMessage& default_instance();

  void Swap(CSMessage* other);

  // implements Message ----------------------------------------------

  CSMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMessage& from);
  void MergeFrom(const CSMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCmd = 1;
  inline bool has_icmd() const;
  inline void clear_icmd();
  static const int kICmdFieldNumber = 1;
  inline ::google::protobuf::int32 icmd() const;
  inline void set_icmd(::google::protobuf::int32 value);

  // optional bytes strMsgBody = 2;
  inline bool has_strmsgbody() const;
  inline void clear_strmsgbody();
  static const int kStrMsgBodyFieldNumber = 2;
  inline const ::std::string& strmsgbody() const;
  inline void set_strmsgbody(const ::std::string& value);
  inline void set_strmsgbody(const char* value);
  inline void set_strmsgbody(const void* value, size_t size);
  inline ::std::string* mutable_strmsgbody();
  inline ::std::string* release_strmsgbody();
  inline void set_allocated_strmsgbody(::std::string* strmsgbody);

  // @@protoc_insertion_point(class_scope:GSProto.CSMessage)
 private:
  inline void set_has_icmd();
  inline void clear_has_icmd();
  inline void set_has_strmsgbody();
  inline void clear_has_strmsgbody();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strmsgbody_;
  ::google::protobuf::int32 icmd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CSMessage* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_Error : public ::google::protobuf::Message {
 public:
  Cmd_Sc_Error();
  virtual ~Cmd_Sc_Error();

  Cmd_Sc_Error(const Cmd_Sc_Error& from);

  inline Cmd_Sc_Error& operator=(const Cmd_Sc_Error& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_Error& default_instance();

  void Swap(Cmd_Sc_Error* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_Error* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_Error& from);
  void MergeFrom(const Cmd_Sc_Error& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strErrorMsg = 1;
  inline bool has_strerrormsg() const;
  inline void clear_strerrormsg();
  static const int kStrErrorMsgFieldNumber = 1;
  inline const ::std::string& strerrormsg() const;
  inline void set_strerrormsg(const ::std::string& value);
  inline void set_strerrormsg(const char* value);
  inline void set_strerrormsg(const char* value, size_t size);
  inline ::std::string* mutable_strerrormsg();
  inline ::std::string* release_strerrormsg();
  inline void set_allocated_strerrormsg(::std::string* strerrormsg);

  // optional int32 iType = 2;
  inline bool has_itype() const;
  inline void clear_itype();
  static const int kITypeFieldNumber = 2;
  inline ::google::protobuf::int32 itype() const;
  inline void set_itype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_Error)
 private:
  inline void set_has_strerrormsg();
  inline void clear_has_strerrormsg();
  inline void set_has_itype();
  inline void clear_has_itype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strerrormsg_;
  ::google::protobuf::int32 itype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_Error* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_Alogin : public ::google::protobuf::Message {
 public:
  Cmd_Cs_Alogin();
  virtual ~Cmd_Cs_Alogin();

  Cmd_Cs_Alogin(const Cmd_Cs_Alogin& from);

  inline Cmd_Cs_Alogin& operator=(const Cmd_Cs_Alogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_Alogin& default_instance();

  void Swap(Cmd_Cs_Alogin* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_Alogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_Alogin& from);
  void MergeFrom(const Cmd_Cs_Alogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iIsVersionCheck = 1;
  inline bool has_iisversioncheck() const;
  inline void clear_iisversioncheck();
  static const int kIIsVersionCheckFieldNumber = 1;
  inline ::google::protobuf::int32 iisversioncheck() const;
  inline void set_iisversioncheck(::google::protobuf::int32 value);

  // required int32 iVersionType = 2;
  inline bool has_iversiontype() const;
  inline void clear_iversiontype();
  static const int kIVersionTypeFieldNumber = 2;
  inline ::google::protobuf::int32 iversiontype() const;
  inline void set_iversiontype(::google::protobuf::int32 value);

  // required int32 iVersionMain = 3;
  inline bool has_iversionmain() const;
  inline void clear_iversionmain();
  static const int kIVersionMainFieldNumber = 3;
  inline ::google::protobuf::int32 iversionmain() const;
  inline void set_iversionmain(::google::protobuf::int32 value);

  // required int32 iVersionFeature = 4;
  inline bool has_iversionfeature() const;
  inline void clear_iversionfeature();
  static const int kIVersionFeatureFieldNumber = 4;
  inline ::google::protobuf::int32 iversionfeature() const;
  inline void set_iversionfeature(::google::protobuf::int32 value);

  // required int32 iVersionBuild = 5;
  inline bool has_iversionbuild() const;
  inline void clear_iversionbuild();
  static const int kIVersionBuildFieldNumber = 5;
  inline ::google::protobuf::int32 iversionbuild() const;
  inline void set_iversionbuild(::google::protobuf::int32 value);

  // required string strChannelFlag = 6;
  inline bool has_strchannelflag() const;
  inline void clear_strchannelflag();
  static const int kStrChannelFlagFieldNumber = 6;
  inline const ::std::string& strchannelflag() const;
  inline void set_strchannelflag(const ::std::string& value);
  inline void set_strchannelflag(const char* value);
  inline void set_strchannelflag(const char* value, size_t size);
  inline ::std::string* mutable_strchannelflag();
  inline ::std::string* release_strchannelflag();
  inline void set_allocated_strchannelflag(::std::string* strchannelflag);

  // optional string strChannel = 7;
  inline bool has_strchannel() const;
  inline void clear_strchannel();
  static const int kStrChannelFieldNumber = 7;
  inline const ::std::string& strchannel() const;
  inline void set_strchannel(const ::std::string& value);
  inline void set_strchannel(const char* value);
  inline void set_strchannel(const char* value, size_t size);
  inline ::std::string* mutable_strchannel();
  inline ::std::string* release_strchannel();
  inline void set_allocated_strchannel(::std::string* strchannel);

  // optional string strAccessKey = 8;
  inline bool has_straccesskey() const;
  inline void clear_straccesskey();
  static const int kStrAccessKeyFieldNumber = 8;
  inline const ::std::string& straccesskey() const;
  inline void set_straccesskey(const ::std::string& value);
  inline void set_straccesskey(const char* value);
  inline void set_straccesskey(const char* value, size_t size);
  inline ::std::string* mutable_straccesskey();
  inline ::std::string* release_straccesskey();
  inline void set_allocated_straccesskey(::std::string* straccesskey);

  // optional string strPayToken = 9;
  inline bool has_strpaytoken() const;
  inline void clear_strpaytoken();
  static const int kStrPayTokenFieldNumber = 9;
  inline const ::std::string& strpaytoken() const;
  inline void set_strpaytoken(const ::std::string& value);
  inline void set_strpaytoken(const char* value);
  inline void set_strpaytoken(const char* value, size_t size);
  inline ::std::string* mutable_strpaytoken();
  inline ::std::string* release_strpaytoken();
  inline void set_allocated_strpaytoken(::std::string* strpaytoken);

  // optional string strPf = 10;
  inline bool has_strpf() const;
  inline void clear_strpf();
  static const int kStrPfFieldNumber = 10;
  inline const ::std::string& strpf() const;
  inline void set_strpf(const ::std::string& value);
  inline void set_strpf(const char* value);
  inline void set_strpf(const char* value, size_t size);
  inline ::std::string* mutable_strpf();
  inline ::std::string* release_strpf();
  inline void set_allocated_strpf(::std::string* strpf);

  // optional string strPfKey = 11;
  inline bool has_strpfkey() const;
  inline void clear_strpfkey();
  static const int kStrPfKeyFieldNumber = 11;
  inline const ::std::string& strpfkey() const;
  inline void set_strpfkey(const ::std::string& value);
  inline void set_strpfkey(const char* value);
  inline void set_strpfkey(const char* value, size_t size);
  inline ::std::string* mutable_strpfkey();
  inline ::std::string* release_strpfkey();
  inline void set_allocated_strpfkey(::std::string* strpfkey);

  // optional string strChannelId = 12;
  inline bool has_strchannelid() const;
  inline void clear_strchannelid();
  static const int kStrChannelIdFieldNumber = 12;
  inline const ::std::string& strchannelid() const;
  inline void set_strchannelid(const ::std::string& value);
  inline void set_strchannelid(const char* value);
  inline void set_strchannelid(const char* value, size_t size);
  inline ::std::string* mutable_strchannelid();
  inline ::std::string* release_strchannelid();
  inline void set_allocated_strchannelid(::std::string* strchannelid);

  // optional string strUserId = 13;
  inline bool has_struserid() const;
  inline void clear_struserid();
  static const int kStrUserIdFieldNumber = 13;
  inline const ::std::string& struserid() const;
  inline void set_struserid(const ::std::string& value);
  inline void set_struserid(const char* value);
  inline void set_struserid(const char* value, size_t size);
  inline ::std::string* mutable_struserid();
  inline ::std::string* release_struserid();
  inline void set_allocated_struserid(::std::string* struserid);

  // optional string strToken = 14;
  inline bool has_strtoken() const;
  inline void clear_strtoken();
  static const int kStrTokenFieldNumber = 14;
  inline const ::std::string& strtoken() const;
  inline void set_strtoken(const ::std::string& value);
  inline void set_strtoken(const char* value);
  inline void set_strtoken(const char* value, size_t size);
  inline ::std::string* mutable_strtoken();
  inline ::std::string* release_strtoken();
  inline void set_allocated_strtoken(::std::string* strtoken);

  // optional string strProductCode = 15;
  inline bool has_strproductcode() const;
  inline void clear_strproductcode();
  static const int kStrProductCodeFieldNumber = 15;
  inline const ::std::string& strproductcode() const;
  inline void set_strproductcode(const ::std::string& value);
  inline void set_strproductcode(const char* value);
  inline void set_strproductcode(const char* value, size_t size);
  inline ::std::string* mutable_strproductcode();
  inline ::std::string* release_strproductcode();
  inline void set_allocated_strproductcode(::std::string* strproductcode);

  // optional string strChannelLabel = 16;
  inline bool has_strchannellabel() const;
  inline void clear_strchannellabel();
  static const int kStrChannelLabelFieldNumber = 16;
  inline const ::std::string& strchannellabel() const;
  inline void set_strchannellabel(const ::std::string& value);
  inline void set_strchannellabel(const char* value);
  inline void set_strchannellabel(const char* value, size_t size);
  inline ::std::string* mutable_strchannellabel();
  inline ::std::string* release_strchannellabel();
  inline void set_allocated_strchannellabel(::std::string* strchannellabel);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_Alogin)
 private:
  inline void set_has_iisversioncheck();
  inline void clear_has_iisversioncheck();
  inline void set_has_iversiontype();
  inline void clear_has_iversiontype();
  inline void set_has_iversionmain();
  inline void clear_has_iversionmain();
  inline void set_has_iversionfeature();
  inline void clear_has_iversionfeature();
  inline void set_has_iversionbuild();
  inline void clear_has_iversionbuild();
  inline void set_has_strchannelflag();
  inline void clear_has_strchannelflag();
  inline void set_has_strchannel();
  inline void clear_has_strchannel();
  inline void set_has_straccesskey();
  inline void clear_has_straccesskey();
  inline void set_has_strpaytoken();
  inline void clear_has_strpaytoken();
  inline void set_has_strpf();
  inline void clear_has_strpf();
  inline void set_has_strpfkey();
  inline void clear_has_strpfkey();
  inline void set_has_strchannelid();
  inline void clear_has_strchannelid();
  inline void set_has_struserid();
  inline void clear_has_struserid();
  inline void set_has_strtoken();
  inline void clear_has_strtoken();
  inline void set_has_strproductcode();
  inline void clear_has_strproductcode();
  inline void set_has_strchannellabel();
  inline void clear_has_strchannellabel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iisversioncheck_;
  ::google::protobuf::int32 iversiontype_;
  ::google::protobuf::int32 iversionmain_;
  ::google::protobuf::int32 iversionfeature_;
  ::std::string* strchannelflag_;
  ::std::string* strchannel_;
  ::std::string* straccesskey_;
  ::std::string* strpaytoken_;
  ::std::string* strpf_;
  ::std::string* strpfkey_;
  ::std::string* strchannelid_;
  ::std::string* struserid_;
  ::std::string* strtoken_;
  ::std::string* strproductcode_;
  ::std::string* strchannellabel_;
  ::google::protobuf::int32 iversionbuild_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_Alogin* default_instance_;
};
// -------------------------------------------------------------------

class CMD_REQUEST_REFRESHGOLD_CS : public ::google::protobuf::Message {
 public:
  CMD_REQUEST_REFRESHGOLD_CS();
  virtual ~CMD_REQUEST_REFRESHGOLD_CS();

  CMD_REQUEST_REFRESHGOLD_CS(const CMD_REQUEST_REFRESHGOLD_CS& from);

  inline CMD_REQUEST_REFRESHGOLD_CS& operator=(const CMD_REQUEST_REFRESHGOLD_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_REQUEST_REFRESHGOLD_CS& default_instance();

  void Swap(CMD_REQUEST_REFRESHGOLD_CS* other);

  // implements Message ----------------------------------------------

  CMD_REQUEST_REFRESHGOLD_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_REQUEST_REFRESHGOLD_CS& from);
  void MergeFrom(const CMD_REQUEST_REFRESHGOLD_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strChannel = 1;
  inline bool has_strchannel() const;
  inline void clear_strchannel();
  static const int kStrChannelFieldNumber = 1;
  inline const ::std::string& strchannel() const;
  inline void set_strchannel(const ::std::string& value);
  inline void set_strchannel(const char* value);
  inline void set_strchannel(const char* value, size_t size);
  inline ::std::string* mutable_strchannel();
  inline ::std::string* release_strchannel();
  inline void set_allocated_strchannel(::std::string* strchannel);

  // optional string strAccessKey = 2;
  inline bool has_straccesskey() const;
  inline void clear_straccesskey();
  static const int kStrAccessKeyFieldNumber = 2;
  inline const ::std::string& straccesskey() const;
  inline void set_straccesskey(const ::std::string& value);
  inline void set_straccesskey(const char* value);
  inline void set_straccesskey(const char* value, size_t size);
  inline ::std::string* mutable_straccesskey();
  inline ::std::string* release_straccesskey();
  inline void set_allocated_straccesskey(::std::string* straccesskey);

  // optional string strPayToken = 3;
  inline bool has_strpaytoken() const;
  inline void clear_strpaytoken();
  static const int kStrPayTokenFieldNumber = 3;
  inline const ::std::string& strpaytoken() const;
  inline void set_strpaytoken(const ::std::string& value);
  inline void set_strpaytoken(const char* value);
  inline void set_strpaytoken(const char* value, size_t size);
  inline ::std::string* mutable_strpaytoken();
  inline ::std::string* release_strpaytoken();
  inline void set_allocated_strpaytoken(::std::string* strpaytoken);

  // optional string strPf = 4;
  inline bool has_strpf() const;
  inline void clear_strpf();
  static const int kStrPfFieldNumber = 4;
  inline const ::std::string& strpf() const;
  inline void set_strpf(const ::std::string& value);
  inline void set_strpf(const char* value);
  inline void set_strpf(const char* value, size_t size);
  inline ::std::string* mutable_strpf();
  inline ::std::string* release_strpf();
  inline void set_allocated_strpf(::std::string* strpf);

  // optional string strPfKey = 5;
  inline bool has_strpfkey() const;
  inline void clear_strpfkey();
  static const int kStrPfKeyFieldNumber = 5;
  inline const ::std::string& strpfkey() const;
  inline void set_strpfkey(const ::std::string& value);
  inline void set_strpfkey(const char* value);
  inline void set_strpfkey(const char* value, size_t size);
  inline ::std::string* mutable_strpfkey();
  inline ::std::string* release_strpfkey();
  inline void set_allocated_strpfkey(::std::string* strpfkey);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_REQUEST_REFRESHGOLD_CS)
 private:
  inline void set_has_strchannel();
  inline void clear_has_strchannel();
  inline void set_has_straccesskey();
  inline void clear_has_straccesskey();
  inline void set_has_strpaytoken();
  inline void clear_has_strpaytoken();
  inline void set_has_strpf();
  inline void clear_has_strpf();
  inline void set_has_strpfkey();
  inline void clear_has_strpfkey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strchannel_;
  ::std::string* straccesskey_;
  ::std::string* strpaytoken_;
  ::std::string* strpf_;
  ::std::string* strpfkey_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_REQUEST_REFRESHGOLD_CS* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_Alogin : public ::google::protobuf::Message {
 public:
  Cmd_Sc_Alogin();
  virtual ~Cmd_Sc_Alogin();

  Cmd_Sc_Alogin(const Cmd_Sc_Alogin& from);

  inline Cmd_Sc_Alogin& operator=(const Cmd_Sc_Alogin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_Alogin& default_instance();

  void Swap(Cmd_Sc_Alogin* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_Alogin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_Alogin& from);
  void MergeFrom(const Cmd_Sc_Alogin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // required string strMd5 = 2;
  inline bool has_strmd5() const;
  inline void clear_strmd5();
  static const int kStrMd5FieldNumber = 2;
  inline const ::std::string& strmd5() const;
  inline void set_strmd5(const ::std::string& value);
  inline void set_strmd5(const char* value);
  inline void set_strmd5(const char* value, size_t size);
  inline ::std::string* mutable_strmd5();
  inline ::std::string* release_strmd5();
  inline void set_allocated_strmd5(::std::string* strmd5);

  // optional string strUrl = 3;
  inline bool has_strurl() const;
  inline void clear_strurl();
  static const int kStrUrlFieldNumber = 3;
  inline const ::std::string& strurl() const;
  inline void set_strurl(const ::std::string& value);
  inline void set_strurl(const char* value);
  inline void set_strurl(const char* value, size_t size);
  inline ::std::string* mutable_strurl();
  inline ::std::string* release_strurl();
  inline void set_allocated_strurl(::std::string* strurl);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_Alogin)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_strmd5();
  inline void clear_has_strmd5();
  inline void set_has_strurl();
  inline void clear_has_strurl();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strmd5_;
  ::std::string* strurl_;
  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_Alogin* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_GetRole : public ::google::protobuf::Message {
 public:
  Cmd_Sc_GetRole();
  virtual ~Cmd_Sc_GetRole();

  Cmd_Sc_GetRole(const Cmd_Sc_GetRole& from);

  inline Cmd_Sc_GetRole& operator=(const Cmd_Sc_GetRole& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_GetRole& default_instance();

  void Swap(Cmd_Sc_GetRole* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_GetRole* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_GetRole& from);
  void MergeFrom(const Cmd_Sc_GetRole& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // optional .GSProto.RoleBase roleBaseData = 2;
  inline bool has_rolebasedata() const;
  inline void clear_rolebasedata();
  static const int kRoleBaseDataFieldNumber = 2;
  inline const ::GSProto::RoleBase& rolebasedata() const;
  inline ::GSProto::RoleBase* mutable_rolebasedata();
  inline ::GSProto::RoleBase* release_rolebasedata();
  inline void set_allocated_rolebasedata(::GSProto::RoleBase* rolebasedata);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_GetRole)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();
  inline void set_has_rolebasedata();
  inline void clear_has_rolebasedata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::RoleBase* rolebasedata_;
  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_GetRole* default_instance_;
};
// -------------------------------------------------------------------

class RoleBase : public ::google::protobuf::Message {
 public:
  RoleBase();
  virtual ~RoleBase();

  RoleBase(const RoleBase& from);

  inline RoleBase& operator=(const RoleBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleBase& default_instance();

  void Swap(RoleBase* other);

  // implements Message ----------------------------------------------

  RoleBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleBase& from);
  void MergeFrom(const RoleBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // required int32 iLevel = 2;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 2;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // required int32 iExp = 3;
  inline bool has_iexp() const;
  inline void clear_iexp();
  static const int kIExpFieldNumber = 3;
  inline ::google::protobuf::int32 iexp() const;
  inline void set_iexp(::google::protobuf::int32 value);

  // required string strName = 4;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 4;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // required int32 iPhystrength = 5;
  inline bool has_iphystrength() const;
  inline void clear_iphystrength();
  static const int kIPhystrengthFieldNumber = 5;
  inline ::google::protobuf::int32 iphystrength() const;
  inline void set_iphystrength(::google::protobuf::int32 value);

  // required int32 iSilver = 6;
  inline bool has_isilver() const;
  inline void clear_isilver();
  static const int kISilverFieldNumber = 6;
  inline ::google::protobuf::int32 isilver() const;
  inline void set_isilver(::google::protobuf::int32 value);

  // required int32 iGold = 7;
  inline bool has_igold() const;
  inline void clear_igold();
  static const int kIGoldFieldNumber = 7;
  inline ::google::protobuf::int32 igold() const;
  inline void set_igold(::google::protobuf::int32 value);

  // optional int32 iHeroConvertCount = 8;
  inline bool has_iheroconvertcount() const;
  inline void clear_iheroconvertcount();
  static const int kIHeroConvertCountFieldNumber = 8;
  inline ::google::protobuf::int32 iheroconvertcount() const;
  inline void set_iheroconvertcount(::google::protobuf::int32 value);

  // repeated .GSProto.PropItem szPropList = 9;
  inline int szproplist_size() const;
  inline void clear_szproplist();
  static const int kSzPropListFieldNumber = 9;
  inline const ::GSProto::PropItem& szproplist(int index) const;
  inline ::GSProto::PropItem* mutable_szproplist(int index);
  inline ::GSProto::PropItem* add_szproplist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
      szproplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
      mutable_szproplist();

  // optional int32 iLevelUpExp = 10;
  inline bool has_ilevelupexp() const;
  inline void clear_ilevelupexp();
  static const int kILevelUpExpFieldNumber = 10;
  inline ::google::protobuf::int32 ilevelupexp() const;
  inline void set_ilevelupexp(::google::protobuf::int32 value);

  // optional int32 iVipLevel = 11;
  inline bool has_iviplevel() const;
  inline void clear_iviplevel();
  static const int kIVipLevelFieldNumber = 11;
  inline ::google::protobuf::int32 iviplevel() const;
  inline void set_iviplevel(::google::protobuf::int32 value);

  // optional int32 iVipExp = 12;
  inline bool has_ivipexp() const;
  inline void clear_ivipexp();
  static const int kIVipExpFieldNumber = 12;
  inline ::google::protobuf::int32 ivipexp() const;
  inline void set_ivipexp(::google::protobuf::int32 value);

  // optional int32 iVipLevelUpExp = 13;
  inline bool has_iviplevelupexp() const;
  inline void clear_iviplevelupexp();
  static const int kIVipLevelUpExpFieldNumber = 13;
  inline ::google::protobuf::int32 iviplevelupexp() const;
  inline void set_iviplevelupexp(::google::protobuf::int32 value);

  // optional .GSProto.enHeadType iHeadType = 14;
  inline bool has_iheadtype() const;
  inline void clear_iheadtype();
  static const int kIHeadTypeFieldNumber = 14;
  inline ::GSProto::enHeadType iheadtype() const;
  inline void set_iheadtype(::GSProto::enHeadType value);

  // optional int32 iHeadId = 15;
  inline bool has_iheadid() const;
  inline void clear_iheadid();
  static const int kIHeadIdFieldNumber = 15;
  inline ::google::protobuf::int32 iheadid() const;
  inline void set_iheadid(::google::protobuf::int32 value);

  // optional string strLegionName = 16;
  inline bool has_strlegionname() const;
  inline void clear_strlegionname();
  static const int kStrLegionNameFieldNumber = 16;
  inline const ::std::string& strlegionname() const;
  inline void set_strlegionname(const ::std::string& value);
  inline void set_strlegionname(const char* value);
  inline void set_strlegionname(const char* value, size_t size);
  inline ::std::string* mutable_strlegionname();
  inline ::std::string* release_strlegionname();
  inline void set_allocated_strlegionname(::std::string* strlegionname);

  // optional bool bShowFirstPayBtn = 17;
  inline bool has_bshowfirstpaybtn() const;
  inline void clear_bshowfirstpaybtn();
  static const int kBShowFirstPayBtnFieldNumber = 17;
  inline bool bshowfirstpaybtn() const;
  inline void set_bshowfirstpaybtn(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.RoleBase)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_iexp();
  inline void clear_has_iexp();
  inline void set_has_strname();
  inline void clear_has_strname();
  inline void set_has_iphystrength();
  inline void clear_has_iphystrength();
  inline void set_has_isilver();
  inline void clear_has_isilver();
  inline void set_has_igold();
  inline void clear_has_igold();
  inline void set_has_iheroconvertcount();
  inline void clear_has_iheroconvertcount();
  inline void set_has_ilevelupexp();
  inline void clear_has_ilevelupexp();
  inline void set_has_iviplevel();
  inline void clear_has_iviplevel();
  inline void set_has_ivipexp();
  inline void clear_has_ivipexp();
  inline void set_has_iviplevelupexp();
  inline void clear_has_iviplevelupexp();
  inline void set_has_iheadtype();
  inline void clear_has_iheadtype();
  inline void set_has_iheadid();
  inline void clear_has_iheadid();
  inline void set_has_strlegionname();
  inline void clear_has_strlegionname();
  inline void set_has_bshowfirstpaybtn();
  inline void clear_has_bshowfirstpaybtn();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwobjectid_;
  ::google::protobuf::int32 ilevel_;
  ::std::string* strname_;
  ::google::protobuf::int32 iexp_;
  ::google::protobuf::int32 iphystrength_;
  ::google::protobuf::int32 isilver_;
  ::google::protobuf::int32 igold_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem > szproplist_;
  ::google::protobuf::int32 iheroconvertcount_;
  ::google::protobuf::int32 ilevelupexp_;
  ::google::protobuf::int32 iviplevel_;
  ::google::protobuf::int32 ivipexp_;
  ::google::protobuf::int32 iviplevelupexp_;
  int iheadtype_;
  ::std::string* strlegionname_;
  ::google::protobuf::int32 iheadid_;
  bool bshowfirstpaybtn_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static RoleBase* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_HeroList : public ::google::protobuf::Message {
 public:
  Cmd_Sc_HeroList();
  virtual ~Cmd_Sc_HeroList();

  Cmd_Sc_HeroList(const Cmd_Sc_HeroList& from);

  inline Cmd_Sc_HeroList& operator=(const Cmd_Sc_HeroList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_HeroList& default_instance();

  void Swap(Cmd_Sc_HeroList* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_HeroList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_HeroList& from);
  void MergeFrom(const Cmd_Sc_HeroList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.HeroBaseData szHeroList = 1;
  inline int szherolist_size() const;
  inline void clear_szherolist();
  static const int kSzHeroListFieldNumber = 1;
  inline const ::GSProto::HeroBaseData& szherolist(int index) const;
  inline ::GSProto::HeroBaseData* mutable_szherolist(int index);
  inline ::GSProto::HeroBaseData* add_szherolist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HeroBaseData >&
      szherolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::HeroBaseData >*
      mutable_szherolist();

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_HeroList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::HeroBaseData > szherolist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_HeroList* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_HeroUpdate : public ::google::protobuf::Message {
 public:
  Cmd_Sc_HeroUpdate();
  virtual ~Cmd_Sc_HeroUpdate();

  Cmd_Sc_HeroUpdate(const Cmd_Sc_HeroUpdate& from);

  inline Cmd_Sc_HeroUpdate& operator=(const Cmd_Sc_HeroUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_HeroUpdate& default_instance();

  void Swap(Cmd_Sc_HeroUpdate* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_HeroUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_HeroUpdate& from);
  void MergeFrom(const Cmd_Sc_HeroUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.HeroBaseData heroData = 1;
  inline bool has_herodata() const;
  inline void clear_herodata();
  static const int kHeroDataFieldNumber = 1;
  inline const ::GSProto::HeroBaseData& herodata() const;
  inline ::GSProto::HeroBaseData* mutable_herodata();
  inline ::GSProto::HeroBaseData* release_herodata();
  inline void set_allocated_herodata(::GSProto::HeroBaseData* herodata);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_HeroUpdate)
 private:
  inline void set_has_herodata();
  inline void clear_has_herodata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::HeroBaseData* herodata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_HeroUpdate* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_HeroDel : public ::google::protobuf::Message {
 public:
  Cmd_Sc_HeroDel();
  virtual ~Cmd_Sc_HeroDel();

  Cmd_Sc_HeroDel(const Cmd_Sc_HeroDel& from);

  inline Cmd_Sc_HeroDel& operator=(const Cmd_Sc_HeroDel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_HeroDel& default_instance();

  void Swap(Cmd_Sc_HeroDel* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_HeroDel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_HeroDel& from);
  void MergeFrom(const Cmd_Sc_HeroDel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_HeroDel)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_HeroDel* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_GetHeroDesc : public ::google::protobuf::Message {
 public:
  Cmd_Cs_GetHeroDesc();
  virtual ~Cmd_Cs_GetHeroDesc();

  Cmd_Cs_GetHeroDesc(const Cmd_Cs_GetHeroDesc& from);

  inline Cmd_Cs_GetHeroDesc& operator=(const Cmd_Cs_GetHeroDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_GetHeroDesc& default_instance();

  void Swap(Cmd_Cs_GetHeroDesc* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_GetHeroDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_GetHeroDesc& from);
  void MergeFrom(const Cmd_Cs_GetHeroDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_GetHeroDesc)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_GetHeroDesc* default_instance_;
};
// -------------------------------------------------------------------

class SkillInfo : public ::google::protobuf::Message {
 public:
  SkillInfo();
  virtual ~SkillInfo();

  SkillInfo(const SkillInfo& from);

  inline SkillInfo& operator=(const SkillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillInfo& default_instance();

  void Swap(SkillInfo* other);

  // implements Message ----------------------------------------------

  SkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillInfo& from);
  void MergeFrom(const SkillInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iSkillID = 1;
  inline bool has_iskillid() const;
  inline void clear_iskillid();
  static const int kISkillIDFieldNumber = 1;
  inline ::google::protobuf::int32 iskillid() const;
  inline void set_iskillid(::google::protobuf::int32 value);

  // required bool bActive = 2;
  inline bool has_bactive() const;
  inline void clear_bactive();
  static const int kBActiveFieldNumber = 2;
  inline bool bactive() const;
  inline void set_bactive(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.SkillInfo)
 private:
  inline void set_has_iskillid();
  inline void clear_has_iskillid();
  inline void set_has_bactive();
  inline void clear_has_bactive();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iskillid_;
  bool bactive_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static SkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_GetHeroDesc : public ::google::protobuf::Message {
 public:
  Cmd_Sc_GetHeroDesc();
  virtual ~Cmd_Sc_GetHeroDesc();

  Cmd_Sc_GetHeroDesc(const Cmd_Sc_GetHeroDesc& from);

  inline Cmd_Sc_GetHeroDesc& operator=(const Cmd_Sc_GetHeroDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_GetHeroDesc& default_instance();

  void Swap(Cmd_Sc_GetHeroDesc* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_GetHeroDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_GetHeroDesc& from);
  void MergeFrom(const Cmd_Sc_GetHeroDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // repeated .GSProto.PropItem szPropList = 2;
  inline int szproplist_size() const;
  inline void clear_szproplist();
  static const int kSzPropListFieldNumber = 2;
  inline const ::GSProto::PropItem& szproplist(int index) const;
  inline ::GSProto::PropItem* mutable_szproplist(int index);
  inline ::GSProto::PropItem* add_szproplist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
      szproplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
      mutable_szproplist();

  // repeated .GSProto.SkillInfo szSkillList = 3;
  inline int szskilllist_size() const;
  inline void clear_szskilllist();
  static const int kSzSkillListFieldNumber = 3;
  inline const ::GSProto::SkillInfo& szskilllist(int index) const;
  inline ::GSProto::SkillInfo* mutable_szskilllist(int index);
  inline ::GSProto::SkillInfo* add_szskilllist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::SkillInfo >&
      szskilllist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::SkillInfo >*
      mutable_szskilllist();

  // optional int32 iAttGrow = 4;
  inline bool has_iattgrow() const;
  inline void clear_iattgrow();
  static const int kIAttGrowFieldNumber = 4;
  inline ::google::protobuf::int32 iattgrow() const;
  inline void set_iattgrow(::google::protobuf::int32 value);

  // optional int32 iMaxHPGrow = 5;
  inline bool has_imaxhpgrow() const;
  inline void clear_imaxhpgrow();
  static const int kIMaxHPGrowFieldNumber = 5;
  inline ::google::protobuf::int32 imaxhpgrow() const;
  inline void set_imaxhpgrow(::google::protobuf::int32 value);

  // repeated .GSProto.PropItem szPropAddValueList = 6;
  inline int szpropaddvaluelist_size() const;
  inline void clear_szpropaddvaluelist();
  static const int kSzPropAddValueListFieldNumber = 6;
  inline const ::GSProto::PropItem& szpropaddvaluelist(int index) const;
  inline ::GSProto::PropItem* mutable_szpropaddvaluelist(int index);
  inline ::GSProto::PropItem* add_szpropaddvaluelist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
      szpropaddvaluelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
      mutable_szpropaddvaluelist();

  // optional int32 iDefGrow = 7;
  inline bool has_idefgrow() const;
  inline void clear_idefgrow();
  static const int kIDefGrowFieldNumber = 7;
  inline ::google::protobuf::int32 idefgrow() const;
  inline void set_idefgrow(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_GetHeroDesc)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();
  inline void set_has_iattgrow();
  inline void clear_has_iattgrow();
  inline void set_has_imaxhpgrow();
  inline void clear_has_imaxhpgrow();
  inline void set_has_idefgrow();
  inline void clear_has_idefgrow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem > szproplist_;
  ::google::protobuf::uint32 dwobjectid_;
  ::google::protobuf::int32 iattgrow_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::SkillInfo > szskilllist_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem > szpropaddvaluelist_;
  ::google::protobuf::int32 imaxhpgrow_;
  ::google::protobuf::int32 idefgrow_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_GetHeroDesc* default_instance_;
};
// -------------------------------------------------------------------

class HeroTallent : public ::google::protobuf::Message {
 public:
  HeroTallent();
  virtual ~HeroTallent();

  HeroTallent(const HeroTallent& from);

  inline HeroTallent& operator=(const HeroTallent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroTallent& default_instance();

  void Swap(HeroTallent* other);

  // implements Message ----------------------------------------------

  HeroTallent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroTallent& from);
  void MergeFrom(const HeroTallent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iTallentID = 1;
  inline bool has_itallentid() const;
  inline void clear_itallentid();
  static const int kITallentIDFieldNumber = 1;
  inline ::google::protobuf::int32 itallentid() const;
  inline void set_itallentid(::google::protobuf::int32 value);

  // optional int32 iLevel = 2;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 2;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // optional bool bCanUpgrade = 3;
  inline bool has_bcanupgrade() const;
  inline void clear_bcanupgrade();
  static const int kBCanUpgradeFieldNumber = 3;
  inline bool bcanupgrade() const;
  inline void set_bcanupgrade(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.HeroTallent)
 private:
  inline void set_has_itallentid();
  inline void clear_has_itallentid();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_bcanupgrade();
  inline void clear_has_bcanupgrade();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itallentid_;
  ::google::protobuf::int32 ilevel_;
  bool bcanupgrade_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static HeroTallent* default_instance_;
};
// -------------------------------------------------------------------

class HeroFavoriteDesc : public ::google::protobuf::Message {
 public:
  HeroFavoriteDesc();
  virtual ~HeroFavoriteDesc();

  HeroFavoriteDesc(const HeroFavoriteDesc& from);

  inline HeroFavoriteDesc& operator=(const HeroFavoriteDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroFavoriteDesc& default_instance();

  void Swap(HeroFavoriteDesc* other);

  // implements Message ----------------------------------------------

  HeroFavoriteDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroFavoriteDesc& from);
  void MergeFrom(const HeroFavoriteDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iItemID = 1;
  inline bool has_iitemid() const;
  inline void clear_iitemid();
  static const int kIItemIDFieldNumber = 1;
  inline ::google::protobuf::int32 iitemid() const;
  inline void set_iitemid(::google::protobuf::int32 value);

  // required int32 iPos = 2;
  inline bool has_ipos() const;
  inline void clear_ipos();
  static const int kIPosFieldNumber = 2;
  inline ::google::protobuf::int32 ipos() const;
  inline void set_ipos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.HeroFavoriteDesc)
 private:
  inline void set_has_iitemid();
  inline void clear_has_iitemid();
  inline void set_has_ipos();
  inline void clear_has_ipos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iitemid_;
  ::google::protobuf::int32 ipos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static HeroFavoriteDesc* default_instance_;
};
// -------------------------------------------------------------------

class HeroBaseData : public ::google::protobuf::Message {
 public:
  HeroBaseData();
  virtual ~HeroBaseData();

  HeroBaseData(const HeroBaseData& from);

  inline HeroBaseData& operator=(const HeroBaseData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroBaseData& default_instance();

  void Swap(HeroBaseData* other);

  // implements Message ----------------------------------------------

  HeroBaseData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroBaseData& from);
  void MergeFrom(const HeroBaseData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // required int32 iHeroID = 2;
  inline bool has_iheroid() const;
  inline void clear_iheroid();
  static const int kIHeroIDFieldNumber = 2;
  inline ::google::protobuf::int32 iheroid() const;
  inline void set_iheroid(::google::protobuf::int32 value);

  // required int32 iLevel = 3;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 3;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // required int32 iLevelStep = 4;
  inline bool has_ilevelstep() const;
  inline void clear_ilevelstep();
  static const int kILevelStepFieldNumber = 4;
  inline ::google::protobuf::int32 ilevelstep() const;
  inline void set_ilevelstep(::google::protobuf::int32 value);

  // required int32 iFightValue = 5;
  inline bool has_ifightvalue() const;
  inline void clear_ifightvalue();
  static const int kIFightValueFieldNumber = 5;
  inline ::google::protobuf::int32 ifightvalue() const;
  inline void set_ifightvalue(::google::protobuf::int32 value);

  // optional int32 iMaxHP = 6;
  inline bool has_imaxhp() const;
  inline void clear_imaxhp();
  static const int kIMaxHPFieldNumber = 6;
  inline ::google::protobuf::int32 imaxhp() const;
  inline void set_imaxhp(::google::protobuf::int32 value);

  // optional int32 iAtt = 7;
  inline bool has_iatt() const;
  inline void clear_iatt();
  static const int kIAttFieldNumber = 7;
  inline ::google::protobuf::int32 iatt() const;
  inline void set_iatt(::google::protobuf::int32 value);

  // repeated .GSProto.PropItem szPropList = 8;
  inline int szproplist_size() const;
  inline void clear_szproplist();
  static const int kSzPropListFieldNumber = 8;
  inline const ::GSProto::PropItem& szproplist(int index) const;
  inline ::GSProto::PropItem* mutable_szproplist(int index);
  inline ::GSProto::PropItem* add_szproplist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
      szproplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
      mutable_szproplist();

  // repeated .GSProto.HeroTallent szTallentList = 9;
  inline int sztallentlist_size() const;
  inline void clear_sztallentlist();
  static const int kSzTallentListFieldNumber = 9;
  inline const ::GSProto::HeroTallent& sztallentlist(int index) const;
  inline ::GSProto::HeroTallent* mutable_sztallentlist(int index);
  inline ::GSProto::HeroTallent* add_sztallentlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HeroTallent >&
      sztallentlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::HeroTallent >*
      mutable_sztallentlist();

  // repeated .GSProto.HeroFavoriteDesc szFavoriteList = 10;
  inline int szfavoritelist_size() const;
  inline void clear_szfavoritelist();
  static const int kSzFavoriteListFieldNumber = 10;
  inline const ::GSProto::HeroFavoriteDesc& szfavoritelist(int index) const;
  inline ::GSProto::HeroFavoriteDesc* mutable_szfavoritelist(int index);
  inline ::GSProto::HeroFavoriteDesc* add_szfavoritelist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HeroFavoriteDesc >&
      szfavoritelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::HeroFavoriteDesc >*
      mutable_szfavoritelist();

  // optional int32 iQuality = 11;
  inline bool has_iquality() const;
  inline void clear_iquality();
  static const int kIQualityFieldNumber = 11;
  inline ::google::protobuf::int32 iquality() const;
  inline void set_iquality(::google::protobuf::int32 value);

  // optional int32 ipos = 12;
  inline bool has_ipos() const;
  inline void clear_ipos();
  static const int kIposFieldNumber = 12;
  inline ::google::protobuf::int32 ipos() const;
  inline void set_ipos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.HeroBaseData)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();
  inline void set_has_iheroid();
  inline void clear_has_iheroid();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_ilevelstep();
  inline void clear_has_ilevelstep();
  inline void set_has_ifightvalue();
  inline void clear_has_ifightvalue();
  inline void set_has_imaxhp();
  inline void clear_has_imaxhp();
  inline void set_has_iatt();
  inline void clear_has_iatt();
  inline void set_has_iquality();
  inline void clear_has_iquality();
  inline void set_has_ipos();
  inline void clear_has_ipos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwobjectid_;
  ::google::protobuf::int32 iheroid_;
  ::google::protobuf::int32 ilevel_;
  ::google::protobuf::int32 ilevelstep_;
  ::google::protobuf::int32 ifightvalue_;
  ::google::protobuf::int32 imaxhp_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem > szproplist_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::HeroTallent > sztallentlist_;
  ::google::protobuf::int32 iatt_;
  ::google::protobuf::int32 iquality_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::HeroFavoriteDesc > szfavoritelist_;
  ::google::protobuf::int32 ipos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static HeroBaseData* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_NewRole : public ::google::protobuf::Message {
 public:
  Cmd_Cs_NewRole();
  virtual ~Cmd_Cs_NewRole();

  Cmd_Cs_NewRole(const Cmd_Cs_NewRole& from);

  inline Cmd_Cs_NewRole& operator=(const Cmd_Cs_NewRole& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_NewRole& default_instance();

  void Swap(Cmd_Cs_NewRole* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_NewRole* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_NewRole& from);
  void MergeFrom(const Cmd_Cs_NewRole& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strRoleName = 1;
  inline bool has_strrolename() const;
  inline void clear_strrolename();
  static const int kStrRoleNameFieldNumber = 1;
  inline const ::std::string& strrolename() const;
  inline void set_strrolename(const ::std::string& value);
  inline void set_strrolename(const char* value);
  inline void set_strrolename(const char* value, size_t size);
  inline ::std::string* mutable_strrolename();
  inline ::std::string* release_strrolename();
  inline void set_allocated_strrolename(::std::string* strrolename);

  // optional int32 iselectheroid = 2;
  inline bool has_iselectheroid() const;
  inline void clear_iselectheroid();
  static const int kIselectheroidFieldNumber = 2;
  inline ::google::protobuf::int32 iselectheroid() const;
  inline void set_iselectheroid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_NewRole)
 private:
  inline void set_has_strrolename();
  inline void clear_has_strrolename();
  inline void set_has_iselectheroid();
  inline void clear_has_iselectheroid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strrolename_;
  ::google::protobuf::int32 iselectheroid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_NewRole* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_NewRole : public ::google::protobuf::Message {
 public:
  Cmd_Sc_NewRole();
  virtual ~Cmd_Sc_NewRole();

  Cmd_Sc_NewRole(const Cmd_Sc_NewRole& from);

  inline Cmd_Sc_NewRole& operator=(const Cmd_Sc_NewRole& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_NewRole& default_instance();

  void Swap(Cmd_Sc_NewRole* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_NewRole* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_NewRole& from);
  void MergeFrom(const Cmd_Sc_NewRole& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iResult = 1;
  inline bool has_iresult() const;
  inline void clear_iresult();
  static const int kIResultFieldNumber = 1;
  inline ::google::protobuf::int32 iresult() const;
  inline void set_iresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_NewRole)
 private:
  inline void set_has_iresult();
  inline void clear_has_iresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_NewRole* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_Kickoff : public ::google::protobuf::Message {
 public:
  Cmd_Sc_Kickoff();
  virtual ~Cmd_Sc_Kickoff();

  Cmd_Sc_Kickoff(const Cmd_Sc_Kickoff& from);

  inline Cmd_Sc_Kickoff& operator=(const Cmd_Sc_Kickoff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_Kickoff& default_instance();

  void Swap(Cmd_Sc_Kickoff* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_Kickoff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_Kickoff& from);
  void MergeFrom(const Cmd_Sc_Kickoff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iReason = 1;
  inline bool has_ireason() const;
  inline void clear_ireason();
  static const int kIReasonFieldNumber = 1;
  inline ::google::protobuf::int32 ireason() const;
  inline void set_ireason(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_Kickoff)
 private:
  inline void set_has_ireason();
  inline void clear_has_ireason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ireason_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_Kickoff* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_CheckActorName : public ::google::protobuf::Message {
 public:
  Cmd_Cs_CheckActorName();
  virtual ~Cmd_Cs_CheckActorName();

  Cmd_Cs_CheckActorName(const Cmd_Cs_CheckActorName& from);

  inline Cmd_Cs_CheckActorName& operator=(const Cmd_Cs_CheckActorName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_CheckActorName& default_instance();

  void Swap(Cmd_Cs_CheckActorName* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_CheckActorName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_CheckActorName& from);
  void MergeFrom(const Cmd_Cs_CheckActorName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strAcorName = 1;
  inline bool has_stracorname() const;
  inline void clear_stracorname();
  static const int kStrAcorNameFieldNumber = 1;
  inline const ::std::string& stracorname() const;
  inline void set_stracorname(const ::std::string& value);
  inline void set_stracorname(const char* value);
  inline void set_stracorname(const char* value, size_t size);
  inline ::std::string* mutable_stracorname();
  inline ::std::string* release_stracorname();
  inline void set_allocated_stracorname(::std::string* stracorname);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_CheckActorName)
 private:
  inline void set_has_stracorname();
  inline void clear_has_stracorname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* stracorname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_CheckActorName* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_CheckActorName : public ::google::protobuf::Message {
 public:
  Cmd_Sc_CheckActorName();
  virtual ~Cmd_Sc_CheckActorName();

  Cmd_Sc_CheckActorName(const Cmd_Sc_CheckActorName& from);

  inline Cmd_Sc_CheckActorName& operator=(const Cmd_Sc_CheckActorName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_CheckActorName& default_instance();

  void Swap(Cmd_Sc_CheckActorName* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_CheckActorName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_CheckActorName& from);
  void MergeFrom(const Cmd_Sc_CheckActorName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iIsOk = 1;
  inline bool has_iisok() const;
  inline void clear_iisok();
  static const int kIIsOkFieldNumber = 1;
  inline ::google::protobuf::int32 iisok() const;
  inline void set_iisok(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_CheckActorName)
 private:
  inline void set_has_iisok();
  inline void clear_has_iisok();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iisok_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_CheckActorName* default_instance_;
};
// -------------------------------------------------------------------

class FormationItemData : public ::google::protobuf::Message {
 public:
  FormationItemData();
  virtual ~FormationItemData();

  FormationItemData(const FormationItemData& from);

  inline FormationItemData& operator=(const FormationItemData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FormationItemData& default_instance();

  void Swap(FormationItemData* other);

  // implements Message ----------------------------------------------

  FormationItemData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FormationItemData& from);
  void MergeFrom(const FormationItemData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // required int32 iPos = 2;
  inline bool has_ipos() const;
  inline void clear_ipos();
  static const int kIPosFieldNumber = 2;
  inline ::google::protobuf::int32 ipos() const;
  inline void set_ipos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.FormationItemData)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();
  inline void set_has_ipos();
  inline void clear_has_ipos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwobjectid_;
  ::google::protobuf::int32 ipos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FormationItemData* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_FormationData : public ::google::protobuf::Message {
 public:
  Cmd_Sc_FormationData();
  virtual ~Cmd_Sc_FormationData();

  Cmd_Sc_FormationData(const Cmd_Sc_FormationData& from);

  inline Cmd_Sc_FormationData& operator=(const Cmd_Sc_FormationData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_FormationData& default_instance();

  void Swap(Cmd_Sc_FormationData* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_FormationData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_FormationData& from);
  void MergeFrom(const Cmd_Sc_FormationData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.FormationItemData szFormationList = 1;
  inline int szformationlist_size() const;
  inline void clear_szformationlist();
  static const int kSzFormationListFieldNumber = 1;
  inline const ::GSProto::FormationItemData& szformationlist(int index) const;
  inline ::GSProto::FormationItemData* mutable_szformationlist(int index);
  inline ::GSProto::FormationItemData* add_szformationlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FormationItemData >&
      szformationlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FormationItemData >*
      mutable_szformationlist();

  // required int32 iMemberLimit = 2;
  inline bool has_imemberlimit() const;
  inline void clear_imemberlimit();
  static const int kIMemberLimitFieldNumber = 2;
  inline ::google::protobuf::int32 imemberlimit() const;
  inline void set_imemberlimit(::google::protobuf::int32 value);

  // required int32 iFightValue = 3;
  inline bool has_ifightvalue() const;
  inline void clear_ifightvalue();
  static const int kIFightValueFieldNumber = 3;
  inline ::google::protobuf::int32 ifightvalue() const;
  inline void set_ifightvalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_FormationData)
 private:
  inline void set_has_imemberlimit();
  inline void clear_has_imemberlimit();
  inline void set_has_ifightvalue();
  inline void clear_has_ifightvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::FormationItemData > szformationlist_;
  ::google::protobuf::int32 imemberlimit_;
  ::google::protobuf::int32 ifightvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_FormationData* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_FormationChg : public ::google::protobuf::Message {
 public:
  Cmd_Cs_FormationChg();
  virtual ~Cmd_Cs_FormationChg();

  Cmd_Cs_FormationChg(const Cmd_Cs_FormationChg& from);

  inline Cmd_Cs_FormationChg& operator=(const Cmd_Cs_FormationChg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_FormationChg& default_instance();

  void Swap(Cmd_Cs_FormationChg* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_FormationChg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_FormationChg& from);
  void MergeFrom(const Cmd_Cs_FormationChg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.FormationItemData szFormationList = 1;
  inline int szformationlist_size() const;
  inline void clear_szformationlist();
  static const int kSzFormationListFieldNumber = 1;
  inline const ::GSProto::FormationItemData& szformationlist(int index) const;
  inline ::GSProto::FormationItemData* mutable_szformationlist(int index);
  inline ::GSProto::FormationItemData* add_szformationlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FormationItemData >&
      szformationlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FormationItemData >*
      mutable_szformationlist();

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_FormationChg)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::FormationItemData > szformationlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_FormationChg* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_GmMsg : public ::google::protobuf::Message {
 public:
  Cmd_Cs_GmMsg();
  virtual ~Cmd_Cs_GmMsg();

  Cmd_Cs_GmMsg(const Cmd_Cs_GmMsg& from);

  inline Cmd_Cs_GmMsg& operator=(const Cmd_Cs_GmMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_GmMsg& default_instance();

  void Swap(Cmd_Cs_GmMsg* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_GmMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_GmMsg& from);
  void MergeFrom(const Cmd_Cs_GmMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strCmd = 1;
  inline bool has_strcmd() const;
  inline void clear_strcmd();
  static const int kStrCmdFieldNumber = 1;
  inline const ::std::string& strcmd() const;
  inline void set_strcmd(const ::std::string& value);
  inline void set_strcmd(const char* value);
  inline void set_strcmd(const char* value, size_t size);
  inline ::std::string* mutable_strcmd();
  inline ::std::string* release_strcmd();
  inline void set_allocated_strcmd(::std::string* strcmd);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_GmMsg)
 private:
  inline void set_has_strcmd();
  inline void clear_has_strcmd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strcmd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_GmMsg* default_instance_;
};
// -------------------------------------------------------------------

class FightHero : public ::google::protobuf::Message {
 public:
  FightHero();
  virtual ~FightHero();

  FightHero(const FightHero& from);

  inline FightHero& operator=(const FightHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightHero& default_instance();

  void Swap(FightHero* other);

  // implements Message ----------------------------------------------

  FightHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightHero& from);
  void MergeFrom(const FightHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iBaseID = 1;
  inline bool has_ibaseid() const;
  inline void clear_ibaseid();
  static const int kIBaseIDFieldNumber = 1;
  inline ::google::protobuf::int32 ibaseid() const;
  inline void set_ibaseid(::google::protobuf::int32 value);

  // required int32 iLevel = 2;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 2;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // required int32 iLevelStep = 3;
  inline bool has_ilevelstep() const;
  inline void clear_ilevelstep();
  static const int kILevelStepFieldNumber = 3;
  inline ::google::protobuf::int32 ilevelstep() const;
  inline void set_ilevelstep(::google::protobuf::int32 value);

  // required int32 iMaxHP = 4;
  inline bool has_imaxhp() const;
  inline void clear_imaxhp();
  static const int kIMaxHPFieldNumber = 4;
  inline ::google::protobuf::int32 imaxhp() const;
  inline void set_imaxhp(::google::protobuf::int32 value);

  // required int32 iInitAnger = 5;
  inline bool has_iinitanger() const;
  inline void clear_iinitanger();
  static const int kIInitAngerFieldNumber = 5;
  inline ::google::protobuf::int32 iinitanger() const;
  inline void set_iinitanger(::google::protobuf::int32 value);

  // optional int32 iHP = 6;
  inline bool has_ihp() const;
  inline void clear_ihp();
  static const int kIHPFieldNumber = 6;
  inline ::google::protobuf::int32 ihp() const;
  inline void set_ihp(::google::protobuf::int32 value);

  // optional int32 iQuality = 7;
  inline bool has_iquality() const;
  inline void clear_iquality();
  static const int kIQualityFieldNumber = 7;
  inline ::google::protobuf::int32 iquality() const;
  inline void set_iquality(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.FightHero)
 private:
  inline void set_has_ibaseid();
  inline void clear_has_ibaseid();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_ilevelstep();
  inline void clear_has_ilevelstep();
  inline void set_has_imaxhp();
  inline void clear_has_imaxhp();
  inline void set_has_iinitanger();
  inline void clear_has_iinitanger();
  inline void set_has_ihp();
  inline void clear_has_ihp();
  inline void set_has_iquality();
  inline void clear_has_iquality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ibaseid_;
  ::google::protobuf::int32 ilevel_;
  ::google::protobuf::int32 ilevelstep_;
  ::google::protobuf::int32 imaxhp_;
  ::google::protobuf::int32 iinitanger_;
  ::google::protobuf::int32 ihp_;
  ::google::protobuf::int32 iquality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightHero* default_instance_;
};
// -------------------------------------------------------------------

class FightMonster : public ::google::protobuf::Message {
 public:
  FightMonster();
  virtual ~FightMonster();

  FightMonster(const FightMonster& from);

  inline FightMonster& operator=(const FightMonster& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightMonster& default_instance();

  void Swap(FightMonster* other);

  // implements Message ----------------------------------------------

  FightMonster* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightMonster& from);
  void MergeFrom(const FightMonster& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iBaseID = 1;
  inline bool has_ibaseid() const;
  inline void clear_ibaseid();
  static const int kIBaseIDFieldNumber = 1;
  inline ::google::protobuf::int32 ibaseid() const;
  inline void set_ibaseid(::google::protobuf::int32 value);

  // required int32 iLevel = 2;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 2;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // required int32 iLevelStep = 3;
  inline bool has_ilevelstep() const;
  inline void clear_ilevelstep();
  static const int kILevelStepFieldNumber = 3;
  inline ::google::protobuf::int32 ilevelstep() const;
  inline void set_ilevelstep(::google::protobuf::int32 value);

  // required int32 iMaxHP = 4;
  inline bool has_imaxhp() const;
  inline void clear_imaxhp();
  static const int kIMaxHPFieldNumber = 4;
  inline ::google::protobuf::int32 imaxhp() const;
  inline void set_imaxhp(::google::protobuf::int32 value);

  // required int32 iInitAnger = 5;
  inline bool has_iinitanger() const;
  inline void clear_iinitanger();
  static const int kIInitAngerFieldNumber = 5;
  inline ::google::protobuf::int32 iinitanger() const;
  inline void set_iinitanger(::google::protobuf::int32 value);

  // optional int32 iHP = 6;
  inline bool has_ihp() const;
  inline void clear_ihp();
  static const int kIHPFieldNumber = 6;
  inline ::google::protobuf::int32 ihp() const;
  inline void set_ihp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.FightMonster)
 private:
  inline void set_has_ibaseid();
  inline void clear_has_ibaseid();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_ilevelstep();
  inline void clear_has_ilevelstep();
  inline void set_has_imaxhp();
  inline void clear_has_imaxhp();
  inline void set_has_iinitanger();
  inline void clear_has_iinitanger();
  inline void set_has_ihp();
  inline void clear_has_ihp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ibaseid_;
  ::google::protobuf::int32 ilevel_;
  ::google::protobuf::int32 ilevelstep_;
  ::google::protobuf::int32 imaxhp_;
  ::google::protobuf::int32 iinitanger_;
  ::google::protobuf::int32 ihp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightMonster* default_instance_;
};
// -------------------------------------------------------------------

class FightGodAnimal : public ::google::protobuf::Message {
 public:
  FightGodAnimal();
  virtual ~FightGodAnimal();

  FightGodAnimal(const FightGodAnimal& from);

  inline FightGodAnimal& operator=(const FightGodAnimal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightGodAnimal& default_instance();

  void Swap(FightGodAnimal* other);

  // implements Message ----------------------------------------------

  FightGodAnimal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightGodAnimal& from);
  void MergeFrom(const FightGodAnimal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iBaseID = 1;
  inline bool has_ibaseid() const;
  inline void clear_ibaseid();
  static const int kIBaseIDFieldNumber = 1;
  inline ::google::protobuf::int32 ibaseid() const;
  inline void set_ibaseid(::google::protobuf::int32 value);

  // required int32 iLevel = 2;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 2;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // required int32 iLevelStep = 3;
  inline bool has_ilevelstep() const;
  inline void clear_ilevelstep();
  static const int kILevelStepFieldNumber = 3;
  inline ::google::protobuf::int32 ilevelstep() const;
  inline void set_ilevelstep(::google::protobuf::int32 value);

  // required int32 iMaxHP = 4;
  inline bool has_imaxhp() const;
  inline void clear_imaxhp();
  static const int kIMaxHPFieldNumber = 4;
  inline ::google::protobuf::int32 imaxhp() const;
  inline void set_imaxhp(::google::protobuf::int32 value);

  // required int32 iInitAnger = 5;
  inline bool has_iinitanger() const;
  inline void clear_iinitanger();
  static const int kIInitAngerFieldNumber = 5;
  inline ::google::protobuf::int32 iinitanger() const;
  inline void set_iinitanger(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.FightGodAnimal)
 private:
  inline void set_has_ibaseid();
  inline void clear_has_ibaseid();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_ilevelstep();
  inline void clear_has_ilevelstep();
  inline void set_has_imaxhp();
  inline void clear_has_imaxhp();
  inline void set_has_iinitanger();
  inline void clear_has_iinitanger();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ibaseid_;
  ::google::protobuf::int32 ilevel_;
  ::google::protobuf::int32 ilevelstep_;
  ::google::protobuf::int32 imaxhp_;
  ::google::protobuf::int32 iinitanger_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightGodAnimal* default_instance_;
};
// -------------------------------------------------------------------

class FightObj : public ::google::protobuf::Message {
 public:
  FightObj();
  virtual ~FightObj();

  FightObj(const FightObj& from);

  inline FightObj& operator=(const FightObj& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightObj& default_instance();

  void Swap(FightObj* other);

  // implements Message ----------------------------------------------

  FightObj* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightObj& from);
  void MergeFrom(const FightObj& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iObjectType = 1;
  inline bool has_iobjecttype() const;
  inline void clear_iobjecttype();
  static const int kIObjectTypeFieldNumber = 1;
  inline ::google::protobuf::int32 iobjecttype() const;
  inline void set_iobjecttype(::google::protobuf::int32 value);

  // required int32 iPos = 2;
  inline bool has_ipos() const;
  inline void clear_ipos();
  static const int kIPosFieldNumber = 2;
  inline ::google::protobuf::int32 ipos() const;
  inline void set_ipos(::google::protobuf::int32 value);

  // optional .GSProto.FightHero hero = 3;
  inline bool has_hero() const;
  inline void clear_hero();
  static const int kHeroFieldNumber = 3;
  inline const ::GSProto::FightHero& hero() const;
  inline ::GSProto::FightHero* mutable_hero();
  inline ::GSProto::FightHero* release_hero();
  inline void set_allocated_hero(::GSProto::FightHero* hero);

  // optional .GSProto.FightMonster monster = 4;
  inline bool has_monster() const;
  inline void clear_monster();
  static const int kMonsterFieldNumber = 4;
  inline const ::GSProto::FightMonster& monster() const;
  inline ::GSProto::FightMonster* mutable_monster();
  inline ::GSProto::FightMonster* release_monster();
  inline void set_allocated_monster(::GSProto::FightMonster* monster);

  // optional int32 iFinHP = 5;
  inline bool has_ifinhp() const;
  inline void clear_ifinhp();
  static const int kIFinHPFieldNumber = 5;
  inline ::google::protobuf::int32 ifinhp() const;
  inline void set_ifinhp(::google::protobuf::int32 value);

  // optional .GSProto.FightGodAnimal godAnimal = 6;
  inline bool has_godanimal() const;
  inline void clear_godanimal();
  static const int kGodAnimalFieldNumber = 6;
  inline const ::GSProto::FightGodAnimal& godanimal() const;
  inline ::GSProto::FightGodAnimal* mutable_godanimal();
  inline ::GSProto::FightGodAnimal* release_godanimal();
  inline void set_allocated_godanimal(::GSProto::FightGodAnimal* godanimal);

  // @@protoc_insertion_point(class_scope:GSProto.FightObj)
 private:
  inline void set_has_iobjecttype();
  inline void clear_has_iobjecttype();
  inline void set_has_ipos();
  inline void clear_has_ipos();
  inline void set_has_hero();
  inline void clear_has_hero();
  inline void set_has_monster();
  inline void clear_has_monster();
  inline void set_has_ifinhp();
  inline void clear_has_ifinhp();
  inline void set_has_godanimal();
  inline void clear_has_godanimal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iobjecttype_;
  ::google::protobuf::int32 ipos_;
  ::GSProto::FightHero* hero_;
  ::GSProto::FightMonster* monster_;
  ::GSProto::FightGodAnimal* godanimal_;
  ::google::protobuf::int32 ifinhp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightObj* default_instance_;
};
// -------------------------------------------------------------------

class ReplaceMemberAction : public ::google::protobuf::Message {
 public:
  ReplaceMemberAction();
  virtual ~ReplaceMemberAction();

  ReplaceMemberAction(const ReplaceMemberAction& from);

  inline ReplaceMemberAction& operator=(const ReplaceMemberAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplaceMemberAction& default_instance();

  void Swap(ReplaceMemberAction* other);

  // implements Message ----------------------------------------------

  ReplaceMemberAction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplaceMemberAction& from);
  void MergeFrom(const ReplaceMemberAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bAttackerReplace = 1;
  inline bool has_battackerreplace() const;
  inline void clear_battackerreplace();
  static const int kBAttackerReplaceFieldNumber = 1;
  inline bool battackerreplace() const;
  inline void set_battackerreplace(bool value);

  // repeated .GSProto.FightObj szNewFightObject = 2;
  inline int sznewfightobject_size() const;
  inline void clear_sznewfightobject();
  static const int kSzNewFightObjectFieldNumber = 2;
  inline const ::GSProto::FightObj& sznewfightobject(int index) const;
  inline ::GSProto::FightObj* mutable_sznewfightobject(int index);
  inline ::GSProto::FightObj* add_sznewfightobject();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightObj >&
      sznewfightobject() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightObj >*
      mutable_sznewfightobject();

  // optional bool bFinalFight = 3;
  inline bool has_bfinalfight() const;
  inline void clear_bfinalfight();
  static const int kBFinalFightFieldNumber = 3;
  inline bool bfinalfight() const;
  inline void set_bfinalfight(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.ReplaceMemberAction)
 private:
  inline void set_has_battackerreplace();
  inline void clear_has_battackerreplace();
  inline void set_has_bfinalfight();
  inline void clear_has_bfinalfight();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::FightObj > sznewfightobject_;
  bool battackerreplace_;
  bool bfinalfight_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static ReplaceMemberAction* default_instance_;
};
// -------------------------------------------------------------------

class FightSkillAction : public ::google::protobuf::Message {
 public:
  FightSkillAction();
  virtual ~FightSkillAction();

  FightSkillAction(const FightSkillAction& from);

  inline FightSkillAction& operator=(const FightSkillAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightSkillAction& default_instance();

  void Swap(FightSkillAction* other);

  // implements Message ----------------------------------------------

  FightSkillAction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightSkillAction& from);
  void MergeFrom(const FightSkillAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iAttackerPos = 1;
  inline bool has_iattackerpos() const;
  inline void clear_iattackerpos();
  static const int kIAttackerPosFieldNumber = 1;
  inline ::google::protobuf::int32 iattackerpos() const;
  inline void set_iattackerpos(::google::protobuf::int32 value);

  // required int32 iSkillID = 2;
  inline bool has_iskillid() const;
  inline void clear_iskillid();
  static const int kISkillIDFieldNumber = 2;
  inline ::google::protobuf::int32 iskillid() const;
  inline void set_iskillid(::google::protobuf::int32 value);

  // required int32 iAngerAfterSkill = 3;
  inline bool has_iangerafterskill() const;
  inline void clear_iangerafterskill();
  static const int kIAngerAfterSkillFieldNumber = 3;
  inline ::google::protobuf::int32 iangerafterskill() const;
  inline void set_iangerafterskill(::google::protobuf::int32 value);

  // optional int32 iAGodAnimalAnger = 5;
  inline bool has_iagodanimalanger() const;
  inline void clear_iagodanimalanger();
  static const int kIAGodAnimalAngerFieldNumber = 5;
  inline ::google::protobuf::int32 iagodanimalanger() const;
  inline void set_iagodanimalanger(::google::protobuf::int32 value);

  // optional int32 iTGodAnimalAnger = 6;
  inline bool has_itgodanimalanger() const;
  inline void clear_itgodanimalanger();
  static const int kITGodAnimalAngerFieldNumber = 6;
  inline ::google::protobuf::int32 itgodanimalanger() const;
  inline void set_itgodanimalanger(::google::protobuf::int32 value);

  // optional bool bIsStageSkill = 7;
  inline bool has_bisstageskill() const;
  inline void clear_bisstageskill();
  static const int kBIsStageSkillFieldNumber = 7;
  inline bool bisstageskill() const;
  inline void set_bisstageskill(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.FightSkillAction)
 private:
  inline void set_has_iattackerpos();
  inline void clear_has_iattackerpos();
  inline void set_has_iskillid();
  inline void clear_has_iskillid();
  inline void set_has_iangerafterskill();
  inline void clear_has_iangerafterskill();
  inline void set_has_iagodanimalanger();
  inline void clear_has_iagodanimalanger();
  inline void set_has_itgodanimalanger();
  inline void clear_has_itgodanimalanger();
  inline void set_has_bisstageskill();
  inline void clear_has_bisstageskill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iattackerpos_;
  ::google::protobuf::int32 iskillid_;
  ::google::protobuf::int32 iangerafterskill_;
  ::google::protobuf::int32 iagodanimalanger_;
  ::google::protobuf::int32 itgodanimalanger_;
  bool bisstageskill_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightSkillAction* default_instance_;
};
// -------------------------------------------------------------------

class FightResulSet : public ::google::protobuf::Message {
 public:
  FightResulSet();
  virtual ~FightResulSet();

  FightResulSet(const FightResulSet& from);

  inline FightResulSet& operator=(const FightResulSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightResulSet& default_instance();

  void Swap(FightResulSet* other);

  // implements Message ----------------------------------------------

  FightResulSet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightResulSet& from);
  void MergeFrom(const FightResulSet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.FightResult szResult = 1;
  inline int szresult_size() const;
  inline void clear_szresult();
  static const int kSzResultFieldNumber = 1;
  inline const ::GSProto::FightResult& szresult(int index) const;
  inline ::GSProto::FightResult* mutable_szresult(int index);
  inline ::GSProto::FightResult* add_szresult();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightResult >&
      szresult() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightResult >*
      mutable_szresult();

  // optional bool bContinueSkill = 2;
  inline bool has_bcontinueskill() const;
  inline void clear_bcontinueskill();
  static const int kBContinueSkillFieldNumber = 2;
  inline bool bcontinueskill() const;
  inline void set_bcontinueskill(bool value);

  // optional bool bContinueKill = 3;
  inline bool has_bcontinuekill() const;
  inline void clear_bcontinuekill();
  static const int kBContinueKillFieldNumber = 3;
  inline bool bcontinuekill() const;
  inline void set_bcontinuekill(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.FightResulSet)
 private:
  inline void set_has_bcontinueskill();
  inline void clear_has_bcontinueskill();
  inline void set_has_bcontinuekill();
  inline void clear_has_bcontinuekill();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::FightResult > szresult_;
  bool bcontinueskill_;
  bool bcontinuekill_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightResulSet* default_instance_;
};
// -------------------------------------------------------------------

class FightResult : public ::google::protobuf::Message {
 public:
  FightResult();
  virtual ~FightResult();

  FightResult(const FightResult& from);

  inline FightResult& operator=(const FightResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightResult& default_instance();

  void Swap(FightResult* other);

  // implements Message ----------------------------------------------

  FightResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightResult& from);
  void MergeFrom(const FightResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iResultType = 1;
  inline bool has_iresulttype() const;
  inline void clear_iresulttype();
  static const int kIResultTypeFieldNumber = 1;
  inline ::google::protobuf::int32 iresulttype() const;
  inline void set_iresulttype(::google::protobuf::int32 value);

  // optional .GSProto.FightSkillDamageResult damageResult = 2;
  inline bool has_damageresult() const;
  inline void clear_damageresult();
  static const int kDamageResultFieldNumber = 2;
  inline const ::GSProto::FightSkillDamageResult& damageresult() const;
  inline ::GSProto::FightSkillDamageResult* mutable_damageresult();
  inline ::GSProto::FightSkillDamageResult* release_damageresult();
  inline void set_allocated_damageresult(::GSProto::FightSkillDamageResult* damageresult);

  // optional .GSProto.FightBackDamageResult backResult = 3;
  inline bool has_backresult() const;
  inline void clear_backresult();
  static const int kBackResultFieldNumber = 3;
  inline const ::GSProto::FightBackDamageResult& backresult() const;
  inline ::GSProto::FightBackDamageResult* mutable_backresult();
  inline ::GSProto::FightBackDamageResult* release_backresult();
  inline void set_allocated_backresult(::GSProto::FightBackDamageResult* backresult);

  // optional .GSProto.FightPropChgResult propChgResult = 4;
  inline bool has_propchgresult() const;
  inline void clear_propchgresult();
  static const int kPropChgResultFieldNumber = 4;
  inline const ::GSProto::FightPropChgResult& propchgresult() const;
  inline ::GSProto::FightPropChgResult* mutable_propchgresult();
  inline ::GSProto::FightPropChgResult* release_propchgresult();
  inline void set_allocated_propchgresult(::GSProto::FightPropChgResult* propchgresult);

  // optional .GSProto.FightAddBuffResult addBuffResult = 5;
  inline bool has_addbuffresult() const;
  inline void clear_addbuffresult();
  static const int kAddBuffResultFieldNumber = 5;
  inline const ::GSProto::FightAddBuffResult& addbuffresult() const;
  inline ::GSProto::FightAddBuffResult* mutable_addbuffresult();
  inline ::GSProto::FightAddBuffResult* release_addbuffresult();
  inline void set_allocated_addbuffresult(::GSProto::FightAddBuffResult* addbuffresult);

  // optional .GSProto.FightDelBuffResult delBuffResult = 6;
  inline bool has_delbuffresult() const;
  inline void clear_delbuffresult();
  static const int kDelBuffResultFieldNumber = 6;
  inline const ::GSProto::FightDelBuffResult& delbuffresult() const;
  inline ::GSProto::FightDelBuffResult* mutable_delbuffresult();
  inline ::GSProto::FightDelBuffResult* release_delbuffresult();
  inline void set_allocated_delbuffresult(::GSProto::FightDelBuffResult* delbuffresult);

  // optional .GSProto.ReliveResult reliveResult = 7;
  inline bool has_reliveresult() const;
  inline void clear_reliveresult();
  static const int kReliveResultFieldNumber = 7;
  inline const ::GSProto::ReliveResult& reliveresult() const;
  inline ::GSProto::ReliveResult* mutable_reliveresult();
  inline ::GSProto::ReliveResult* release_reliveresult();
  inline void set_allocated_reliveresult(::GSProto::ReliveResult* reliveresult);

  // optional .GSProto.FightCreateItemResult createItemResult = 8;
  inline bool has_createitemresult() const;
  inline void clear_createitemresult();
  static const int kCreateItemResultFieldNumber = 8;
  inline const ::GSProto::FightCreateItemResult& createitemresult() const;
  inline ::GSProto::FightCreateItemResult* mutable_createitemresult();
  inline ::GSProto::FightCreateItemResult* release_createitemresult();
  inline void set_allocated_createitemresult(::GSProto::FightCreateItemResult* createitemresult);

  // optional .GSProto.FightUseActorSkillResult useActorSkillResult = 9;
  inline bool has_useactorskillresult() const;
  inline void clear_useactorskillresult();
  static const int kUseActorSkillResultFieldNumber = 9;
  inline const ::GSProto::FightUseActorSkillResult& useactorskillresult() const;
  inline ::GSProto::FightUseActorSkillResult* mutable_useactorskillresult();
  inline ::GSProto::FightUseActorSkillResult* release_useactorskillresult();
  inline void set_allocated_useactorskillresult(::GSProto::FightUseActorSkillResult* useactorskillresult);

  // optional .GSProto.FightSyncHPResult syncHPResult = 10;
  inline bool has_synchpresult() const;
  inline void clear_synchpresult();
  static const int kSyncHPResultFieldNumber = 10;
  inline const ::GSProto::FightSyncHPResult& synchpresult() const;
  inline ::GSProto::FightSyncHPResult* mutable_synchpresult();
  inline ::GSProto::FightSyncHPResult* release_synchpresult();
  inline void set_allocated_synchpresult(::GSProto::FightSyncHPResult* synchpresult);

  // optional .GSProto.FightZiBaoResult zibaoResult = 11;
  inline bool has_zibaoresult() const;
  inline void clear_zibaoresult();
  static const int kZibaoResultFieldNumber = 11;
  inline const ::GSProto::FightZiBaoResult& zibaoresult() const;
  inline ::GSProto::FightZiBaoResult* mutable_zibaoresult();
  inline ::GSProto::FightZiBaoResult* release_zibaoresult();
  inline void set_allocated_zibaoresult(::GSProto::FightZiBaoResult* zibaoresult);

  // @@protoc_insertion_point(class_scope:GSProto.FightResult)
 private:
  inline void set_has_iresulttype();
  inline void clear_has_iresulttype();
  inline void set_has_damageresult();
  inline void clear_has_damageresult();
  inline void set_has_backresult();
  inline void clear_has_backresult();
  inline void set_has_propchgresult();
  inline void clear_has_propchgresult();
  inline void set_has_addbuffresult();
  inline void clear_has_addbuffresult();
  inline void set_has_delbuffresult();
  inline void clear_has_delbuffresult();
  inline void set_has_reliveresult();
  inline void clear_has_reliveresult();
  inline void set_has_createitemresult();
  inline void clear_has_createitemresult();
  inline void set_has_useactorskillresult();
  inline void clear_has_useactorskillresult();
  inline void set_has_synchpresult();
  inline void clear_has_synchpresult();
  inline void set_has_zibaoresult();
  inline void clear_has_zibaoresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::FightSkillDamageResult* damageresult_;
  ::GSProto::FightBackDamageResult* backresult_;
  ::GSProto::FightPropChgResult* propchgresult_;
  ::GSProto::FightAddBuffResult* addbuffresult_;
  ::GSProto::FightDelBuffResult* delbuffresult_;
  ::GSProto::ReliveResult* reliveresult_;
  ::GSProto::FightCreateItemResult* createitemresult_;
  ::GSProto::FightUseActorSkillResult* useactorskillresult_;
  ::GSProto::FightSyncHPResult* synchpresult_;
  ::GSProto::FightZiBaoResult* zibaoresult_;
  ::google::protobuf::int32 iresulttype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightResult* default_instance_;
};
// -------------------------------------------------------------------

class FightZiBaoResult : public ::google::protobuf::Message {
 public:
  FightZiBaoResult();
  virtual ~FightZiBaoResult();

  FightZiBaoResult(const FightZiBaoResult& from);

  inline FightZiBaoResult& operator=(const FightZiBaoResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightZiBaoResult& default_instance();

  void Swap(FightZiBaoResult* other);

  // implements Message ----------------------------------------------

  FightZiBaoResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightZiBaoResult& from);
  void MergeFrom(const FightZiBaoResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iPos = 1;
  inline bool has_ipos() const;
  inline void clear_ipos();
  static const int kIPosFieldNumber = 1;
  inline ::google::protobuf::int32 ipos() const;
  inline void set_ipos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.FightZiBaoResult)
 private:
  inline void set_has_ipos();
  inline void clear_has_ipos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ipos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightZiBaoResult* default_instance_;
};
// -------------------------------------------------------------------

class FightSyncHPResult : public ::google::protobuf::Message {
 public:
  FightSyncHPResult();
  virtual ~FightSyncHPResult();

  FightSyncHPResult(const FightSyncHPResult& from);

  inline FightSyncHPResult& operator=(const FightSyncHPResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightSyncHPResult& default_instance();

  void Swap(FightSyncHPResult* other);

  // implements Message ----------------------------------------------

  FightSyncHPResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightSyncHPResult& from);
  void MergeFrom(const FightSyncHPResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iTargetPos = 1;
  inline bool has_itargetpos() const;
  inline void clear_itargetpos();
  static const int kITargetPosFieldNumber = 1;
  inline ::google::protobuf::int32 itargetpos() const;
  inline void set_itargetpos(::google::protobuf::int32 value);

  // required int32 iHP = 2;
  inline bool has_ihp() const;
  inline void clear_ihp();
  static const int kIHPFieldNumber = 2;
  inline ::google::protobuf::int32 ihp() const;
  inline void set_ihp(::google::protobuf::int32 value);

  // optional int32 iAnger = 3;
  inline bool has_ianger() const;
  inline void clear_ianger();
  static const int kIAngerFieldNumber = 3;
  inline ::google::protobuf::int32 ianger() const;
  inline void set_ianger(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.FightSyncHPResult)
 private:
  inline void set_has_itargetpos();
  inline void clear_has_itargetpos();
  inline void set_has_ihp();
  inline void clear_has_ihp();
  inline void set_has_ianger();
  inline void clear_has_ianger();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itargetpos_;
  ::google::protobuf::int32 ihp_;
  ::google::protobuf::int32 ianger_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightSyncHPResult* default_instance_;
};
// -------------------------------------------------------------------

class FightCreateItemResult : public ::google::protobuf::Message {
 public:
  FightCreateItemResult();
  virtual ~FightCreateItemResult();

  FightCreateItemResult(const FightCreateItemResult& from);

  inline FightCreateItemResult& operator=(const FightCreateItemResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightCreateItemResult& default_instance();

  void Swap(FightCreateItemResult* other);

  // implements Message ----------------------------------------------

  FightCreateItemResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightCreateItemResult& from);
  void MergeFrom(const FightCreateItemResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iResultItemCount = 1;
  inline bool has_iresultitemcount() const;
  inline void clear_iresultitemcount();
  static const int kIResultItemCountFieldNumber = 1;
  inline ::google::protobuf::int32 iresultitemcount() const;
  inline void set_iresultitemcount(::google::protobuf::int32 value);

  // optional int32 iTargetPos = 2;
  inline bool has_itargetpos() const;
  inline void clear_itargetpos();
  static const int kITargetPosFieldNumber = 2;
  inline ::google::protobuf::int32 itargetpos() const;
  inline void set_itargetpos(::google::protobuf::int32 value);

  // optional int32 iCreateItemCount = 3;
  inline bool has_icreateitemcount() const;
  inline void clear_icreateitemcount();
  static const int kICreateItemCountFieldNumber = 3;
  inline ::google::protobuf::int32 icreateitemcount() const;
  inline void set_icreateitemcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.FightCreateItemResult)
 private:
  inline void set_has_iresultitemcount();
  inline void clear_has_iresultitemcount();
  inline void set_has_itargetpos();
  inline void clear_has_itargetpos();
  inline void set_has_icreateitemcount();
  inline void clear_has_icreateitemcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresultitemcount_;
  ::google::protobuf::int32 itargetpos_;
  ::google::protobuf::int32 icreateitemcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightCreateItemResult* default_instance_;
};
// -------------------------------------------------------------------

class FightUseActorSkillResult : public ::google::protobuf::Message {
 public:
  FightUseActorSkillResult();
  virtual ~FightUseActorSkillResult();

  FightUseActorSkillResult(const FightUseActorSkillResult& from);

  inline FightUseActorSkillResult& operator=(const FightUseActorSkillResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightUseActorSkillResult& default_instance();

  void Swap(FightUseActorSkillResult* other);

  // implements Message ----------------------------------------------

  FightUseActorSkillResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightUseActorSkillResult& from);
  void MergeFrom(const FightUseActorSkillResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iResultItemCount = 1;
  inline bool has_iresultitemcount() const;
  inline void clear_iresultitemcount();
  static const int kIResultItemCountFieldNumber = 1;
  inline ::google::protobuf::int32 iresultitemcount() const;
  inline void set_iresultitemcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.FightUseActorSkillResult)
 private:
  inline void set_has_iresultitemcount();
  inline void clear_has_iresultitemcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresultitemcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightUseActorSkillResult* default_instance_;
};
// -------------------------------------------------------------------

class FightAddBuffResult : public ::google::protobuf::Message {
 public:
  FightAddBuffResult();
  virtual ~FightAddBuffResult();

  FightAddBuffResult(const FightAddBuffResult& from);

  inline FightAddBuffResult& operator=(const FightAddBuffResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightAddBuffResult& default_instance();

  void Swap(FightAddBuffResult* other);

  // implements Message ----------------------------------------------

  FightAddBuffResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightAddBuffResult& from);
  void MergeFrom(const FightAddBuffResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iTargetPos = 1;
  inline bool has_itargetpos() const;
  inline void clear_itargetpos();
  static const int kITargetPosFieldNumber = 1;
  inline ::google::protobuf::int32 itargetpos() const;
  inline void set_itargetpos(::google::protobuf::int32 value);

  // required int32 iBuffID = 2;
  inline bool has_ibuffid() const;
  inline void clear_ibuffid();
  static const int kIBuffIDFieldNumber = 2;
  inline ::google::protobuf::int32 ibuffid() const;
  inline void set_ibuffid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.FightAddBuffResult)
 private:
  inline void set_has_itargetpos();
  inline void clear_has_itargetpos();
  inline void set_has_ibuffid();
  inline void clear_has_ibuffid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itargetpos_;
  ::google::protobuf::int32 ibuffid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightAddBuffResult* default_instance_;
};
// -------------------------------------------------------------------

class FightDelBuffResult : public ::google::protobuf::Message {
 public:
  FightDelBuffResult();
  virtual ~FightDelBuffResult();

  FightDelBuffResult(const FightDelBuffResult& from);

  inline FightDelBuffResult& operator=(const FightDelBuffResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightDelBuffResult& default_instance();

  void Swap(FightDelBuffResult* other);

  // implements Message ----------------------------------------------

  FightDelBuffResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightDelBuffResult& from);
  void MergeFrom(const FightDelBuffResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iTargetPos = 1;
  inline bool has_itargetpos() const;
  inline void clear_itargetpos();
  static const int kITargetPosFieldNumber = 1;
  inline ::google::protobuf::int32 itargetpos() const;
  inline void set_itargetpos(::google::protobuf::int32 value);

  // required int32 iBuffID = 2;
  inline bool has_ibuffid() const;
  inline void clear_ibuffid();
  static const int kIBuffIDFieldNumber = 2;
  inline ::google::protobuf::int32 ibuffid() const;
  inline void set_ibuffid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.FightDelBuffResult)
 private:
  inline void set_has_itargetpos();
  inline void clear_has_itargetpos();
  inline void set_has_ibuffid();
  inline void clear_has_ibuffid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itargetpos_;
  ::google::protobuf::int32 ibuffid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightDelBuffResult* default_instance_;
};
// -------------------------------------------------------------------

class ReliveResult : public ::google::protobuf::Message {
 public:
  ReliveResult();
  virtual ~ReliveResult();

  ReliveResult(const ReliveResult& from);

  inline ReliveResult& operator=(const ReliveResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReliveResult& default_instance();

  void Swap(ReliveResult* other);

  // implements Message ----------------------------------------------

  ReliveResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReliveResult& from);
  void MergeFrom(const ReliveResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iTargetPos = 1;
  inline bool has_itargetpos() const;
  inline void clear_itargetpos();
  static const int kITargetPosFieldNumber = 1;
  inline ::google::protobuf::int32 itargetpos() const;
  inline void set_itargetpos(::google::protobuf::int32 value);

  // required int32 iLifeAtt = 2;
  inline bool has_ilifeatt() const;
  inline void clear_ilifeatt();
  static const int kILifeAttFieldNumber = 2;
  inline ::google::protobuf::int32 ilifeatt() const;
  inline void set_ilifeatt(::google::protobuf::int32 value);

  // required int32 iChgValue = 3;
  inline bool has_ichgvalue() const;
  inline void clear_ichgvalue();
  static const int kIChgValueFieldNumber = 3;
  inline ::google::protobuf::int32 ichgvalue() const;
  inline void set_ichgvalue(::google::protobuf::int32 value);

  // optional int32 iResultValue = 4;
  inline bool has_iresultvalue() const;
  inline void clear_iresultvalue();
  static const int kIResultValueFieldNumber = 4;
  inline ::google::protobuf::int32 iresultvalue() const;
  inline void set_iresultvalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.ReliveResult)
 private:
  inline void set_has_itargetpos();
  inline void clear_has_itargetpos();
  inline void set_has_ilifeatt();
  inline void clear_has_ilifeatt();
  inline void set_has_ichgvalue();
  inline void clear_has_ichgvalue();
  inline void set_has_iresultvalue();
  inline void clear_has_iresultvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itargetpos_;
  ::google::protobuf::int32 ilifeatt_;
  ::google::protobuf::int32 ichgvalue_;
  ::google::protobuf::int32 iresultvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static ReliveResult* default_instance_;
};
// -------------------------------------------------------------------

class FightPropChgResult : public ::google::protobuf::Message {
 public:
  FightPropChgResult();
  virtual ~FightPropChgResult();

  FightPropChgResult(const FightPropChgResult& from);

  inline FightPropChgResult& operator=(const FightPropChgResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightPropChgResult& default_instance();

  void Swap(FightPropChgResult* other);

  // implements Message ----------------------------------------------

  FightPropChgResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightPropChgResult& from);
  void MergeFrom(const FightPropChgResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iTargetPos = 1;
  inline bool has_itargetpos() const;
  inline void clear_itargetpos();
  static const int kITargetPosFieldNumber = 1;
  inline ::google::protobuf::int32 itargetpos() const;
  inline void set_itargetpos(::google::protobuf::int32 value);

  // required int32 iLifeAtt = 2;
  inline bool has_ilifeatt() const;
  inline void clear_ilifeatt();
  static const int kILifeAttFieldNumber = 2;
  inline ::google::protobuf::int32 ilifeatt() const;
  inline void set_ilifeatt(::google::protobuf::int32 value);

  // required int32 iChgValue = 3;
  inline bool has_ichgvalue() const;
  inline void clear_ichgvalue();
  static const int kIChgValueFieldNumber = 3;
  inline ::google::protobuf::int32 ichgvalue() const;
  inline void set_ichgvalue(::google::protobuf::int32 value);

  // optional int32 iResultValue = 4;
  inline bool has_iresultvalue() const;
  inline void clear_iresultvalue();
  static const int kIResultValueFieldNumber = 4;
  inline ::google::protobuf::int32 iresultvalue() const;
  inline void set_iresultvalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.FightPropChgResult)
 private:
  inline void set_has_itargetpos();
  inline void clear_has_itargetpos();
  inline void set_has_ilifeatt();
  inline void clear_has_ilifeatt();
  inline void set_has_ichgvalue();
  inline void clear_has_ichgvalue();
  inline void set_has_iresultvalue();
  inline void clear_has_iresultvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itargetpos_;
  ::google::protobuf::int32 ilifeatt_;
  ::google::protobuf::int32 ichgvalue_;
  ::google::protobuf::int32 iresultvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightPropChgResult* default_instance_;
};
// -------------------------------------------------------------------

class FightSkillDamageResult : public ::google::protobuf::Message {
 public:
  FightSkillDamageResult();
  virtual ~FightSkillDamageResult();

  FightSkillDamageResult(const FightSkillDamageResult& from);

  inline FightSkillDamageResult& operator=(const FightSkillDamageResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightSkillDamageResult& default_instance();

  void Swap(FightSkillDamageResult* other);

  // implements Message ----------------------------------------------

  FightSkillDamageResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightSkillDamageResult& from);
  void MergeFrom(const FightSkillDamageResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iTargetPos = 1;
  inline bool has_itargetpos() const;
  inline void clear_itargetpos();
  static const int kITargetPosFieldNumber = 1;
  inline ::google::protobuf::int32 itargetpos() const;
  inline void set_itargetpos(::google::protobuf::int32 value);

  // required int32 iHitResult = 2;
  inline bool has_ihitresult() const;
  inline void clear_ihitresult();
  static const int kIHitResultFieldNumber = 2;
  inline ::google::protobuf::int32 ihitresult() const;
  inline void set_ihitresult(::google::protobuf::int32 value);

  // required int32 iDamageHP = 3;
  inline bool has_idamagehp() const;
  inline void clear_idamagehp();
  static const int kIDamageHPFieldNumber = 3;
  inline ::google::protobuf::int32 idamagehp() const;
  inline void set_idamagehp(::google::protobuf::int32 value);

  // required int32 iResultHP = 4;
  inline bool has_iresulthp() const;
  inline void clear_iresulthp();
  static const int kIResultHPFieldNumber = 4;
  inline ::google::protobuf::int32 iresulthp() const;
  inline void set_iresulthp(::google::protobuf::int32 value);

  // required int32 iResultAnger = 5;
  inline bool has_iresultanger() const;
  inline void clear_iresultanger();
  static const int kIResultAngerFieldNumber = 5;
  inline ::google::protobuf::int32 iresultanger() const;
  inline void set_iresultanger(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.FightSkillDamageResult)
 private:
  inline void set_has_itargetpos();
  inline void clear_has_itargetpos();
  inline void set_has_ihitresult();
  inline void clear_has_ihitresult();
  inline void set_has_idamagehp();
  inline void clear_has_idamagehp();
  inline void set_has_iresulthp();
  inline void clear_has_iresulthp();
  inline void set_has_iresultanger();
  inline void clear_has_iresultanger();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itargetpos_;
  ::google::protobuf::int32 ihitresult_;
  ::google::protobuf::int32 idamagehp_;
  ::google::protobuf::int32 iresulthp_;
  ::google::protobuf::int32 iresultanger_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightSkillDamageResult* default_instance_;
};
// -------------------------------------------------------------------

class FightBackDamageResult : public ::google::protobuf::Message {
 public:
  FightBackDamageResult();
  virtual ~FightBackDamageResult();

  FightBackDamageResult(const FightBackDamageResult& from);

  inline FightBackDamageResult& operator=(const FightBackDamageResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightBackDamageResult& default_instance();

  void Swap(FightBackDamageResult* other);

  // implements Message ----------------------------------------------

  FightBackDamageResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightBackDamageResult& from);
  void MergeFrom(const FightBackDamageResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iAttackPos = 1;
  inline bool has_iattackpos() const;
  inline void clear_iattackpos();
  static const int kIAttackPosFieldNumber = 1;
  inline ::google::protobuf::int32 iattackpos() const;
  inline void set_iattackpos(::google::protobuf::int32 value);

  // required int32 iDamageHP = 2;
  inline bool has_idamagehp() const;
  inline void clear_idamagehp();
  static const int kIDamageHPFieldNumber = 2;
  inline ::google::protobuf::int32 idamagehp() const;
  inline void set_idamagehp(::google::protobuf::int32 value);

  // required int32 iTargetResultHP = 3;
  inline bool has_itargetresulthp() const;
  inline void clear_itargetresulthp();
  static const int kITargetResultHPFieldNumber = 3;
  inline ::google::protobuf::int32 itargetresulthp() const;
  inline void set_itargetresulthp(::google::protobuf::int32 value);

  // required int32 iBackSkillID = 4;
  inline bool has_ibackskillid() const;
  inline void clear_ibackskillid();
  static const int kIBackSkillIDFieldNumber = 4;
  inline ::google::protobuf::int32 ibackskillid() const;
  inline void set_ibackskillid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.FightBackDamageResult)
 private:
  inline void set_has_iattackpos();
  inline void clear_has_iattackpos();
  inline void set_has_idamagehp();
  inline void clear_has_idamagehp();
  inline void set_has_itargetresulthp();
  inline void clear_has_itargetresulthp();
  inline void set_has_ibackskillid();
  inline void clear_has_ibackskillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iattackpos_;
  ::google::protobuf::int32 idamagehp_;
  ::google::protobuf::int32 itargetresulthp_;
  ::google::protobuf::int32 ibackskillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightBackDamageResult* default_instance_;
};
// -------------------------------------------------------------------

class FightAction : public ::google::protobuf::Message {
 public:
  FightAction();
  virtual ~FightAction();

  FightAction(const FightAction& from);

  inline FightAction& operator=(const FightAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightAction& default_instance();

  void Swap(FightAction* other);

  // implements Message ----------------------------------------------

  FightAction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightAction& from);
  void MergeFrom(const FightAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iActionType = 1;
  inline bool has_iactiontype() const;
  inline void clear_iactiontype();
  static const int kIActionTypeFieldNumber = 1;
  inline ::google::protobuf::int32 iactiontype() const;
  inline void set_iactiontype(::google::protobuf::int32 value);

  // optional .GSProto.FightSkillAction skillAction = 2;
  inline bool has_skillaction() const;
  inline void clear_skillaction();
  static const int kSkillActionFieldNumber = 2;
  inline const ::GSProto::FightSkillAction& skillaction() const;
  inline ::GSProto::FightSkillAction* mutable_skillaction();
  inline ::GSProto::FightSkillAction* release_skillaction();
  inline void set_allocated_skillaction(::GSProto::FightSkillAction* skillaction);

  // optional .GSProto.FightDelBuffAction delBuffAction = 3;
  inline bool has_delbuffaction() const;
  inline void clear_delbuffaction();
  static const int kDelBuffActionFieldNumber = 3;
  inline const ::GSProto::FightDelBuffAction& delbuffaction() const;
  inline ::GSProto::FightDelBuffAction* mutable_delbuffaction();
  inline ::GSProto::FightDelBuffAction* release_delbuffaction();
  inline void set_allocated_delbuffaction(::GSProto::FightDelBuffAction* delbuffaction);

  // optional .GSProto.ReplaceMemberAction replaceMemberAction = 4;
  inline bool has_replacememberaction() const;
  inline void clear_replacememberaction();
  static const int kReplaceMemberActionFieldNumber = 4;
  inline const ::GSProto::ReplaceMemberAction& replacememberaction() const;
  inline ::GSProto::ReplaceMemberAction* mutable_replacememberaction();
  inline ::GSProto::ReplaceMemberAction* release_replacememberaction();
  inline void set_allocated_replacememberaction(::GSProto::ReplaceMemberAction* replacememberaction);

  // repeated .GSProto.FightResulSet szResultSet = 5;
  inline int szresultset_size() const;
  inline void clear_szresultset();
  static const int kSzResultSetFieldNumber = 5;
  inline const ::GSProto::FightResulSet& szresultset(int index) const;
  inline ::GSProto::FightResulSet* mutable_szresultset(int index);
  inline ::GSProto::FightResulSet* add_szresultset();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightResulSet >&
      szresultset() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightResulSet >*
      mutable_szresultset();

  // optional int32 iActionIndex = 6;
  inline bool has_iactionindex() const;
  inline void clear_iactionindex();
  static const int kIActionIndexFieldNumber = 6;
  inline ::google::protobuf::int32 iactionindex() const;
  inline void set_iactionindex(::google::protobuf::int32 value);

  // optional .GSProto.DialogAction dlgAction = 7;
  inline bool has_dlgaction() const;
  inline void clear_dlgaction();
  static const int kDlgActionFieldNumber = 7;
  inline const ::GSProto::DialogAction& dlgaction() const;
  inline ::GSProto::DialogAction* mutable_dlgaction();
  inline ::GSProto::DialogAction* release_dlgaction();
  inline void set_allocated_dlgaction(::GSProto::DialogAction* dlgaction);

  // @@protoc_insertion_point(class_scope:GSProto.FightAction)
 private:
  inline void set_has_iactiontype();
  inline void clear_has_iactiontype();
  inline void set_has_skillaction();
  inline void clear_has_skillaction();
  inline void set_has_delbuffaction();
  inline void clear_has_delbuffaction();
  inline void set_has_replacememberaction();
  inline void clear_has_replacememberaction();
  inline void set_has_iactionindex();
  inline void clear_has_iactionindex();
  inline void set_has_dlgaction();
  inline void clear_has_dlgaction();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::FightSkillAction* skillaction_;
  ::GSProto::FightDelBuffAction* delbuffaction_;
  ::google::protobuf::int32 iactiontype_;
  ::google::protobuf::int32 iactionindex_;
  ::GSProto::ReplaceMemberAction* replacememberaction_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::FightResulSet > szresultset_;
  ::GSProto::DialogAction* dlgaction_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightAction* default_instance_;
};
// -------------------------------------------------------------------

class DialogAction : public ::google::protobuf::Message {
 public:
  DialogAction();
  virtual ~DialogAction();

  DialogAction(const DialogAction& from);

  inline DialogAction& operator=(const DialogAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DialogAction& default_instance();

  void Swap(DialogAction* other);

  // implements Message ----------------------------------------------

  DialogAction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DialogAction& from);
  void MergeFrom(const DialogAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iDlgID = 1;
  inline bool has_idlgid() const;
  inline void clear_idlgid();
  static const int kIDlgIDFieldNumber = 1;
  inline ::google::protobuf::int32 idlgid() const;
  inline void set_idlgid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.DialogAction)
 private:
  inline void set_has_idlgid();
  inline void clear_has_idlgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 idlgid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static DialogAction* default_instance_;
};
// -------------------------------------------------------------------

class FightDelBuffAction : public ::google::protobuf::Message {
 public:
  FightDelBuffAction();
  virtual ~FightDelBuffAction();

  FightDelBuffAction(const FightDelBuffAction& from);

  inline FightDelBuffAction& operator=(const FightDelBuffAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightDelBuffAction& default_instance();

  void Swap(FightDelBuffAction* other);

  // implements Message ----------------------------------------------

  FightDelBuffAction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightDelBuffAction& from);
  void MergeFrom(const FightDelBuffAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iTargetPos = 1;
  inline bool has_itargetpos() const;
  inline void clear_itargetpos();
  static const int kITargetPosFieldNumber = 1;
  inline ::google::protobuf::int32 itargetpos() const;
  inline void set_itargetpos(::google::protobuf::int32 value);

  // required int32 iBuffID = 2;
  inline bool has_ibuffid() const;
  inline void clear_ibuffid();
  static const int kIBuffIDFieldNumber = 2;
  inline ::google::protobuf::int32 ibuffid() const;
  inline void set_ibuffid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.FightDelBuffAction)
 private:
  inline void set_has_itargetpos();
  inline void clear_has_itargetpos();
  inline void set_has_ibuffid();
  inline void clear_has_ibuffid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itargetpos_;
  ::google::protobuf::int32 ibuffid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightDelBuffAction* default_instance_;
};
// -------------------------------------------------------------------

class FightHead : public ::google::protobuf::Message {
 public:
  FightHead();
  virtual ~FightHead();

  FightHead(const FightHead& from);

  inline FightHead& operator=(const FightHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightHead& default_instance();

  void Swap(FightHead* other);

  // implements Message ----------------------------------------------

  FightHead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightHead& from);
  void MergeFrom(const FightHead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iHeadID = 1;
  inline bool has_iheadid() const;
  inline void clear_iheadid();
  static const int kIHeadIDFieldNumber = 1;
  inline ::google::protobuf::int32 iheadid() const;
  inline void set_iheadid(::google::protobuf::int32 value);

  // required string strActorName = 2;
  inline bool has_stractorname() const;
  inline void clear_stractorname();
  static const int kStrActorNameFieldNumber = 2;
  inline const ::std::string& stractorname() const;
  inline void set_stractorname(const ::std::string& value);
  inline void set_stractorname(const char* value);
  inline void set_stractorname(const char* value, size_t size);
  inline ::std::string* mutable_stractorname();
  inline ::std::string* release_stractorname();
  inline void set_allocated_stractorname(::std::string* stractorname);

  // optional int32 iLevel = 3;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 3;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.FightHead)
 private:
  inline void set_has_iheadid();
  inline void clear_has_iheadid();
  inline void set_has_stractorname();
  inline void clear_has_stractorname();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* stractorname_;
  ::google::protobuf::int32 iheadid_;
  ::google::protobuf::int32 ilevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightHead* default_instance_;
};
// -------------------------------------------------------------------

class FightDataAll : public ::google::protobuf::Message {
 public:
  FightDataAll();
  virtual ~FightDataAll();

  FightDataAll(const FightDataAll& from);

  inline FightDataAll& operator=(const FightDataAll& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightDataAll& default_instance();

  void Swap(FightDataAll* other);

  // implements Message ----------------------------------------------

  FightDataAll* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightDataAll& from);
  void MergeFrom(const FightDataAll& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.FightObj szFightObject = 1;
  inline int szfightobject_size() const;
  inline void clear_szfightobject();
  static const int kSzFightObjectFieldNumber = 1;
  inline const ::GSProto::FightObj& szfightobject(int index) const;
  inline ::GSProto::FightObj* mutable_szfightobject(int index);
  inline ::GSProto::FightObj* add_szfightobject();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightObj >&
      szfightobject() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightObj >*
      mutable_szfightobject();

  // repeated .GSProto.FightAction szFightAction = 2;
  inline int szfightaction_size() const;
  inline void clear_szfightaction();
  static const int kSzFightActionFieldNumber = 2;
  inline const ::GSProto::FightAction& szfightaction(int index) const;
  inline ::GSProto::FightAction* mutable_szfightaction(int index);
  inline ::GSProto::FightAction* add_szfightaction();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightAction >&
      szfightaction() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightAction >*
      mutable_szfightaction();

  // optional int32 iFightType = 3;
  inline bool has_ifighttype() const;
  inline void clear_ifighttype();
  static const int kIFightTypeFieldNumber = 3;
  inline ::google::protobuf::int32 ifighttype() const;
  inline void set_ifighttype(::google::protobuf::int32 value);

  // optional int32 iSceneID = 4;
  inline bool has_isceneid() const;
  inline void clear_isceneid();
  static const int kISceneIDFieldNumber = 4;
  inline ::google::protobuf::int32 isceneid() const;
  inline void set_isceneid(::google::protobuf::int32 value);

  // required int32 iIsAttackerWin = 5;
  inline bool has_iisattackerwin() const;
  inline void clear_iisattackerwin();
  static const int kIIsAttackerWinFieldNumber = 5;
  inline ::google::protobuf::int32 iisattackerwin() const;
  inline void set_iisattackerwin(::google::protobuf::int32 value);

  // optional int32 iCurItemCount = 6;
  inline bool has_icuritemcount() const;
  inline void clear_icuritemcount();
  static const int kICurItemCountFieldNumber = 6;
  inline ::google::protobuf::int32 icuritemcount() const;
  inline void set_icuritemcount(::google::protobuf::int32 value);

  // optional bool bOnlyOneFight = 7;
  inline bool has_bonlyonefight() const;
  inline void clear_bonlyonefight();
  static const int kBOnlyOneFightFieldNumber = 7;
  inline bool bonlyonefight() const;
  inline void set_bonlyonefight(bool value);

  // optional int32 iInitItemCount = 8;
  inline bool has_iinititemcount() const;
  inline void clear_iinititemcount();
  static const int kIInitItemCountFieldNumber = 8;
  inline ::google::protobuf::int32 iinititemcount() const;
  inline void set_iinititemcount(::google::protobuf::int32 value);

  // optional .GSProto.FightHead leftHead = 9;
  inline bool has_lefthead() const;
  inline void clear_lefthead();
  static const int kLeftHeadFieldNumber = 9;
  inline const ::GSProto::FightHead& lefthead() const;
  inline ::GSProto::FightHead* mutable_lefthead();
  inline ::GSProto::FightHead* release_lefthead();
  inline void set_allocated_lefthead(::GSProto::FightHead* lefthead);

  // optional .GSProto.FightHead rightHead = 10;
  inline bool has_righthead() const;
  inline void clear_righthead();
  static const int kRightHeadFieldNumber = 10;
  inline const ::GSProto::FightHead& righthead() const;
  inline ::GSProto::FightHead* mutable_righthead();
  inline ::GSProto::FightHead* release_righthead();
  inline void set_allocated_righthead(::GSProto::FightHead* righthead);

  // @@protoc_insertion_point(class_scope:GSProto.FightDataAll)
 private:
  inline void set_has_ifighttype();
  inline void clear_has_ifighttype();
  inline void set_has_isceneid();
  inline void clear_has_isceneid();
  inline void set_has_iisattackerwin();
  inline void clear_has_iisattackerwin();
  inline void set_has_icuritemcount();
  inline void clear_has_icuritemcount();
  inline void set_has_bonlyonefight();
  inline void clear_has_bonlyonefight();
  inline void set_has_iinititemcount();
  inline void clear_has_iinititemcount();
  inline void set_has_lefthead();
  inline void clear_has_lefthead();
  inline void set_has_righthead();
  inline void clear_has_righthead();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::FightObj > szfightobject_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::FightAction > szfightaction_;
  ::google::protobuf::int32 ifighttype_;
  ::google::protobuf::int32 isceneid_;
  ::google::protobuf::int32 iisattackerwin_;
  ::google::protobuf::int32 icuritemcount_;
  bool bonlyonefight_;
  ::google::protobuf::int32 iinititemcount_;
  ::GSProto::FightHead* lefthead_;
  ::GSProto::FightHead* righthead_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightDataAll* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_FightMember : public ::google::protobuf::Message {
 public:
  Cmd_Sc_FightMember();
  virtual ~Cmd_Sc_FightMember();

  Cmd_Sc_FightMember(const Cmd_Sc_FightMember& from);

  inline Cmd_Sc_FightMember& operator=(const Cmd_Sc_FightMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_FightMember& default_instance();

  void Swap(Cmd_Sc_FightMember* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_FightMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_FightMember& from);
  void MergeFrom(const Cmd_Sc_FightMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.FightObj szFightObject = 1;
  inline int szfightobject_size() const;
  inline void clear_szfightobject();
  static const int kSzFightObjectFieldNumber = 1;
  inline const ::GSProto::FightObj& szfightobject(int index) const;
  inline ::GSProto::FightObj* mutable_szfightobject(int index);
  inline ::GSProto::FightObj* add_szfightobject();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightObj >&
      szfightobject() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightObj >*
      mutable_szfightobject();

  // optional int32 iFightType = 2;
  inline bool has_ifighttype() const;
  inline void clear_ifighttype();
  static const int kIFightTypeFieldNumber = 2;
  inline ::google::protobuf::int32 ifighttype() const;
  inline void set_ifighttype(::google::protobuf::int32 value);

  // optional int32 iSceneID = 3;
  inline bool has_isceneid() const;
  inline void clear_isceneid();
  static const int kISceneIDFieldNumber = 3;
  inline ::google::protobuf::int32 isceneid() const;
  inline void set_isceneid(::google::protobuf::int32 value);

  // required int32 iIsAttackerWin = 4;
  inline bool has_iisattackerwin() const;
  inline void clear_iisattackerwin();
  static const int kIIsAttackerWinFieldNumber = 4;
  inline ::google::protobuf::int32 iisattackerwin() const;
  inline void set_iisattackerwin(::google::protobuf::int32 value);

  // optional bool bCanUseActorSkill = 5;
  inline bool has_bcanuseactorskill() const;
  inline void clear_bcanuseactorskill();
  static const int kBCanUseActorSkillFieldNumber = 5;
  inline bool bcanuseactorskill() const;
  inline void set_bcanuseactorskill(bool value);

  // optional int32 iItemCount = 6;
  inline bool has_iitemcount() const;
  inline void clear_iitemcount();
  static const int kIItemCountFieldNumber = 6;
  inline ::google::protobuf::int32 iitemcount() const;
  inline void set_iitemcount(::google::protobuf::int32 value);

  // optional bool bCanSkipBattle = 7;
  inline bool has_bcanskipbattle() const;
  inline void clear_bcanskipbattle();
  static const int kBCanSkipBattleFieldNumber = 7;
  inline bool bcanskipbattle() const;
  inline void set_bcanskipbattle(bool value);

  // optional bool bFinalFight = 8;
  inline bool has_bfinalfight() const;
  inline void clear_bfinalfight();
  static const int kBFinalFightFieldNumber = 8;
  inline bool bfinalfight() const;
  inline void set_bfinalfight(bool value);

  // optional .GSProto.FightHead leftHead = 9;
  inline bool has_lefthead() const;
  inline void clear_lefthead();
  static const int kLeftHeadFieldNumber = 9;
  inline const ::GSProto::FightHead& lefthead() const;
  inline ::GSProto::FightHead* mutable_lefthead();
  inline ::GSProto::FightHead* release_lefthead();
  inline void set_allocated_lefthead(::GSProto::FightHead* lefthead);

  // optional .GSProto.FightHead rightHead = 10;
  inline bool has_righthead() const;
  inline void clear_righthead();
  static const int kRightHeadFieldNumber = 10;
  inline const ::GSProto::FightHead& righthead() const;
  inline ::GSProto::FightHead* mutable_righthead();
  inline ::GSProto::FightHead* release_righthead();
  inline void set_allocated_righthead(::GSProto::FightHead* righthead);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_FightMember)
 private:
  inline void set_has_ifighttype();
  inline void clear_has_ifighttype();
  inline void set_has_isceneid();
  inline void clear_has_isceneid();
  inline void set_has_iisattackerwin();
  inline void clear_has_iisattackerwin();
  inline void set_has_bcanuseactorskill();
  inline void clear_has_bcanuseactorskill();
  inline void set_has_iitemcount();
  inline void clear_has_iitemcount();
  inline void set_has_bcanskipbattle();
  inline void clear_has_bcanskipbattle();
  inline void set_has_bfinalfight();
  inline void clear_has_bfinalfight();
  inline void set_has_lefthead();
  inline void clear_has_lefthead();
  inline void set_has_righthead();
  inline void clear_has_righthead();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::FightObj > szfightobject_;
  ::google::protobuf::int32 ifighttype_;
  ::google::protobuf::int32 isceneid_;
  ::google::protobuf::int32 iisattackerwin_;
  ::google::protobuf::int32 iitemcount_;
  ::GSProto::FightHead* lefthead_;
  ::GSProto::FightHead* righthead_;
  bool bcanuseactorskill_;
  bool bcanskipbattle_;
  bool bfinalfight_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_FightMember* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_FightAction : public ::google::protobuf::Message {
 public:
  Cmd_Sc_FightAction();
  virtual ~Cmd_Sc_FightAction();

  Cmd_Sc_FightAction(const Cmd_Sc_FightAction& from);

  inline Cmd_Sc_FightAction& operator=(const Cmd_Sc_FightAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_FightAction& default_instance();

  void Swap(Cmd_Sc_FightAction* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_FightAction* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_FightAction& from);
  void MergeFrom(const Cmd_Sc_FightAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.FightAction singleAction = 1;
  inline bool has_singleaction() const;
  inline void clear_singleaction();
  static const int kSingleActionFieldNumber = 1;
  inline const ::GSProto::FightAction& singleaction() const;
  inline ::GSProto::FightAction* mutable_singleaction();
  inline ::GSProto::FightAction* release_singleaction();
  inline void set_allocated_singleaction(::GSProto::FightAction* singleaction);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_FightAction)
 private:
  inline void set_has_singleaction();
  inline void clear_has_singleaction();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::FightAction* singleaction_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_FightAction* default_instance_;
};
// -------------------------------------------------------------------

class ItemInfo : public ::google::protobuf::Message {
 public:
  ItemInfo();
  virtual ~ItemInfo();

  ItemInfo(const ItemInfo& from);

  inline ItemInfo& operator=(const ItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemInfo& default_instance();

  void Swap(ItemInfo* other);

  // implements Message ----------------------------------------------

  ItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemInfo& from);
  void MergeFrom(const ItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // required int32 iItemID = 2;
  inline bool has_iitemid() const;
  inline void clear_iitemid();
  static const int kIItemIDFieldNumber = 2;
  inline ::google::protobuf::int32 iitemid() const;
  inline void set_iitemid(::google::protobuf::int32 value);

  // required int32 iItemCount = 3;
  inline bool has_iitemcount() const;
  inline void clear_iitemcount();
  static const int kIItemCountFieldNumber = 3;
  inline ::google::protobuf::int32 iitemcount() const;
  inline void set_iitemcount(::google::protobuf::int32 value);

  // optional int32 iCombineNeedCount = 4;
  inline bool has_icombineneedcount() const;
  inline void clear_icombineneedcount();
  static const int kICombineNeedCountFieldNumber = 4;
  inline ::google::protobuf::int32 icombineneedcount() const;
  inline void set_icombineneedcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.ItemInfo)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();
  inline void set_has_iitemid();
  inline void clear_has_iitemid();
  inline void set_has_iitemcount();
  inline void clear_has_iitemcount();
  inline void set_has_icombineneedcount();
  inline void clear_has_icombineneedcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwobjectid_;
  ::google::protobuf::int32 iitemid_;
  ::google::protobuf::int32 iitemcount_;
  ::google::protobuf::int32 icombineneedcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static ItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_BagData : public ::google::protobuf::Message {
 public:
  Cmd_Sc_BagData();
  virtual ~Cmd_Sc_BagData();

  Cmd_Sc_BagData(const Cmd_Sc_BagData& from);

  inline Cmd_Sc_BagData& operator=(const Cmd_Sc_BagData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_BagData& default_instance();

  void Swap(Cmd_Sc_BagData* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_BagData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_BagData& from);
  void MergeFrom(const Cmd_Sc_BagData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.ItemInfo szItemData = 1;
  inline int szitemdata_size() const;
  inline void clear_szitemdata();
  static const int kSzItemDataFieldNumber = 1;
  inline const ::GSProto::ItemInfo& szitemdata(int index) const;
  inline ::GSProto::ItemInfo* mutable_szitemdata(int index);
  inline ::GSProto::ItemInfo* add_szitemdata();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ItemInfo >&
      szitemdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::ItemInfo >*
      mutable_szitemdata();

  // repeated .GSProto.ItemInfo szMaterialData = 2;
  inline int szmaterialdata_size() const;
  inline void clear_szmaterialdata();
  static const int kSzMaterialDataFieldNumber = 2;
  inline const ::GSProto::ItemInfo& szmaterialdata(int index) const;
  inline ::GSProto::ItemInfo* mutable_szmaterialdata(int index);
  inline ::GSProto::ItemInfo* add_szmaterialdata();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ItemInfo >&
      szmaterialdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::ItemInfo >*
      mutable_szmaterialdata();

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_BagData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::ItemInfo > szitemdata_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::ItemInfo > szmaterialdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_BagData* default_instance_;
};
// -------------------------------------------------------------------

class BagChgInfo : public ::google::protobuf::Message {
 public:
  BagChgInfo();
  virtual ~BagChgInfo();

  BagChgInfo(const BagChgInfo& from);

  inline BagChgInfo& operator=(const BagChgInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BagChgInfo& default_instance();

  void Swap(BagChgInfo* other);

  // implements Message ----------------------------------------------

  BagChgInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BagChgInfo& from);
  void MergeFrom(const BagChgInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iChgType = 1;
  inline bool has_ichgtype() const;
  inline void clear_ichgtype();
  static const int kIChgTypeFieldNumber = 1;
  inline ::google::protobuf::int32 ichgtype() const;
  inline void set_ichgtype(::google::protobuf::int32 value);

  // optional .GSProto.ItemInfo itemDetail = 2;
  inline bool has_itemdetail() const;
  inline void clear_itemdetail();
  static const int kItemDetailFieldNumber = 2;
  inline const ::GSProto::ItemInfo& itemdetail() const;
  inline ::GSProto::ItemInfo* mutable_itemdetail();
  inline ::GSProto::ItemInfo* release_itemdetail();
  inline void set_allocated_itemdetail(::GSProto::ItemInfo* itemdetail);

  // optional uint32 delObjectID = 3;
  inline bool has_delobjectid() const;
  inline void clear_delobjectid();
  static const int kDelObjectIDFieldNumber = 3;
  inline ::google::protobuf::uint32 delobjectid() const;
  inline void set_delobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.BagChgInfo)
 private:
  inline void set_has_ichgtype();
  inline void clear_has_ichgtype();
  inline void set_has_itemdetail();
  inline void clear_has_itemdetail();
  inline void set_has_delobjectid();
  inline void clear_has_delobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::ItemInfo* itemdetail_;
  ::google::protobuf::int32 ichgtype_;
  ::google::protobuf::uint32 delobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static BagChgInfo* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_BagChg : public ::google::protobuf::Message {
 public:
  Cmd_Sc_BagChg();
  virtual ~Cmd_Sc_BagChg();

  Cmd_Sc_BagChg(const Cmd_Sc_BagChg& from);

  inline Cmd_Sc_BagChg& operator=(const Cmd_Sc_BagChg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_BagChg& default_instance();

  void Swap(Cmd_Sc_BagChg* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_BagChg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_BagChg& from);
  void MergeFrom(const Cmd_Sc_BagChg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.BagChgInfo szBagChgList = 1;
  inline int szbagchglist_size() const;
  inline void clear_szbagchglist();
  static const int kSzBagChgListFieldNumber = 1;
  inline const ::GSProto::BagChgInfo& szbagchglist(int index) const;
  inline ::GSProto::BagChgInfo* mutable_szbagchglist(int index);
  inline ::GSProto::BagChgInfo* add_szbagchglist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::BagChgInfo >&
      szbagchglist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::BagChgInfo >*
      mutable_szbagchglist();

  // required int32 iBagType = 2;
  inline bool has_ibagtype() const;
  inline void clear_ibagtype();
  static const int kIBagTypeFieldNumber = 2;
  inline ::google::protobuf::int32 ibagtype() const;
  inline void set_ibagtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_BagChg)
 private:
  inline void set_has_ibagtype();
  inline void clear_has_ibagtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::BagChgInfo > szbagchglist_;
  ::google::protobuf::int32 ibagtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_BagChg* default_instance_;
};
// -------------------------------------------------------------------

class DungeonSection : public ::google::protobuf::Message {
 public:
  DungeonSection();
  virtual ~DungeonSection();

  DungeonSection(const DungeonSection& from);

  inline DungeonSection& operator=(const DungeonSection& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DungeonSection& default_instance();

  void Swap(DungeonSection* other);

  // implements Message ----------------------------------------------

  DungeonSection* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DungeonSection& from);
  void MergeFrom(const DungeonSection& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iSectionID = 1;
  inline bool has_isectionid() const;
  inline void clear_isectionid();
  static const int kISectionIDFieldNumber = 1;
  inline ::google::protobuf::int32 isectionid() const;
  inline void set_isectionid(::google::protobuf::int32 value);

  // required int32 iIsPerfectPass = 2;
  inline bool has_iisperfectpass() const;
  inline void clear_iisperfectpass();
  static const int kIIsPerfectPassFieldNumber = 2;
  inline ::google::protobuf::int32 iisperfectpass() const;
  inline void set_iisperfectpass(::google::protobuf::int32 value);

  // repeated int32 szPerfectIDList = 3;
  inline int szperfectidlist_size() const;
  inline void clear_szperfectidlist();
  static const int kSzPerfectIDListFieldNumber = 3;
  inline ::google::protobuf::int32 szperfectidlist(int index) const;
  inline void set_szperfectidlist(int index, ::google::protobuf::int32 value);
  inline void add_szperfectidlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      szperfectidlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_szperfectidlist();

  // required bool bGeted = 4;
  inline bool has_bgeted() const;
  inline void clear_bgeted();
  static const int kBGetedFieldNumber = 4;
  inline bool bgeted() const;
  inline void set_bgeted(bool value);

  // optional int32 iStar = 5;
  inline bool has_istar() const;
  inline void clear_istar();
  static const int kIStarFieldNumber = 5;
  inline ::google::protobuf::int32 istar() const;
  inline void set_istar(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.DungeonSection)
 private:
  inline void set_has_isectionid();
  inline void clear_has_isectionid();
  inline void set_has_iisperfectpass();
  inline void clear_has_iisperfectpass();
  inline void set_has_bgeted();
  inline void clear_has_bgeted();
  inline void set_has_istar();
  inline void clear_has_istar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isectionid_;
  ::google::protobuf::int32 iisperfectpass_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > szperfectidlist_;
  bool bgeted_;
  ::google::protobuf::int32 istar_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static DungeonSection* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_DungeonSectionList : public ::google::protobuf::Message {
 public:
  Cmd_Sc_DungeonSectionList();
  virtual ~Cmd_Sc_DungeonSectionList();

  Cmd_Sc_DungeonSectionList(const Cmd_Sc_DungeonSectionList& from);

  inline Cmd_Sc_DungeonSectionList& operator=(const Cmd_Sc_DungeonSectionList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_DungeonSectionList& default_instance();

  void Swap(Cmd_Sc_DungeonSectionList* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_DungeonSectionList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_DungeonSectionList& from);
  void MergeFrom(const Cmd_Sc_DungeonSectionList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.DungeonSection szDungeonSection = 1;
  inline int szdungeonsection_size() const;
  inline void clear_szdungeonsection();
  static const int kSzDungeonSectionFieldNumber = 1;
  inline const ::GSProto::DungeonSection& szdungeonsection(int index) const;
  inline ::GSProto::DungeonSection* mutable_szdungeonsection(int index);
  inline ::GSProto::DungeonSection* add_szdungeonsection();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::DungeonSection >&
      szdungeonsection() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::DungeonSection >*
      mutable_szdungeonsection();

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_DungeonSectionList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::DungeonSection > szdungeonsection_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_DungeonSectionList* default_instance_;
};
// -------------------------------------------------------------------

class DungeonSceneDetail : public ::google::protobuf::Message {
 public:
  DungeonSceneDetail();
  virtual ~DungeonSceneDetail();

  DungeonSceneDetail(const DungeonSceneDetail& from);

  inline DungeonSceneDetail& operator=(const DungeonSceneDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DungeonSceneDetail& default_instance();

  void Swap(DungeonSceneDetail* other);

  // implements Message ----------------------------------------------

  DungeonSceneDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DungeonSceneDetail& from);
  void MergeFrom(const DungeonSceneDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iSceneID = 1;
  inline bool has_isceneid() const;
  inline void clear_isceneid();
  static const int kISceneIDFieldNumber = 1;
  inline ::google::protobuf::int32 isceneid() const;
  inline void set_isceneid(::google::protobuf::int32 value);

  // required int32 iStarLevel = 2;
  inline bool has_istarlevel() const;
  inline void clear_istarlevel();
  static const int kIStarLevelFieldNumber = 2;
  inline ::google::protobuf::int32 istarlevel() const;
  inline void set_istarlevel(::google::protobuf::int32 value);

  // optional bool bNewOpen = 3;
  inline bool has_bnewopen() const;
  inline void clear_bnewopen();
  static const int kBNewOpenFieldNumber = 3;
  inline bool bnewopen() const;
  inline void set_bnewopen(bool value);

  // optional bool bHasPassLimit = 4;
  inline bool has_bhaspasslimit() const;
  inline void clear_bhaspasslimit();
  static const int kBHasPassLimitFieldNumber = 4;
  inline bool bhaspasslimit() const;
  inline void set_bhaspasslimit(bool value);

  // optional int32 iLeftCount = 5;
  inline bool has_ileftcount() const;
  inline void clear_ileftcount();
  static const int kILeftCountFieldNumber = 5;
  inline ::google::protobuf::int32 ileftcount() const;
  inline void set_ileftcount(::google::protobuf::int32 value);

  // optional int32 iTotalCount = 6;
  inline bool has_itotalcount() const;
  inline void clear_itotalcount();
  static const int kITotalCountFieldNumber = 6;
  inline ::google::protobuf::int32 itotalcount() const;
  inline void set_itotalcount(::google::protobuf::int32 value);

  // optional bool bIsOpend = 12;
  inline bool has_bisopend() const;
  inline void clear_bisopend();
  static const int kBIsOpendFieldNumber = 12;
  inline bool bisopend() const;
  inline void set_bisopend(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.DungeonSceneDetail)
 private:
  inline void set_has_isceneid();
  inline void clear_has_isceneid();
  inline void set_has_istarlevel();
  inline void clear_has_istarlevel();
  inline void set_has_bnewopen();
  inline void clear_has_bnewopen();
  inline void set_has_bhaspasslimit();
  inline void clear_has_bhaspasslimit();
  inline void set_has_ileftcount();
  inline void clear_has_ileftcount();
  inline void set_has_itotalcount();
  inline void clear_has_itotalcount();
  inline void set_has_bisopend();
  inline void clear_has_bisopend();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isceneid_;
  ::google::protobuf::int32 istarlevel_;
  bool bnewopen_;
  bool bhaspasslimit_;
  bool bisopend_;
  ::google::protobuf::int32 ileftcount_;
  ::google::protobuf::int32 itotalcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static DungeonSceneDetail* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_QueryDSectionDetail : public ::google::protobuf::Message {
 public:
  Cmd_Cs_QueryDSectionDetail();
  virtual ~Cmd_Cs_QueryDSectionDetail();

  Cmd_Cs_QueryDSectionDetail(const Cmd_Cs_QueryDSectionDetail& from);

  inline Cmd_Cs_QueryDSectionDetail& operator=(const Cmd_Cs_QueryDSectionDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_QueryDSectionDetail& default_instance();

  void Swap(Cmd_Cs_QueryDSectionDetail* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_QueryDSectionDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_QueryDSectionDetail& from);
  void MergeFrom(const Cmd_Cs_QueryDSectionDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iSectionID = 1;
  inline bool has_isectionid() const;
  inline void clear_isectionid();
  static const int kISectionIDFieldNumber = 1;
  inline ::google::protobuf::int32 isectionid() const;
  inline void set_isectionid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_QueryDSectionDetail)
 private:
  inline void set_has_isectionid();
  inline void clear_has_isectionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isectionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_QueryDSectionDetail* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_QueryDSectionDetail : public ::google::protobuf::Message {
 public:
  Cmd_Sc_QueryDSectionDetail();
  virtual ~Cmd_Sc_QueryDSectionDetail();

  Cmd_Sc_QueryDSectionDetail(const Cmd_Sc_QueryDSectionDetail& from);

  inline Cmd_Sc_QueryDSectionDetail& operator=(const Cmd_Sc_QueryDSectionDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_QueryDSectionDetail& default_instance();

  void Swap(Cmd_Sc_QueryDSectionDetail* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_QueryDSectionDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_QueryDSectionDetail& from);
  void MergeFrom(const Cmd_Sc_QueryDSectionDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.DungeonSceneDetail szDungeonScene = 1;
  inline int szdungeonscene_size() const;
  inline void clear_szdungeonscene();
  static const int kSzDungeonSceneFieldNumber = 1;
  inline const ::GSProto::DungeonSceneDetail& szdungeonscene(int index) const;
  inline ::GSProto::DungeonSceneDetail* mutable_szdungeonscene(int index);
  inline ::GSProto::DungeonSceneDetail* add_szdungeonscene();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::DungeonSceneDetail >&
      szdungeonscene() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::DungeonSceneDetail >*
      mutable_szdungeonscene();

  // required int32 iSectionSize = 2;
  inline bool has_isectionsize() const;
  inline void clear_isectionsize();
  static const int kISectionSizeFieldNumber = 2;
  inline ::google::protobuf::int32 isectionsize() const;
  inline void set_isectionsize(::google::protobuf::int32 value);

  // optional int32 iCostPhystrength = 3;
  inline bool has_icostphystrength() const;
  inline void clear_icostphystrength();
  static const int kICostPhystrengthFieldNumber = 3;
  inline ::google::protobuf::int32 icostphystrength() const;
  inline void set_icostphystrength(::google::protobuf::int32 value);

  // optional bool bSaoDangHaveLimit = 4;
  inline bool has_bsaodanghavelimit() const;
  inline void clear_bsaodanghavelimit();
  static const int kBSaoDangHaveLimitFieldNumber = 4;
  inline bool bsaodanghavelimit() const;
  inline void set_bsaodanghavelimit(bool value);

  // optional bool bShowSaoDangCD = 5;
  inline bool has_bshowsaodangcd() const;
  inline void clear_bshowsaodangcd();
  static const int kBShowSaoDangCDFieldNumber = 5;
  inline bool bshowsaodangcd() const;
  inline void set_bshowsaodangcd(bool value);

  // optional int32 iSaoDangCDSecond = 6;
  inline bool has_isaodangcdsecond() const;
  inline void clear_isaodangcdsecond();
  static const int kISaoDangCDSecondFieldNumber = 6;
  inline ::google::protobuf::int32 isaodangcdsecond() const;
  inline void set_isaodangcdsecond(::google::protobuf::int32 value);

  // optional int32 iLeftSaoDangCount = 7;
  inline bool has_ileftsaodangcount() const;
  inline void clear_ileftsaodangcount();
  static const int kILeftSaoDangCountFieldNumber = 7;
  inline ::google::protobuf::int32 ileftsaodangcount() const;
  inline void set_ileftsaodangcount(::google::protobuf::int32 value);

  // optional int32 iSaoDangLimitCount = 8;
  inline bool has_isaodanglimitcount() const;
  inline void clear_isaodanglimitcount();
  static const int kISaoDangLimitCountFieldNumber = 8;
  inline ::google::protobuf::int32 isaodanglimitcount() const;
  inline void set_isaodanglimitcount(::google::protobuf::int32 value);

  // optional int32 iSectionID = 9;
  inline bool has_isectionid() const;
  inline void clear_isectionid();
  static const int kISectionIDFieldNumber = 9;
  inline ::google::protobuf::int32 isectionid() const;
  inline void set_isectionid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_QueryDSectionDetail)
 private:
  inline void set_has_isectionsize();
  inline void clear_has_isectionsize();
  inline void set_has_icostphystrength();
  inline void clear_has_icostphystrength();
  inline void set_has_bsaodanghavelimit();
  inline void clear_has_bsaodanghavelimit();
  inline void set_has_bshowsaodangcd();
  inline void clear_has_bshowsaodangcd();
  inline void set_has_isaodangcdsecond();
  inline void clear_has_isaodangcdsecond();
  inline void set_has_ileftsaodangcount();
  inline void clear_has_ileftsaodangcount();
  inline void set_has_isaodanglimitcount();
  inline void clear_has_isaodanglimitcount();
  inline void set_has_isectionid();
  inline void clear_has_isectionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::DungeonSceneDetail > szdungeonscene_;
  ::google::protobuf::int32 isectionsize_;
  ::google::protobuf::int32 icostphystrength_;
  bool bsaodanghavelimit_;
  bool bshowsaodangcd_;
  ::google::protobuf::int32 isaodangcdsecond_;
  ::google::protobuf::int32 ileftsaodangcount_;
  ::google::protobuf::int32 isaodanglimitcount_;
  ::google::protobuf::int32 isectionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_QueryDSectionDetail* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_SectionUpdate : public ::google::protobuf::Message {
 public:
  Cmd_Sc_SectionUpdate();
  virtual ~Cmd_Sc_SectionUpdate();

  Cmd_Sc_SectionUpdate(const Cmd_Sc_SectionUpdate& from);

  inline Cmd_Sc_SectionUpdate& operator=(const Cmd_Sc_SectionUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_SectionUpdate& default_instance();

  void Swap(Cmd_Sc_SectionUpdate* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_SectionUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_SectionUpdate& from);
  void MergeFrom(const Cmd_Sc_SectionUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.DungeonSection updateInfo = 1;
  inline bool has_updateinfo() const;
  inline void clear_updateinfo();
  static const int kUpdateInfoFieldNumber = 1;
  inline const ::GSProto::DungeonSection& updateinfo() const;
  inline ::GSProto::DungeonSection* mutable_updateinfo();
  inline ::GSProto::DungeonSection* release_updateinfo();
  inline void set_allocated_updateinfo(::GSProto::DungeonSection* updateinfo);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_SectionUpdate)
 private:
  inline void set_has_updateinfo();
  inline void clear_has_updateinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::DungeonSection* updateinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_SectionUpdate* default_instance_;
};
// -------------------------------------------------------------------

class FightAwardItem : public ::google::protobuf::Message {
 public:
  FightAwardItem();
  virtual ~FightAwardItem();

  FightAwardItem(const FightAwardItem& from);

  inline FightAwardItem& operator=(const FightAwardItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightAwardItem& default_instance();

  void Swap(FightAwardItem* other);

  // implements Message ----------------------------------------------

  FightAwardItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightAwardItem& from);
  void MergeFrom(const FightAwardItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iItemID = 1;
  inline bool has_iitemid() const;
  inline void clear_iitemid();
  static const int kIItemIDFieldNumber = 1;
  inline ::google::protobuf::int32 iitemid() const;
  inline void set_iitemid(::google::protobuf::int32 value);

  // required int32 iCount = 2;
  inline bool has_icount() const;
  inline void clear_icount();
  static const int kICountFieldNumber = 2;
  inline ::google::protobuf::int32 icount() const;
  inline void set_icount(::google::protobuf::int32 value);

  // optional .GSProto.PropItem dynamicEquipProp = 3;
  inline bool has_dynamicequipprop() const;
  inline void clear_dynamicequipprop();
  static const int kDynamicEquipPropFieldNumber = 3;
  inline const ::GSProto::PropItem& dynamicequipprop() const;
  inline ::GSProto::PropItem* mutable_dynamicequipprop();
  inline ::GSProto::PropItem* release_dynamicequipprop();
  inline void set_allocated_dynamicequipprop(::GSProto::PropItem* dynamicequipprop);

  // @@protoc_insertion_point(class_scope:GSProto.FightAwardItem)
 private:
  inline void set_has_iitemid();
  inline void clear_has_iitemid();
  inline void set_has_icount();
  inline void clear_has_icount();
  inline void set_has_dynamicequipprop();
  inline void clear_has_dynamicequipprop();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iitemid_;
  ::google::protobuf::int32 icount_;
  ::GSProto::PropItem* dynamicequipprop_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightAwardItem* default_instance_;
};
// -------------------------------------------------------------------

class AwardPay : public ::google::protobuf::Message {
 public:
  AwardPay();
  virtual ~AwardPay();

  AwardPay(const AwardPay& from);

  inline AwardPay& operator=(const AwardPay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AwardPay& default_instance();

  void Swap(AwardPay* other);

  // implements Message ----------------------------------------------

  AwardPay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AwardPay& from);
  void MergeFrom(const AwardPay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 money = 1;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 1;
  inline ::google::protobuf::int32 money() const;
  inline void set_money(::google::protobuf::int32 value);

  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.AwardPay)
 private:
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static AwardPay* default_instance_;
};
// -------------------------------------------------------------------

class PropItem : public ::google::protobuf::Message {
 public:
  PropItem();
  virtual ~PropItem();

  PropItem(const PropItem& from);

  inline PropItem& operator=(const PropItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PropItem& default_instance();

  void Swap(PropItem* other);

  // implements Message ----------------------------------------------

  PropItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PropItem& from);
  void MergeFrom(const PropItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iLifeAttID = 1;
  inline bool has_ilifeattid() const;
  inline void clear_ilifeattid();
  static const int kILifeAttIDFieldNumber = 1;
  inline ::google::protobuf::int32 ilifeattid() const;
  inline void set_ilifeattid(::google::protobuf::int32 value);

  // required int32 iValue = 2;
  inline bool has_ivalue() const;
  inline void clear_ivalue();
  static const int kIValueFieldNumber = 2;
  inline ::google::protobuf::int32 ivalue() const;
  inline void set_ivalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.PropItem)
 private:
  inline void set_has_ilifeattid();
  inline void clear_has_ilifeattid();
  inline void set_has_ivalue();
  inline void clear_has_ivalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ilifeattid_;
  ::google::protobuf::int32 ivalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static PropItem* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_AttChg : public ::google::protobuf::Message {
 public:
  Cmd_Sc_AttChg();
  virtual ~Cmd_Sc_AttChg();

  Cmd_Sc_AttChg(const Cmd_Sc_AttChg& from);

  inline Cmd_Sc_AttChg& operator=(const Cmd_Sc_AttChg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_AttChg& default_instance();

  void Swap(Cmd_Sc_AttChg* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_AttChg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_AttChg& from);
  void MergeFrom(const Cmd_Sc_AttChg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // repeated .GSProto.PropItem szChgLifeAtt = 2;
  inline int szchglifeatt_size() const;
  inline void clear_szchglifeatt();
  static const int kSzChgLifeAttFieldNumber = 2;
  inline const ::GSProto::PropItem& szchglifeatt(int index) const;
  inline ::GSProto::PropItem* mutable_szchglifeatt(int index);
  inline ::GSProto::PropItem* add_szchglifeatt();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
      szchglifeatt() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
      mutable_szchglifeatt();

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_AttChg)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem > szchglifeatt_;
  ::google::protobuf::uint32 dwobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_AttChg* default_instance_;
};
// -------------------------------------------------------------------

class FightAwardHero : public ::google::protobuf::Message {
 public:
  FightAwardHero();
  virtual ~FightAwardHero();

  FightAwardHero(const FightAwardHero& from);

  inline FightAwardHero& operator=(const FightAwardHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightAwardHero& default_instance();

  void Swap(FightAwardHero* other);

  // implements Message ----------------------------------------------

  FightAwardHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightAwardHero& from);
  void MergeFrom(const FightAwardHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iHeroID = 1;
  inline bool has_iheroid() const;
  inline void clear_iheroid();
  static const int kIHeroIDFieldNumber = 1;
  inline ::google::protobuf::int32 iheroid() const;
  inline void set_iheroid(::google::protobuf::int32 value);

  // required int32 iLevelStep = 2;
  inline bool has_ilevelstep() const;
  inline void clear_ilevelstep();
  static const int kILevelStepFieldNumber = 2;
  inline ::google::protobuf::int32 ilevelstep() const;
  inline void set_ilevelstep(::google::protobuf::int32 value);

  // required int32 iCount = 3;
  inline bool has_icount() const;
  inline void clear_icount();
  static const int kICountFieldNumber = 3;
  inline ::google::protobuf::int32 icount() const;
  inline void set_icount(::google::protobuf::int32 value);

  // optional int32 iQuality = 4;
  inline bool has_iquality() const;
  inline void clear_iquality();
  static const int kIQualityFieldNumber = 4;
  inline ::google::protobuf::int32 iquality() const;
  inline void set_iquality(::google::protobuf::int32 value);

  // required bool bHaveChgSoul = 5;
  inline bool has_bhavechgsoul() const;
  inline void clear_bhavechgsoul();
  static const int kBHaveChgSoulFieldNumber = 5;
  inline bool bhavechgsoul() const;
  inline void set_bhavechgsoul(bool value);

  // optional int32 iSoulId = 6;
  inline bool has_isoulid() const;
  inline void clear_isoulid();
  static const int kISoulIdFieldNumber = 6;
  inline ::google::protobuf::int32 isoulid() const;
  inline void set_isoulid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.FightAwardHero)
 private:
  inline void set_has_iheroid();
  inline void clear_has_iheroid();
  inline void set_has_ilevelstep();
  inline void clear_has_ilevelstep();
  inline void set_has_icount();
  inline void clear_has_icount();
  inline void set_has_iquality();
  inline void clear_has_iquality();
  inline void set_has_bhavechgsoul();
  inline void clear_has_bhavechgsoul();
  inline void set_has_isoulid();
  inline void clear_has_isoulid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iheroid_;
  ::google::protobuf::int32 ilevelstep_;
  ::google::protobuf::int32 icount_;
  ::google::protobuf::int32 iquality_;
  bool bhavechgsoul_;
  ::google::protobuf::int32 isoulid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightAwardHero* default_instance_;
};
// -------------------------------------------------------------------

class FightAwardResult : public ::google::protobuf::Message {
 public:
  FightAwardResult();
  virtual ~FightAwardResult();

  FightAwardResult(const FightAwardResult& from);

  inline FightAwardResult& operator=(const FightAwardResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightAwardResult& default_instance();

  void Swap(FightAwardResult* other);

  // implements Message ----------------------------------------------

  FightAwardResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightAwardResult& from);
  void MergeFrom(const FightAwardResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.PropItem szAwardPropList = 1;
  inline int szawardproplist_size() const;
  inline void clear_szawardproplist();
  static const int kSzAwardPropListFieldNumber = 1;
  inline const ::GSProto::PropItem& szawardproplist(int index) const;
  inline ::GSProto::PropItem* mutable_szawardproplist(int index);
  inline ::GSProto::PropItem* add_szawardproplist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
      szawardproplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
      mutable_szawardproplist();

  // repeated .GSProto.FightAwardItem szAwardItemList = 2;
  inline int szawarditemlist_size() const;
  inline void clear_szawarditemlist();
  static const int kSzAwardItemListFieldNumber = 2;
  inline const ::GSProto::FightAwardItem& szawarditemlist(int index) const;
  inline ::GSProto::FightAwardItem* mutable_szawarditemlist(int index);
  inline ::GSProto::FightAwardItem* add_szawarditemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightAwardItem >&
      szawarditemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightAwardItem >*
      mutable_szawarditemlist();

  // repeated .GSProto.FightAwardHero szAwardHeroList = 3;
  inline int szawardherolist_size() const;
  inline void clear_szawardherolist();
  static const int kSzAwardHeroListFieldNumber = 3;
  inline const ::GSProto::FightAwardHero& szawardherolist(int index) const;
  inline ::GSProto::FightAwardHero* mutable_szawardherolist(int index);
  inline ::GSProto::FightAwardHero* add_szawardherolist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightAwardHero >&
      szawardherolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightAwardHero >*
      mutable_szawardherolist();

  // repeated .GSProto.AwardPay szAwardPayList = 4;
  inline int szawardpaylist_size() const;
  inline void clear_szawardpaylist();
  static const int kSzAwardPayListFieldNumber = 4;
  inline const ::GSProto::AwardPay& szawardpaylist(int index) const;
  inline ::GSProto::AwardPay* mutable_szawardpaylist(int index);
  inline ::GSProto::AwardPay* add_szawardpaylist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::AwardPay >&
      szawardpaylist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::AwardPay >*
      mutable_szawardpaylist();

  // @@protoc_insertion_point(class_scope:GSProto.FightAwardResult)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem > szawardproplist_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::FightAwardItem > szawarditemlist_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::FightAwardHero > szawardherolist_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::AwardPay > szawardpaylist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightAwardResult* default_instance_;
};
// -------------------------------------------------------------------

class HeroExpAwardDetail : public ::google::protobuf::Message {
 public:
  HeroExpAwardDetail();
  virtual ~HeroExpAwardDetail();

  HeroExpAwardDetail(const HeroExpAwardDetail& from);

  inline HeroExpAwardDetail& operator=(const HeroExpAwardDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroExpAwardDetail& default_instance();

  void Swap(HeroExpAwardDetail* other);

  // implements Message ----------------------------------------------

  HeroExpAwardDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroExpAwardDetail& from);
  void MergeFrom(const HeroExpAwardDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // required bool bLevelUp = 2;
  inline bool has_blevelup() const;
  inline void clear_blevelup();
  static const int kBLevelUpFieldNumber = 2;
  inline bool blevelup() const;
  inline void set_blevelup(bool value);

  // required int32 iHeroExpPercent = 3;
  inline bool has_iheroexppercent() const;
  inline void clear_iheroexppercent();
  static const int kIHeroExpPercentFieldNumber = 3;
  inline ::google::protobuf::int32 iheroexppercent() const;
  inline void set_iheroexppercent(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.HeroExpAwardDetail)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();
  inline void set_has_blevelup();
  inline void clear_has_blevelup();
  inline void set_has_iheroexppercent();
  inline void clear_has_iheroexppercent();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwheroobjectid_;
  bool blevelup_;
  ::google::protobuf::int32 iheroexppercent_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static HeroExpAwardDetail* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_CommFightResult : public ::google::protobuf::Message {
 public:
  Cmd_Sc_CommFightResult();
  virtual ~Cmd_Sc_CommFightResult();

  Cmd_Sc_CommFightResult(const Cmd_Sc_CommFightResult& from);

  inline Cmd_Sc_CommFightResult& operator=(const Cmd_Sc_CommFightResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_CommFightResult& default_instance();

  void Swap(Cmd_Sc_CommFightResult* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_CommFightResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_CommFightResult& from);
  void MergeFrom(const Cmd_Sc_CommFightResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iSceneID = 1;
  inline bool has_isceneid() const;
  inline void clear_isceneid();
  static const int kISceneIDFieldNumber = 1;
  inline ::google::protobuf::int32 isceneid() const;
  inline void set_isceneid(::google::protobuf::int32 value);

  // required int32 iIsSuccess = 2;
  inline bool has_iissuccess() const;
  inline void clear_iissuccess();
  static const int kIIsSuccessFieldNumber = 2;
  inline ::google::protobuf::int32 iissuccess() const;
  inline void set_iissuccess(::google::protobuf::int32 value);

  // optional int32 iStar = 3;
  inline bool has_istar() const;
  inline void clear_istar();
  static const int kIStarFieldNumber = 3;
  inline ::google::protobuf::int32 istar() const;
  inline void set_istar(::google::protobuf::int32 value);

  // optional .GSProto.FightAwardResult awardResult = 4;
  inline bool has_awardresult() const;
  inline void clear_awardresult();
  static const int kAwardResultFieldNumber = 4;
  inline const ::GSProto::FightAwardResult& awardresult() const;
  inline ::GSProto::FightAwardResult* mutable_awardresult();
  inline ::GSProto::FightAwardResult* release_awardresult();
  inline void set_allocated_awardresult(::GSProto::FightAwardResult* awardresult);

  // optional bool bReserve = 5;
  inline bool has_breserve() const;
  inline void clear_breserve();
  static const int kBReserveFieldNumber = 5;
  inline bool breserve() const;
  inline void set_breserve(bool value);

  // repeated .GSProto.HeroExpAwardDetail szHeroAward = 6;
  inline int szheroaward_size() const;
  inline void clear_szheroaward();
  static const int kSzHeroAwardFieldNumber = 6;
  inline const ::GSProto::HeroExpAwardDetail& szheroaward(int index) const;
  inline ::GSProto::HeroExpAwardDetail* mutable_szheroaward(int index);
  inline ::GSProto::HeroExpAwardDetail* add_szheroaward();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HeroExpAwardDetail >&
      szheroaward() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::HeroExpAwardDetail >*
      mutable_szheroaward();

  // optional int32 iHeroGetExp = 7;
  inline bool has_iherogetexp() const;
  inline void clear_iherogetexp();
  static const int kIHeroGetExpFieldNumber = 7;
  inline ::google::protobuf::int32 iherogetexp() const;
  inline void set_iherogetexp(::google::protobuf::int32 value);

  // optional bool bCanFP = 8;
  inline bool has_bcanfp() const;
  inline void clear_bcanfp();
  static const int kBCanFPFieldNumber = 8;
  inline bool bcanfp() const;
  inline void set_bcanfp(bool value);

  // optional int32 iCostGold = 9;
  inline bool has_icostgold() const;
  inline void clear_icostgold();
  static const int kICostGoldFieldNumber = 9;
  inline ::google::protobuf::int32 icostgold() const;
  inline void set_icostgold(::google::protobuf::int32 value);

  // optional int32 iExtraExp = 10;
  inline bool has_iextraexp() const;
  inline void clear_iextraexp();
  static const int kIExtraExpFieldNumber = 10;
  inline ::google::protobuf::int32 iextraexp() const;
  inline void set_iextraexp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_CommFightResult)
 private:
  inline void set_has_isceneid();
  inline void clear_has_isceneid();
  inline void set_has_iissuccess();
  inline void clear_has_iissuccess();
  inline void set_has_istar();
  inline void clear_has_istar();
  inline void set_has_awardresult();
  inline void clear_has_awardresult();
  inline void set_has_breserve();
  inline void clear_has_breserve();
  inline void set_has_iherogetexp();
  inline void clear_has_iherogetexp();
  inline void set_has_bcanfp();
  inline void clear_has_bcanfp();
  inline void set_has_icostgold();
  inline void clear_has_icostgold();
  inline void set_has_iextraexp();
  inline void clear_has_iextraexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isceneid_;
  ::google::protobuf::int32 iissuccess_;
  ::GSProto::FightAwardResult* awardresult_;
  ::google::protobuf::int32 istar_;
  bool breserve_;
  bool bcanfp_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::HeroExpAwardDetail > szheroaward_;
  ::google::protobuf::int32 iherogetexp_;
  ::google::protobuf::int32 icostgold_;
  ::google::protobuf::int32 iextraexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_CommFightResult* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC : public ::google::protobuf::Message {
 public:
  CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC();
  virtual ~CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC();

  CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC(const CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC& from);

  inline CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC& operator=(const CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC& default_instance();

  void Swap(CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC* other);

  // implements Message ----------------------------------------------

  CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC& from);
  void MergeFrom(const CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 szEquipIDList = 1;
  inline int szequipidlist_size() const;
  inline void clear_szequipidlist();
  static const int kSzEquipIDListFieldNumber = 1;
  inline ::google::protobuf::int32 szequipidlist(int index) const;
  inline void set_szequipidlist(int index, ::google::protobuf::int32 value);
  inline void add_szequipidlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      szequipidlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_szequipidlist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > szequipidlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIPDUNGEON_FP_CS : public ::google::protobuf::Message {
 public:
  CMD_EQUIPDUNGEON_FP_CS();
  virtual ~CMD_EQUIPDUNGEON_FP_CS();

  CMD_EQUIPDUNGEON_FP_CS(const CMD_EQUIPDUNGEON_FP_CS& from);

  inline CMD_EQUIPDUNGEON_FP_CS& operator=(const CMD_EQUIPDUNGEON_FP_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIPDUNGEON_FP_CS& default_instance();

  void Swap(CMD_EQUIPDUNGEON_FP_CS* other);

  // implements Message ----------------------------------------------

  CMD_EQUIPDUNGEON_FP_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIPDUNGEON_FP_CS& from);
  void MergeFrom(const CMD_EQUIPDUNGEON_FP_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iPos = 1;
  inline bool has_ipos() const;
  inline void clear_ipos();
  static const int kIPosFieldNumber = 1;
  inline ::google::protobuf::int32 ipos() const;
  inline void set_ipos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIPDUNGEON_FP_CS)
 private:
  inline void set_has_ipos();
  inline void clear_has_ipos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ipos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIPDUNGEON_FP_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIPDUNGEON_FP_SC : public ::google::protobuf::Message {
 public:
  CMD_EQUIPDUNGEON_FP_SC();
  virtual ~CMD_EQUIPDUNGEON_FP_SC();

  CMD_EQUIPDUNGEON_FP_SC(const CMD_EQUIPDUNGEON_FP_SC& from);

  inline CMD_EQUIPDUNGEON_FP_SC& operator=(const CMD_EQUIPDUNGEON_FP_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIPDUNGEON_FP_SC& default_instance();

  void Swap(CMD_EQUIPDUNGEON_FP_SC* other);

  // implements Message ----------------------------------------------

  CMD_EQUIPDUNGEON_FP_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIPDUNGEON_FP_SC& from);
  void MergeFrom(const CMD_EQUIPDUNGEON_FP_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iPos = 1;
  inline bool has_ipos() const;
  inline void clear_ipos();
  static const int kIPosFieldNumber = 1;
  inline ::google::protobuf::int32 ipos() const;
  inline void set_ipos(::google::protobuf::int32 value);

  // required .GSProto.EquipInfo equipInfo = 2;
  inline bool has_equipinfo() const;
  inline void clear_equipinfo();
  static const int kEquipInfoFieldNumber = 2;
  inline const ::GSProto::EquipInfo& equipinfo() const;
  inline ::GSProto::EquipInfo* mutable_equipinfo();
  inline ::GSProto::EquipInfo* release_equipinfo();
  inline void set_allocated_equipinfo(::GSProto::EquipInfo* equipinfo);

  // required int32 iNextCostGold = 3;
  inline bool has_inextcostgold() const;
  inline void clear_inextcostgold();
  static const int kINextCostGoldFieldNumber = 3;
  inline ::google::protobuf::int32 inextcostgold() const;
  inline void set_inextcostgold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIPDUNGEON_FP_SC)
 private:
  inline void set_has_ipos();
  inline void clear_has_ipos();
  inline void set_has_equipinfo();
  inline void clear_has_equipinfo();
  inline void set_has_inextcostgold();
  inline void clear_has_inextcostgold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::EquipInfo* equipinfo_;
  ::google::protobuf::int32 ipos_;
  ::google::protobuf::int32 inextcostgold_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIPDUNGEON_FP_SC* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_DungeonFight : public ::google::protobuf::Message {
 public:
  Cmd_Cs_DungeonFight();
  virtual ~Cmd_Cs_DungeonFight();

  Cmd_Cs_DungeonFight(const Cmd_Cs_DungeonFight& from);

  inline Cmd_Cs_DungeonFight& operator=(const Cmd_Cs_DungeonFight& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_DungeonFight& default_instance();

  void Swap(Cmd_Cs_DungeonFight* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_DungeonFight* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_DungeonFight& from);
  void MergeFrom(const Cmd_Cs_DungeonFight& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iSceneID = 1;
  inline bool has_isceneid() const;
  inline void clear_isceneid();
  static const int kISceneIDFieldNumber = 1;
  inline ::google::protobuf::int32 isceneid() const;
  inline void set_isceneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_DungeonFight)
 private:
  inline void set_has_isceneid();
  inline void clear_has_isceneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isceneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_DungeonFight* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_GetSectionAward : public ::google::protobuf::Message {
 public:
  Cmd_Cs_GetSectionAward();
  virtual ~Cmd_Cs_GetSectionAward();

  Cmd_Cs_GetSectionAward(const Cmd_Cs_GetSectionAward& from);

  inline Cmd_Cs_GetSectionAward& operator=(const Cmd_Cs_GetSectionAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_GetSectionAward& default_instance();

  void Swap(Cmd_Cs_GetSectionAward* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_GetSectionAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_GetSectionAward& from);
  void MergeFrom(const Cmd_Cs_GetSectionAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iSectionID = 1;
  inline bool has_isectionid() const;
  inline void clear_isectionid();
  static const int kISectionIDFieldNumber = 1;
  inline ::google::protobuf::int32 isectionid() const;
  inline void set_isectionid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_GetSectionAward)
 private:
  inline void set_has_isectionid();
  inline void clear_has_isectionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isectionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_GetSectionAward* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GET_SECTION_AWARD_SC : public ::google::protobuf::Message {
 public:
  CMD_GET_SECTION_AWARD_SC();
  virtual ~CMD_GET_SECTION_AWARD_SC();

  CMD_GET_SECTION_AWARD_SC(const CMD_GET_SECTION_AWARD_SC& from);

  inline CMD_GET_SECTION_AWARD_SC& operator=(const CMD_GET_SECTION_AWARD_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GET_SECTION_AWARD_SC& default_instance();

  void Swap(CMD_GET_SECTION_AWARD_SC* other);

  // implements Message ----------------------------------------------

  CMD_GET_SECTION_AWARD_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GET_SECTION_AWARD_SC& from);
  void MergeFrom(const CMD_GET_SECTION_AWARD_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iIsOK = 1;
  inline bool has_iisok() const;
  inline void clear_iisok();
  static const int kIIsOKFieldNumber = 1;
  inline ::google::protobuf::int32 iisok() const;
  inline void set_iisok(::google::protobuf::int32 value);

  // required int32 iSectionID = 2;
  inline bool has_isectionid() const;
  inline void clear_isectionid();
  static const int kISectionIDFieldNumber = 2;
  inline ::google::protobuf::int32 isectionid() const;
  inline void set_isectionid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GET_SECTION_AWARD_SC)
 private:
  inline void set_has_iisok();
  inline void clear_has_iisok();
  inline void set_has_isectionid();
  inline void clear_has_isectionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iisok_;
  ::google::protobuf::int32 isectionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GET_SECTION_AWARD_SC* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_ActorLevelUp : public ::google::protobuf::Message {
 public:
  Cmd_Sc_ActorLevelUp();
  virtual ~Cmd_Sc_ActorLevelUp();

  Cmd_Sc_ActorLevelUp(const Cmd_Sc_ActorLevelUp& from);

  inline Cmd_Sc_ActorLevelUp& operator=(const Cmd_Sc_ActorLevelUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_ActorLevelUp& default_instance();

  void Swap(Cmd_Sc_ActorLevelUp* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_ActorLevelUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_ActorLevelUp& from);
  void MergeFrom(const Cmd_Sc_ActorLevelUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iLevel = 1;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 1;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // required int32 iExp = 2;
  inline bool has_iexp() const;
  inline void clear_iexp();
  static const int kIExpFieldNumber = 2;
  inline ::google::protobuf::int32 iexp() const;
  inline void set_iexp(::google::protobuf::int32 value);

  // required int32 iLevelUpExp = 3;
  inline bool has_ilevelupexp() const;
  inline void clear_ilevelupexp();
  static const int kILevelUpExpFieldNumber = 3;
  inline ::google::protobuf::int32 ilevelupexp() const;
  inline void set_ilevelupexp(::google::protobuf::int32 value);

  // optional int32 iPreLevel = 4;
  inline bool has_iprelevel() const;
  inline void clear_iprelevel();
  static const int kIPreLevelFieldNumber = 4;
  inline ::google::protobuf::int32 iprelevel() const;
  inline void set_iprelevel(::google::protobuf::int32 value);

  // optional int32 iPrePhyStrength = 5;
  inline bool has_iprephystrength() const;
  inline void clear_iprephystrength();
  static const int kIPrePhyStrengthFieldNumber = 5;
  inline ::google::protobuf::int32 iprephystrength() const;
  inline void set_iprephystrength(::google::protobuf::int32 value);

  // optional int32 iCurPhyStrength = 6;
  inline bool has_icurphystrength() const;
  inline void clear_icurphystrength();
  static const int kICurPhyStrengthFieldNumber = 6;
  inline ::google::protobuf::int32 icurphystrength() const;
  inline void set_icurphystrength(::google::protobuf::int32 value);

  // optional int32 iPreFormationHeroLimit = 7;
  inline bool has_ipreformationherolimit() const;
  inline void clear_ipreformationherolimit();
  static const int kIPreFormationHeroLimitFieldNumber = 7;
  inline ::google::protobuf::int32 ipreformationherolimit() const;
  inline void set_ipreformationherolimit(::google::protobuf::int32 value);

  // optional int32 iCurFormationHeroLimit = 8;
  inline bool has_icurformationherolimit() const;
  inline void clear_icurformationherolimit();
  static const int kICurFormationHeroLimitFieldNumber = 8;
  inline ::google::protobuf::int32 icurformationherolimit() const;
  inline void set_icurformationherolimit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_ActorLevelUp)
 private:
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_iexp();
  inline void clear_has_iexp();
  inline void set_has_ilevelupexp();
  inline void clear_has_ilevelupexp();
  inline void set_has_iprelevel();
  inline void clear_has_iprelevel();
  inline void set_has_iprephystrength();
  inline void clear_has_iprephystrength();
  inline void set_has_icurphystrength();
  inline void clear_has_icurphystrength();
  inline void set_has_ipreformationherolimit();
  inline void clear_has_ipreformationherolimit();
  inline void set_has_icurformationherolimit();
  inline void clear_has_icurformationherolimit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ilevel_;
  ::google::protobuf::int32 iexp_;
  ::google::protobuf::int32 ilevelupexp_;
  ::google::protobuf::int32 iprelevel_;
  ::google::protobuf::int32 iprephystrength_;
  ::google::protobuf::int32 icurphystrength_;
  ::google::protobuf::int32 ipreformationherolimit_;
  ::google::protobuf::int32 icurformationherolimit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_ActorLevelUp* default_instance_;
};
// -------------------------------------------------------------------

class CMD_ACTOR_VIPLEVELUP_SC : public ::google::protobuf::Message {
 public:
  CMD_ACTOR_VIPLEVELUP_SC();
  virtual ~CMD_ACTOR_VIPLEVELUP_SC();

  CMD_ACTOR_VIPLEVELUP_SC(const CMD_ACTOR_VIPLEVELUP_SC& from);

  inline CMD_ACTOR_VIPLEVELUP_SC& operator=(const CMD_ACTOR_VIPLEVELUP_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_ACTOR_VIPLEVELUP_SC& default_instance();

  void Swap(CMD_ACTOR_VIPLEVELUP_SC* other);

  // implements Message ----------------------------------------------

  CMD_ACTOR_VIPLEVELUP_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_ACTOR_VIPLEVELUP_SC& from);
  void MergeFrom(const CMD_ACTOR_VIPLEVELUP_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iVipLevel = 1;
  inline bool has_iviplevel() const;
  inline void clear_iviplevel();
  static const int kIVipLevelFieldNumber = 1;
  inline ::google::protobuf::int32 iviplevel() const;
  inline void set_iviplevel(::google::protobuf::int32 value);

  // required int32 iVipExp = 2;
  inline bool has_ivipexp() const;
  inline void clear_ivipexp();
  static const int kIVipExpFieldNumber = 2;
  inline ::google::protobuf::int32 ivipexp() const;
  inline void set_ivipexp(::google::protobuf::int32 value);

  // required int32 iVipLevelUpExp = 3;
  inline bool has_iviplevelupexp() const;
  inline void clear_iviplevelupexp();
  static const int kIVipLevelUpExpFieldNumber = 3;
  inline ::google::protobuf::int32 iviplevelupexp() const;
  inline void set_iviplevelupexp(::google::protobuf::int32 value);

  // optional int32 iVipPreLevel = 4;
  inline bool has_ivipprelevel() const;
  inline void clear_ivipprelevel();
  static const int kIVipPreLevelFieldNumber = 4;
  inline ::google::protobuf::int32 ivipprelevel() const;
  inline void set_ivipprelevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_ACTOR_VIPLEVELUP_SC)
 private:
  inline void set_has_iviplevel();
  inline void clear_has_iviplevel();
  inline void set_has_ivipexp();
  inline void clear_has_ivipexp();
  inline void set_has_iviplevelupexp();
  inline void clear_has_iviplevelupexp();
  inline void set_has_ivipprelevel();
  inline void clear_has_ivipprelevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iviplevel_;
  ::google::protobuf::int32 ivipexp_;
  ::google::protobuf::int32 iviplevelupexp_;
  ::google::protobuf::int32 ivipprelevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_ACTOR_VIPLEVELUP_SC* default_instance_;
};
// -------------------------------------------------------------------

class FightSoulItem : public ::google::protobuf::Message {
 public:
  FightSoulItem();
  virtual ~FightSoulItem();

  FightSoulItem(const FightSoulItem& from);

  inline FightSoulItem& operator=(const FightSoulItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightSoulItem& default_instance();

  void Swap(FightSoulItem* other);

  // implements Message ----------------------------------------------

  FightSoulItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightSoulItem& from);
  void MergeFrom(const FightSoulItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // required int32 iBaseID = 2;
  inline bool has_ibaseid() const;
  inline void clear_ibaseid();
  static const int kIBaseIDFieldNumber = 2;
  inline ::google::protobuf::int32 ibaseid() const;
  inline void set_ibaseid(::google::protobuf::int32 value);

  // required int32 iExp = 3;
  inline bool has_iexp() const;
  inline void clear_iexp();
  static const int kIExpFieldNumber = 3;
  inline ::google::protobuf::int32 iexp() const;
  inline void set_iexp(::google::protobuf::int32 value);

  // required int32 iPos = 4;
  inline bool has_ipos() const;
  inline void clear_ipos();
  static const int kIPosFieldNumber = 4;
  inline ::google::protobuf::int32 ipos() const;
  inline void set_ipos(::google::protobuf::int32 value);

  // required bool bLocked = 5;
  inline bool has_blocked() const;
  inline void clear_blocked();
  static const int kBLockedFieldNumber = 5;
  inline bool blocked() const;
  inline void set_blocked(bool value);

  // required int32 iLevel = 6;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 6;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // repeated .GSProto.PropItem szPropList = 7;
  inline int szproplist_size() const;
  inline void clear_szproplist();
  static const int kSzPropListFieldNumber = 7;
  inline const ::GSProto::PropItem& szproplist(int index) const;
  inline ::GSProto::PropItem* mutable_szproplist(int index);
  inline ::GSProto::PropItem* add_szproplist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
      szproplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
      mutable_szproplist();

  // required int32 iNextLvExp = 8;
  inline bool has_inextlvexp() const;
  inline void clear_inextlvexp();
  static const int kINextLvExpFieldNumber = 8;
  inline ::google::protobuf::int32 inextlvexp() const;
  inline void set_inextlvexp(::google::protobuf::int32 value);

  // optional int32 iEatExp = 9;
  inline bool has_ieatexp() const;
  inline void clear_ieatexp();
  static const int kIEatExpFieldNumber = 9;
  inline ::google::protobuf::int32 ieatexp() const;
  inline void set_ieatexp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.FightSoulItem)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();
  inline void set_has_ibaseid();
  inline void clear_has_ibaseid();
  inline void set_has_iexp();
  inline void clear_has_iexp();
  inline void set_has_ipos();
  inline void clear_has_ipos();
  inline void set_has_blocked();
  inline void clear_has_blocked();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_inextlvexp();
  inline void clear_has_inextlvexp();
  inline void set_has_ieatexp();
  inline void clear_has_ieatexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwobjectid_;
  ::google::protobuf::int32 ibaseid_;
  ::google::protobuf::int32 iexp_;
  ::google::protobuf::int32 ipos_;
  bool blocked_;
  ::google::protobuf::int32 ilevel_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem > szproplist_;
  ::google::protobuf::int32 inextlvexp_;
  ::google::protobuf::int32 ieatexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightSoulItem* default_instance_;
};
// -------------------------------------------------------------------

class FightSoulPracticeStatus : public ::google::protobuf::Message {
 public:
  FightSoulPracticeStatus();
  virtual ~FightSoulPracticeStatus();

  FightSoulPracticeStatus(const FightSoulPracticeStatus& from);

  inline FightSoulPracticeStatus& operator=(const FightSoulPracticeStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightSoulPracticeStatus& default_instance();

  void Swap(FightSoulPracticeStatus* other);

  // implements Message ----------------------------------------------

  FightSoulPracticeStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightSoulPracticeStatus& from);
  void MergeFrom(const FightSoulPracticeStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iGrade = 1;
  inline bool has_igrade() const;
  inline void clear_igrade();
  static const int kIGradeFieldNumber = 1;
  inline ::google::protobuf::int32 igrade() const;
  inline void set_igrade(::google::protobuf::int32 value);

  // required int32 iMode = 2;
  inline bool has_imode() const;
  inline void clear_imode();
  static const int kIModeFieldNumber = 2;
  inline ::google::protobuf::int32 imode() const;
  inline void set_imode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.FightSoulPracticeStatus)
 private:
  inline void set_has_igrade();
  inline void clear_has_igrade();
  inline void set_has_imode();
  inline void clear_has_imode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 igrade_;
  ::google::protobuf::int32 imode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightSoulPracticeStatus* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_FightSoulBag : public ::google::protobuf::Message {
 public:
  Cmd_Sc_FightSoulBag();
  virtual ~Cmd_Sc_FightSoulBag();

  Cmd_Sc_FightSoulBag(const Cmd_Sc_FightSoulBag& from);

  inline Cmd_Sc_FightSoulBag& operator=(const Cmd_Sc_FightSoulBag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_FightSoulBag& default_instance();

  void Swap(Cmd_Sc_FightSoulBag* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_FightSoulBag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_FightSoulBag& from);
  void MergeFrom(const Cmd_Sc_FightSoulBag& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.FightSoulItem szFightSoulList = 1;
  inline int szfightsoullist_size() const;
  inline void clear_szfightsoullist();
  static const int kSzFightSoulListFieldNumber = 1;
  inline const ::GSProto::FightSoulItem& szfightsoullist(int index) const;
  inline ::GSProto::FightSoulItem* mutable_szfightsoullist(int index);
  inline ::GSProto::FightSoulItem* add_szfightsoullist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightSoulItem >&
      szfightsoullist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightSoulItem >*
      mutable_szfightsoullist();

  // required int32 iChipCount = 2;
  inline bool has_ichipcount() const;
  inline void clear_ichipcount();
  static const int kIChipCountFieldNumber = 2;
  inline ::google::protobuf::int32 ichipcount() const;
  inline void set_ichipcount(::google::protobuf::int32 value);

  // required .GSProto.FightSoulPracticeStatus status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline const ::GSProto::FightSoulPracticeStatus& status() const;
  inline ::GSProto::FightSoulPracticeStatus* mutable_status();
  inline ::GSProto::FightSoulPracticeStatus* release_status();
  inline void set_allocated_status(::GSProto::FightSoulPracticeStatus* status);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_FightSoulBag)
 private:
  inline void set_has_ichipcount();
  inline void clear_has_ichipcount();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::FightSoulItem > szfightsoullist_;
  ::GSProto::FightSoulPracticeStatus* status_;
  ::google::protobuf::int32 ichipcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_FightSoulBag* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_MoveFightSoul : public ::google::protobuf::Message {
 public:
  Cmd_Cs_MoveFightSoul();
  virtual ~Cmd_Cs_MoveFightSoul();

  Cmd_Cs_MoveFightSoul(const Cmd_Cs_MoveFightSoul& from);

  inline Cmd_Cs_MoveFightSoul& operator=(const Cmd_Cs_MoveFightSoul& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_MoveFightSoul& default_instance();

  void Swap(Cmd_Cs_MoveFightSoul* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_MoveFightSoul* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_MoveFightSoul& from);
  void MergeFrom(const Cmd_Cs_MoveFightSoul& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iSrcConType = 1;
  inline bool has_isrccontype() const;
  inline void clear_isrccontype();
  static const int kISrcConTypeFieldNumber = 1;
  inline ::google::protobuf::int32 isrccontype() const;
  inline void set_isrccontype(::google::protobuf::int32 value);

  // required int32 iDstConType = 2;
  inline bool has_idstcontype() const;
  inline void clear_idstcontype();
  static const int kIDstConTypeFieldNumber = 2;
  inline ::google::protobuf::int32 idstcontype() const;
  inline void set_idstcontype(::google::protobuf::int32 value);

  // required sint32 iSrcPos = 3;
  inline bool has_isrcpos() const;
  inline void clear_isrcpos();
  static const int kISrcPosFieldNumber = 3;
  inline ::google::protobuf::int32 isrcpos() const;
  inline void set_isrcpos(::google::protobuf::int32 value);

  // required sint32 iDstPos = 4;
  inline bool has_idstpos() const;
  inline void clear_idstpos();
  static const int kIDstPosFieldNumber = 4;
  inline ::google::protobuf::int32 idstpos() const;
  inline void set_idstpos(::google::protobuf::int32 value);

  // optional uint32 dwHeroObjectID = 5;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 5;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_MoveFightSoul)
 private:
  inline void set_has_isrccontype();
  inline void clear_has_isrccontype();
  inline void set_has_idstcontype();
  inline void clear_has_idstcontype();
  inline void set_has_isrcpos();
  inline void clear_has_isrcpos();
  inline void set_has_idstpos();
  inline void clear_has_idstpos();
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isrccontype_;
  ::google::protobuf::int32 idstcontype_;
  ::google::protobuf::int32 isrcpos_;
  ::google::protobuf::int32 idstpos_;
  ::google::protobuf::uint32 dwheroobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_MoveFightSoul* default_instance_;
};
// -------------------------------------------------------------------

class FightSoulChgItem : public ::google::protobuf::Message {
 public:
  FightSoulChgItem();
  virtual ~FightSoulChgItem();

  FightSoulChgItem(const FightSoulChgItem& from);

  inline FightSoulChgItem& operator=(const FightSoulChgItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FightSoulChgItem& default_instance();

  void Swap(FightSoulChgItem* other);

  // implements Message ----------------------------------------------

  FightSoulChgItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightSoulChgItem& from);
  void MergeFrom(const FightSoulChgItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iPos = 1;
  inline bool has_ipos() const;
  inline void clear_ipos();
  static const int kIPosFieldNumber = 1;
  inline ::google::protobuf::int32 ipos() const;
  inline void set_ipos(::google::protobuf::int32 value);

  // required bool bDel = 2;
  inline bool has_bdel() const;
  inline void clear_bdel();
  static const int kBDelFieldNumber = 2;
  inline bool bdel() const;
  inline void set_bdel(bool value);

  // optional .GSProto.FightSoulItem fightSoulData = 3;
  inline bool has_fightsouldata() const;
  inline void clear_fightsouldata();
  static const int kFightSoulDataFieldNumber = 3;
  inline const ::GSProto::FightSoulItem& fightsouldata() const;
  inline ::GSProto::FightSoulItem* mutable_fightsouldata();
  inline ::GSProto::FightSoulItem* release_fightsouldata();
  inline void set_allocated_fightsouldata(::GSProto::FightSoulItem* fightsouldata);

  // @@protoc_insertion_point(class_scope:GSProto.FightSoulChgItem)
 private:
  inline void set_has_ipos();
  inline void clear_has_ipos();
  inline void set_has_bdel();
  inline void clear_has_bdel();
  inline void set_has_fightsouldata();
  inline void clear_has_fightsouldata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ipos_;
  bool bdel_;
  ::GSProto::FightSoulItem* fightsouldata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FightSoulChgItem* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_ChgFsContainer : public ::google::protobuf::Message {
 public:
  Cmd_Sc_ChgFsContainer();
  virtual ~Cmd_Sc_ChgFsContainer();

  Cmd_Sc_ChgFsContainer(const Cmd_Sc_ChgFsContainer& from);

  inline Cmd_Sc_ChgFsContainer& operator=(const Cmd_Sc_ChgFsContainer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_ChgFsContainer& default_instance();

  void Swap(Cmd_Sc_ChgFsContainer* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_ChgFsContainer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_ChgFsContainer& from);
  void MergeFrom(const Cmd_Sc_ChgFsContainer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iObjectType = 1;
  inline bool has_iobjecttype() const;
  inline void clear_iobjecttype();
  static const int kIObjectTypeFieldNumber = 1;
  inline ::google::protobuf::int32 iobjecttype() const;
  inline void set_iobjecttype(::google::protobuf::int32 value);

  // required uint32 dwObjectID = 2;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 2;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // required int32 iContainerType = 3;
  inline bool has_icontainertype() const;
  inline void clear_icontainertype();
  static const int kIContainerTypeFieldNumber = 3;
  inline ::google::protobuf::int32 icontainertype() const;
  inline void set_icontainertype(::google::protobuf::int32 value);

  // repeated .GSProto.FightSoulChgItem szChgList = 4;
  inline int szchglist_size() const;
  inline void clear_szchglist();
  static const int kSzChgListFieldNumber = 4;
  inline const ::GSProto::FightSoulChgItem& szchglist(int index) const;
  inline ::GSProto::FightSoulChgItem* mutable_szchglist(int index);
  inline ::GSProto::FightSoulChgItem* add_szchglist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightSoulChgItem >&
      szchglist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightSoulChgItem >*
      mutable_szchglist();

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_ChgFsContainer)
 private:
  inline void set_has_iobjecttype();
  inline void clear_has_iobjecttype();
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();
  inline void set_has_icontainertype();
  inline void clear_has_icontainertype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iobjecttype_;
  ::google::protobuf::uint32 dwobjectid_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::FightSoulChgItem > szchglist_;
  ::google::protobuf::int32 icontainertype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_ChgFsContainer* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_FightSoulPractice : public ::google::protobuf::Message {
 public:
  Cmd_Sc_FightSoulPractice();
  virtual ~Cmd_Sc_FightSoulPractice();

  Cmd_Sc_FightSoulPractice(const Cmd_Sc_FightSoulPractice& from);

  inline Cmd_Sc_FightSoulPractice& operator=(const Cmd_Sc_FightSoulPractice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_FightSoulPractice& default_instance();

  void Swap(Cmd_Sc_FightSoulPractice* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_FightSoulPractice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_FightSoulPractice& from);
  void MergeFrom(const Cmd_Sc_FightSoulPractice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.FightSoulPracticeStatus status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline const ::GSProto::FightSoulPracticeStatus& status() const;
  inline ::GSProto::FightSoulPracticeStatus* mutable_status();
  inline ::GSProto::FightSoulPracticeStatus* release_status();
  inline void set_allocated_status(::GSProto::FightSoulPracticeStatus* status);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_FightSoulPractice)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::FightSoulPracticeStatus* status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_FightSoulPractice* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_FightSoulLock : public ::google::protobuf::Message {
 public:
  Cmd_Cs_FightSoulLock();
  virtual ~Cmd_Cs_FightSoulLock();

  Cmd_Cs_FightSoulLock(const Cmd_Cs_FightSoulLock& from);

  inline Cmd_Cs_FightSoulLock& operator=(const Cmd_Cs_FightSoulLock& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_FightSoulLock& default_instance();

  void Swap(Cmd_Cs_FightSoulLock* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_FightSoulLock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_FightSoulLock& from);
  void MergeFrom(const Cmd_Cs_FightSoulLock& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iConType = 1;
  inline bool has_icontype() const;
  inline void clear_icontype();
  static const int kIConTypeFieldNumber = 1;
  inline ::google::protobuf::int32 icontype() const;
  inline void set_icontype(::google::protobuf::int32 value);

  // required int32 iPos = 2;
  inline bool has_ipos() const;
  inline void clear_ipos();
  static const int kIPosFieldNumber = 2;
  inline ::google::protobuf::int32 ipos() const;
  inline void set_ipos(::google::protobuf::int32 value);

  // optional uint32 dwHeroObjectID = 3;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 3;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // required bool bLock = 4;
  inline bool has_block() const;
  inline void clear_block();
  static const int kBLockFieldNumber = 4;
  inline bool block() const;
  inline void set_block(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_FightSoulLock)
 private:
  inline void set_has_icontype();
  inline void clear_has_icontype();
  inline void set_has_ipos();
  inline void clear_has_ipos();
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();
  inline void set_has_block();
  inline void clear_has_block();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 icontype_;
  ::google::protobuf::int32 ipos_;
  ::google::protobuf::uint32 dwheroobjectid_;
  bool block_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_FightSoulLock* default_instance_;
};
// -------------------------------------------------------------------

class CMD_HERO_CONVERT_CS : public ::google::protobuf::Message {
 public:
  CMD_HERO_CONVERT_CS();
  virtual ~CMD_HERO_CONVERT_CS();

  CMD_HERO_CONVERT_CS(const CMD_HERO_CONVERT_CS& from);

  inline CMD_HERO_CONVERT_CS& operator=(const CMD_HERO_CONVERT_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HERO_CONVERT_CS& default_instance();

  void Swap(CMD_HERO_CONVERT_CS* other);

  // implements Message ----------------------------------------------

  CMD_HERO_CONVERT_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_HERO_CONVERT_CS& from);
  void MergeFrom(const CMD_HERO_CONVERT_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iHeroID = 1;
  inline bool has_iheroid() const;
  inline void clear_iheroid();
  static const int kIHeroIDFieldNumber = 1;
  inline ::google::protobuf::int32 iheroid() const;
  inline void set_iheroid(::google::protobuf::int32 value);

  // required int32 iCount = 2;
  inline bool has_icount() const;
  inline void clear_icount();
  static const int kICountFieldNumber = 2;
  inline ::google::protobuf::int32 icount() const;
  inline void set_icount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_HERO_CONVERT_CS)
 private:
  inline void set_has_iheroid();
  inline void clear_has_iheroid();
  inline void set_has_icount();
  inline void clear_has_icount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iheroid_;
  ::google::protobuf::int32 icount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_HERO_CONVERT_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_HERO_CONVERT_SC : public ::google::protobuf::Message {
 public:
  CMD_HERO_CONVERT_SC();
  virtual ~CMD_HERO_CONVERT_SC();

  CMD_HERO_CONVERT_SC(const CMD_HERO_CONVERT_SC& from);

  inline CMD_HERO_CONVERT_SC& operator=(const CMD_HERO_CONVERT_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HERO_CONVERT_SC& default_instance();

  void Swap(CMD_HERO_CONVERT_SC* other);

  // implements Message ----------------------------------------------

  CMD_HERO_CONVERT_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_HERO_CONVERT_SC& from);
  void MergeFrom(const CMD_HERO_CONVERT_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iNewHeroID = 1;
  inline bool has_inewheroid() const;
  inline void clear_inewheroid();
  static const int kINewHeroIDFieldNumber = 1;
  inline ::google::protobuf::int32 inewheroid() const;
  inline void set_inewheroid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_HERO_CONVERT_SC)
 private:
  inline void set_has_inewheroid();
  inline void clear_has_inewheroid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 inewheroid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_HERO_CONVERT_SC* default_instance_;
};
// -------------------------------------------------------------------

class ConfirmMsg : public ::google::protobuf::Message {
 public:
  ConfirmMsg();
  virtual ~ConfirmMsg();

  ConfirmMsg(const ConfirmMsg& from);

  inline ConfirmMsg& operator=(const ConfirmMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfirmMsg& default_instance();

  void Swap(ConfirmMsg* other);

  // implements Message ----------------------------------------------

  ConfirmMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConfirmMsg& from);
  void MergeFrom(const ConfirmMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strLeftText = 1;
  inline bool has_strlefttext() const;
  inline void clear_strlefttext();
  static const int kStrLeftTextFieldNumber = 1;
  inline const ::std::string& strlefttext() const;
  inline void set_strlefttext(const ::std::string& value);
  inline void set_strlefttext(const char* value);
  inline void set_strlefttext(const char* value, size_t size);
  inline ::std::string* mutable_strlefttext();
  inline ::std::string* release_strlefttext();
  inline void set_allocated_strlefttext(::std::string* strlefttext);

  // required string strLeftCmd = 2;
  inline bool has_strleftcmd() const;
  inline void clear_strleftcmd();
  static const int kStrLeftCmdFieldNumber = 2;
  inline const ::std::string& strleftcmd() const;
  inline void set_strleftcmd(const ::std::string& value);
  inline void set_strleftcmd(const char* value);
  inline void set_strleftcmd(const char* value, size_t size);
  inline ::std::string* mutable_strleftcmd();
  inline ::std::string* release_strleftcmd();
  inline void set_allocated_strleftcmd(::std::string* strleftcmd);

  // required string strRightText = 3;
  inline bool has_strrighttext() const;
  inline void clear_strrighttext();
  static const int kStrRightTextFieldNumber = 3;
  inline const ::std::string& strrighttext() const;
  inline void set_strrighttext(const ::std::string& value);
  inline void set_strrighttext(const char* value);
  inline void set_strrighttext(const char* value, size_t size);
  inline ::std::string* mutable_strrighttext();
  inline ::std::string* release_strrighttext();
  inline void set_allocated_strrighttext(::std::string* strrighttext);

  // required string strRightCmd = 4;
  inline bool has_strrightcmd() const;
  inline void clear_strrightcmd();
  static const int kStrRightCmdFieldNumber = 4;
  inline const ::std::string& strrightcmd() const;
  inline void set_strrightcmd(const ::std::string& value);
  inline void set_strrightcmd(const char* value);
  inline void set_strrightcmd(const char* value, size_t size);
  inline ::std::string* mutable_strrightcmd();
  inline ::std::string* release_strrightcmd();
  inline void set_allocated_strrightcmd(::std::string* strrightcmd);

  // @@protoc_insertion_point(class_scope:GSProto.ConfirmMsg)
 private:
  inline void set_has_strlefttext();
  inline void clear_has_strlefttext();
  inline void set_has_strleftcmd();
  inline void clear_has_strleftcmd();
  inline void set_has_strrighttext();
  inline void clear_has_strrighttext();
  inline void set_has_strrightcmd();
  inline void clear_has_strrightcmd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strlefttext_;
  ::std::string* strleftcmd_;
  ::std::string* strrighttext_;
  ::std::string* strrightcmd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static ConfirmMsg* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_CommDlg : public ::google::protobuf::Message {
 public:
  Cmd_Sc_CommDlg();
  virtual ~Cmd_Sc_CommDlg();

  Cmd_Sc_CommDlg(const Cmd_Sc_CommDlg& from);

  inline Cmd_Sc_CommDlg& operator=(const Cmd_Sc_CommDlg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_CommDlg& default_instance();

  void Swap(Cmd_Sc_CommDlg* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_CommDlg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_CommDlg& from);
  void MergeFrom(const Cmd_Sc_CommDlg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strMessage = 1;
  inline bool has_strmessage() const;
  inline void clear_strmessage();
  static const int kStrMessageFieldNumber = 1;
  inline const ::std::string& strmessage() const;
  inline void set_strmessage(const ::std::string& value);
  inline void set_strmessage(const char* value);
  inline void set_strmessage(const char* value, size_t size);
  inline ::std::string* mutable_strmessage();
  inline ::std::string* release_strmessage();
  inline void set_allocated_strmessage(::std::string* strmessage);

  // optional .GSProto.ConfirmMsg confirmData = 2;
  inline bool has_confirmdata() const;
  inline void clear_confirmdata();
  static const int kConfirmDataFieldNumber = 2;
  inline const ::GSProto::ConfirmMsg& confirmdata() const;
  inline ::GSProto::ConfirmMsg* mutable_confirmdata();
  inline ::GSProto::ConfirmMsg* release_confirmdata();
  inline void set_allocated_confirmdata(::GSProto::ConfirmMsg* confirmdata);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_CommDlg)
 private:
  inline void set_has_strmessage();
  inline void clear_has_strmessage();
  inline void set_has_confirmdata();
  inline void clear_has_confirmdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strmessage_;
  ::GSProto::ConfirmMsg* confirmdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_CommDlg* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_HyperLink : public ::google::protobuf::Message {
 public:
  Cmd_Cs_HyperLink();
  virtual ~Cmd_Cs_HyperLink();

  Cmd_Cs_HyperLink(const Cmd_Cs_HyperLink& from);

  inline Cmd_Cs_HyperLink& operator=(const Cmd_Cs_HyperLink& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_HyperLink& default_instance();

  void Swap(Cmd_Cs_HyperLink* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_HyperLink* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_HyperLink& from);
  void MergeFrom(const Cmd_Cs_HyperLink& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strHyperLinkCmd = 1;
  inline bool has_strhyperlinkcmd() const;
  inline void clear_strhyperlinkcmd();
  static const int kStrHyperLinkCmdFieldNumber = 1;
  inline const ::std::string& strhyperlinkcmd() const;
  inline void set_strhyperlinkcmd(const ::std::string& value);
  inline void set_strhyperlinkcmd(const char* value);
  inline void set_strhyperlinkcmd(const char* value, size_t size);
  inline ::std::string* mutable_strhyperlinkcmd();
  inline ::std::string* release_strhyperlinkcmd();
  inline void set_allocated_strhyperlinkcmd(::std::string* strhyperlinkcmd);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_HyperLink)
 private:
  inline void set_has_strhyperlinkcmd();
  inline void clear_has_strhyperlinkcmd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strhyperlinkcmd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_HyperLink* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_QueryHeroLevelInfo : public ::google::protobuf::Message {
 public:
  Cmd_Cs_QueryHeroLevelInfo();
  virtual ~Cmd_Cs_QueryHeroLevelInfo();

  Cmd_Cs_QueryHeroLevelInfo(const Cmd_Cs_QueryHeroLevelInfo& from);

  inline Cmd_Cs_QueryHeroLevelInfo& operator=(const Cmd_Cs_QueryHeroLevelInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_QueryHeroLevelInfo& default_instance();

  void Swap(Cmd_Cs_QueryHeroLevelInfo* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_QueryHeroLevelInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_QueryHeroLevelInfo& from);
  void MergeFrom(const Cmd_Cs_QueryHeroLevelInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_QueryHeroLevelInfo)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwheroobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_QueryHeroLevelInfo* default_instance_;
};
// -------------------------------------------------------------------

class HeroLevelUpInfo : public ::google::protobuf::Message {
 public:
  HeroLevelUpInfo();
  virtual ~HeroLevelUpInfo();

  HeroLevelUpInfo(const HeroLevelUpInfo& from);

  inline HeroLevelUpInfo& operator=(const HeroLevelUpInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroLevelUpInfo& default_instance();

  void Swap(HeroLevelUpInfo* other);

  // implements Message ----------------------------------------------

  HeroLevelUpInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroLevelUpInfo& from);
  void MergeFrom(const HeroLevelUpInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // required int32 iNextMaxHP = 2;
  inline bool has_inextmaxhp() const;
  inline void clear_inextmaxhp();
  static const int kINextMaxHPFieldNumber = 2;
  inline ::google::protobuf::int32 inextmaxhp() const;
  inline void set_inextmaxhp(::google::protobuf::int32 value);

  // required int32 iNextAtt = 3;
  inline bool has_inextatt() const;
  inline void clear_inextatt();
  static const int kINextAttFieldNumber = 3;
  inline ::google::protobuf::int32 inextatt() const;
  inline void set_inextatt(::google::protobuf::int32 value);

  // required int32 iNextLv = 4;
  inline bool has_inextlv() const;
  inline void clear_inextlv();
  static const int kINextLvFieldNumber = 4;
  inline ::google::protobuf::int32 inextlv() const;
  inline void set_inextlv(::google::protobuf::int32 value);

  // required int32 iCurHeroExp = 5;
  inline bool has_icurheroexp() const;
  inline void clear_icurheroexp();
  static const int kICurHeroExpFieldNumber = 5;
  inline ::google::protobuf::int32 icurheroexp() const;
  inline void set_icurheroexp(::google::protobuf::int32 value);

  // required int32 iNeedHeroExp = 6;
  inline bool has_ineedheroexp() const;
  inline void clear_ineedheroexp();
  static const int kINeedHeroExpFieldNumber = 6;
  inline ::google::protobuf::int32 ineedheroexp() const;
  inline void set_ineedheroexp(::google::protobuf::int32 value);

  // required int32 iActorTkHeroExp = 7;
  inline bool has_iactortkheroexp() const;
  inline void clear_iactortkheroexp();
  static const int kIActorTkHeroExpFieldNumber = 7;
  inline ::google::protobuf::int32 iactortkheroexp() const;
  inline void set_iactortkheroexp(::google::protobuf::int32 value);

  // optional int32 iNextDef = 8;
  inline bool has_inextdef() const;
  inline void clear_inextdef();
  static const int kINextDefFieldNumber = 8;
  inline ::google::protobuf::int32 inextdef() const;
  inline void set_inextdef(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.HeroLevelUpInfo)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();
  inline void set_has_inextmaxhp();
  inline void clear_has_inextmaxhp();
  inline void set_has_inextatt();
  inline void clear_has_inextatt();
  inline void set_has_inextlv();
  inline void clear_has_inextlv();
  inline void set_has_icurheroexp();
  inline void clear_has_icurheroexp();
  inline void set_has_ineedheroexp();
  inline void clear_has_ineedheroexp();
  inline void set_has_iactortkheroexp();
  inline void clear_has_iactortkheroexp();
  inline void set_has_inextdef();
  inline void clear_has_inextdef();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwheroobjectid_;
  ::google::protobuf::int32 inextmaxhp_;
  ::google::protobuf::int32 inextatt_;
  ::google::protobuf::int32 inextlv_;
  ::google::protobuf::int32 icurheroexp_;
  ::google::protobuf::int32 ineedheroexp_;
  ::google::protobuf::int32 iactortkheroexp_;
  ::google::protobuf::int32 inextdef_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static HeroLevelUpInfo* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_QueryHeroLevelInfo : public ::google::protobuf::Message {
 public:
  Cmd_Sc_QueryHeroLevelInfo();
  virtual ~Cmd_Sc_QueryHeroLevelInfo();

  Cmd_Sc_QueryHeroLevelInfo(const Cmd_Sc_QueryHeroLevelInfo& from);

  inline Cmd_Sc_QueryHeroLevelInfo& operator=(const Cmd_Sc_QueryHeroLevelInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_QueryHeroLevelInfo& default_instance();

  void Swap(Cmd_Sc_QueryHeroLevelInfo* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_QueryHeroLevelInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_QueryHeroLevelInfo& from);
  void MergeFrom(const Cmd_Sc_QueryHeroLevelInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.HeroLevelUpInfo levelInfo = 1;
  inline bool has_levelinfo() const;
  inline void clear_levelinfo();
  static const int kLevelInfoFieldNumber = 1;
  inline const ::GSProto::HeroLevelUpInfo& levelinfo() const;
  inline ::GSProto::HeroLevelUpInfo* mutable_levelinfo();
  inline ::GSProto::HeroLevelUpInfo* release_levelinfo();
  inline void set_allocated_levelinfo(::GSProto::HeroLevelUpInfo* levelinfo);

  // optional .GSProto.NoticeHeroList heroList = 2;
  inline bool has_herolist() const;
  inline void clear_herolist();
  static const int kHeroListFieldNumber = 2;
  inline const ::GSProto::NoticeHeroList& herolist() const;
  inline ::GSProto::NoticeHeroList* mutable_herolist();
  inline ::GSProto::NoticeHeroList* release_herolist();
  inline void set_allocated_herolist(::GSProto::NoticeHeroList* herolist);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_QueryHeroLevelInfo)
 private:
  inline void set_has_levelinfo();
  inline void clear_has_levelinfo();
  inline void set_has_herolist();
  inline void clear_has_herolist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::HeroLevelUpInfo* levelinfo_;
  ::GSProto::NoticeHeroList* herolist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_QueryHeroLevelInfo* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_HeroLevelUp : public ::google::protobuf::Message {
 public:
  Cmd_Cs_HeroLevelUp();
  virtual ~Cmd_Cs_HeroLevelUp();

  Cmd_Cs_HeroLevelUp(const Cmd_Cs_HeroLevelUp& from);

  inline Cmd_Cs_HeroLevelUp& operator=(const Cmd_Cs_HeroLevelUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_HeroLevelUp& default_instance();

  void Swap(Cmd_Cs_HeroLevelUp* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_HeroLevelUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_HeroLevelUp& from);
  void MergeFrom(const Cmd_Cs_HeroLevelUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_HeroLevelUp)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwheroobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_HeroLevelUp* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_HeroLevelUp : public ::google::protobuf::Message {
 public:
  Cmd_Sc_HeroLevelUp();
  virtual ~Cmd_Sc_HeroLevelUp();

  Cmd_Sc_HeroLevelUp(const Cmd_Sc_HeroLevelUp& from);

  inline Cmd_Sc_HeroLevelUp& operator=(const Cmd_Sc_HeroLevelUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_HeroLevelUp& default_instance();

  void Swap(Cmd_Sc_HeroLevelUp* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_HeroLevelUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_HeroLevelUp& from);
  void MergeFrom(const Cmd_Sc_HeroLevelUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.HeroLevelUpInfo levelInfo = 1;
  inline bool has_levelinfo() const;
  inline void clear_levelinfo();
  static const int kLevelInfoFieldNumber = 1;
  inline const ::GSProto::HeroLevelUpInfo& levelinfo() const;
  inline ::GSProto::HeroLevelUpInfo* mutable_levelinfo();
  inline ::GSProto::HeroLevelUpInfo* release_levelinfo();
  inline void set_allocated_levelinfo(::GSProto::HeroLevelUpInfo* levelinfo);

  // optional .GSProto.NoticeHeroList heroList = 2;
  inline bool has_herolist() const;
  inline void clear_herolist();
  static const int kHeroListFieldNumber = 2;
  inline const ::GSProto::NoticeHeroList& herolist() const;
  inline ::GSProto::NoticeHeroList* mutable_herolist();
  inline ::GSProto::NoticeHeroList* release_herolist();
  inline void set_allocated_herolist(::GSProto::NoticeHeroList* herolist);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_HeroLevelUp)
 private:
  inline void set_has_levelinfo();
  inline void clear_has_levelinfo();
  inline void set_has_herolist();
  inline void clear_has_herolist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::HeroLevelUpInfo* levelinfo_;
  ::GSProto::NoticeHeroList* herolist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_HeroLevelUp* default_instance_;
};
// -------------------------------------------------------------------

class NoticeHeroList : public ::google::protobuf::Message {
 public:
  NoticeHeroList();
  virtual ~NoticeHeroList();

  NoticeHeroList(const NoticeHeroList& from);

  inline NoticeHeroList& operator=(const NoticeHeroList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NoticeHeroList& default_instance();

  void Swap(NoticeHeroList* other);

  // implements Message ----------------------------------------------

  NoticeHeroList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NoticeHeroList& from);
  void MergeFrom(const NoticeHeroList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 szdwHeroObjectID = 1;
  inline int szdwheroobjectid_size() const;
  inline void clear_szdwheroobjectid();
  static const int kSzdwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 szdwheroobjectid(int index) const;
  inline void set_szdwheroobjectid(int index, ::google::protobuf::uint32 value);
  inline void add_szdwheroobjectid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      szdwheroobjectid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_szdwheroobjectid();

  // @@protoc_insertion_point(class_scope:GSProto.NoticeHeroList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > szdwheroobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static NoticeHeroList* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_ItemUse : public ::google::protobuf::Message {
 public:
  Cmd_Cs_ItemUse();
  virtual ~Cmd_Cs_ItemUse();

  Cmd_Cs_ItemUse(const Cmd_Cs_ItemUse& from);

  inline Cmd_Cs_ItemUse& operator=(const Cmd_Cs_ItemUse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_ItemUse& default_instance();

  void Swap(Cmd_Cs_ItemUse* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_ItemUse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_ItemUse& from);
  void MergeFrom(const Cmd_Cs_ItemUse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwItemObjectID = 1;
  inline bool has_dwitemobjectid() const;
  inline void clear_dwitemobjectid();
  static const int kDwItemObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwitemobjectid() const;
  inline void set_dwitemobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_ItemUse)
 private:
  inline void set_has_dwitemobjectid();
  inline void clear_has_dwitemobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwitemobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_ItemUse* default_instance_;
};
// -------------------------------------------------------------------

class CMD_ITEM_USE_SC : public ::google::protobuf::Message {
 public:
  CMD_ITEM_USE_SC();
  virtual ~CMD_ITEM_USE_SC();

  CMD_ITEM_USE_SC(const CMD_ITEM_USE_SC& from);

  inline CMD_ITEM_USE_SC& operator=(const CMD_ITEM_USE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_ITEM_USE_SC& default_instance();

  void Swap(CMD_ITEM_USE_SC* other);

  // implements Message ----------------------------------------------

  CMD_ITEM_USE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_ITEM_USE_SC& from);
  void MergeFrom(const CMD_ITEM_USE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.FightAwardResult awardresoult = 1;
  inline bool has_awardresoult() const;
  inline void clear_awardresoult();
  static const int kAwardresoultFieldNumber = 1;
  inline const ::GSProto::FightAwardResult& awardresoult() const;
  inline ::GSProto::FightAwardResult* mutable_awardresoult();
  inline ::GSProto::FightAwardResult* release_awardresoult();
  inline void set_allocated_awardresoult(::GSProto::FightAwardResult* awardresoult);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_ITEM_USE_SC)
 private:
  inline void set_has_awardresoult();
  inline void clear_has_awardresoult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::FightAwardResult* awardresoult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_ITEM_USE_SC* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_QueryHeroFightSoul : public ::google::protobuf::Message {
 public:
  Cmd_Cs_QueryHeroFightSoul();
  virtual ~Cmd_Cs_QueryHeroFightSoul();

  Cmd_Cs_QueryHeroFightSoul(const Cmd_Cs_QueryHeroFightSoul& from);

  inline Cmd_Cs_QueryHeroFightSoul& operator=(const Cmd_Cs_QueryHeroFightSoul& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_QueryHeroFightSoul& default_instance();

  void Swap(Cmd_Cs_QueryHeroFightSoul* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_QueryHeroFightSoul* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_QueryHeroFightSoul& from);
  void MergeFrom(const Cmd_Cs_QueryHeroFightSoul& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_QueryHeroFightSoul)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwheroobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_QueryHeroFightSoul* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_QueryHeroFightSoul : public ::google::protobuf::Message {
 public:
  Cmd_Sc_QueryHeroFightSoul();
  virtual ~Cmd_Sc_QueryHeroFightSoul();

  Cmd_Sc_QueryHeroFightSoul(const Cmd_Sc_QueryHeroFightSoul& from);

  inline Cmd_Sc_QueryHeroFightSoul& operator=(const Cmd_Sc_QueryHeroFightSoul& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_QueryHeroFightSoul& default_instance();

  void Swap(Cmd_Sc_QueryHeroFightSoul* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_QueryHeroFightSoul* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_QueryHeroFightSoul& from);
  void MergeFrom(const Cmd_Sc_QueryHeroFightSoul& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // repeated .GSProto.FightSoulItem szFightSoulList = 2;
  inline int szfightsoullist_size() const;
  inline void clear_szfightsoullist();
  static const int kSzFightSoulListFieldNumber = 2;
  inline const ::GSProto::FightSoulItem& szfightsoullist(int index) const;
  inline ::GSProto::FightSoulItem* mutable_szfightsoullist(int index);
  inline ::GSProto::FightSoulItem* add_szfightsoullist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightSoulItem >&
      szfightsoullist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightSoulItem >*
      mutable_szfightsoullist();

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_QueryHeroFightSoul)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::FightSoulItem > szfightsoullist_;
  ::google::protobuf::uint32 dwheroobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_QueryHeroFightSoul* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_QueryHeroTip : public ::google::protobuf::Message {
 public:
  Cmd_Cs_QueryHeroTip();
  virtual ~Cmd_Cs_QueryHeroTip();

  Cmd_Cs_QueryHeroTip(const Cmd_Cs_QueryHeroTip& from);

  inline Cmd_Cs_QueryHeroTip& operator=(const Cmd_Cs_QueryHeroTip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_QueryHeroTip& default_instance();

  void Swap(Cmd_Cs_QueryHeroTip* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_QueryHeroTip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_QueryHeroTip& from);
  void MergeFrom(const Cmd_Cs_QueryHeroTip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_QueryHeroTip)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwheroobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_QueryHeroTip* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_QueryHeroTip : public ::google::protobuf::Message {
 public:
  Cmd_Sc_QueryHeroTip();
  virtual ~Cmd_Sc_QueryHeroTip();

  Cmd_Sc_QueryHeroTip(const Cmd_Sc_QueryHeroTip& from);

  inline Cmd_Sc_QueryHeroTip& operator=(const Cmd_Sc_QueryHeroTip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_QueryHeroTip& default_instance();

  void Swap(Cmd_Sc_QueryHeroTip* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_QueryHeroTip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_QueryHeroTip& from);
  void MergeFrom(const Cmd_Sc_QueryHeroTip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjejctID = 1;
  inline bool has_dwobjejctid() const;
  inline void clear_dwobjejctid();
  static const int kDwObjejctIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjejctid() const;
  inline void set_dwobjejctid(::google::protobuf::uint32 value);

  // required int32 iSkillID = 2;
  inline bool has_iskillid() const;
  inline void clear_iskillid();
  static const int kISkillIDFieldNumber = 2;
  inline ::google::protobuf::int32 iskillid() const;
  inline void set_iskillid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_QueryHeroTip)
 private:
  inline void set_has_dwobjejctid();
  inline void clear_has_dwobjejctid();
  inline void set_has_iskillid();
  inline void clear_has_iskillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwobjejctid_;
  ::google::protobuf::int32 iskillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_QueryHeroTip* default_instance_;
};
// -------------------------------------------------------------------

class GoldAnimalDetail : public ::google::protobuf::Message {
 public:
  GoldAnimalDetail();
  virtual ~GoldAnimalDetail();

  GoldAnimalDetail(const GoldAnimalDetail& from);

  inline GoldAnimalDetail& operator=(const GoldAnimalDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoldAnimalDetail& default_instance();

  void Swap(GoldAnimalDetail* other);

  // implements Message ----------------------------------------------

  GoldAnimalDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoldAnimalDetail& from);
  void MergeFrom(const GoldAnimalDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // repeated .GSProto.PropItem szPropList = 2;
  inline int szproplist_size() const;
  inline void clear_szproplist();
  static const int kSzPropListFieldNumber = 2;
  inline const ::GSProto::PropItem& szproplist(int index) const;
  inline ::GSProto::PropItem* mutable_szproplist(int index);
  inline ::GSProto::PropItem* add_szproplist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
      szproplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
      mutable_szproplist();

  // required int32 iCurExp = 3;
  inline bool has_icurexp() const;
  inline void clear_icurexp();
  static const int kICurExpFieldNumber = 3;
  inline ::google::protobuf::int32 icurexp() const;
  inline void set_icurexp(::google::protobuf::int32 value);

  // required int32 iNeedExp = 4;
  inline bool has_ineedexp() const;
  inline void clear_ineedexp();
  static const int kINeedExpFieldNumber = 4;
  inline ::google::protobuf::int32 ineedexp() const;
  inline void set_ineedexp(::google::protobuf::int32 value);

  // optional int32 iActiveSkillID = 5;
  inline bool has_iactiveskillid() const;
  inline void clear_iactiveskillid();
  static const int kIActiveSkillIDFieldNumber = 5;
  inline ::google::protobuf::int32 iactiveskillid() const;
  inline void set_iactiveskillid(::google::protobuf::int32 value);

  // optional int32 iStageSkillID = 6;
  inline bool has_istageskillid() const;
  inline void clear_istageskillid();
  static const int kIStageSkillIDFieldNumber = 6;
  inline ::google::protobuf::int32 istageskillid() const;
  inline void set_istageskillid(::google::protobuf::int32 value);

  // required int32 iBaseID = 7;
  inline bool has_ibaseid() const;
  inline void clear_ibaseid();
  static const int kIBaseIDFieldNumber = 7;
  inline ::google::protobuf::int32 ibaseid() const;
  inline void set_ibaseid(::google::protobuf::int32 value);

  // optional int32 iFightValue = 8;
  inline bool has_ifightvalue() const;
  inline void clear_ifightvalue();
  static const int kIFightValueFieldNumber = 8;
  inline ::google::protobuf::int32 ifightvalue() const;
  inline void set_ifightvalue(::google::protobuf::int32 value);

  // required int32 iLevel = 9;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 9;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // optional int32 iLevelStep = 10;
  inline bool has_ilevelstep() const;
  inline void clear_ilevelstep();
  static const int kILevelStepFieldNumber = 10;
  inline ::google::protobuf::int32 ilevelstep() const;
  inline void set_ilevelstep(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.GoldAnimalDetail)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();
  inline void set_has_icurexp();
  inline void clear_has_icurexp();
  inline void set_has_ineedexp();
  inline void clear_has_ineedexp();
  inline void set_has_iactiveskillid();
  inline void clear_has_iactiveskillid();
  inline void set_has_istageskillid();
  inline void clear_has_istageskillid();
  inline void set_has_ibaseid();
  inline void clear_has_ibaseid();
  inline void set_has_ifightvalue();
  inline void clear_has_ifightvalue();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_ilevelstep();
  inline void clear_has_ilevelstep();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem > szproplist_;
  ::google::protobuf::uint32 dwobjectid_;
  ::google::protobuf::int32 icurexp_;
  ::google::protobuf::int32 ineedexp_;
  ::google::protobuf::int32 iactiveskillid_;
  ::google::protobuf::int32 istageskillid_;
  ::google::protobuf::int32 ibaseid_;
  ::google::protobuf::int32 ifightvalue_;
  ::google::protobuf::int32 ilevel_;
  ::google::protobuf::int32 ilevelstep_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static GoldAnimalDetail* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_GoldAnimalTrain : public ::google::protobuf::Message {
 public:
  Cmd_Sc_GoldAnimalTrain();
  virtual ~Cmd_Sc_GoldAnimalTrain();

  Cmd_Sc_GoldAnimalTrain(const Cmd_Sc_GoldAnimalTrain& from);

  inline Cmd_Sc_GoldAnimalTrain& operator=(const Cmd_Sc_GoldAnimalTrain& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_GoldAnimalTrain& default_instance();

  void Swap(Cmd_Sc_GoldAnimalTrain* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_GoldAnimalTrain* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_GoldAnimalTrain& from);
  void MergeFrom(const Cmd_Sc_GoldAnimalTrain& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // required bool bKnock = 2;
  inline bool has_bknock() const;
  inline void clear_bknock();
  static const int kBKnockFieldNumber = 2;
  inline bool bknock() const;
  inline void set_bknock(bool value);

  // required int32 iGetExp = 3;
  inline bool has_igetexp() const;
  inline void clear_igetexp();
  static const int kIGetExpFieldNumber = 3;
  inline ::google::protobuf::int32 igetexp() const;
  inline void set_igetexp(::google::protobuf::int32 value);

  // required .GSProto.GoldAnimalDetail detail = 4;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 4;
  inline const ::GSProto::GoldAnimalDetail& detail() const;
  inline ::GSProto::GoldAnimalDetail* mutable_detail();
  inline ::GSProto::GoldAnimalDetail* release_detail();
  inline void set_allocated_detail(::GSProto::GoldAnimalDetail* detail);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_GoldAnimalTrain)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();
  inline void set_has_bknock();
  inline void clear_has_bknock();
  inline void set_has_igetexp();
  inline void clear_has_igetexp();
  inline void set_has_detail();
  inline void clear_has_detail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwobjectid_;
  bool bknock_;
  ::GSProto::GoldAnimalDetail* detail_;
  ::google::protobuf::int32 igetexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_GoldAnimalTrain* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_GoldAnimalActive : public ::google::protobuf::Message {
 public:
  Cmd_Cs_GoldAnimalActive();
  virtual ~Cmd_Cs_GoldAnimalActive();

  Cmd_Cs_GoldAnimalActive(const Cmd_Cs_GoldAnimalActive& from);

  inline Cmd_Cs_GoldAnimalActive& operator=(const Cmd_Cs_GoldAnimalActive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_GoldAnimalActive& default_instance();

  void Swap(Cmd_Cs_GoldAnimalActive* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_GoldAnimalActive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_GoldAnimalActive& from);
  void MergeFrom(const Cmd_Cs_GoldAnimalActive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_GoldAnimalActive)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_GoldAnimalActive* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Sc_GoldAnimalActive : public ::google::protobuf::Message {
 public:
  Cmd_Sc_GoldAnimalActive();
  virtual ~Cmd_Sc_GoldAnimalActive();

  Cmd_Sc_GoldAnimalActive(const Cmd_Sc_GoldAnimalActive& from);

  inline Cmd_Sc_GoldAnimalActive& operator=(const Cmd_Sc_GoldAnimalActive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Sc_GoldAnimalActive& default_instance();

  void Swap(Cmd_Sc_GoldAnimalActive* other);

  // implements Message ----------------------------------------------

  Cmd_Sc_GoldAnimalActive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Sc_GoldAnimalActive& from);
  void MergeFrom(const Cmd_Sc_GoldAnimalActive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Sc_GoldAnimalActive)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Sc_GoldAnimalActive* default_instance_;
};
// -------------------------------------------------------------------

class GoldAnimalRoleBase : public ::google::protobuf::Message {
 public:
  GoldAnimalRoleBase();
  virtual ~GoldAnimalRoleBase();

  GoldAnimalRoleBase(const GoldAnimalRoleBase& from);

  inline GoldAnimalRoleBase& operator=(const GoldAnimalRoleBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoldAnimalRoleBase& default_instance();

  void Swap(GoldAnimalRoleBase* other);

  // implements Message ----------------------------------------------

  GoldAnimalRoleBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoldAnimalRoleBase& from);
  void MergeFrom(const GoldAnimalRoleBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // required int32 iBaseID = 2;
  inline bool has_ibaseid() const;
  inline void clear_ibaseid();
  static const int kIBaseIDFieldNumber = 2;
  inline ::google::protobuf::int32 ibaseid() const;
  inline void set_ibaseid(::google::protobuf::int32 value);

  // required int32 iLevel = 3;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 3;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // required int32 iLevelStep = 4;
  inline bool has_ilevelstep() const;
  inline void clear_ilevelstep();
  static const int kILevelStepFieldNumber = 4;
  inline ::google::protobuf::int32 ilevelstep() const;
  inline void set_ilevelstep(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.GoldAnimalRoleBase)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();
  inline void set_has_ibaseid();
  inline void clear_has_ibaseid();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_ilevelstep();
  inline void clear_has_ilevelstep();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwobjectid_;
  ::google::protobuf::int32 ibaseid_;
  ::google::protobuf::int32 ilevel_;
  ::google::protobuf::int32 ilevelstep_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static GoldAnimalRoleBase* default_instance_;
};
// -------------------------------------------------------------------

class ConsumeItem : public ::google::protobuf::Message {
 public:
  ConsumeItem();
  virtual ~ConsumeItem();

  ConsumeItem(const ConsumeItem& from);

  inline ConsumeItem& operator=(const ConsumeItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConsumeItem& default_instance();

  void Swap(ConsumeItem* other);

  // implements Message ----------------------------------------------

  ConsumeItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConsumeItem& from);
  void MergeFrom(const ConsumeItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iItemID = 1;
  inline bool has_iitemid() const;
  inline void clear_iitemid();
  static const int kIItemIDFieldNumber = 1;
  inline ::google::protobuf::int32 iitemid() const;
  inline void set_iitemid(::google::protobuf::int32 value);

  // required int32 iNeedCount = 2;
  inline bool has_ineedcount() const;
  inline void clear_ineedcount();
  static const int kINeedCountFieldNumber = 2;
  inline ::google::protobuf::int32 ineedcount() const;
  inline void set_ineedcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.ConsumeItem)
 private:
  inline void set_has_iitemid();
  inline void clear_has_iitemid();
  inline void set_has_ineedcount();
  inline void clear_has_ineedcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iitemid_;
  ::google::protobuf::int32 ineedcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static ConsumeItem* default_instance_;
};
// -------------------------------------------------------------------

class GoldAnimalLevelStepInfo : public ::google::protobuf::Message {
 public:
  GoldAnimalLevelStepInfo();
  virtual ~GoldAnimalLevelStepInfo();

  GoldAnimalLevelStepInfo(const GoldAnimalLevelStepInfo& from);

  inline GoldAnimalLevelStepInfo& operator=(const GoldAnimalLevelStepInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoldAnimalLevelStepInfo& default_instance();

  void Swap(GoldAnimalLevelStepInfo* other);

  // implements Message ----------------------------------------------

  GoldAnimalLevelStepInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoldAnimalLevelStepInfo& from);
  void MergeFrom(const GoldAnimalLevelStepInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.PropItem szPropList = 1;
  inline int szproplist_size() const;
  inline void clear_szproplist();
  static const int kSzPropListFieldNumber = 1;
  inline const ::GSProto::PropItem& szproplist(int index) const;
  inline ::GSProto::PropItem* mutable_szproplist(int index);
  inline ::GSProto::PropItem* add_szproplist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
      szproplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
      mutable_szproplist();

  // optional int32 iActiveSkillID = 2;
  inline bool has_iactiveskillid() const;
  inline void clear_iactiveskillid();
  static const int kIActiveSkillIDFieldNumber = 2;
  inline ::google::protobuf::int32 iactiveskillid() const;
  inline void set_iactiveskillid(::google::protobuf::int32 value);

  // optional int32 iStageSkillID = 3;
  inline bool has_istageskillid() const;
  inline void clear_istageskillid();
  static const int kIStageSkillIDFieldNumber = 3;
  inline ::google::protobuf::int32 istageskillid() const;
  inline void set_istageskillid(::google::protobuf::int32 value);

  // required int32 iLevelStep = 4;
  inline bool has_ilevelstep() const;
  inline void clear_ilevelstep();
  static const int kILevelStepFieldNumber = 4;
  inline ::google::protobuf::int32 ilevelstep() const;
  inline void set_ilevelstep(::google::protobuf::int32 value);

  // required int32 iLevelLimit = 5;
  inline bool has_ilevellimit() const;
  inline void clear_ilevellimit();
  static const int kILevelLimitFieldNumber = 5;
  inline ::google::protobuf::int32 ilevellimit() const;
  inline void set_ilevellimit(::google::protobuf::int32 value);

  // required int32 iFightValue = 6;
  inline bool has_ifightvalue() const;
  inline void clear_ifightvalue();
  static const int kIFightValueFieldNumber = 6;
  inline ::google::protobuf::int32 ifightvalue() const;
  inline void set_ifightvalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.GoldAnimalLevelStepInfo)
 private:
  inline void set_has_iactiveskillid();
  inline void clear_has_iactiveskillid();
  inline void set_has_istageskillid();
  inline void clear_has_istageskillid();
  inline void set_has_ilevelstep();
  inline void clear_has_ilevelstep();
  inline void set_has_ilevellimit();
  inline void clear_has_ilevellimit();
  inline void set_has_ifightvalue();
  inline void clear_has_ifightvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem > szproplist_;
  ::google::protobuf::int32 iactiveskillid_;
  ::google::protobuf::int32 istageskillid_;
  ::google::protobuf::int32 ilevelstep_;
  ::google::protobuf::int32 ilevellimit_;
  ::google::protobuf::int32 ifightvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static GoldAnimalLevelStepInfo* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_ExeLevelStepUp : public ::google::protobuf::Message {
 public:
  Cmd_Cs_ExeLevelStepUp();
  virtual ~Cmd_Cs_ExeLevelStepUp();

  Cmd_Cs_ExeLevelStepUp(const Cmd_Cs_ExeLevelStepUp& from);

  inline Cmd_Cs_ExeLevelStepUp& operator=(const Cmd_Cs_ExeLevelStepUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_ExeLevelStepUp& default_instance();

  void Swap(Cmd_Cs_ExeLevelStepUp* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_ExeLevelStepUp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_ExeLevelStepUp& from);
  void MergeFrom(const Cmd_Cs_ExeLevelStepUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_ExeLevelStepUp)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_ExeLevelStepUp* default_instance_;
};
// -------------------------------------------------------------------

class CMD_HERO_LEVELSTEPUP_CS : public ::google::protobuf::Message {
 public:
  CMD_HERO_LEVELSTEPUP_CS();
  virtual ~CMD_HERO_LEVELSTEPUP_CS();

  CMD_HERO_LEVELSTEPUP_CS(const CMD_HERO_LEVELSTEPUP_CS& from);

  inline CMD_HERO_LEVELSTEPUP_CS& operator=(const CMD_HERO_LEVELSTEPUP_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HERO_LEVELSTEPUP_CS& default_instance();

  void Swap(CMD_HERO_LEVELSTEPUP_CS* other);

  // implements Message ----------------------------------------------

  CMD_HERO_LEVELSTEPUP_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_HERO_LEVELSTEPUP_CS& from);
  void MergeFrom(const CMD_HERO_LEVELSTEPUP_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHostHeroID = 1;
  inline bool has_dwhostheroid() const;
  inline void clear_dwhostheroid();
  static const int kDwHostHeroIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwhostheroid() const;
  inline void set_dwhostheroid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_HERO_LEVELSTEPUP_CS)
 private:
  inline void set_has_dwhostheroid();
  inline void clear_has_dwhostheroid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwhostheroid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_HERO_LEVELSTEPUP_CS* default_instance_;
};
// -------------------------------------------------------------------

class Cmd_Cs_FightSoulExchange : public ::google::protobuf::Message {
 public:
  Cmd_Cs_FightSoulExchange();
  virtual ~Cmd_Cs_FightSoulExchange();

  Cmd_Cs_FightSoulExchange(const Cmd_Cs_FightSoulExchange& from);

  inline Cmd_Cs_FightSoulExchange& operator=(const Cmd_Cs_FightSoulExchange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cmd_Cs_FightSoulExchange& default_instance();

  void Swap(Cmd_Cs_FightSoulExchange* other);

  // implements Message ----------------------------------------------

  Cmd_Cs_FightSoulExchange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cmd_Cs_FightSoulExchange& from);
  void MergeFrom(const Cmd_Cs_FightSoulExchange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iExchangeID = 1;
  inline bool has_iexchangeid() const;
  inline void clear_iexchangeid();
  static const int kIExchangeIDFieldNumber = 1;
  inline ::google::protobuf::int32 iexchangeid() const;
  inline void set_iexchangeid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.Cmd_Cs_FightSoulExchange)
 private:
  inline void set_has_iexchangeid();
  inline void clear_has_iexchangeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iexchangeid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static Cmd_Cs_FightSoulExchange* default_instance_;
};
// -------------------------------------------------------------------

class PBPkRole : public ::google::protobuf::Message {
 public:
  PBPkRole();
  virtual ~PBPkRole();

  PBPkRole(const PBPkRole& from);

  inline PBPkRole& operator=(const PBPkRole& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPkRole& default_instance();

  void Swap(PBPkRole* other);

  // implements Message ----------------------------------------------

  PBPkRole* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPkRole& from);
  void MergeFrom(const PBPkRole& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strAccount = 1;
  inline bool has_straccount() const;
  inline void clear_straccount();
  static const int kStrAccountFieldNumber = 1;
  inline const ::std::string& straccount() const;
  inline void set_straccount(const ::std::string& value);
  inline void set_straccount(const char* value);
  inline void set_straccount(const char* value, size_t size);
  inline ::std::string* mutable_straccount();
  inline ::std::string* release_straccount();
  inline void set_allocated_straccount(::std::string* straccount);

  // required int32 iWorldID = 3;
  inline bool has_iworldid() const;
  inline void clear_iworldid();
  static const int kIWorldIDFieldNumber = 3;
  inline ::google::protobuf::int32 iworldid() const;
  inline void set_iworldid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.PBPkRole)
 private:
  inline void set_has_straccount();
  inline void clear_has_straccount();
  inline void set_has_iworldid();
  inline void clear_has_iworldid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* straccount_;
  ::google::protobuf::int32 iworldid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static PBPkRole* default_instance_;
};
// -------------------------------------------------------------------

class MaidSelfInfo : public ::google::protobuf::Message {
 public:
  MaidSelfInfo();
  virtual ~MaidSelfInfo();

  MaidSelfInfo(const MaidSelfInfo& from);

  inline MaidSelfInfo& operator=(const MaidSelfInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MaidSelfInfo& default_instance();

  void Swap(MaidSelfInfo* other);

  // implements Message ----------------------------------------------

  MaidSelfInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MaidSelfInfo& from);
  void MergeFrom(const MaidSelfInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iLoveCount = 1;
  inline bool has_ilovecount() const;
  inline void clear_ilovecount();
  static const int kILoveCountFieldNumber = 1;
  inline ::google::protobuf::int32 ilovecount() const;
  inline void set_ilovecount(::google::protobuf::int32 value);

  // required int32 iLoveLimitCount = 2;
  inline bool has_ilovelimitcount() const;
  inline void clear_ilovelimitcount();
  static const int kILoveLimitCountFieldNumber = 2;
  inline ::google::protobuf::int32 ilovelimitcount() const;
  inline void set_ilovelimitcount(::google::protobuf::int32 value);

  // required int32 iCDSecond = 3;
  inline bool has_icdsecond() const;
  inline void clear_icdsecond();
  static const int kICDSecondFieldNumber = 3;
  inline ::google::protobuf::int32 icdsecond() const;
  inline void set_icdsecond(::google::protobuf::int32 value);

  // optional int32 iAdvanceLoveCost = 4;
  inline bool has_iadvancelovecost() const;
  inline void clear_iadvancelovecost();
  static const int kIAdvanceLoveCostFieldNumber = 4;
  inline ::google::protobuf::int32 iadvancelovecost() const;
  inline void set_iadvancelovecost(::google::protobuf::int32 value);

  // optional int32 iBaseLoveHeroExp = 5;
  inline bool has_ibaseloveheroexp() const;
  inline void clear_ibaseloveheroexp();
  static const int kIBaseLoveHeroExpFieldNumber = 5;
  inline ::google::protobuf::int32 ibaseloveheroexp() const;
  inline void set_ibaseloveheroexp(::google::protobuf::int32 value);

  // optional int32 iAdvanceLoveHeroExp = 6;
  inline bool has_iadvanceloveheroexp() const;
  inline void clear_iadvanceloveheroexp();
  static const int kIAdvanceLoveHeroExpFieldNumber = 6;
  inline ::google::protobuf::int32 iadvanceloveheroexp() const;
  inline void set_iadvanceloveheroexp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.MaidSelfInfo)
 private:
  inline void set_has_ilovecount();
  inline void clear_has_ilovecount();
  inline void set_has_ilovelimitcount();
  inline void clear_has_ilovelimitcount();
  inline void set_has_icdsecond();
  inline void clear_has_icdsecond();
  inline void set_has_iadvancelovecost();
  inline void clear_has_iadvancelovecost();
  inline void set_has_ibaseloveheroexp();
  inline void clear_has_ibaseloveheroexp();
  inline void set_has_iadvanceloveheroexp();
  inline void clear_has_iadvanceloveheroexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ilovecount_;
  ::google::protobuf::int32 ilovelimitcount_;
  ::google::protobuf::int32 icdsecond_;
  ::google::protobuf::int32 iadvancelovecost_;
  ::google::protobuf::int32 ibaseloveheroexp_;
  ::google::protobuf::int32 iadvanceloveheroexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static MaidSelfInfo* default_instance_;
};
// -------------------------------------------------------------------

class MaidOtherInfo : public ::google::protobuf::Message {
 public:
  MaidOtherInfo();
  virtual ~MaidOtherInfo();

  MaidOtherInfo(const MaidOtherInfo& from);

  inline MaidOtherInfo& operator=(const MaidOtherInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MaidOtherInfo& default_instance();

  void Swap(MaidOtherInfo* other);

  // implements Message ----------------------------------------------

  MaidOtherInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MaidOtherInfo& from);
  void MergeFrom(const MaidOtherInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iPlayState = 1;
  inline bool has_iplaystate() const;
  inline void clear_iplaystate();
  static const int kIPlayStateFieldNumber = 1;
  inline ::google::protobuf::int32 iplaystate() const;
  inline void set_iplaystate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.MaidOtherInfo)
 private:
  inline void set_has_iplaystate();
  inline void clear_has_iplaystate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iplaystate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static MaidOtherInfo* default_instance_;
};
// -------------------------------------------------------------------

class PlayerBase : public ::google::protobuf::Message {
 public:
  PlayerBase();
  virtual ~PlayerBase();

  PlayerBase(const PlayerBase& from);

  inline PlayerBase& operator=(const PlayerBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerBase& default_instance();

  void Swap(PlayerBase* other);

  // implements Message ----------------------------------------------

  PlayerBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerBase& from);
  void MergeFrom(const PlayerBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.PBPkRole roleKey = 1;
  inline bool has_rolekey() const;
  inline void clear_rolekey();
  static const int kRoleKeyFieldNumber = 1;
  inline const ::GSProto::PBPkRole& rolekey() const;
  inline ::GSProto::PBPkRole* mutable_rolekey();
  inline ::GSProto::PBPkRole* release_rolekey();
  inline void set_allocated_rolekey(::GSProto::PBPkRole* rolekey);

  // required string strName = 2;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 2;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // required int32 iVisibleHeroID = 3;
  inline bool has_ivisibleheroid() const;
  inline void clear_ivisibleheroid();
  static const int kIVisibleHeroIDFieldNumber = 3;
  inline ::google::protobuf::int32 ivisibleheroid() const;
  inline void set_ivisibleheroid(::google::protobuf::int32 value);

  // required int32 iLevel = 4;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 4;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.PlayerBase)
 private:
  inline void set_has_rolekey();
  inline void clear_has_rolekey();
  inline void set_has_strname();
  inline void clear_has_strname();
  inline void set_has_ivisibleheroid();
  inline void clear_has_ivisibleheroid();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::PBPkRole* rolekey_;
  ::std::string* strname_;
  ::google::protobuf::int32 ivisibleheroid_;
  ::google::protobuf::int32 ilevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static PlayerBase* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_HEROPROGRESS_CS : public ::google::protobuf::Message {
 public:
  CMD_QUERY_HEROPROGRESS_CS();
  virtual ~CMD_QUERY_HEROPROGRESS_CS();

  CMD_QUERY_HEROPROGRESS_CS(const CMD_QUERY_HEROPROGRESS_CS& from);

  inline CMD_QUERY_HEROPROGRESS_CS& operator=(const CMD_QUERY_HEROPROGRESS_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_HEROPROGRESS_CS& default_instance();

  void Swap(CMD_QUERY_HEROPROGRESS_CS* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_HEROPROGRESS_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_HEROPROGRESS_CS& from);
  void MergeFrom(const CMD_QUERY_HEROPROGRESS_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_HEROPROGRESS_CS)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwheroobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_HEROPROGRESS_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_HEROPROGRESS_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_HEROPROGRESS_SC();
  virtual ~CMD_QUERY_HEROPROGRESS_SC();

  CMD_QUERY_HEROPROGRESS_SC(const CMD_QUERY_HEROPROGRESS_SC& from);

  inline CMD_QUERY_HEROPROGRESS_SC& operator=(const CMD_QUERY_HEROPROGRESS_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_HEROPROGRESS_SC& default_instance();

  void Swap(CMD_QUERY_HEROPROGRESS_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_HEROPROGRESS_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_HEROPROGRESS_SC& from);
  void MergeFrom(const CMD_QUERY_HEROPROGRESS_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // required int32 iCurProgress = 2;
  inline bool has_icurprogress() const;
  inline void clear_icurprogress();
  static const int kICurProgressFieldNumber = 2;
  inline ::google::protobuf::int32 icurprogress() const;
  inline void set_icurprogress(::google::protobuf::int32 value);

  // required int32 iNeedProgress = 3;
  inline bool has_ineedprogress() const;
  inline void clear_ineedprogress();
  static const int kINeedProgressFieldNumber = 3;
  inline ::google::protobuf::int32 ineedprogress() const;
  inline void set_ineedprogress(::google::protobuf::int32 value);

  // optional .GSProto.NoticeHeroList heroList = 4;
  inline bool has_herolist() const;
  inline void clear_herolist();
  static const int kHeroListFieldNumber = 4;
  inline const ::GSProto::NoticeHeroList& herolist() const;
  inline ::GSProto::NoticeHeroList* mutable_herolist();
  inline ::GSProto::NoticeHeroList* release_herolist();
  inline void set_allocated_herolist(::GSProto::NoticeHeroList* herolist);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_HEROPROGRESS_SC)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();
  inline void set_has_icurprogress();
  inline void clear_has_icurprogress();
  inline void set_has_ineedprogress();
  inline void clear_has_ineedprogress();
  inline void set_has_herolist();
  inline void clear_has_herolist();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwheroobjectid_;
  ::google::protobuf::int32 icurprogress_;
  ::GSProto::NoticeHeroList* herolist_;
  ::google::protobuf::int32 ineedprogress_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_HEROPROGRESS_SC* default_instance_;
};
// -------------------------------------------------------------------

class LegionListItem : public ::google::protobuf::Message {
 public:
  LegionListItem();
  virtual ~LegionListItem();

  LegionListItem(const LegionListItem& from);

  inline LegionListItem& operator=(const LegionListItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionListItem& default_instance();

  void Swap(LegionListItem* other);

  // implements Message ----------------------------------------------

  LegionListItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionListItem& from);
  void MergeFrom(const LegionListItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iRank = 1;
  inline bool has_irank() const;
  inline void clear_irank();
  static const int kIRankFieldNumber = 1;
  inline ::google::protobuf::int32 irank() const;
  inline void set_irank(::google::protobuf::int32 value);

  // required string strLegionName = 2;
  inline bool has_strlegionname() const;
  inline void clear_strlegionname();
  static const int kStrLegionNameFieldNumber = 2;
  inline const ::std::string& strlegionname() const;
  inline void set_strlegionname(const ::std::string& value);
  inline void set_strlegionname(const char* value);
  inline void set_strlegionname(const char* value, size_t size);
  inline ::std::string* mutable_strlegionname();
  inline ::std::string* release_strlegionname();
  inline void set_allocated_strlegionname(::std::string* strlegionname);

  // required string strLeaderName = 3;
  inline bool has_strleadername() const;
  inline void clear_strleadername();
  static const int kStrLeaderNameFieldNumber = 3;
  inline const ::std::string& strleadername() const;
  inline void set_strleadername(const ::std::string& value);
  inline void set_strleadername(const char* value);
  inline void set_strleadername(const char* value, size_t size);
  inline ::std::string* mutable_strleadername();
  inline ::std::string* release_strleadername();
  inline void set_allocated_strleadername(::std::string* strleadername);

  // required uint32 dwLegionObjectID = 4;
  inline bool has_dwlegionobjectid() const;
  inline void clear_dwlegionobjectid();
  static const int kDwLegionObjectIDFieldNumber = 4;
  inline ::google::protobuf::uint32 dwlegionobjectid() const;
  inline void set_dwlegionobjectid(::google::protobuf::uint32 value);

  // required int32 iLevel = 5;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 5;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // required int32 iMemCount = 6;
  inline bool has_imemcount() const;
  inline void clear_imemcount();
  static const int kIMemCountFieldNumber = 6;
  inline ::google::protobuf::int32 imemcount() const;
  inline void set_imemcount(::google::protobuf::int32 value);

  // required int32 iMemLimit = 7;
  inline bool has_imemlimit() const;
  inline void clear_imemlimit();
  static const int kIMemLimitFieldNumber = 7;
  inline ::google::protobuf::int32 imemlimit() const;
  inline void set_imemlimit(::google::protobuf::int32 value);

  // required bool bApplyed = 8;
  inline bool has_bapplyed() const;
  inline void clear_bapplyed();
  static const int kBApplyedFieldNumber = 8;
  inline bool bapplyed() const;
  inline void set_bapplyed(bool value);

  // required int32 iLegionIconId = 9;
  inline bool has_ilegioniconid() const;
  inline void clear_ilegioniconid();
  static const int kILegionIconIdFieldNumber = 9;
  inline ::google::protobuf::int32 ilegioniconid() const;
  inline void set_ilegioniconid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.LegionListItem)
 private:
  inline void set_has_irank();
  inline void clear_has_irank();
  inline void set_has_strlegionname();
  inline void clear_has_strlegionname();
  inline void set_has_strleadername();
  inline void clear_has_strleadername();
  inline void set_has_dwlegionobjectid();
  inline void clear_has_dwlegionobjectid();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_imemcount();
  inline void clear_has_imemcount();
  inline void set_has_imemlimit();
  inline void clear_has_imemlimit();
  inline void set_has_bapplyed();
  inline void clear_has_bapplyed();
  inline void set_has_ilegioniconid();
  inline void clear_has_ilegioniconid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strlegionname_;
  ::google::protobuf::int32 irank_;
  ::google::protobuf::uint32 dwlegionobjectid_;
  ::std::string* strleadername_;
  ::google::protobuf::int32 ilevel_;
  ::google::protobuf::int32 imemcount_;
  ::google::protobuf::int32 imemlimit_;
  bool bapplyed_;
  ::google::protobuf::int32 ilegioniconid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionListItem* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_LEGIONLIST_CS : public ::google::protobuf::Message {
 public:
  CMD_QUERY_LEGIONLIST_CS();
  virtual ~CMD_QUERY_LEGIONLIST_CS();

  CMD_QUERY_LEGIONLIST_CS(const CMD_QUERY_LEGIONLIST_CS& from);

  inline CMD_QUERY_LEGIONLIST_CS& operator=(const CMD_QUERY_LEGIONLIST_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_LEGIONLIST_CS& default_instance();

  void Swap(CMD_QUERY_LEGIONLIST_CS* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_LEGIONLIST_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_LEGIONLIST_CS& from);
  void MergeFrom(const CMD_QUERY_LEGIONLIST_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iPageIndex = 1;
  inline bool has_ipageindex() const;
  inline void clear_ipageindex();
  static const int kIPageIndexFieldNumber = 1;
  inline ::google::protobuf::int32 ipageindex() const;
  inline void set_ipageindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_LEGIONLIST_CS)
 private:
  inline void set_has_ipageindex();
  inline void clear_has_ipageindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ipageindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_LEGIONLIST_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_LEGIONLIST_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_LEGIONLIST_SC();
  virtual ~CMD_QUERY_LEGIONLIST_SC();

  CMD_QUERY_LEGIONLIST_SC(const CMD_QUERY_LEGIONLIST_SC& from);

  inline CMD_QUERY_LEGIONLIST_SC& operator=(const CMD_QUERY_LEGIONLIST_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_LEGIONLIST_SC& default_instance();

  void Swap(CMD_QUERY_LEGIONLIST_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_LEGIONLIST_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_LEGIONLIST_SC& from);
  void MergeFrom(const CMD_QUERY_LEGIONLIST_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iTotalPages = 1;
  inline bool has_itotalpages() const;
  inline void clear_itotalpages();
  static const int kITotalPagesFieldNumber = 1;
  inline ::google::protobuf::int32 itotalpages() const;
  inline void set_itotalpages(::google::protobuf::int32 value);

  // repeated .GSProto.LegionListItem szLegionList = 2;
  inline int szlegionlist_size() const;
  inline void clear_szlegionlist();
  static const int kSzLegionListFieldNumber = 2;
  inline const ::GSProto::LegionListItem& szlegionlist(int index) const;
  inline ::GSProto::LegionListItem* mutable_szlegionlist(int index);
  inline ::GSProto::LegionListItem* add_szlegionlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionListItem >&
      szlegionlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionListItem >*
      mutable_szlegionlist();

  // required int32 iPageIndex = 3;
  inline bool has_ipageindex() const;
  inline void clear_ipageindex();
  static const int kIPageIndexFieldNumber = 3;
  inline ::google::protobuf::int32 ipageindex() const;
  inline void set_ipageindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_LEGIONLIST_SC)
 private:
  inline void set_has_itotalpages();
  inline void clear_has_itotalpages();
  inline void set_has_ipageindex();
  inline void clear_has_ipageindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::LegionListItem > szlegionlist_;
  ::google::protobuf::int32 itotalpages_;
  ::google::protobuf::int32 ipageindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_LEGIONLIST_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_APPJOIN_LEGION_CS : public ::google::protobuf::Message {
 public:
  CMD_APPJOIN_LEGION_CS();
  virtual ~CMD_APPJOIN_LEGION_CS();

  CMD_APPJOIN_LEGION_CS(const CMD_APPJOIN_LEGION_CS& from);

  inline CMD_APPJOIN_LEGION_CS& operator=(const CMD_APPJOIN_LEGION_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_APPJOIN_LEGION_CS& default_instance();

  void Swap(CMD_APPJOIN_LEGION_CS* other);

  // implements Message ----------------------------------------------

  CMD_APPJOIN_LEGION_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_APPJOIN_LEGION_CS& from);
  void MergeFrom(const CMD_APPJOIN_LEGION_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwLegionObjectID = 1;
  inline bool has_dwlegionobjectid() const;
  inline void clear_dwlegionobjectid();
  static const int kDwLegionObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwlegionobjectid() const;
  inline void set_dwlegionobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_APPJOIN_LEGION_CS)
 private:
  inline void set_has_dwlegionobjectid();
  inline void clear_has_dwlegionobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwlegionobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_APPJOIN_LEGION_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_APPJOIN_LEGION_SC : public ::google::protobuf::Message {
 public:
  CMD_APPJOIN_LEGION_SC();
  virtual ~CMD_APPJOIN_LEGION_SC();

  CMD_APPJOIN_LEGION_SC(const CMD_APPJOIN_LEGION_SC& from);

  inline CMD_APPJOIN_LEGION_SC& operator=(const CMD_APPJOIN_LEGION_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_APPJOIN_LEGION_SC& default_instance();

  void Swap(CMD_APPJOIN_LEGION_SC* other);

  // implements Message ----------------------------------------------

  CMD_APPJOIN_LEGION_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_APPJOIN_LEGION_SC& from);
  void MergeFrom(const CMD_APPJOIN_LEGION_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwLegionObjectID = 1;
  inline bool has_dwlegionobjectid() const;
  inline void clear_dwlegionobjectid();
  static const int kDwLegionObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwlegionobjectid() const;
  inline void set_dwlegionobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_APPJOIN_LEGION_SC)
 private:
  inline void set_has_dwlegionobjectid();
  inline void clear_has_dwlegionobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwlegionobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_APPJOIN_LEGION_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_CREATE_LEGION_CS : public ::google::protobuf::Message {
 public:
  CMD_CREATE_LEGION_CS();
  virtual ~CMD_CREATE_LEGION_CS();

  CMD_CREATE_LEGION_CS(const CMD_CREATE_LEGION_CS& from);

  inline CMD_CREATE_LEGION_CS& operator=(const CMD_CREATE_LEGION_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_CREATE_LEGION_CS& default_instance();

  void Swap(CMD_CREATE_LEGION_CS* other);

  // implements Message ----------------------------------------------

  CMD_CREATE_LEGION_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_CREATE_LEGION_CS& from);
  void MergeFrom(const CMD_CREATE_LEGION_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strLegionName = 1;
  inline bool has_strlegionname() const;
  inline void clear_strlegionname();
  static const int kStrLegionNameFieldNumber = 1;
  inline const ::std::string& strlegionname() const;
  inline void set_strlegionname(const ::std::string& value);
  inline void set_strlegionname(const char* value);
  inline void set_strlegionname(const char* value, size_t size);
  inline ::std::string* mutable_strlegionname();
  inline ::std::string* release_strlegionname();
  inline void set_allocated_strlegionname(::std::string* strlegionname);

  // required int32 iLegionIconId = 2;
  inline bool has_ilegioniconid() const;
  inline void clear_ilegioniconid();
  static const int kILegionIconIdFieldNumber = 2;
  inline ::google::protobuf::int32 ilegioniconid() const;
  inline void set_ilegioniconid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_CREATE_LEGION_CS)
 private:
  inline void set_has_strlegionname();
  inline void clear_has_strlegionname();
  inline void set_has_ilegioniconid();
  inline void clear_has_ilegioniconid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strlegionname_;
  ::google::protobuf::int32 ilegioniconid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_CREATE_LEGION_CS* default_instance_;
};
// -------------------------------------------------------------------

class LegionBaseInfo : public ::google::protobuf::Message {
 public:
  LegionBaseInfo();
  virtual ~LegionBaseInfo();

  LegionBaseInfo(const LegionBaseInfo& from);

  inline LegionBaseInfo& operator=(const LegionBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionBaseInfo& default_instance();

  void Swap(LegionBaseInfo* other);

  // implements Message ----------------------------------------------

  LegionBaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionBaseInfo& from);
  void MergeFrom(const LegionBaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwLegionObjectID = 1;
  inline bool has_dwlegionobjectid() const;
  inline void clear_dwlegionobjectid();
  static const int kDwLegionObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwlegionobjectid() const;
  inline void set_dwlegionobjectid(::google::protobuf::uint32 value);

  // required string strLegionName = 2;
  inline bool has_strlegionname() const;
  inline void clear_strlegionname();
  static const int kStrLegionNameFieldNumber = 2;
  inline const ::std::string& strlegionname() const;
  inline void set_strlegionname(const ::std::string& value);
  inline void set_strlegionname(const char* value);
  inline void set_strlegionname(const char* value, size_t size);
  inline ::std::string* mutable_strlegionname();
  inline ::std::string* release_strlegionname();
  inline void set_allocated_strlegionname(::std::string* strlegionname);

  // required string strLeaderName = 3;
  inline bool has_strleadername() const;
  inline void clear_strleadername();
  static const int kStrLeaderNameFieldNumber = 3;
  inline const ::std::string& strleadername() const;
  inline void set_strleadername(const ::std::string& value);
  inline void set_strleadername(const char* value);
  inline void set_strleadername(const char* value, size_t size);
  inline ::std::string* mutable_strleadername();
  inline ::std::string* release_strleadername();
  inline void set_allocated_strleadername(::std::string* strleadername);

  // required int32 iRank = 4;
  inline bool has_irank() const;
  inline void clear_irank();
  static const int kIRankFieldNumber = 4;
  inline ::google::protobuf::int32 irank() const;
  inline void set_irank(::google::protobuf::int32 value);

  // required int32 iMemCount = 5;
  inline bool has_imemcount() const;
  inline void clear_imemcount();
  static const int kIMemCountFieldNumber = 5;
  inline ::google::protobuf::int32 imemcount() const;
  inline void set_imemcount(::google::protobuf::int32 value);

  // required int32 iMemLimit = 6;
  inline bool has_imemlimit() const;
  inline void clear_imemlimit();
  static const int kIMemLimitFieldNumber = 6;
  inline ::google::protobuf::int32 imemlimit() const;
  inline void set_imemlimit(::google::protobuf::int32 value);

  // required int32 iLevel = 7;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 7;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // required int32 iExp = 8;
  inline bool has_iexp() const;
  inline void clear_iexp();
  static const int kIExpFieldNumber = 8;
  inline ::google::protobuf::int32 iexp() const;
  inline void set_iexp(::google::protobuf::int32 value);

  // required int32 iLevelUpExp = 9;
  inline bool has_ilevelupexp() const;
  inline void clear_ilevelupexp();
  static const int kILevelUpExpFieldNumber = 9;
  inline ::google::protobuf::int32 ilevelupexp() const;
  inline void set_ilevelupexp(::google::protobuf::int32 value);

  // required string strBroadcat = 10;
  inline bool has_strbroadcat() const;
  inline void clear_strbroadcat();
  static const int kStrBroadcatFieldNumber = 10;
  inline const ::std::string& strbroadcat() const;
  inline void set_strbroadcat(const ::std::string& value);
  inline void set_strbroadcat(const char* value);
  inline void set_strbroadcat(const char* value, size_t size);
  inline ::std::string* mutable_strbroadcat();
  inline ::std::string* release_strbroadcat();
  inline void set_allocated_strbroadcat(::std::string* strbroadcat);

  // required int32 iOccupation = 11;
  inline bool has_ioccupation() const;
  inline void clear_ioccupation();
  static const int kIOccupationFieldNumber = 11;
  inline ::google::protobuf::int32 ioccupation() const;
  inline void set_ioccupation(::google::protobuf::int32 value);

  // required int32 iBlessed = 12;
  inline bool has_iblessed() const;
  inline void clear_iblessed();
  static const int kIBlessedFieldNumber = 12;
  inline ::google::protobuf::int32 iblessed() const;
  inline void set_iblessed(::google::protobuf::int32 value);

  // optional int32 iContribute = 13;
  inline bool has_icontribute() const;
  inline void clear_icontribute();
  static const int kIContributeFieldNumber = 13;
  inline ::google::protobuf::int32 icontribute() const;
  inline void set_icontribute(::google::protobuf::int32 value);

  // required int32 iLegionIconId = 14;
  inline bool has_ilegioniconid() const;
  inline void clear_ilegioniconid();
  static const int kILegionIconIdFieldNumber = 14;
  inline ::google::protobuf::int32 ilegioniconid() const;
  inline void set_ilegioniconid(::google::protobuf::int32 value);

  // required int32 iTotalContribute = 15;
  inline bool has_itotalcontribute() const;
  inline void clear_itotalcontribute();
  static const int kITotalContributeFieldNumber = 15;
  inline ::google::protobuf::int32 itotalcontribute() const;
  inline void set_itotalcontribute(::google::protobuf::int32 value);

  // required int32 iLegionMoney = 16;
  inline bool has_ilegionmoney() const;
  inline void clear_ilegionmoney();
  static const int kILegionMoneyFieldNumber = 16;
  inline ::google::protobuf::int32 ilegionmoney() const;
  inline void set_ilegionmoney(::google::protobuf::int32 value);

  // optional string strAnnouce = 17;
  inline bool has_strannouce() const;
  inline void clear_strannouce();
  static const int kStrAnnouceFieldNumber = 17;
  inline const ::std::string& strannouce() const;
  inline void set_strannouce(const ::std::string& value);
  inline void set_strannouce(const char* value);
  inline void set_strannouce(const char* value, size_t size);
  inline ::std::string* mutable_strannouce();
  inline ::std::string* release_strannouce();
  inline void set_allocated_strannouce(::std::string* strannouce);

  // @@protoc_insertion_point(class_scope:GSProto.LegionBaseInfo)
 private:
  inline void set_has_dwlegionobjectid();
  inline void clear_has_dwlegionobjectid();
  inline void set_has_strlegionname();
  inline void clear_has_strlegionname();
  inline void set_has_strleadername();
  inline void clear_has_strleadername();
  inline void set_has_irank();
  inline void clear_has_irank();
  inline void set_has_imemcount();
  inline void clear_has_imemcount();
  inline void set_has_imemlimit();
  inline void clear_has_imemlimit();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_iexp();
  inline void clear_has_iexp();
  inline void set_has_ilevelupexp();
  inline void clear_has_ilevelupexp();
  inline void set_has_strbroadcat();
  inline void clear_has_strbroadcat();
  inline void set_has_ioccupation();
  inline void clear_has_ioccupation();
  inline void set_has_iblessed();
  inline void clear_has_iblessed();
  inline void set_has_icontribute();
  inline void clear_has_icontribute();
  inline void set_has_ilegioniconid();
  inline void clear_has_ilegioniconid();
  inline void set_has_itotalcontribute();
  inline void clear_has_itotalcontribute();
  inline void set_has_ilegionmoney();
  inline void clear_has_ilegionmoney();
  inline void set_has_strannouce();
  inline void clear_has_strannouce();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strlegionname_;
  ::google::protobuf::uint32 dwlegionobjectid_;
  ::google::protobuf::int32 irank_;
  ::std::string* strleadername_;
  ::google::protobuf::int32 imemcount_;
  ::google::protobuf::int32 imemlimit_;
  ::google::protobuf::int32 ilevel_;
  ::google::protobuf::int32 iexp_;
  ::std::string* strbroadcat_;
  ::google::protobuf::int32 ilevelupexp_;
  ::google::protobuf::int32 ioccupation_;
  ::google::protobuf::int32 iblessed_;
  ::google::protobuf::int32 icontribute_;
  ::google::protobuf::int32 ilegioniconid_;
  ::google::protobuf::int32 itotalcontribute_;
  ::std::string* strannouce_;
  ::google::protobuf::int32 ilegionmoney_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_LEGION_BASE_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_LEGION_BASE_SC();
  virtual ~CMD_QUERY_LEGION_BASE_SC();

  CMD_QUERY_LEGION_BASE_SC(const CMD_QUERY_LEGION_BASE_SC& from);

  inline CMD_QUERY_LEGION_BASE_SC& operator=(const CMD_QUERY_LEGION_BASE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_LEGION_BASE_SC& default_instance();

  void Swap(CMD_QUERY_LEGION_BASE_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_LEGION_BASE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_LEGION_BASE_SC& from);
  void MergeFrom(const CMD_QUERY_LEGION_BASE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.LegionBaseInfo baseInfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::GSProto::LegionBaseInfo& baseinfo() const;
  inline ::GSProto::LegionBaseInfo* mutable_baseinfo();
  inline ::GSProto::LegionBaseInfo* release_baseinfo();
  inline void set_allocated_baseinfo(::GSProto::LegionBaseInfo* baseinfo);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_LEGION_BASE_SC)
 private:
  inline void set_has_baseinfo();
  inline void clear_has_baseinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::LegionBaseInfo* baseinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_LEGION_BASE_SC* default_instance_;
};
// -------------------------------------------------------------------

class LegionMember : public ::google::protobuf::Message {
 public:
  LegionMember();
  virtual ~LegionMember();

  LegionMember(const LegionMember& from);

  inline LegionMember& operator=(const LegionMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionMember& default_instance();

  void Swap(LegionMember* other);

  // implements Message ----------------------------------------------

  LegionMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionMember& from);
  void MergeFrom(const LegionMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strMemName = 1;
  inline bool has_strmemname() const;
  inline void clear_strmemname();
  static const int kStrMemNameFieldNumber = 1;
  inline const ::std::string& strmemname() const;
  inline void set_strmemname(const ::std::string& value);
  inline void set_strmemname(const char* value);
  inline void set_strmemname(const char* value, size_t size);
  inline ::std::string* mutable_strmemname();
  inline ::std::string* release_strmemname();
  inline void set_allocated_strmemname(::std::string* strmemname);

  // required int32 iLevel = 2;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 2;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // required int32 iOccupation = 3;
  inline bool has_ioccupation() const;
  inline void clear_ioccupation();
  static const int kIOccupationFieldNumber = 3;
  inline ::google::protobuf::int32 ioccupation() const;
  inline void set_ioccupation(::google::protobuf::int32 value);

  // required int32 iArenaRank = 4;
  inline bool has_iarenarank() const;
  inline void clear_iarenarank();
  static const int kIArenaRankFieldNumber = 4;
  inline ::google::protobuf::int32 iarenarank() const;
  inline void set_iarenarank(::google::protobuf::int32 value);

  // required int32 iDayContribute = 5;
  inline bool has_idaycontribute() const;
  inline void clear_idaycontribute();
  static const int kIDayContributeFieldNumber = 5;
  inline ::google::protobuf::int32 idaycontribute() const;
  inline void set_idaycontribute(::google::protobuf::int32 value);

  // required int32 iTotalContribute = 6;
  inline bool has_itotalcontribute() const;
  inline void clear_itotalcontribute();
  static const int kITotalContributeFieldNumber = 6;
  inline ::google::protobuf::int32 itotalcontribute() const;
  inline void set_itotalcontribute(::google::protobuf::int32 value);

  // required int32 iContributeRank = 7;
  inline bool has_icontributerank() const;
  inline void clear_icontributerank();
  static const int kIContributeRankFieldNumber = 7;
  inline ::google::protobuf::int32 icontributerank() const;
  inline void set_icontributerank(::google::protobuf::int32 value);

  // required bool bActorIsOnLine = 8;
  inline bool has_bactorisonline() const;
  inline void clear_bactorisonline();
  static const int kBActorIsOnLineFieldNumber = 8;
  inline bool bactorisonline() const;
  inline void set_bactorisonline(bool value);

  // optional uint32 outLineSecond = 9;
  inline bool has_outlinesecond() const;
  inline void clear_outlinesecond();
  static const int kOutLineSecondFieldNumber = 9;
  inline ::google::protobuf::uint32 outlinesecond() const;
  inline void set_outlinesecond(::google::protobuf::uint32 value);

  // required bool bIsCanWorship = 10;
  inline bool has_biscanworship() const;
  inline void clear_biscanworship();
  static const int kBIsCanWorshipFieldNumber = 10;
  inline bool biscanworship() const;
  inline void set_biscanworship(bool value);

  // required int32 iThreeDayContribute = 11;
  inline bool has_ithreedaycontribute() const;
  inline void clear_ithreedaycontribute();
  static const int kIThreeDayContributeFieldNumber = 11;
  inline ::google::protobuf::int32 ithreedaycontribute() const;
  inline void set_ithreedaycontribute(::google::protobuf::int32 value);

  // required int32 iHeadIcon = 12;
  inline bool has_iheadicon() const;
  inline void clear_iheadicon();
  static const int kIHeadIconFieldNumber = 12;
  inline ::google::protobuf::int32 iheadicon() const;
  inline void set_iheadicon(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.LegionMember)
 private:
  inline void set_has_strmemname();
  inline void clear_has_strmemname();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_ioccupation();
  inline void clear_has_ioccupation();
  inline void set_has_iarenarank();
  inline void clear_has_iarenarank();
  inline void set_has_idaycontribute();
  inline void clear_has_idaycontribute();
  inline void set_has_itotalcontribute();
  inline void clear_has_itotalcontribute();
  inline void set_has_icontributerank();
  inline void clear_has_icontributerank();
  inline void set_has_bactorisonline();
  inline void clear_has_bactorisonline();
  inline void set_has_outlinesecond();
  inline void clear_has_outlinesecond();
  inline void set_has_biscanworship();
  inline void clear_has_biscanworship();
  inline void set_has_ithreedaycontribute();
  inline void clear_has_ithreedaycontribute();
  inline void set_has_iheadicon();
  inline void clear_has_iheadicon();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strmemname_;
  ::google::protobuf::int32 ilevel_;
  ::google::protobuf::int32 ioccupation_;
  ::google::protobuf::int32 iarenarank_;
  ::google::protobuf::int32 idaycontribute_;
  ::google::protobuf::int32 itotalcontribute_;
  ::google::protobuf::int32 icontributerank_;
  ::google::protobuf::uint32 outlinesecond_;
  bool bactorisonline_;
  bool biscanworship_;
  ::google::protobuf::int32 ithreedaycontribute_;
  ::google::protobuf::int32 iheadicon_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionMember* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_LEGION_MEMBERLIST_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_LEGION_MEMBERLIST_SC();
  virtual ~CMD_QUERY_LEGION_MEMBERLIST_SC();

  CMD_QUERY_LEGION_MEMBERLIST_SC(const CMD_QUERY_LEGION_MEMBERLIST_SC& from);

  inline CMD_QUERY_LEGION_MEMBERLIST_SC& operator=(const CMD_QUERY_LEGION_MEMBERLIST_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_LEGION_MEMBERLIST_SC& default_instance();

  void Swap(CMD_QUERY_LEGION_MEMBERLIST_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_LEGION_MEMBERLIST_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_LEGION_MEMBERLIST_SC& from);
  void MergeFrom(const CMD_QUERY_LEGION_MEMBERLIST_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.LegionMember szMemberList = 2;
  inline int szmemberlist_size() const;
  inline void clear_szmemberlist();
  static const int kSzMemberListFieldNumber = 2;
  inline const ::GSProto::LegionMember& szmemberlist(int index) const;
  inline ::GSProto::LegionMember* mutable_szmemberlist(int index);
  inline ::GSProto::LegionMember* add_szmemberlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionMember >&
      szmemberlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionMember >*
      mutable_szmemberlist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_LEGION_MEMBERLIST_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::LegionMember > szmemberlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_LEGION_MEMBERLIST_SC* default_instance_;
};
// -------------------------------------------------------------------

class LegionAppItem : public ::google::protobuf::Message {
 public:
  LegionAppItem();
  virtual ~LegionAppItem();

  LegionAppItem(const LegionAppItem& from);

  inline LegionAppItem& operator=(const LegionAppItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionAppItem& default_instance();

  void Swap(LegionAppItem* other);

  // implements Message ----------------------------------------------

  LegionAppItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionAppItem& from);
  void MergeFrom(const LegionAppItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strAppName = 1;
  inline bool has_strappname() const;
  inline void clear_strappname();
  static const int kStrAppNameFieldNumber = 1;
  inline const ::std::string& strappname() const;
  inline void set_strappname(const ::std::string& value);
  inline void set_strappname(const char* value);
  inline void set_strappname(const char* value, size_t size);
  inline ::std::string* mutable_strappname();
  inline ::std::string* release_strappname();
  inline void set_allocated_strappname(::std::string* strappname);

  // required int32 iLevel = 2;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 2;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // required int32 iArenaRank = 3;
  inline bool has_iarenarank() const;
  inline void clear_iarenarank();
  static const int kIArenaRankFieldNumber = 3;
  inline ::google::protobuf::int32 iarenarank() const;
  inline void set_iarenarank(::google::protobuf::int32 value);

  // required int32 iActorHeadIcon = 4;
  inline bool has_iactorheadicon() const;
  inline void clear_iactorheadicon();
  static const int kIActorHeadIconFieldNumber = 4;
  inline ::google::protobuf::int32 iactorheadicon() const;
  inline void set_iactorheadicon(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.LegionAppItem)
 private:
  inline void set_has_strappname();
  inline void clear_has_strappname();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_iarenarank();
  inline void clear_has_iarenarank();
  inline void set_has_iactorheadicon();
  inline void clear_has_iactorheadicon();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strappname_;
  ::google::protobuf::int32 ilevel_;
  ::google::protobuf::int32 iarenarank_;
  ::google::protobuf::int32 iactorheadicon_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionAppItem* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_LEGION_APP_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_LEGION_APP_SC();
  virtual ~CMD_QUERY_LEGION_APP_SC();

  CMD_QUERY_LEGION_APP_SC(const CMD_QUERY_LEGION_APP_SC& from);

  inline CMD_QUERY_LEGION_APP_SC& operator=(const CMD_QUERY_LEGION_APP_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_LEGION_APP_SC& default_instance();

  void Swap(CMD_QUERY_LEGION_APP_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_LEGION_APP_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_LEGION_APP_SC& from);
  void MergeFrom(const CMD_QUERY_LEGION_APP_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.LegionAppItem szAppList = 2;
  inline int szapplist_size() const;
  inline void clear_szapplist();
  static const int kSzAppListFieldNumber = 2;
  inline const ::GSProto::LegionAppItem& szapplist(int index) const;
  inline ::GSProto::LegionAppItem* mutable_szapplist(int index);
  inline ::GSProto::LegionAppItem* add_szapplist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionAppItem >&
      szapplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionAppItem >*
      mutable_szapplist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_LEGION_APP_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::LegionAppItem > szapplist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_LEGION_APP_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_MODIFY_LEGION_SETTING_CS : public ::google::protobuf::Message {
 public:
  CMD_MODIFY_LEGION_SETTING_CS();
  virtual ~CMD_MODIFY_LEGION_SETTING_CS();

  CMD_MODIFY_LEGION_SETTING_CS(const CMD_MODIFY_LEGION_SETTING_CS& from);

  inline CMD_MODIFY_LEGION_SETTING_CS& operator=(const CMD_MODIFY_LEGION_SETTING_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_MODIFY_LEGION_SETTING_CS& default_instance();

  void Swap(CMD_MODIFY_LEGION_SETTING_CS* other);

  // implements Message ----------------------------------------------

  CMD_MODIFY_LEGION_SETTING_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_MODIFY_LEGION_SETTING_CS& from);
  void MergeFrom(const CMD_MODIFY_LEGION_SETTING_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strAnnouce = 1;
  inline bool has_strannouce() const;
  inline void clear_strannouce();
  static const int kStrAnnouceFieldNumber = 1;
  inline const ::std::string& strannouce() const;
  inline void set_strannouce(const ::std::string& value);
  inline void set_strannouce(const char* value);
  inline void set_strannouce(const char* value, size_t size);
  inline ::std::string* mutable_strannouce();
  inline ::std::string* release_strannouce();
  inline void set_allocated_strannouce(::std::string* strannouce);

  // required string strBroadcast = 2;
  inline bool has_strbroadcast() const;
  inline void clear_strbroadcast();
  static const int kStrBroadcastFieldNumber = 2;
  inline const ::std::string& strbroadcast() const;
  inline void set_strbroadcast(const ::std::string& value);
  inline void set_strbroadcast(const char* value);
  inline void set_strbroadcast(const char* value, size_t size);
  inline ::std::string* mutable_strbroadcast();
  inline ::std::string* release_strbroadcast();
  inline void set_allocated_strbroadcast(::std::string* strbroadcast);

  // required int32 iLegionIconId = 3;
  inline bool has_ilegioniconid() const;
  inline void clear_ilegioniconid();
  static const int kILegionIconIdFieldNumber = 3;
  inline ::google::protobuf::int32 ilegioniconid() const;
  inline void set_ilegioniconid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_MODIFY_LEGION_SETTING_CS)
 private:
  inline void set_has_strannouce();
  inline void clear_has_strannouce();
  inline void set_has_strbroadcast();
  inline void clear_has_strbroadcast();
  inline void set_has_ilegioniconid();
  inline void clear_has_ilegioniconid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strannouce_;
  ::std::string* strbroadcast_;
  ::google::protobuf::int32 ilegioniconid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_MODIFY_LEGION_SETTING_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_DEAL_LEGIONAPP_CS : public ::google::protobuf::Message {
 public:
  CMD_DEAL_LEGIONAPP_CS();
  virtual ~CMD_DEAL_LEGIONAPP_CS();

  CMD_DEAL_LEGIONAPP_CS(const CMD_DEAL_LEGIONAPP_CS& from);

  inline CMD_DEAL_LEGIONAPP_CS& operator=(const CMD_DEAL_LEGIONAPP_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_DEAL_LEGIONAPP_CS& default_instance();

  void Swap(CMD_DEAL_LEGIONAPP_CS* other);

  // implements Message ----------------------------------------------

  CMD_DEAL_LEGIONAPP_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_DEAL_LEGIONAPP_CS& from);
  void MergeFrom(const CMD_DEAL_LEGIONAPP_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strAppName = 2;
  inline bool has_strappname() const;
  inline void clear_strappname();
  static const int kStrAppNameFieldNumber = 2;
  inline const ::std::string& strappname() const;
  inline void set_strappname(const ::std::string& value);
  inline void set_strappname(const char* value);
  inline void set_strappname(const char* value, size_t size);
  inline ::std::string* mutable_strappname();
  inline ::std::string* release_strappname();
  inline void set_allocated_strappname(::std::string* strappname);

  // required bool bAccept = 3;
  inline bool has_baccept() const;
  inline void clear_baccept();
  static const int kBAcceptFieldNumber = 3;
  inline bool baccept() const;
  inline void set_baccept(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_DEAL_LEGIONAPP_CS)
 private:
  inline void set_has_strappname();
  inline void clear_has_strappname();
  inline void set_has_baccept();
  inline void clear_has_baccept();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strappname_;
  bool baccept_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_DEAL_LEGIONAPP_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_DEAL_LEGIONAPP_SC : public ::google::protobuf::Message {
 public:
  CMD_DEAL_LEGIONAPP_SC();
  virtual ~CMD_DEAL_LEGIONAPP_SC();

  CMD_DEAL_LEGIONAPP_SC(const CMD_DEAL_LEGIONAPP_SC& from);

  inline CMD_DEAL_LEGIONAPP_SC& operator=(const CMD_DEAL_LEGIONAPP_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_DEAL_LEGIONAPP_SC& default_instance();

  void Swap(CMD_DEAL_LEGIONAPP_SC* other);

  // implements Message ----------------------------------------------

  CMD_DEAL_LEGIONAPP_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_DEAL_LEGIONAPP_SC& from);
  void MergeFrom(const CMD_DEAL_LEGIONAPP_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strAppName = 2;
  inline bool has_strappname() const;
  inline void clear_strappname();
  static const int kStrAppNameFieldNumber = 2;
  inline const ::std::string& strappname() const;
  inline void set_strappname(const ::std::string& value);
  inline void set_strappname(const char* value);
  inline void set_strappname(const char* value, size_t size);
  inline ::std::string* mutable_strappname();
  inline ::std::string* release_strappname();
  inline void set_allocated_strappname(::std::string* strappname);

  // required bool bAccept = 3;
  inline bool has_baccept() const;
  inline void clear_baccept();
  static const int kBAcceptFieldNumber = 3;
  inline bool baccept() const;
  inline void set_baccept(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_DEAL_LEGIONAPP_SC)
 private:
  inline void set_has_strappname();
  inline void clear_has_strappname();
  inline void set_has_baccept();
  inline void clear_has_baccept();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strappname_;
  bool baccept_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_DEAL_LEGIONAPP_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_KICK_LEGIONMEMBER_CS : public ::google::protobuf::Message {
 public:
  CMD_KICK_LEGIONMEMBER_CS();
  virtual ~CMD_KICK_LEGIONMEMBER_CS();

  CMD_KICK_LEGIONMEMBER_CS(const CMD_KICK_LEGIONMEMBER_CS& from);

  inline CMD_KICK_LEGIONMEMBER_CS& operator=(const CMD_KICK_LEGIONMEMBER_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_KICK_LEGIONMEMBER_CS& default_instance();

  void Swap(CMD_KICK_LEGIONMEMBER_CS* other);

  // implements Message ----------------------------------------------

  CMD_KICK_LEGIONMEMBER_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_KICK_LEGIONMEMBER_CS& from);
  void MergeFrom(const CMD_KICK_LEGIONMEMBER_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strLegionMemName = 1;
  inline bool has_strlegionmemname() const;
  inline void clear_strlegionmemname();
  static const int kStrLegionMemNameFieldNumber = 1;
  inline const ::std::string& strlegionmemname() const;
  inline void set_strlegionmemname(const ::std::string& value);
  inline void set_strlegionmemname(const char* value);
  inline void set_strlegionmemname(const char* value, size_t size);
  inline ::std::string* mutable_strlegionmemname();
  inline ::std::string* release_strlegionmemname();
  inline void set_allocated_strlegionmemname(::std::string* strlegionmemname);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_KICK_LEGIONMEMBER_CS)
 private:
  inline void set_has_strlegionmemname();
  inline void clear_has_strlegionmemname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strlegionmemname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_KICK_LEGIONMEMBER_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_KICK_LEGIONMEMBER_SC : public ::google::protobuf::Message {
 public:
  CMD_KICK_LEGIONMEMBER_SC();
  virtual ~CMD_KICK_LEGIONMEMBER_SC();

  CMD_KICK_LEGIONMEMBER_SC(const CMD_KICK_LEGIONMEMBER_SC& from);

  inline CMD_KICK_LEGIONMEMBER_SC& operator=(const CMD_KICK_LEGIONMEMBER_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_KICK_LEGIONMEMBER_SC& default_instance();

  void Swap(CMD_KICK_LEGIONMEMBER_SC* other);

  // implements Message ----------------------------------------------

  CMD_KICK_LEGIONMEMBER_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_KICK_LEGIONMEMBER_SC& from);
  void MergeFrom(const CMD_KICK_LEGIONMEMBER_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strLegionMemName = 1;
  inline bool has_strlegionmemname() const;
  inline void clear_strlegionmemname();
  static const int kStrLegionMemNameFieldNumber = 1;
  inline const ::std::string& strlegionmemname() const;
  inline void set_strlegionmemname(const ::std::string& value);
  inline void set_strlegionmemname(const char* value);
  inline void set_strlegionmemname(const char* value, size_t size);
  inline ::std::string* mutable_strlegionmemname();
  inline ::std::string* release_strlegionmemname();
  inline void set_allocated_strlegionmemname(::std::string* strlegionmemname);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_KICK_LEGIONMEMBER_SC)
 private:
  inline void set_has_strlegionmemname();
  inline void clear_has_strlegionmemname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strlegionmemname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_KICK_LEGIONMEMBER_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_TRANSFER_LEGIONLEADER_CS : public ::google::protobuf::Message {
 public:
  CMD_TRANSFER_LEGIONLEADER_CS();
  virtual ~CMD_TRANSFER_LEGIONLEADER_CS();

  CMD_TRANSFER_LEGIONLEADER_CS(const CMD_TRANSFER_LEGIONLEADER_CS& from);

  inline CMD_TRANSFER_LEGIONLEADER_CS& operator=(const CMD_TRANSFER_LEGIONLEADER_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_TRANSFER_LEGIONLEADER_CS& default_instance();

  void Swap(CMD_TRANSFER_LEGIONLEADER_CS* other);

  // implements Message ----------------------------------------------

  CMD_TRANSFER_LEGIONLEADER_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_TRANSFER_LEGIONLEADER_CS& from);
  void MergeFrom(const CMD_TRANSFER_LEGIONLEADER_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strTargetMemName = 1;
  inline bool has_strtargetmemname() const;
  inline void clear_strtargetmemname();
  static const int kStrTargetMemNameFieldNumber = 1;
  inline const ::std::string& strtargetmemname() const;
  inline void set_strtargetmemname(const ::std::string& value);
  inline void set_strtargetmemname(const char* value);
  inline void set_strtargetmemname(const char* value, size_t size);
  inline ::std::string* mutable_strtargetmemname();
  inline ::std::string* release_strtargetmemname();
  inline void set_allocated_strtargetmemname(::std::string* strtargetmemname);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_TRANSFER_LEGIONLEADER_CS)
 private:
  inline void set_has_strtargetmemname();
  inline void clear_has_strtargetmemname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strtargetmemname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_TRANSFER_LEGIONLEADER_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_TRANSFER_LEGIONLEADER_SC : public ::google::protobuf::Message {
 public:
  CMD_TRANSFER_LEGIONLEADER_SC();
  virtual ~CMD_TRANSFER_LEGIONLEADER_SC();

  CMD_TRANSFER_LEGIONLEADER_SC(const CMD_TRANSFER_LEGIONLEADER_SC& from);

  inline CMD_TRANSFER_LEGIONLEADER_SC& operator=(const CMD_TRANSFER_LEGIONLEADER_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_TRANSFER_LEGIONLEADER_SC& default_instance();

  void Swap(CMD_TRANSFER_LEGIONLEADER_SC* other);

  // implements Message ----------------------------------------------

  CMD_TRANSFER_LEGIONLEADER_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_TRANSFER_LEGIONLEADER_SC& from);
  void MergeFrom(const CMD_TRANSFER_LEGIONLEADER_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strNewLeader = 1;
  inline bool has_strnewleader() const;
  inline void clear_strnewleader();
  static const int kStrNewLeaderFieldNumber = 1;
  inline const ::std::string& strnewleader() const;
  inline void set_strnewleader(const ::std::string& value);
  inline void set_strnewleader(const char* value);
  inline void set_strnewleader(const char* value, size_t size);
  inline ::std::string* mutable_strnewleader();
  inline ::std::string* release_strnewleader();
  inline void set_allocated_strnewleader(::std::string* strnewleader);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_TRANSFER_LEGIONLEADER_SC)
 private:
  inline void set_has_strnewleader();
  inline void clear_has_strnewleader();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strnewleader_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_TRANSFER_LEGIONLEADER_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_LELGION_CONTRIBUTE_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_LELGION_CONTRIBUTE_SC();
  virtual ~CMD_QUERY_LELGION_CONTRIBUTE_SC();

  CMD_QUERY_LELGION_CONTRIBUTE_SC(const CMD_QUERY_LELGION_CONTRIBUTE_SC& from);

  inline CMD_QUERY_LELGION_CONTRIBUTE_SC& operator=(const CMD_QUERY_LELGION_CONTRIBUTE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_LELGION_CONTRIBUTE_SC& default_instance();

  void Swap(CMD_QUERY_LELGION_CONTRIBUTE_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_LELGION_CONTRIBUTE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_LELGION_CONTRIBUTE_SC& from);
  void MergeFrom(const CMD_QUERY_LELGION_CONTRIBUTE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iContribute = 1;
  inline bool has_icontribute() const;
  inline void clear_icontribute();
  static const int kIContributeFieldNumber = 1;
  inline ::google::protobuf::int32 icontribute() const;
  inline void set_icontribute(::google::protobuf::int32 value);

  // required int32 iLegionExp = 2;
  inline bool has_ilegionexp() const;
  inline void clear_ilegionexp();
  static const int kILegionExpFieldNumber = 2;
  inline ::google::protobuf::int32 ilegionexp() const;
  inline void set_ilegionexp(::google::protobuf::int32 value);

  // required int32 iLegionUpLevelExp = 3;
  inline bool has_ilegionuplevelexp() const;
  inline void clear_ilegionuplevelexp();
  static const int kILegionUpLevelExpFieldNumber = 3;
  inline ::google::protobuf::int32 ilegionuplevelexp() const;
  inline void set_ilegionuplevelexp(::google::protobuf::int32 value);

  // required int32 iLevel = 4;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 4;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_LELGION_CONTRIBUTE_SC)
 private:
  inline void set_has_icontribute();
  inline void clear_has_icontribute();
  inline void set_has_ilegionexp();
  inline void clear_has_ilegionexp();
  inline void set_has_ilegionuplevelexp();
  inline void clear_has_ilegionuplevelexp();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 icontribute_;
  ::google::protobuf::int32 ilegionexp_;
  ::google::protobuf::int32 ilegionuplevelexp_;
  ::google::protobuf::int32 ilevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_LELGION_CONTRIBUTE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_OTHERLEGION_CS : public ::google::protobuf::Message {
 public:
  CMD_QUERY_OTHERLEGION_CS();
  virtual ~CMD_QUERY_OTHERLEGION_CS();

  CMD_QUERY_OTHERLEGION_CS(const CMD_QUERY_OTHERLEGION_CS& from);

  inline CMD_QUERY_OTHERLEGION_CS& operator=(const CMD_QUERY_OTHERLEGION_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_OTHERLEGION_CS& default_instance();

  void Swap(CMD_QUERY_OTHERLEGION_CS* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_OTHERLEGION_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_OTHERLEGION_CS& from);
  void MergeFrom(const CMD_QUERY_OTHERLEGION_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwLegionObjectID = 1;
  inline bool has_dwlegionobjectid() const;
  inline void clear_dwlegionobjectid();
  static const int kDwLegionObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwlegionobjectid() const;
  inline void set_dwlegionobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_OTHERLEGION_CS)
 private:
  inline void set_has_dwlegionobjectid();
  inline void clear_has_dwlegionobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwlegionobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_OTHERLEGION_CS* default_instance_;
};
// -------------------------------------------------------------------

class OtherLegionInfo : public ::google::protobuf::Message {
 public:
  OtherLegionInfo();
  virtual ~OtherLegionInfo();

  OtherLegionInfo(const OtherLegionInfo& from);

  inline OtherLegionInfo& operator=(const OtherLegionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OtherLegionInfo& default_instance();

  void Swap(OtherLegionInfo* other);

  // implements Message ----------------------------------------------

  OtherLegionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OtherLegionInfo& from);
  void MergeFrom(const OtherLegionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwLegionObjectID = 1;
  inline bool has_dwlegionobjectid() const;
  inline void clear_dwlegionobjectid();
  static const int kDwLegionObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwlegionobjectid() const;
  inline void set_dwlegionobjectid(::google::protobuf::uint32 value);

  // required string strLegionName = 2;
  inline bool has_strlegionname() const;
  inline void clear_strlegionname();
  static const int kStrLegionNameFieldNumber = 2;
  inline const ::std::string& strlegionname() const;
  inline void set_strlegionname(const ::std::string& value);
  inline void set_strlegionname(const char* value);
  inline void set_strlegionname(const char* value, size_t size);
  inline ::std::string* mutable_strlegionname();
  inline ::std::string* release_strlegionname();
  inline void set_allocated_strlegionname(::std::string* strlegionname);

  // required int32 iLevel = 3;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 3;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // required string strLeaderName = 4;
  inline bool has_strleadername() const;
  inline void clear_strleadername();
  static const int kStrLeaderNameFieldNumber = 4;
  inline const ::std::string& strleadername() const;
  inline void set_strleadername(const ::std::string& value);
  inline void set_strleadername(const char* value);
  inline void set_strleadername(const char* value, size_t size);
  inline ::std::string* mutable_strleadername();
  inline ::std::string* release_strleadername();
  inline void set_allocated_strleadername(::std::string* strleadername);

  // required int32 iRank = 5;
  inline bool has_irank() const;
  inline void clear_irank();
  static const int kIRankFieldNumber = 5;
  inline ::google::protobuf::int32 irank() const;
  inline void set_irank(::google::protobuf::int32 value);

  // required int32 iMemCount = 6;
  inline bool has_imemcount() const;
  inline void clear_imemcount();
  static const int kIMemCountFieldNumber = 6;
  inline ::google::protobuf::int32 imemcount() const;
  inline void set_imemcount(::google::protobuf::int32 value);

  // required int32 iMemLimit = 7;
  inline bool has_imemlimit() const;
  inline void clear_imemlimit();
  static const int kIMemLimitFieldNumber = 7;
  inline ::google::protobuf::int32 imemlimit() const;
  inline void set_imemlimit(::google::protobuf::int32 value);

  // required string strAnnouce = 8;
  inline bool has_strannouce() const;
  inline void clear_strannouce();
  static const int kStrAnnouceFieldNumber = 8;
  inline const ::std::string& strannouce() const;
  inline void set_strannouce(const ::std::string& value);
  inline void set_strannouce(const char* value);
  inline void set_strannouce(const char* value, size_t size);
  inline ::std::string* mutable_strannouce();
  inline ::std::string* release_strannouce();
  inline void set_allocated_strannouce(::std::string* strannouce);

  // @@protoc_insertion_point(class_scope:GSProto.OtherLegionInfo)
 private:
  inline void set_has_dwlegionobjectid();
  inline void clear_has_dwlegionobjectid();
  inline void set_has_strlegionname();
  inline void clear_has_strlegionname();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_strleadername();
  inline void clear_has_strleadername();
  inline void set_has_irank();
  inline void clear_has_irank();
  inline void set_has_imemcount();
  inline void clear_has_imemcount();
  inline void set_has_imemlimit();
  inline void clear_has_imemlimit();
  inline void set_has_strannouce();
  inline void clear_has_strannouce();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strlegionname_;
  ::google::protobuf::uint32 dwlegionobjectid_;
  ::google::protobuf::int32 ilevel_;
  ::std::string* strleadername_;
  ::google::protobuf::int32 irank_;
  ::google::protobuf::int32 imemcount_;
  ::std::string* strannouce_;
  ::google::protobuf::int32 imemlimit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static OtherLegionInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_OTHERLEGION_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_OTHERLEGION_SC();
  virtual ~CMD_QUERY_OTHERLEGION_SC();

  CMD_QUERY_OTHERLEGION_SC(const CMD_QUERY_OTHERLEGION_SC& from);

  inline CMD_QUERY_OTHERLEGION_SC& operator=(const CMD_QUERY_OTHERLEGION_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_OTHERLEGION_SC& default_instance();

  void Swap(CMD_QUERY_OTHERLEGION_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_OTHERLEGION_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_OTHERLEGION_SC& from);
  void MergeFrom(const CMD_QUERY_OTHERLEGION_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.OtherLegionInfo otherLegionInfo = 1;
  inline bool has_otherlegioninfo() const;
  inline void clear_otherlegioninfo();
  static const int kOtherLegionInfoFieldNumber = 1;
  inline const ::GSProto::OtherLegionInfo& otherlegioninfo() const;
  inline ::GSProto::OtherLegionInfo* mutable_otherlegioninfo();
  inline ::GSProto::OtherLegionInfo* release_otherlegioninfo();
  inline void set_allocated_otherlegioninfo(::GSProto::OtherLegionInfo* otherlegioninfo);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_OTHERLEGION_SC)
 private:
  inline void set_has_otherlegioninfo();
  inline void clear_has_otherlegioninfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::OtherLegionInfo* otherlegioninfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_OTHERLEGION_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_LEGION_CONTRIBUTE_CS : public ::google::protobuf::Message {
 public:
  CMD_LEGION_CONTRIBUTE_CS();
  virtual ~CMD_LEGION_CONTRIBUTE_CS();

  CMD_LEGION_CONTRIBUTE_CS(const CMD_LEGION_CONTRIBUTE_CS& from);

  inline CMD_LEGION_CONTRIBUTE_CS& operator=(const CMD_LEGION_CONTRIBUTE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_LEGION_CONTRIBUTE_CS& default_instance();

  void Swap(CMD_LEGION_CONTRIBUTE_CS* other);

  // implements Message ----------------------------------------------

  CMD_LEGION_CONTRIBUTE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_LEGION_CONTRIBUTE_CS& from);
  void MergeFrom(const CMD_LEGION_CONTRIBUTE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iContributeType = 1;
  inline bool has_icontributetype() const;
  inline void clear_icontributetype();
  static const int kIContributeTypeFieldNumber = 1;
  inline ::google::protobuf::int32 icontributetype() const;
  inline void set_icontributetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_LEGION_CONTRIBUTE_CS)
 private:
  inline void set_has_icontributetype();
  inline void clear_has_icontributetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 icontributetype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_LEGION_CONTRIBUTE_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_LEGION_CONTRIBUTE_SC : public ::google::protobuf::Message {
 public:
  CMD_LEGION_CONTRIBUTE_SC();
  virtual ~CMD_LEGION_CONTRIBUTE_SC();

  CMD_LEGION_CONTRIBUTE_SC(const CMD_LEGION_CONTRIBUTE_SC& from);

  inline CMD_LEGION_CONTRIBUTE_SC& operator=(const CMD_LEGION_CONTRIBUTE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_LEGION_CONTRIBUTE_SC& default_instance();

  void Swap(CMD_LEGION_CONTRIBUTE_SC* other);

  // implements Message ----------------------------------------------

  CMD_LEGION_CONTRIBUTE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_LEGION_CONTRIBUTE_SC& from);
  void MergeFrom(const CMD_LEGION_CONTRIBUTE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iContribute = 1;
  inline bool has_icontribute() const;
  inline void clear_icontribute();
  static const int kIContributeFieldNumber = 1;
  inline ::google::protobuf::int32 icontribute() const;
  inline void set_icontribute(::google::protobuf::int32 value);

  // required int32 iLegionExp = 2;
  inline bool has_ilegionexp() const;
  inline void clear_ilegionexp();
  static const int kILegionExpFieldNumber = 2;
  inline ::google::protobuf::int32 ilegionexp() const;
  inline void set_ilegionexp(::google::protobuf::int32 value);

  // required int32 iLegionUpLevelExp = 3;
  inline bool has_ilegionuplevelexp() const;
  inline void clear_ilegionuplevelexp();
  static const int kILegionUpLevelExpFieldNumber = 3;
  inline ::google::protobuf::int32 ilegionuplevelexp() const;
  inline void set_ilegionuplevelexp(::google::protobuf::int32 value);

  // required int32 iLevel = 4;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 4;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // required int32 iGetContribute = 5;
  inline bool has_igetcontribute() const;
  inline void clear_igetcontribute();
  static const int kIGetContributeFieldNumber = 5;
  inline ::google::protobuf::int32 igetcontribute() const;
  inline void set_igetcontribute(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_LEGION_CONTRIBUTE_SC)
 private:
  inline void set_has_icontribute();
  inline void clear_has_icontribute();
  inline void set_has_ilegionexp();
  inline void clear_has_ilegionexp();
  inline void set_has_ilegionuplevelexp();
  inline void clear_has_ilegionuplevelexp();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_igetcontribute();
  inline void clear_has_igetcontribute();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 icontribute_;
  ::google::protobuf::int32 ilegionexp_;
  ::google::protobuf::int32 ilegionuplevelexp_;
  ::google::protobuf::int32 ilevel_;
  ::google::protobuf::int32 igetcontribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_LEGION_CONTRIBUTE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_LEGION_BLESS_CS : public ::google::protobuf::Message {
 public:
  CMD_LEGION_BLESS_CS();
  virtual ~CMD_LEGION_BLESS_CS();

  CMD_LEGION_BLESS_CS(const CMD_LEGION_BLESS_CS& from);

  inline CMD_LEGION_BLESS_CS& operator=(const CMD_LEGION_BLESS_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_LEGION_BLESS_CS& default_instance();

  void Swap(CMD_LEGION_BLESS_CS* other);

  // implements Message ----------------------------------------------

  CMD_LEGION_BLESS_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_LEGION_BLESS_CS& from);
  void MergeFrom(const CMD_LEGION_BLESS_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iBlessType = 1;
  inline bool has_iblesstype() const;
  inline void clear_iblesstype();
  static const int kIBlessTypeFieldNumber = 1;
  inline ::google::protobuf::int32 iblesstype() const;
  inline void set_iblesstype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_LEGION_BLESS_CS)
 private:
  inline void set_has_iblesstype();
  inline void clear_has_iblesstype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iblesstype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_LEGION_BLESS_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_LEGION_BLESS_SC : public ::google::protobuf::Message {
 public:
  CMD_LEGION_BLESS_SC();
  virtual ~CMD_LEGION_BLESS_SC();

  CMD_LEGION_BLESS_SC(const CMD_LEGION_BLESS_SC& from);

  inline CMD_LEGION_BLESS_SC& operator=(const CMD_LEGION_BLESS_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_LEGION_BLESS_SC& default_instance();

  void Swap(CMD_LEGION_BLESS_SC* other);

  // implements Message ----------------------------------------------

  CMD_LEGION_BLESS_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_LEGION_BLESS_SC& from);
  void MergeFrom(const CMD_LEGION_BLESS_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iContribute = 1;
  inline bool has_icontribute() const;
  inline void clear_icontribute();
  static const int kIContributeFieldNumber = 1;
  inline ::google::protobuf::int32 icontribute() const;
  inline void set_icontribute(::google::protobuf::int32 value);

  // required int32 iGetContribute = 2;
  inline bool has_igetcontribute() const;
  inline void clear_igetcontribute();
  static const int kIGetContributeFieldNumber = 2;
  inline ::google::protobuf::int32 igetcontribute() const;
  inline void set_igetcontribute(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_LEGION_BLESS_SC)
 private:
  inline void set_has_icontribute();
  inline void clear_has_icontribute();
  inline void set_has_igetcontribute();
  inline void clear_has_igetcontribute();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 icontribute_;
  ::google::protobuf::int32 igetcontribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_LEGION_BLESS_SC* default_instance_;
};
// -------------------------------------------------------------------

class LegionPay : public ::google::protobuf::Message {
 public:
  LegionPay();
  virtual ~LegionPay();

  LegionPay(const LegionPay& from);

  inline LegionPay& operator=(const LegionPay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionPay& default_instance();

  void Swap(LegionPay* other);

  // implements Message ----------------------------------------------

  LegionPay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionPay& from);
  void MergeFrom(const LegionPay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iPayType = 1;
  inline bool has_ipaytype() const;
  inline void clear_ipaytype();
  static const int kIPayTypeFieldNumber = 1;
  inline ::google::protobuf::int32 ipaytype() const;
  inline void set_ipaytype(::google::protobuf::int32 value);

  // required int32 iLegionLv = 2;
  inline bool has_ilegionlv() const;
  inline void clear_ilegionlv();
  static const int kILegionLvFieldNumber = 2;
  inline ::google::protobuf::int32 ilegionlv() const;
  inline void set_ilegionlv(::google::protobuf::int32 value);

  // required int32 iDomainCount = 3;
  inline bool has_idomaincount() const;
  inline void clear_idomaincount();
  static const int kIDomainCountFieldNumber = 3;
  inline ::google::protobuf::int32 idomaincount() const;
  inline void set_idomaincount(::google::protobuf::int32 value);

  // required int32 iBaseGold = 4;
  inline bool has_ibasegold() const;
  inline void clear_ibasegold();
  static const int kIBaseGoldFieldNumber = 4;
  inline ::google::protobuf::int32 ibasegold() const;
  inline void set_ibasegold(::google::protobuf::int32 value);

  // required int32 iBaseSilver = 5;
  inline bool has_ibasesilver() const;
  inline void clear_ibasesilver();
  static const int kIBaseSilverFieldNumber = 5;
  inline ::google::protobuf::int32 ibasesilver() const;
  inline void set_ibasesilver(::google::protobuf::int32 value);

  // required int32 iContributeRank = 6;
  inline bool has_icontributerank() const;
  inline void clear_icontributerank();
  static const int kIContributeRankFieldNumber = 6;
  inline ::google::protobuf::int32 icontributerank() const;
  inline void set_icontributerank(::google::protobuf::int32 value);

  // required int32 iTotalGold = 7;
  inline bool has_itotalgold() const;
  inline void clear_itotalgold();
  static const int kITotalGoldFieldNumber = 7;
  inline ::google::protobuf::int32 itotalgold() const;
  inline void set_itotalgold(::google::protobuf::int32 value);

  // required int32 iTotalSilver = 8;
  inline bool has_itotalsilver() const;
  inline void clear_itotalsilver();
  static const int kITotalSilverFieldNumber = 8;
  inline ::google::protobuf::int32 itotalsilver() const;
  inline void set_itotalsilver(::google::protobuf::int32 value);

  // required bool bGeted = 9;
  inline bool has_bgeted() const;
  inline void clear_bgeted();
  static const int kBGetedFieldNumber = 9;
  inline bool bgeted() const;
  inline void set_bgeted(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.LegionPay)
 private:
  inline void set_has_ipaytype();
  inline void clear_has_ipaytype();
  inline void set_has_ilegionlv();
  inline void clear_has_ilegionlv();
  inline void set_has_idomaincount();
  inline void clear_has_idomaincount();
  inline void set_has_ibasegold();
  inline void clear_has_ibasegold();
  inline void set_has_ibasesilver();
  inline void clear_has_ibasesilver();
  inline void set_has_icontributerank();
  inline void clear_has_icontributerank();
  inline void set_has_itotalgold();
  inline void clear_has_itotalgold();
  inline void set_has_itotalsilver();
  inline void clear_has_itotalsilver();
  inline void set_has_bgeted();
  inline void clear_has_bgeted();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ipaytype_;
  ::google::protobuf::int32 ilegionlv_;
  ::google::protobuf::int32 idomaincount_;
  ::google::protobuf::int32 ibasegold_;
  ::google::protobuf::int32 ibasesilver_;
  ::google::protobuf::int32 icontributerank_;
  ::google::protobuf::int32 itotalgold_;
  ::google::protobuf::int32 itotalsilver_;
  bool bgeted_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionPay* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_LEGIONPAY_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_LEGIONPAY_SC();
  virtual ~CMD_QUERY_LEGIONPAY_SC();

  CMD_QUERY_LEGIONPAY_SC(const CMD_QUERY_LEGIONPAY_SC& from);

  inline CMD_QUERY_LEGIONPAY_SC& operator=(const CMD_QUERY_LEGIONPAY_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_LEGIONPAY_SC& default_instance();

  void Swap(CMD_QUERY_LEGIONPAY_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_LEGIONPAY_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_LEGIONPAY_SC& from);
  void MergeFrom(const CMD_QUERY_LEGIONPAY_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.LegionPay szPayList = 1;
  inline int szpaylist_size() const;
  inline void clear_szpaylist();
  static const int kSzPayListFieldNumber = 1;
  inline const ::GSProto::LegionPay& szpaylist(int index) const;
  inline ::GSProto::LegionPay* mutable_szpaylist(int index);
  inline ::GSProto::LegionPay* add_szpaylist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionPay >&
      szpaylist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionPay >*
      mutable_szpaylist();

  // required int32 iActorContribute = 2;
  inline bool has_iactorcontribute() const;
  inline void clear_iactorcontribute();
  static const int kIActorContributeFieldNumber = 2;
  inline ::google::protobuf::int32 iactorcontribute() const;
  inline void set_iactorcontribute(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_LEGIONPAY_SC)
 private:
  inline void set_has_iactorcontribute();
  inline void clear_has_iactorcontribute();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::LegionPay > szpaylist_;
  ::google::protobuf::int32 iactorcontribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_LEGIONPAY_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GET_LEGIONPAY_CS : public ::google::protobuf::Message {
 public:
  CMD_GET_LEGIONPAY_CS();
  virtual ~CMD_GET_LEGIONPAY_CS();

  CMD_GET_LEGIONPAY_CS(const CMD_GET_LEGIONPAY_CS& from);

  inline CMD_GET_LEGIONPAY_CS& operator=(const CMD_GET_LEGIONPAY_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GET_LEGIONPAY_CS& default_instance();

  void Swap(CMD_GET_LEGIONPAY_CS* other);

  // implements Message ----------------------------------------------

  CMD_GET_LEGIONPAY_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GET_LEGIONPAY_CS& from);
  void MergeFrom(const CMD_GET_LEGIONPAY_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iPayType = 1;
  inline bool has_ipaytype() const;
  inline void clear_ipaytype();
  static const int kIPayTypeFieldNumber = 1;
  inline ::google::protobuf::int32 ipaytype() const;
  inline void set_ipaytype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GET_LEGIONPAY_CS)
 private:
  inline void set_has_ipaytype();
  inline void clear_has_ipaytype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ipaytype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GET_LEGIONPAY_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GET_LEGIONPAY_SC : public ::google::protobuf::Message {
 public:
  CMD_GET_LEGIONPAY_SC();
  virtual ~CMD_GET_LEGIONPAY_SC();

  CMD_GET_LEGIONPAY_SC(const CMD_GET_LEGIONPAY_SC& from);

  inline CMD_GET_LEGIONPAY_SC& operator=(const CMD_GET_LEGIONPAY_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GET_LEGIONPAY_SC& default_instance();

  void Swap(CMD_GET_LEGIONPAY_SC* other);

  // implements Message ----------------------------------------------

  CMD_GET_LEGIONPAY_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GET_LEGIONPAY_SC& from);
  void MergeFrom(const CMD_GET_LEGIONPAY_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iPayType = 1;
  inline bool has_ipaytype() const;
  inline void clear_ipaytype();
  static const int kIPayTypeFieldNumber = 1;
  inline ::google::protobuf::int32 ipaytype() const;
  inline void set_ipaytype(::google::protobuf::int32 value);

  // required bool bGeted = 2;
  inline bool has_bgeted() const;
  inline void clear_bgeted();
  static const int kBGetedFieldNumber = 2;
  inline bool bgeted() const;
  inline void set_bgeted(bool value);

  // required int32 iActorContribute = 3;
  inline bool has_iactorcontribute() const;
  inline void clear_iactorcontribute();
  static const int kIActorContributeFieldNumber = 3;
  inline ::google::protobuf::int32 iactorcontribute() const;
  inline void set_iactorcontribute(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GET_LEGIONPAY_SC)
 private:
  inline void set_has_ipaytype();
  inline void clear_has_ipaytype();
  inline void set_has_bgeted();
  inline void clear_has_bgeted();
  inline void set_has_iactorcontribute();
  inline void clear_has_iactorcontribute();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ipaytype_;
  bool bgeted_;
  ::google::protobuf::int32 iactorcontribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GET_LEGIONPAY_SC* default_instance_;
};
// -------------------------------------------------------------------

class GoodDetail : public ::google::protobuf::Message {
 public:
  GoodDetail();
  virtual ~GoodDetail();

  GoodDetail(const GoodDetail& from);

  inline GoodDetail& operator=(const GoodDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoodDetail& default_instance();

  void Swap(GoodDetail* other);

  // implements Message ----------------------------------------------

  GoodDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoodDetail& from);
  void MergeFrom(const GoodDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iGoodId = 1;
  inline bool has_igoodid() const;
  inline void clear_igoodid();
  static const int kIGoodIdFieldNumber = 1;
  inline ::google::protobuf::int32 igoodid() const;
  inline void set_igoodid(::google::protobuf::int32 value);

  // required bool bIsSale = 2;
  inline bool has_bissale() const;
  inline void clear_bissale();
  static const int kBIsSaleFieldNumber = 2;
  inline bool bissale() const;
  inline void set_bissale(bool value);

  // required int32 iIndex = 3;
  inline bool has_iindex() const;
  inline void clear_iindex();
  static const int kIIndexFieldNumber = 3;
  inline ::google::protobuf::int32 iindex() const;
  inline void set_iindex(::google::protobuf::int32 value);

  // required bool bCanBuy = 4;
  inline bool has_bcanbuy() const;
  inline void clear_bcanbuy();
  static const int kBCanBuyFieldNumber = 4;
  inline bool bcanbuy() const;
  inline void set_bcanbuy(bool value);

  // optional int32 iCanBuyLevel = 5;
  inline bool has_icanbuylevel() const;
  inline void clear_icanbuylevel();
  static const int kICanBuyLevelFieldNumber = 5;
  inline ::google::protobuf::int32 icanbuylevel() const;
  inline void set_icanbuylevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.GoodDetail)
 private:
  inline void set_has_igoodid();
  inline void clear_has_igoodid();
  inline void set_has_bissale();
  inline void clear_has_bissale();
  inline void set_has_iindex();
  inline void clear_has_iindex();
  inline void set_has_bcanbuy();
  inline void clear_has_bcanbuy();
  inline void set_has_icanbuylevel();
  inline void clear_has_icanbuylevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 igoodid_;
  ::google::protobuf::int32 iindex_;
  bool bissale_;
  bool bcanbuy_;
  ::google::protobuf::int32 icanbuylevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static GoodDetail* default_instance_;
};
// -------------------------------------------------------------------

class CMD_OPEN_LEGIONSHOP_SC : public ::google::protobuf::Message {
 public:
  CMD_OPEN_LEGIONSHOP_SC();
  virtual ~CMD_OPEN_LEGIONSHOP_SC();

  CMD_OPEN_LEGIONSHOP_SC(const CMD_OPEN_LEGIONSHOP_SC& from);

  inline CMD_OPEN_LEGIONSHOP_SC& operator=(const CMD_OPEN_LEGIONSHOP_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_OPEN_LEGIONSHOP_SC& default_instance();

  void Swap(CMD_OPEN_LEGIONSHOP_SC* other);

  // implements Message ----------------------------------------------

  CMD_OPEN_LEGIONSHOP_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_OPEN_LEGIONSHOP_SC& from);
  void MergeFrom(const CMD_OPEN_LEGIONSHOP_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.GoodDetail szGoodList = 1;
  inline int szgoodlist_size() const;
  inline void clear_szgoodlist();
  static const int kSzGoodListFieldNumber = 1;
  inline const ::GSProto::GoodDetail& szgoodlist(int index) const;
  inline ::GSProto::GoodDetail* mutable_szgoodlist(int index);
  inline ::GSProto::GoodDetail* add_szgoodlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::GoodDetail >&
      szgoodlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::GoodDetail >*
      mutable_szgoodlist();

  // required bool bIsToday = 2;
  inline bool has_bistoday() const;
  inline void clear_bistoday();
  static const int kBIsTodayFieldNumber = 2;
  inline bool bistoday() const;
  inline void set_bistoday(bool value);

  // required int32 iUpdateMoment = 3;
  inline bool has_iupdatemoment() const;
  inline void clear_iupdatemoment();
  static const int kIUpdateMomentFieldNumber = 3;
  inline ::google::protobuf::int32 iupdatemoment() const;
  inline void set_iupdatemoment(::google::protobuf::int32 value);

  // required int32 iContribute = 4;
  inline bool has_icontribute() const;
  inline void clear_icontribute();
  static const int kIContributeFieldNumber = 4;
  inline ::google::protobuf::int32 icontribute() const;
  inline void set_icontribute(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_OPEN_LEGIONSHOP_SC)
 private:
  inline void set_has_bistoday();
  inline void clear_has_bistoday();
  inline void set_has_iupdatemoment();
  inline void clear_has_iupdatemoment();
  inline void set_has_icontribute();
  inline void clear_has_icontribute();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::GoodDetail > szgoodlist_;
  bool bistoday_;
  ::google::protobuf::int32 iupdatemoment_;
  ::google::protobuf::int32 icontribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_OPEN_LEGIONSHOP_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_SELECT_LEGIONSHOP_CS : public ::google::protobuf::Message {
 public:
  CMD_SELECT_LEGIONSHOP_CS();
  virtual ~CMD_SELECT_LEGIONSHOP_CS();

  CMD_SELECT_LEGIONSHOP_CS(const CMD_SELECT_LEGIONSHOP_CS& from);

  inline CMD_SELECT_LEGIONSHOP_CS& operator=(const CMD_SELECT_LEGIONSHOP_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_SELECT_LEGIONSHOP_CS& default_instance();

  void Swap(CMD_SELECT_LEGIONSHOP_CS* other);

  // implements Message ----------------------------------------------

  CMD_SELECT_LEGIONSHOP_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_SELECT_LEGIONSHOP_CS& from);
  void MergeFrom(const CMD_SELECT_LEGIONSHOP_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iIndex = 1;
  inline bool has_iindex() const;
  inline void clear_iindex();
  static const int kIIndexFieldNumber = 1;
  inline ::google::protobuf::int32 iindex() const;
  inline void set_iindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_SELECT_LEGIONSHOP_CS)
 private:
  inline void set_has_iindex();
  inline void clear_has_iindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_SELECT_LEGIONSHOP_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_CHANNEL_CHAT_CS : public ::google::protobuf::Message {
 public:
  CMD_CHANNEL_CHAT_CS();
  virtual ~CMD_CHANNEL_CHAT_CS();

  CMD_CHANNEL_CHAT_CS(const CMD_CHANNEL_CHAT_CS& from);

  inline CMD_CHANNEL_CHAT_CS& operator=(const CMD_CHANNEL_CHAT_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_CHANNEL_CHAT_CS& default_instance();

  void Swap(CMD_CHANNEL_CHAT_CS* other);

  // implements Message ----------------------------------------------

  CMD_CHANNEL_CHAT_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_CHANNEL_CHAT_CS& from);
  void MergeFrom(const CMD_CHANNEL_CHAT_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iChancel = 1;
  inline bool has_ichancel() const;
  inline void clear_ichancel();
  static const int kIChancelFieldNumber = 1;
  inline ::google::protobuf::int32 ichancel() const;
  inline void set_ichancel(::google::protobuf::int32 value);

  // required string strMsg = 2;
  inline bool has_strmsg() const;
  inline void clear_strmsg();
  static const int kStrMsgFieldNumber = 2;
  inline const ::std::string& strmsg() const;
  inline void set_strmsg(const ::std::string& value);
  inline void set_strmsg(const char* value);
  inline void set_strmsg(const char* value, size_t size);
  inline ::std::string* mutable_strmsg();
  inline ::std::string* release_strmsg();
  inline void set_allocated_strmsg(::std::string* strmsg);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_CHANNEL_CHAT_CS)
 private:
  inline void set_has_ichancel();
  inline void clear_has_ichancel();
  inline void set_has_strmsg();
  inline void clear_has_strmsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strmsg_;
  ::google::protobuf::int32 ichancel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_CHANNEL_CHAT_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_CHANNEL_CHAT_SC : public ::google::protobuf::Message {
 public:
  CMD_CHANNEL_CHAT_SC();
  virtual ~CMD_CHANNEL_CHAT_SC();

  CMD_CHANNEL_CHAT_SC(const CMD_CHANNEL_CHAT_SC& from);

  inline CMD_CHANNEL_CHAT_SC& operator=(const CMD_CHANNEL_CHAT_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_CHANNEL_CHAT_SC& default_instance();

  void Swap(CMD_CHANNEL_CHAT_SC* other);

  // implements Message ----------------------------------------------

  CMD_CHANNEL_CHAT_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_CHANNEL_CHAT_SC& from);
  void MergeFrom(const CMD_CHANNEL_CHAT_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strSender = 1;
  inline bool has_strsender() const;
  inline void clear_strsender();
  static const int kStrSenderFieldNumber = 1;
  inline const ::std::string& strsender() const;
  inline void set_strsender(const ::std::string& value);
  inline void set_strsender(const char* value);
  inline void set_strsender(const char* value, size_t size);
  inline ::std::string* mutable_strsender();
  inline ::std::string* release_strsender();
  inline void set_allocated_strsender(::std::string* strsender);

  // required .GSProto.PBPkRole senderKey = 2;
  inline bool has_senderkey() const;
  inline void clear_senderkey();
  static const int kSenderKeyFieldNumber = 2;
  inline const ::GSProto::PBPkRole& senderkey() const;
  inline ::GSProto::PBPkRole* mutable_senderkey();
  inline ::GSProto::PBPkRole* release_senderkey();
  inline void set_allocated_senderkey(::GSProto::PBPkRole* senderkey);

  // required string strMsg = 3;
  inline bool has_strmsg() const;
  inline void clear_strmsg();
  static const int kStrMsgFieldNumber = 3;
  inline const ::std::string& strmsg() const;
  inline void set_strmsg(const ::std::string& value);
  inline void set_strmsg(const char* value);
  inline void set_strmsg(const char* value, size_t size);
  inline ::std::string* mutable_strmsg();
  inline ::std::string* release_strmsg();
  inline void set_allocated_strmsg(::std::string* strmsg);

  // required int32 iChannel = 4;
  inline bool has_ichannel() const;
  inline void clear_ichannel();
  static const int kIChannelFieldNumber = 4;
  inline ::google::protobuf::int32 ichannel() const;
  inline void set_ichannel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_CHANNEL_CHAT_SC)
 private:
  inline void set_has_strsender();
  inline void clear_has_strsender();
  inline void set_has_senderkey();
  inline void clear_has_senderkey();
  inline void set_has_strmsg();
  inline void clear_has_strmsg();
  inline void set_has_ichannel();
  inline void clear_has_ichannel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strsender_;
  ::GSProto::PBPkRole* senderkey_;
  ::std::string* strmsg_;
  ::google::protobuf::int32 ichannel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_CHANNEL_CHAT_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_WHISPER_CS : public ::google::protobuf::Message {
 public:
  CMD_WHISPER_CS();
  virtual ~CMD_WHISPER_CS();

  CMD_WHISPER_CS(const CMD_WHISPER_CS& from);

  inline CMD_WHISPER_CS& operator=(const CMD_WHISPER_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_WHISPER_CS& default_instance();

  void Swap(CMD_WHISPER_CS* other);

  // implements Message ----------------------------------------------

  CMD_WHISPER_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_WHISPER_CS& from);
  void MergeFrom(const CMD_WHISPER_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strRecver = 1;
  inline bool has_strrecver() const;
  inline void clear_strrecver();
  static const int kStrRecverFieldNumber = 1;
  inline const ::std::string& strrecver() const;
  inline void set_strrecver(const ::std::string& value);
  inline void set_strrecver(const char* value);
  inline void set_strrecver(const char* value, size_t size);
  inline ::std::string* mutable_strrecver();
  inline ::std::string* release_strrecver();
  inline void set_allocated_strrecver(::std::string* strrecver);

  // required string strMsg = 2;
  inline bool has_strmsg() const;
  inline void clear_strmsg();
  static const int kStrMsgFieldNumber = 2;
  inline const ::std::string& strmsg() const;
  inline void set_strmsg(const ::std::string& value);
  inline void set_strmsg(const char* value);
  inline void set_strmsg(const char* value, size_t size);
  inline ::std::string* mutable_strmsg();
  inline ::std::string* release_strmsg();
  inline void set_allocated_strmsg(::std::string* strmsg);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_WHISPER_CS)
 private:
  inline void set_has_strrecver();
  inline void clear_has_strrecver();
  inline void set_has_strmsg();
  inline void clear_has_strmsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strrecver_;
  ::std::string* strmsg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_WHISPER_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_WHISPER_SC : public ::google::protobuf::Message {
 public:
  CMD_WHISPER_SC();
  virtual ~CMD_WHISPER_SC();

  CMD_WHISPER_SC(const CMD_WHISPER_SC& from);

  inline CMD_WHISPER_SC& operator=(const CMD_WHISPER_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_WHISPER_SC& default_instance();

  void Swap(CMD_WHISPER_SC* other);

  // implements Message ----------------------------------------------

  CMD_WHISPER_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_WHISPER_SC& from);
  void MergeFrom(const CMD_WHISPER_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strSender = 1;
  inline bool has_strsender() const;
  inline void clear_strsender();
  static const int kStrSenderFieldNumber = 1;
  inline const ::std::string& strsender() const;
  inline void set_strsender(const ::std::string& value);
  inline void set_strsender(const char* value);
  inline void set_strsender(const char* value, size_t size);
  inline ::std::string* mutable_strsender();
  inline ::std::string* release_strsender();
  inline void set_allocated_strsender(::std::string* strsender);

  // required .GSProto.PBPkRole senderKey = 2;
  inline bool has_senderkey() const;
  inline void clear_senderkey();
  static const int kSenderKeyFieldNumber = 2;
  inline const ::GSProto::PBPkRole& senderkey() const;
  inline ::GSProto::PBPkRole* mutable_senderkey();
  inline ::GSProto::PBPkRole* release_senderkey();
  inline void set_allocated_senderkey(::GSProto::PBPkRole* senderkey);

  // required string strRecver = 3;
  inline bool has_strrecver() const;
  inline void clear_strrecver();
  static const int kStrRecverFieldNumber = 3;
  inline const ::std::string& strrecver() const;
  inline void set_strrecver(const ::std::string& value);
  inline void set_strrecver(const char* value);
  inline void set_strrecver(const char* value, size_t size);
  inline ::std::string* mutable_strrecver();
  inline ::std::string* release_strrecver();
  inline void set_allocated_strrecver(::std::string* strrecver);

  // required .GSProto.PBPkRole recverKey = 4;
  inline bool has_recverkey() const;
  inline void clear_recverkey();
  static const int kRecverKeyFieldNumber = 4;
  inline const ::GSProto::PBPkRole& recverkey() const;
  inline ::GSProto::PBPkRole* mutable_recverkey();
  inline ::GSProto::PBPkRole* release_recverkey();
  inline void set_allocated_recverkey(::GSProto::PBPkRole* recverkey);

  // required string strMsg = 5;
  inline bool has_strmsg() const;
  inline void clear_strmsg();
  static const int kStrMsgFieldNumber = 5;
  inline const ::std::string& strmsg() const;
  inline void set_strmsg(const ::std::string& value);
  inline void set_strmsg(const char* value);
  inline void set_strmsg(const char* value, size_t size);
  inline ::std::string* mutable_strmsg();
  inline ::std::string* release_strmsg();
  inline void set_allocated_strmsg(::std::string* strmsg);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_WHISPER_SC)
 private:
  inline void set_has_strsender();
  inline void clear_has_strsender();
  inline void set_has_senderkey();
  inline void clear_has_senderkey();
  inline void set_has_strrecver();
  inline void clear_has_strrecver();
  inline void set_has_recverkey();
  inline void clear_has_recverkey();
  inline void set_has_strmsg();
  inline void clear_has_strmsg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strsender_;
  ::GSProto::PBPkRole* senderkey_;
  ::std::string* strrecver_;
  ::GSProto::PBPkRole* recverkey_;
  ::std::string* strmsg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_WHISPER_SC* default_instance_;
};
// -------------------------------------------------------------------

class LegionBossRankItem : public ::google::protobuf::Message {
 public:
  LegionBossRankItem();
  virtual ~LegionBossRankItem();

  LegionBossRankItem(const LegionBossRankItem& from);

  inline LegionBossRankItem& operator=(const LegionBossRankItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionBossRankItem& default_instance();

  void Swap(LegionBossRankItem* other);

  // implements Message ----------------------------------------------

  LegionBossRankItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionBossRankItem& from);
  void MergeFrom(const LegionBossRankItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strName = 1;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 1;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // required int32 iDamageValue = 2;
  inline bool has_idamagevalue() const;
  inline void clear_idamagevalue();
  static const int kIDamageValueFieldNumber = 2;
  inline ::google::protobuf::int32 idamagevalue() const;
  inline void set_idamagevalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.LegionBossRankItem)
 private:
  inline void set_has_strname();
  inline void clear_has_strname();
  inline void set_has_idamagevalue();
  inline void clear_has_idamagevalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strname_;
  ::google::protobuf::int32 idamagevalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionBossRankItem* default_instance_;
};
// -------------------------------------------------------------------

class LegionBossPreCall : public ::google::protobuf::Message {
 public:
  LegionBossPreCall();
  virtual ~LegionBossPreCall();

  LegionBossPreCall(const LegionBossPreCall& from);

  inline LegionBossPreCall& operator=(const LegionBossPreCall& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionBossPreCall& default_instance();

  void Swap(LegionBossPreCall* other);

  // implements Message ----------------------------------------------

  LegionBossPreCall* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionBossPreCall& from);
  void MergeFrom(const LegionBossPreCall& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCallCDSecond = 1;
  inline bool has_icallcdsecond() const;
  inline void clear_icallcdsecond();
  static const int kICallCDSecondFieldNumber = 1;
  inline ::google::protobuf::int32 icallcdsecond() const;
  inline void set_icallcdsecond(::google::protobuf::int32 value);

  // required int32 iBossMaxHP = 2;
  inline bool has_ibossmaxhp() const;
  inline void clear_ibossmaxhp();
  static const int kIBossMaxHPFieldNumber = 2;
  inline ::google::protobuf::int32 ibossmaxhp() const;
  inline void set_ibossmaxhp(::google::protobuf::int32 value);

  // required int32 iBossHP = 3;
  inline bool has_ibosshp() const;
  inline void clear_ibosshp();
  static const int kIBossHPFieldNumber = 3;
  inline ::google::protobuf::int32 ibosshp() const;
  inline void set_ibosshp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.LegionBossPreCall)
 private:
  inline void set_has_icallcdsecond();
  inline void clear_has_icallcdsecond();
  inline void set_has_ibossmaxhp();
  inline void clear_has_ibossmaxhp();
  inline void set_has_ibosshp();
  inline void clear_has_ibosshp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 icallcdsecond_;
  ::google::protobuf::int32 ibossmaxhp_;
  ::google::protobuf::int32 ibosshp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionBossPreCall* default_instance_;
};
// -------------------------------------------------------------------

class LegionBossFightInfo : public ::google::protobuf::Message {
 public:
  LegionBossFightInfo();
  virtual ~LegionBossFightInfo();

  LegionBossFightInfo(const LegionBossFightInfo& from);

  inline LegionBossFightInfo& operator=(const LegionBossFightInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionBossFightInfo& default_instance();

  void Swap(LegionBossFightInfo* other);

  // implements Message ----------------------------------------------

  LegionBossFightInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionBossFightInfo& from);
  void MergeFrom(const LegionBossFightInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iLeftKillSecond = 1;
  inline bool has_ileftkillsecond() const;
  inline void clear_ileftkillsecond();
  static const int kILeftKillSecondFieldNumber = 1;
  inline ::google::protobuf::int32 ileftkillsecond() const;
  inline void set_ileftkillsecond(::google::protobuf::int32 value);

  // repeated .GSProto.LegionBossRankItem szRankList = 2;
  inline int szranklist_size() const;
  inline void clear_szranklist();
  static const int kSzRankListFieldNumber = 2;
  inline const ::GSProto::LegionBossRankItem& szranklist(int index) const;
  inline ::GSProto::LegionBossRankItem* mutable_szranklist(int index);
  inline ::GSProto::LegionBossRankItem* add_szranklist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBossRankItem >&
      szranklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBossRankItem >*
      mutable_szranklist();

  // required int32 iCheeredCount = 3;
  inline bool has_icheeredcount() const;
  inline void clear_icheeredcount();
  static const int kICheeredCountFieldNumber = 3;
  inline ::google::protobuf::int32 icheeredcount() const;
  inline void set_icheeredcount(::google::protobuf::int32 value);

  // required int32 iSelfDamage = 4;
  inline bool has_iselfdamage() const;
  inline void clear_iselfdamage();
  static const int kISelfDamageFieldNumber = 4;
  inline ::google::protobuf::int32 iselfdamage() const;
  inline void set_iselfdamage(::google::protobuf::int32 value);

  // required int32 iSumSilver = 5;
  inline bool has_isumsilver() const;
  inline void clear_isumsilver();
  static const int kISumSilverFieldNumber = 5;
  inline ::google::protobuf::int32 isumsilver() const;
  inline void set_isumsilver(::google::protobuf::int32 value);

  // required int32 iSumHonor = 6;
  inline bool has_isumhonor() const;
  inline void clear_isumhonor();
  static const int kISumHonorFieldNumber = 6;
  inline ::google::protobuf::int32 isumhonor() const;
  inline void set_isumhonor(::google::protobuf::int32 value);

  // optional int32 iReliveCD = 7;
  inline bool has_irelivecd() const;
  inline void clear_irelivecd();
  static const int kIReliveCDFieldNumber = 7;
  inline ::google::protobuf::int32 irelivecd() const;
  inline void set_irelivecd(::google::protobuf::int32 value);

  // required int32 iBossMaxHP = 8;
  inline bool has_ibossmaxhp() const;
  inline void clear_ibossmaxhp();
  static const int kIBossMaxHPFieldNumber = 8;
  inline ::google::protobuf::int32 ibossmaxhp() const;
  inline void set_ibossmaxhp(::google::protobuf::int32 value);

  // required int32 iBossHP = 9;
  inline bool has_ibosshp() const;
  inline void clear_ibosshp();
  static const int kIBossHPFieldNumber = 9;
  inline ::google::protobuf::int32 ibosshp() const;
  inline void set_ibosshp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.LegionBossFightInfo)
 private:
  inline void set_has_ileftkillsecond();
  inline void clear_has_ileftkillsecond();
  inline void set_has_icheeredcount();
  inline void clear_has_icheeredcount();
  inline void set_has_iselfdamage();
  inline void clear_has_iselfdamage();
  inline void set_has_isumsilver();
  inline void clear_has_isumsilver();
  inline void set_has_isumhonor();
  inline void clear_has_isumhonor();
  inline void set_has_irelivecd();
  inline void clear_has_irelivecd();
  inline void set_has_ibossmaxhp();
  inline void clear_has_ibossmaxhp();
  inline void set_has_ibosshp();
  inline void clear_has_ibosshp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBossRankItem > szranklist_;
  ::google::protobuf::int32 ileftkillsecond_;
  ::google::protobuf::int32 icheeredcount_;
  ::google::protobuf::int32 iselfdamage_;
  ::google::protobuf::int32 isumsilver_;
  ::google::protobuf::int32 isumhonor_;
  ::google::protobuf::int32 irelivecd_;
  ::google::protobuf::int32 ibossmaxhp_;
  ::google::protobuf::int32 ibosshp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionBossFightInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_LEGIONBOSS_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_LEGIONBOSS_SC();
  virtual ~CMD_QUERY_LEGIONBOSS_SC();

  CMD_QUERY_LEGIONBOSS_SC(const CMD_QUERY_LEGIONBOSS_SC& from);

  inline CMD_QUERY_LEGIONBOSS_SC& operator=(const CMD_QUERY_LEGIONBOSS_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_LEGIONBOSS_SC& default_instance();

  void Swap(CMD_QUERY_LEGIONBOSS_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_LEGIONBOSS_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_LEGIONBOSS_SC& from);
  void MergeFrom(const CMD_QUERY_LEGIONBOSS_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bCalled = 1;
  inline bool has_bcalled() const;
  inline void clear_bcalled();
  static const int kBCalledFieldNumber = 1;
  inline bool bcalled() const;
  inline void set_bcalled(bool value);

  // optional .GSProto.LegionBossPreCall preCallInfo = 2;
  inline bool has_precallinfo() const;
  inline void clear_precallinfo();
  static const int kPreCallInfoFieldNumber = 2;
  inline const ::GSProto::LegionBossPreCall& precallinfo() const;
  inline ::GSProto::LegionBossPreCall* mutable_precallinfo();
  inline ::GSProto::LegionBossPreCall* release_precallinfo();
  inline void set_allocated_precallinfo(::GSProto::LegionBossPreCall* precallinfo);

  // optional .GSProto.LegionBossFightInfo fightInfo = 3;
  inline bool has_fightinfo() const;
  inline void clear_fightinfo();
  static const int kFightInfoFieldNumber = 3;
  inline const ::GSProto::LegionBossFightInfo& fightinfo() const;
  inline ::GSProto::LegionBossFightInfo* mutable_fightinfo();
  inline ::GSProto::LegionBossFightInfo* release_fightinfo();
  inline void set_allocated_fightinfo(::GSProto::LegionBossFightInfo* fightinfo);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_LEGIONBOSS_SC)
 private:
  inline void set_has_bcalled();
  inline void clear_has_bcalled();
  inline void set_has_precallinfo();
  inline void clear_has_precallinfo();
  inline void set_has_fightinfo();
  inline void clear_has_fightinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::LegionBossPreCall* precallinfo_;
  ::GSProto::LegionBossFightInfo* fightinfo_;
  bool bcalled_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_LEGIONBOSS_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_LEGIONBOSS_END_SC : public ::google::protobuf::Message {
 public:
  CMD_LEGIONBOSS_END_SC();
  virtual ~CMD_LEGIONBOSS_END_SC();

  CMD_LEGIONBOSS_END_SC(const CMD_LEGIONBOSS_END_SC& from);

  inline CMD_LEGIONBOSS_END_SC& operator=(const CMD_LEGIONBOSS_END_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_LEGIONBOSS_END_SC& default_instance();

  void Swap(CMD_LEGIONBOSS_END_SC* other);

  // implements Message ----------------------------------------------

  CMD_LEGIONBOSS_END_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_LEGIONBOSS_END_SC& from);
  void MergeFrom(const CMD_LEGIONBOSS_END_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bKill = 1;
  inline bool has_bkill() const;
  inline void clear_bkill();
  static const int kBKillFieldNumber = 1;
  inline bool bkill() const;
  inline void set_bkill(bool value);

  // required int32 iRank = 2;
  inline bool has_irank() const;
  inline void clear_irank();
  static const int kIRankFieldNumber = 2;
  inline ::google::protobuf::int32 irank() const;
  inline void set_irank(::google::protobuf::int32 value);

  // required int32 iDamage = 3;
  inline bool has_idamage() const;
  inline void clear_idamage();
  static const int kIDamageFieldNumber = 3;
  inline ::google::protobuf::int32 idamage() const;
  inline void set_idamage(::google::protobuf::int32 value);

  // required int32 iAwardSilver = 4;
  inline bool has_iawardsilver() const;
  inline void clear_iawardsilver();
  static const int kIAwardSilverFieldNumber = 4;
  inline ::google::protobuf::int32 iawardsilver() const;
  inline void set_iawardsilver(::google::protobuf::int32 value);

  // required int32 iAwardHonor = 5;
  inline bool has_iawardhonor() const;
  inline void clear_iawardhonor();
  static const int kIAwardHonorFieldNumber = 5;
  inline ::google::protobuf::int32 iawardhonor() const;
  inline void set_iawardhonor(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_LEGIONBOSS_END_SC)
 private:
  inline void set_has_bkill();
  inline void clear_has_bkill();
  inline void set_has_irank();
  inline void clear_has_irank();
  inline void set_has_idamage();
  inline void clear_has_idamage();
  inline void set_has_iawardsilver();
  inline void clear_has_iawardsilver();
  inline void set_has_iawardhonor();
  inline void clear_has_iawardhonor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool bkill_;
  ::google::protobuf::int32 irank_;
  ::google::protobuf::int32 idamage_;
  ::google::protobuf::int32 iawardsilver_;
  ::google::protobuf::int32 iawardhonor_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_LEGIONBOSS_END_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_CALL_LEGIONBOSS_SC : public ::google::protobuf::Message {
 public:
  CMD_CALL_LEGIONBOSS_SC();
  virtual ~CMD_CALL_LEGIONBOSS_SC();

  CMD_CALL_LEGIONBOSS_SC(const CMD_CALL_LEGIONBOSS_SC& from);

  inline CMD_CALL_LEGIONBOSS_SC& operator=(const CMD_CALL_LEGIONBOSS_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_CALL_LEGIONBOSS_SC& default_instance();

  void Swap(CMD_CALL_LEGIONBOSS_SC* other);

  // implements Message ----------------------------------------------

  CMD_CALL_LEGIONBOSS_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_CALL_LEGIONBOSS_SC& from);
  void MergeFrom(const CMD_CALL_LEGIONBOSS_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.LegionBossFightInfo fightInfo = 3;
  inline bool has_fightinfo() const;
  inline void clear_fightinfo();
  static const int kFightInfoFieldNumber = 3;
  inline const ::GSProto::LegionBossFightInfo& fightinfo() const;
  inline ::GSProto::LegionBossFightInfo* mutable_fightinfo();
  inline ::GSProto::LegionBossFightInfo* release_fightinfo();
  inline void set_allocated_fightinfo(::GSProto::LegionBossFightInfo* fightinfo);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_CALL_LEGIONBOSS_SC)
 private:
  inline void set_has_fightinfo();
  inline void clear_has_fightinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::LegionBossFightInfo* fightinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_CALL_LEGIONBOSS_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_CHEER_LEGIONBOSS_SC : public ::google::protobuf::Message {
 public:
  CMD_CHEER_LEGIONBOSS_SC();
  virtual ~CMD_CHEER_LEGIONBOSS_SC();

  CMD_CHEER_LEGIONBOSS_SC(const CMD_CHEER_LEGIONBOSS_SC& from);

  inline CMD_CHEER_LEGIONBOSS_SC& operator=(const CMD_CHEER_LEGIONBOSS_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_CHEER_LEGIONBOSS_SC& default_instance();

  void Swap(CMD_CHEER_LEGIONBOSS_SC* other);

  // implements Message ----------------------------------------------

  CMD_CHEER_LEGIONBOSS_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_CHEER_LEGIONBOSS_SC& from);
  void MergeFrom(const CMD_CHEER_LEGIONBOSS_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCheerCount = 1;
  inline bool has_icheercount() const;
  inline void clear_icheercount();
  static const int kICheerCountFieldNumber = 1;
  inline ::google::protobuf::int32 icheercount() const;
  inline void set_icheercount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_CHEER_LEGIONBOSS_SC)
 private:
  inline void set_has_icheercount();
  inline void clear_has_icheercount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 icheercount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_CHEER_LEGIONBOSS_SC* default_instance_;
};
// -------------------------------------------------------------------

class LegionBossUpdate : public ::google::protobuf::Message {
 public:
  LegionBossUpdate();
  virtual ~LegionBossUpdate();

  LegionBossUpdate(const LegionBossUpdate& from);

  inline LegionBossUpdate& operator=(const LegionBossUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionBossUpdate& default_instance();

  void Swap(LegionBossUpdate* other);

  // implements Message ----------------------------------------------

  LegionBossUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionBossUpdate& from);
  void MergeFrom(const LegionBossUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.LegionBossRankItem szRankList = 1;
  inline int szranklist_size() const;
  inline void clear_szranklist();
  static const int kSzRankListFieldNumber = 1;
  inline const ::GSProto::LegionBossRankItem& szranklist(int index) const;
  inline ::GSProto::LegionBossRankItem* mutable_szranklist(int index);
  inline ::GSProto::LegionBossRankItem* add_szranklist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBossRankItem >&
      szranklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBossRankItem >*
      mutable_szranklist();

  // required int32 iBossMaxHP = 2;
  inline bool has_ibossmaxhp() const;
  inline void clear_ibossmaxhp();
  static const int kIBossMaxHPFieldNumber = 2;
  inline ::google::protobuf::int32 ibossmaxhp() const;
  inline void set_ibossmaxhp(::google::protobuf::int32 value);

  // required int32 iBossHP = 3;
  inline bool has_ibosshp() const;
  inline void clear_ibosshp();
  static const int kIBossHPFieldNumber = 3;
  inline ::google::protobuf::int32 ibosshp() const;
  inline void set_ibosshp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.LegionBossUpdate)
 private:
  inline void set_has_ibossmaxhp();
  inline void clear_has_ibossmaxhp();
  inline void set_has_ibosshp();
  inline void clear_has_ibosshp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBossRankItem > szranklist_;
  ::google::protobuf::int32 ibossmaxhp_;
  ::google::protobuf::int32 ibosshp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionBossUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CMD_UPDATE_LEGIONBOSS_SC : public ::google::protobuf::Message {
 public:
  CMD_UPDATE_LEGIONBOSS_SC();
  virtual ~CMD_UPDATE_LEGIONBOSS_SC();

  CMD_UPDATE_LEGIONBOSS_SC(const CMD_UPDATE_LEGIONBOSS_SC& from);

  inline CMD_UPDATE_LEGIONBOSS_SC& operator=(const CMD_UPDATE_LEGIONBOSS_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_UPDATE_LEGIONBOSS_SC& default_instance();

  void Swap(CMD_UPDATE_LEGIONBOSS_SC* other);

  // implements Message ----------------------------------------------

  CMD_UPDATE_LEGIONBOSS_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_UPDATE_LEGIONBOSS_SC& from);
  void MergeFrom(const CMD_UPDATE_LEGIONBOSS_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.LegionBossUpdate updateInfo = 1;
  inline bool has_updateinfo() const;
  inline void clear_updateinfo();
  static const int kUpdateInfoFieldNumber = 1;
  inline const ::GSProto::LegionBossUpdate& updateinfo() const;
  inline ::GSProto::LegionBossUpdate* mutable_updateinfo();
  inline ::GSProto::LegionBossUpdate* release_updateinfo();
  inline void set_allocated_updateinfo(::GSProto::LegionBossUpdate* updateinfo);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_UPDATE_LEGIONBOSS_SC)
 private:
  inline void set_has_updateinfo();
  inline void clear_has_updateinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::LegionBossUpdate* updateinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_UPDATE_LEGIONBOSS_SC* default_instance_;
};
// -------------------------------------------------------------------

class WorldBossRankItem : public ::google::protobuf::Message {
 public:
  WorldBossRankItem();
  virtual ~WorldBossRankItem();

  WorldBossRankItem(const WorldBossRankItem& from);

  inline WorldBossRankItem& operator=(const WorldBossRankItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBossRankItem& default_instance();

  void Swap(WorldBossRankItem* other);

  // implements Message ----------------------------------------------

  WorldBossRankItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldBossRankItem& from);
  void MergeFrom(const WorldBossRankItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strName = 1;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 1;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // required int32 iDamageValue = 2;
  inline bool has_idamagevalue() const;
  inline void clear_idamagevalue();
  static const int kIDamageValueFieldNumber = 2;
  inline ::google::protobuf::int32 idamagevalue() const;
  inline void set_idamagevalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.WorldBossRankItem)
 private:
  inline void set_has_strname();
  inline void clear_has_strname();
  inline void set_has_idamagevalue();
  inline void clear_has_idamagevalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strname_;
  ::google::protobuf::int32 idamagevalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static WorldBossRankItem* default_instance_;
};
// -------------------------------------------------------------------

class WorldBossPreStart : public ::google::protobuf::Message {
 public:
  WorldBossPreStart();
  virtual ~WorldBossPreStart();

  WorldBossPreStart(const WorldBossPreStart& from);

  inline WorldBossPreStart& operator=(const WorldBossPreStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBossPreStart& default_instance();

  void Swap(WorldBossPreStart* other);

  // implements Message ----------------------------------------------

  WorldBossPreStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldBossPreStart& from);
  void MergeFrom(const WorldBossPreStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iWaitSecond = 1;
  inline bool has_iwaitsecond() const;
  inline void clear_iwaitsecond();
  static const int kIWaitSecondFieldNumber = 1;
  inline ::google::protobuf::int32 iwaitsecond() const;
  inline void set_iwaitsecond(::google::protobuf::int32 value);

  // required int32 iBossMaxHP = 2;
  inline bool has_ibossmaxhp() const;
  inline void clear_ibossmaxhp();
  static const int kIBossMaxHPFieldNumber = 2;
  inline ::google::protobuf::int32 ibossmaxhp() const;
  inline void set_ibossmaxhp(::google::protobuf::int32 value);

  // required int32 iBossHP = 3;
  inline bool has_ibosshp() const;
  inline void clear_ibosshp();
  static const int kIBossHPFieldNumber = 3;
  inline ::google::protobuf::int32 ibosshp() const;
  inline void set_ibosshp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.WorldBossPreStart)
 private:
  inline void set_has_iwaitsecond();
  inline void clear_has_iwaitsecond();
  inline void set_has_ibossmaxhp();
  inline void clear_has_ibossmaxhp();
  inline void set_has_ibosshp();
  inline void clear_has_ibosshp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iwaitsecond_;
  ::google::protobuf::int32 ibossmaxhp_;
  ::google::protobuf::int32 ibosshp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static WorldBossPreStart* default_instance_;
};
// -------------------------------------------------------------------

class WorldBossFightInfo : public ::google::protobuf::Message {
 public:
  WorldBossFightInfo();
  virtual ~WorldBossFightInfo();

  WorldBossFightInfo(const WorldBossFightInfo& from);

  inline WorldBossFightInfo& operator=(const WorldBossFightInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBossFightInfo& default_instance();

  void Swap(WorldBossFightInfo* other);

  // implements Message ----------------------------------------------

  WorldBossFightInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldBossFightInfo& from);
  void MergeFrom(const WorldBossFightInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iLeftKillSecond = 1;
  inline bool has_ileftkillsecond() const;
  inline void clear_ileftkillsecond();
  static const int kILeftKillSecondFieldNumber = 1;
  inline ::google::protobuf::int32 ileftkillsecond() const;
  inline void set_ileftkillsecond(::google::protobuf::int32 value);

  // repeated .GSProto.WorldBossRankItem szRankList = 2;
  inline int szranklist_size() const;
  inline void clear_szranklist();
  static const int kSzRankListFieldNumber = 2;
  inline const ::GSProto::WorldBossRankItem& szranklist(int index) const;
  inline ::GSProto::WorldBossRankItem* mutable_szranklist(int index);
  inline ::GSProto::WorldBossRankItem* add_szranklist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::WorldBossRankItem >&
      szranklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::WorldBossRankItem >*
      mutable_szranklist();

  // required int32 iCheeredCount = 3;
  inline bool has_icheeredcount() const;
  inline void clear_icheeredcount();
  static const int kICheeredCountFieldNumber = 3;
  inline ::google::protobuf::int32 icheeredcount() const;
  inline void set_icheeredcount(::google::protobuf::int32 value);

  // required int32 iSelfDamage = 4;
  inline bool has_iselfdamage() const;
  inline void clear_iselfdamage();
  static const int kISelfDamageFieldNumber = 4;
  inline ::google::protobuf::int32 iselfdamage() const;
  inline void set_iselfdamage(::google::protobuf::int32 value);

  // required int32 iSumSilver = 5;
  inline bool has_isumsilver() const;
  inline void clear_isumsilver();
  static const int kISumSilverFieldNumber = 5;
  inline ::google::protobuf::int32 isumsilver() const;
  inline void set_isumsilver(::google::protobuf::int32 value);

  // required int32 iSumHonor = 6;
  inline bool has_isumhonor() const;
  inline void clear_isumhonor();
  static const int kISumHonorFieldNumber = 6;
  inline ::google::protobuf::int32 isumhonor() const;
  inline void set_isumhonor(::google::protobuf::int32 value);

  // optional int32 iReliveCD = 7;
  inline bool has_irelivecd() const;
  inline void clear_irelivecd();
  static const int kIReliveCDFieldNumber = 7;
  inline ::google::protobuf::int32 irelivecd() const;
  inline void set_irelivecd(::google::protobuf::int32 value);

  // required int32 iBossMaxHP = 8;
  inline bool has_ibossmaxhp() const;
  inline void clear_ibossmaxhp();
  static const int kIBossMaxHPFieldNumber = 8;
  inline ::google::protobuf::int32 ibossmaxhp() const;
  inline void set_ibossmaxhp(::google::protobuf::int32 value);

  // required int32 iBossHP = 9;
  inline bool has_ibosshp() const;
  inline void clear_ibosshp();
  static const int kIBossHPFieldNumber = 9;
  inline ::google::protobuf::int32 ibosshp() const;
  inline void set_ibosshp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.WorldBossFightInfo)
 private:
  inline void set_has_ileftkillsecond();
  inline void clear_has_ileftkillsecond();
  inline void set_has_icheeredcount();
  inline void clear_has_icheeredcount();
  inline void set_has_iselfdamage();
  inline void clear_has_iselfdamage();
  inline void set_has_isumsilver();
  inline void clear_has_isumsilver();
  inline void set_has_isumhonor();
  inline void clear_has_isumhonor();
  inline void set_has_irelivecd();
  inline void clear_has_irelivecd();
  inline void set_has_ibossmaxhp();
  inline void clear_has_ibossmaxhp();
  inline void set_has_ibosshp();
  inline void clear_has_ibosshp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::WorldBossRankItem > szranklist_;
  ::google::protobuf::int32 ileftkillsecond_;
  ::google::protobuf::int32 icheeredcount_;
  ::google::protobuf::int32 iselfdamage_;
  ::google::protobuf::int32 isumsilver_;
  ::google::protobuf::int32 isumhonor_;
  ::google::protobuf::int32 irelivecd_;
  ::google::protobuf::int32 ibossmaxhp_;
  ::google::protobuf::int32 ibosshp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static WorldBossFightInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_WORLDBOSS_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_WORLDBOSS_SC();
  virtual ~CMD_QUERY_WORLDBOSS_SC();

  CMD_QUERY_WORLDBOSS_SC(const CMD_QUERY_WORLDBOSS_SC& from);

  inline CMD_QUERY_WORLDBOSS_SC& operator=(const CMD_QUERY_WORLDBOSS_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_WORLDBOSS_SC& default_instance();

  void Swap(CMD_QUERY_WORLDBOSS_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_WORLDBOSS_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_WORLDBOSS_SC& from);
  void MergeFrom(const CMD_QUERY_WORLDBOSS_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bStarted = 1;
  inline bool has_bstarted() const;
  inline void clear_bstarted();
  static const int kBStartedFieldNumber = 1;
  inline bool bstarted() const;
  inline void set_bstarted(bool value);

  // optional .GSProto.WorldBossPreStart preStartInfo = 2;
  inline bool has_prestartinfo() const;
  inline void clear_prestartinfo();
  static const int kPreStartInfoFieldNumber = 2;
  inline const ::GSProto::WorldBossPreStart& prestartinfo() const;
  inline ::GSProto::WorldBossPreStart* mutable_prestartinfo();
  inline ::GSProto::WorldBossPreStart* release_prestartinfo();
  inline void set_allocated_prestartinfo(::GSProto::WorldBossPreStart* prestartinfo);

  // optional .GSProto.WorldBossFightInfo fightInfo = 3;
  inline bool has_fightinfo() const;
  inline void clear_fightinfo();
  static const int kFightInfoFieldNumber = 3;
  inline const ::GSProto::WorldBossFightInfo& fightinfo() const;
  inline ::GSProto::WorldBossFightInfo* mutable_fightinfo();
  inline ::GSProto::WorldBossFightInfo* release_fightinfo();
  inline void set_allocated_fightinfo(::GSProto::WorldBossFightInfo* fightinfo);

  // optional int32 iShowMonsterID = 4;
  inline bool has_ishowmonsterid() const;
  inline void clear_ishowmonsterid();
  static const int kIShowMonsterIDFieldNumber = 4;
  inline ::google::protobuf::int32 ishowmonsterid() const;
  inline void set_ishowmonsterid(::google::protobuf::int32 value);

  // optional int32 iBossLevel = 5;
  inline bool has_ibosslevel() const;
  inline void clear_ibosslevel();
  static const int kIBossLevelFieldNumber = 5;
  inline ::google::protobuf::int32 ibosslevel() const;
  inline void set_ibosslevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_WORLDBOSS_SC)
 private:
  inline void set_has_bstarted();
  inline void clear_has_bstarted();
  inline void set_has_prestartinfo();
  inline void clear_has_prestartinfo();
  inline void set_has_fightinfo();
  inline void clear_has_fightinfo();
  inline void set_has_ishowmonsterid();
  inline void clear_has_ishowmonsterid();
  inline void set_has_ibosslevel();
  inline void clear_has_ibosslevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::WorldBossPreStart* prestartinfo_;
  bool bstarted_;
  ::google::protobuf::int32 ishowmonsterid_;
  ::GSProto::WorldBossFightInfo* fightinfo_;
  ::google::protobuf::int32 ibosslevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_WORLDBOSS_SC* default_instance_;
};
// -------------------------------------------------------------------

class WorldBossUpdate : public ::google::protobuf::Message {
 public:
  WorldBossUpdate();
  virtual ~WorldBossUpdate();

  WorldBossUpdate(const WorldBossUpdate& from);

  inline WorldBossUpdate& operator=(const WorldBossUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldBossUpdate& default_instance();

  void Swap(WorldBossUpdate* other);

  // implements Message ----------------------------------------------

  WorldBossUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldBossUpdate& from);
  void MergeFrom(const WorldBossUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.WorldBossRankItem szRankList = 1;
  inline int szranklist_size() const;
  inline void clear_szranklist();
  static const int kSzRankListFieldNumber = 1;
  inline const ::GSProto::WorldBossRankItem& szranklist(int index) const;
  inline ::GSProto::WorldBossRankItem* mutable_szranklist(int index);
  inline ::GSProto::WorldBossRankItem* add_szranklist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::WorldBossRankItem >&
      szranklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::WorldBossRankItem >*
      mutable_szranklist();

  // required int32 iBossMaxHP = 2;
  inline bool has_ibossmaxhp() const;
  inline void clear_ibossmaxhp();
  static const int kIBossMaxHPFieldNumber = 2;
  inline ::google::protobuf::int32 ibossmaxhp() const;
  inline void set_ibossmaxhp(::google::protobuf::int32 value);

  // required int32 iBossHP = 3;
  inline bool has_ibosshp() const;
  inline void clear_ibosshp();
  static const int kIBossHPFieldNumber = 3;
  inline ::google::protobuf::int32 ibosshp() const;
  inline void set_ibosshp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.WorldBossUpdate)
 private:
  inline void set_has_ibossmaxhp();
  inline void clear_has_ibossmaxhp();
  inline void set_has_ibosshp();
  inline void clear_has_ibosshp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::WorldBossRankItem > szranklist_;
  ::google::protobuf::int32 ibossmaxhp_;
  ::google::protobuf::int32 ibosshp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static WorldBossUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CMD_UPDATE_WORLDBOSS_SC : public ::google::protobuf::Message {
 public:
  CMD_UPDATE_WORLDBOSS_SC();
  virtual ~CMD_UPDATE_WORLDBOSS_SC();

  CMD_UPDATE_WORLDBOSS_SC(const CMD_UPDATE_WORLDBOSS_SC& from);

  inline CMD_UPDATE_WORLDBOSS_SC& operator=(const CMD_UPDATE_WORLDBOSS_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_UPDATE_WORLDBOSS_SC& default_instance();

  void Swap(CMD_UPDATE_WORLDBOSS_SC* other);

  // implements Message ----------------------------------------------

  CMD_UPDATE_WORLDBOSS_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_UPDATE_WORLDBOSS_SC& from);
  void MergeFrom(const CMD_UPDATE_WORLDBOSS_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.WorldBossUpdate updateInfo = 1;
  inline bool has_updateinfo() const;
  inline void clear_updateinfo();
  static const int kUpdateInfoFieldNumber = 1;
  inline const ::GSProto::WorldBossUpdate& updateinfo() const;
  inline ::GSProto::WorldBossUpdate* mutable_updateinfo();
  inline ::GSProto::WorldBossUpdate* release_updateinfo();
  inline void set_allocated_updateinfo(::GSProto::WorldBossUpdate* updateinfo);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_UPDATE_WORLDBOSS_SC)
 private:
  inline void set_has_updateinfo();
  inline void clear_has_updateinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::WorldBossUpdate* updateinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_UPDATE_WORLDBOSS_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_WORLDBOSS_END_SC : public ::google::protobuf::Message {
 public:
  CMD_WORLDBOSS_END_SC();
  virtual ~CMD_WORLDBOSS_END_SC();

  CMD_WORLDBOSS_END_SC(const CMD_WORLDBOSS_END_SC& from);

  inline CMD_WORLDBOSS_END_SC& operator=(const CMD_WORLDBOSS_END_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_WORLDBOSS_END_SC& default_instance();

  void Swap(CMD_WORLDBOSS_END_SC* other);

  // implements Message ----------------------------------------------

  CMD_WORLDBOSS_END_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_WORLDBOSS_END_SC& from);
  void MergeFrom(const CMD_WORLDBOSS_END_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bKill = 1;
  inline bool has_bkill() const;
  inline void clear_bkill();
  static const int kBKillFieldNumber = 1;
  inline bool bkill() const;
  inline void set_bkill(bool value);

  // required int32 iRank = 2;
  inline bool has_irank() const;
  inline void clear_irank();
  static const int kIRankFieldNumber = 2;
  inline ::google::protobuf::int32 irank() const;
  inline void set_irank(::google::protobuf::int32 value);

  // required int32 iDamage = 3;
  inline bool has_idamage() const;
  inline void clear_idamage();
  static const int kIDamageFieldNumber = 3;
  inline ::google::protobuf::int32 idamage() const;
  inline void set_idamage(::google::protobuf::int32 value);

  // required int32 iAwardSilver = 4;
  inline bool has_iawardsilver() const;
  inline void clear_iawardsilver();
  static const int kIAwardSilverFieldNumber = 4;
  inline ::google::protobuf::int32 iawardsilver() const;
  inline void set_iawardsilver(::google::protobuf::int32 value);

  // required int32 iAwardHonor = 5;
  inline bool has_iawardhonor() const;
  inline void clear_iawardhonor();
  static const int kIAwardHonorFieldNumber = 5;
  inline ::google::protobuf::int32 iawardhonor() const;
  inline void set_iawardhonor(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_WORLDBOSS_END_SC)
 private:
  inline void set_has_bkill();
  inline void clear_has_bkill();
  inline void set_has_irank();
  inline void clear_has_irank();
  inline void set_has_idamage();
  inline void clear_has_idamage();
  inline void set_has_iawardsilver();
  inline void clear_has_iawardsilver();
  inline void set_has_iawardhonor();
  inline void clear_has_iawardhonor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool bkill_;
  ::google::protobuf::int32 irank_;
  ::google::protobuf::int32 idamage_;
  ::google::protobuf::int32 iawardsilver_;
  ::google::protobuf::int32 iawardhonor_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_WORLDBOSS_END_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_CHEER_WORLDBOSS_SC : public ::google::protobuf::Message {
 public:
  CMD_CHEER_WORLDBOSS_SC();
  virtual ~CMD_CHEER_WORLDBOSS_SC();

  CMD_CHEER_WORLDBOSS_SC(const CMD_CHEER_WORLDBOSS_SC& from);

  inline CMD_CHEER_WORLDBOSS_SC& operator=(const CMD_CHEER_WORLDBOSS_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_CHEER_WORLDBOSS_SC& default_instance();

  void Swap(CMD_CHEER_WORLDBOSS_SC* other);

  // implements Message ----------------------------------------------

  CMD_CHEER_WORLDBOSS_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_CHEER_WORLDBOSS_SC& from);
  void MergeFrom(const CMD_CHEER_WORLDBOSS_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCheerCount = 1;
  inline bool has_icheercount() const;
  inline void clear_icheercount();
  static const int kICheerCountFieldNumber = 1;
  inline ::google::protobuf::int32 icheercount() const;
  inline void set_icheercount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_CHEER_WORLDBOSS_SC)
 private:
  inline void set_has_icheercount();
  inline void clear_has_icheercount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 icheercount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_CHEER_WORLDBOSS_SC* default_instance_;
};
// -------------------------------------------------------------------

class ClimbTowerDatail : public ::google::protobuf::Message {
 public:
  ClimbTowerDatail();
  virtual ~ClimbTowerDatail();

  ClimbTowerDatail(const ClimbTowerDatail& from);

  inline ClimbTowerDatail& operator=(const ClimbTowerDatail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClimbTowerDatail& default_instance();

  void Swap(ClimbTowerDatail* other);

  // implements Message ----------------------------------------------

  ClimbTowerDatail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClimbTowerDatail& from);
  void MergeFrom(const ClimbTowerDatail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iTotalLayers = 1;
  inline bool has_itotallayers() const;
  inline void clear_itotallayers();
  static const int kITotalLayersFieldNumber = 1;
  inline ::google::protobuf::int32 itotallayers() const;
  inline void set_itotallayers(::google::protobuf::int32 value);

  // required int32 iCurrentLayer = 2;
  inline bool has_icurrentlayer() const;
  inline void clear_icurrentlayer();
  static const int kICurrentLayerFieldNumber = 2;
  inline ::google::protobuf::int32 icurrentlayer() const;
  inline void set_icurrentlayer(::google::protobuf::int32 value);

  // required int32 iClimbResetCount = 3;
  inline bool has_iclimbresetcount() const;
  inline void clear_iclimbresetcount();
  static const int kIClimbResetCountFieldNumber = 3;
  inline ::google::protobuf::int32 iclimbresetcount() const;
  inline void set_iclimbresetcount(::google::protobuf::int32 value);

  // required int32 iHightestLayer = 4;
  inline bool has_ihightestlayer() const;
  inline void clear_ihightestlayer();
  static const int kIHightestLayerFieldNumber = 4;
  inline ::google::protobuf::int32 ihightestlayer() const;
  inline void set_ihightestlayer(::google::protobuf::int32 value);

  // required int32 iTotalCultivation = 5;
  inline bool has_itotalcultivation() const;
  inline void clear_itotalcultivation();
  static const int kITotalCultivationFieldNumber = 5;
  inline ::google::protobuf::int32 itotalcultivation() const;
  inline void set_itotalcultivation(::google::protobuf::int32 value);

  // required int32 iNextLayerCultivation = 6;
  inline bool has_inextlayercultivation() const;
  inline void clear_inextlayercultivation();
  static const int kINextLayerCultivationFieldNumber = 6;
  inline ::google::protobuf::int32 inextlayercultivation() const;
  inline void set_inextlayercultivation(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.ClimbTowerDatail)
 private:
  inline void set_has_itotallayers();
  inline void clear_has_itotallayers();
  inline void set_has_icurrentlayer();
  inline void clear_has_icurrentlayer();
  inline void set_has_iclimbresetcount();
  inline void clear_has_iclimbresetcount();
  inline void set_has_ihightestlayer();
  inline void clear_has_ihightestlayer();
  inline void set_has_itotalcultivation();
  inline void clear_has_itotalcultivation();
  inline void set_has_inextlayercultivation();
  inline void clear_has_inextlayercultivation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itotallayers_;
  ::google::protobuf::int32 icurrentlayer_;
  ::google::protobuf::int32 iclimbresetcount_;
  ::google::protobuf::int32 ihightestlayer_;
  ::google::protobuf::int32 itotalcultivation_;
  ::google::protobuf::int32 inextlayercultivation_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static ClimbTowerDatail* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_CLIMBTOWERDETAIL_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_CLIMBTOWERDETAIL_SC();
  virtual ~CMD_QUERY_CLIMBTOWERDETAIL_SC();

  CMD_QUERY_CLIMBTOWERDETAIL_SC(const CMD_QUERY_CLIMBTOWERDETAIL_SC& from);

  inline CMD_QUERY_CLIMBTOWERDETAIL_SC& operator=(const CMD_QUERY_CLIMBTOWERDETAIL_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_CLIMBTOWERDETAIL_SC& default_instance();

  void Swap(CMD_QUERY_CLIMBTOWERDETAIL_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_CLIMBTOWERDETAIL_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_CLIMBTOWERDETAIL_SC& from);
  void MergeFrom(const CMD_QUERY_CLIMBTOWERDETAIL_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.ClimbTowerDatail detail = 1;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 1;
  inline const ::GSProto::ClimbTowerDatail& detail() const;
  inline ::GSProto::ClimbTowerDatail* mutable_detail();
  inline ::GSProto::ClimbTowerDatail* release_detail();
  inline void set_allocated_detail(::GSProto::ClimbTowerDatail* detail);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_CLIMBTOWERDETAIL_SC)
 private:
  inline void set_has_detail();
  inline void clear_has_detail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::ClimbTowerDatail* detail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_CLIMBTOWERDETAIL_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_CHALLENGE_TOWER_CS : public ::google::protobuf::Message {
 public:
  CMD_CHALLENGE_TOWER_CS();
  virtual ~CMD_CHALLENGE_TOWER_CS();

  CMD_CHALLENGE_TOWER_CS(const CMD_CHALLENGE_TOWER_CS& from);

  inline CMD_CHALLENGE_TOWER_CS& operator=(const CMD_CHALLENGE_TOWER_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_CHALLENGE_TOWER_CS& default_instance();

  void Swap(CMD_CHALLENGE_TOWER_CS* other);

  // implements Message ----------------------------------------------

  CMD_CHALLENGE_TOWER_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_CHALLENGE_TOWER_CS& from);
  void MergeFrom(const CMD_CHALLENGE_TOWER_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iTowerLayerId = 1;
  inline bool has_itowerlayerid() const;
  inline void clear_itowerlayerid();
  static const int kITowerLayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 itowerlayerid() const;
  inline void set_itowerlayerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_CHALLENGE_TOWER_CS)
 private:
  inline void set_has_itowerlayerid();
  inline void clear_has_itowerlayerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itowerlayerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_CHALLENGE_TOWER_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_FAST_CHALLENGE_TOWER_CS : public ::google::protobuf::Message {
 public:
  CMD_FAST_CHALLENGE_TOWER_CS();
  virtual ~CMD_FAST_CHALLENGE_TOWER_CS();

  CMD_FAST_CHALLENGE_TOWER_CS(const CMD_FAST_CHALLENGE_TOWER_CS& from);

  inline CMD_FAST_CHALLENGE_TOWER_CS& operator=(const CMD_FAST_CHALLENGE_TOWER_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_FAST_CHALLENGE_TOWER_CS& default_instance();

  void Swap(CMD_FAST_CHALLENGE_TOWER_CS* other);

  // implements Message ----------------------------------------------

  CMD_FAST_CHALLENGE_TOWER_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_FAST_CHALLENGE_TOWER_CS& from);
  void MergeFrom(const CMD_FAST_CHALLENGE_TOWER_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iTowerLayerId = 1;
  inline bool has_itowerlayerid() const;
  inline void clear_itowerlayerid();
  static const int kITowerLayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 itowerlayerid() const;
  inline void set_itowerlayerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_FAST_CHALLENGE_TOWER_CS)
 private:
  inline void set_has_itowerlayerid();
  inline void clear_has_itowerlayerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itowerlayerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_FAST_CHALLENGE_TOWER_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_TOWER_FAST_CHALLENGE_RESOULT_SC : public ::google::protobuf::Message {
 public:
  CMD_TOWER_FAST_CHALLENGE_RESOULT_SC();
  virtual ~CMD_TOWER_FAST_CHALLENGE_RESOULT_SC();

  CMD_TOWER_FAST_CHALLENGE_RESOULT_SC(const CMD_TOWER_FAST_CHALLENGE_RESOULT_SC& from);

  inline CMD_TOWER_FAST_CHALLENGE_RESOULT_SC& operator=(const CMD_TOWER_FAST_CHALLENGE_RESOULT_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_TOWER_FAST_CHALLENGE_RESOULT_SC& default_instance();

  void Swap(CMD_TOWER_FAST_CHALLENGE_RESOULT_SC* other);

  // implements Message ----------------------------------------------

  CMD_TOWER_FAST_CHALLENGE_RESOULT_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_TOWER_FAST_CHALLENGE_RESOULT_SC& from);
  void MergeFrom(const CMD_TOWER_FAST_CHALLENGE_RESOULT_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bIsWin = 1;
  inline bool has_biswin() const;
  inline void clear_biswin();
  static const int kBIsWinFieldNumber = 1;
  inline bool biswin() const;
  inline void set_biswin(bool value);

  // required int32 iChallengeLayerId = 2;
  inline bool has_ichallengelayerid() const;
  inline void clear_ichallengelayerid();
  static const int kIChallengeLayerIdFieldNumber = 2;
  inline ::google::protobuf::int32 ichallengelayerid() const;
  inline void set_ichallengelayerid(::google::protobuf::int32 value);

  // optional .GSProto.FightAwardResult awrdRes = 3;
  inline bool has_awrdres() const;
  inline void clear_awrdres();
  static const int kAwrdResFieldNumber = 3;
  inline const ::GSProto::FightAwardResult& awrdres() const;
  inline ::GSProto::FightAwardResult* mutable_awrdres();
  inline ::GSProto::FightAwardResult* release_awrdres();
  inline void set_allocated_awrdres(::GSProto::FightAwardResult* awrdres);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_TOWER_FAST_CHALLENGE_RESOULT_SC)
 private:
  inline void set_has_biswin();
  inline void clear_has_biswin();
  inline void set_has_ichallengelayerid();
  inline void clear_has_ichallengelayerid();
  inline void set_has_awrdres();
  inline void clear_has_awrdres();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool biswin_;
  ::google::protobuf::int32 ichallengelayerid_;
  ::GSProto::FightAwardResult* awrdres_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_TOWER_FAST_CHALLENGE_RESOULT_SC* default_instance_;
};
// -------------------------------------------------------------------

class LegionBattleCityBase : public ::google::protobuf::Message {
 public:
  LegionBattleCityBase();
  virtual ~LegionBattleCityBase();

  LegionBattleCityBase(const LegionBattleCityBase& from);

  inline LegionBattleCityBase& operator=(const LegionBattleCityBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionBattleCityBase& default_instance();

  void Swap(LegionBattleCityBase* other);

  // implements Message ----------------------------------------------

  LegionBattleCityBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionBattleCityBase& from);
  void MergeFrom(const LegionBattleCityBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCityID = 1;
  inline bool has_icityid() const;
  inline void clear_icityid();
  static const int kICityIDFieldNumber = 1;
  inline ::google::protobuf::int32 icityid() const;
  inline void set_icityid(::google::protobuf::int32 value);

  // required string strOwnerLegion = 2;
  inline bool has_strownerlegion() const;
  inline void clear_strownerlegion();
  static const int kStrOwnerLegionFieldNumber = 2;
  inline const ::std::string& strownerlegion() const;
  inline void set_strownerlegion(const ::std::string& value);
  inline void set_strownerlegion(const char* value);
  inline void set_strownerlegion(const char* value, size_t size);
  inline ::std::string* mutable_strownerlegion();
  inline ::std::string* release_strownerlegion();
  inline void set_allocated_strownerlegion(::std::string* strownerlegion);

  // required string strLeader = 3;
  inline bool has_strleader() const;
  inline void clear_strleader();
  static const int kStrLeaderFieldNumber = 3;
  inline const ::std::string& strleader() const;
  inline void set_strleader(const ::std::string& value);
  inline void set_strleader(const char* value);
  inline void set_strleader(const char* value, size_t size);
  inline ::std::string* mutable_strleader();
  inline ::std::string* release_strleader();
  inline void set_allocated_strleader(::std::string* strleader);

  // required int32 iGetSilverDay = 4;
  inline bool has_igetsilverday() const;
  inline void clear_igetsilverday();
  static const int kIGetSilverDayFieldNumber = 4;
  inline ::google::protobuf::int32 igetsilverday() const;
  inline void set_igetsilverday(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.LegionBattleCityBase)
 private:
  inline void set_has_icityid();
  inline void clear_has_icityid();
  inline void set_has_strownerlegion();
  inline void clear_has_strownerlegion();
  inline void set_has_strleader();
  inline void clear_has_strleader();
  inline void set_has_igetsilverday();
  inline void clear_has_igetsilverday();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strownerlegion_;
  ::google::protobuf::int32 icityid_;
  ::google::protobuf::int32 igetsilverday_;
  ::std::string* strleader_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionBattleCityBase* default_instance_;
};
// -------------------------------------------------------------------

class BattleLegionReportItem : public ::google::protobuf::Message {
 public:
  BattleLegionReportItem();
  virtual ~BattleLegionReportItem();

  BattleLegionReportItem(const BattleLegionReportItem& from);

  inline BattleLegionReportItem& operator=(const BattleLegionReportItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleLegionReportItem& default_instance();

  void Swap(BattleLegionReportItem* other);

  // implements Message ----------------------------------------------

  BattleLegionReportItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleLegionReportItem& from);
  void MergeFrom(const BattleLegionReportItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strLegionName = 1;
  inline bool has_strlegionname() const;
  inline void clear_strlegionname();
  static const int kStrLegionNameFieldNumber = 1;
  inline const ::std::string& strlegionname() const;
  inline void set_strlegionname(const ::std::string& value);
  inline void set_strlegionname(const char* value);
  inline void set_strlegionname(const char* value, size_t size);
  inline ::std::string* mutable_strlegionname();
  inline ::std::string* release_strlegionname();
  inline void set_allocated_strlegionname(::std::string* strlegionname);

  // required int32 iJoinMemCount = 2;
  inline bool has_ijoinmemcount() const;
  inline void clear_ijoinmemcount();
  static const int kIJoinMemCountFieldNumber = 2;
  inline ::google::protobuf::int32 ijoinmemcount() const;
  inline void set_ijoinmemcount(::google::protobuf::int32 value);

  // required int32 iLegionLevel = 3;
  inline bool has_ilegionlevel() const;
  inline void clear_ilegionlevel();
  static const int kILegionLevelFieldNumber = 3;
  inline ::google::protobuf::int32 ilegionlevel() const;
  inline void set_ilegionlevel(::google::protobuf::int32 value);

  // optional int32 iOwnCityCount = 4;
  inline bool has_iowncitycount() const;
  inline void clear_iowncitycount();
  static const int kIOwnCityCountFieldNumber = 4;
  inline ::google::protobuf::int32 iowncitycount() const;
  inline void set_iowncitycount(::google::protobuf::int32 value);

  // optional int32 iAttAddPercent = 5;
  inline bool has_iattaddpercent() const;
  inline void clear_iattaddpercent();
  static const int kIAttAddPercentFieldNumber = 5;
  inline ::google::protobuf::int32 iattaddpercent() const;
  inline void set_iattaddpercent(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.BattleLegionReportItem)
 private:
  inline void set_has_strlegionname();
  inline void clear_has_strlegionname();
  inline void set_has_ijoinmemcount();
  inline void clear_has_ijoinmemcount();
  inline void set_has_ilegionlevel();
  inline void clear_has_ilegionlevel();
  inline void set_has_iowncitycount();
  inline void clear_has_iowncitycount();
  inline void set_has_iattaddpercent();
  inline void clear_has_iattaddpercent();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strlegionname_;
  ::google::protobuf::int32 ijoinmemcount_;
  ::google::protobuf::int32 ilegionlevel_;
  ::google::protobuf::int32 iowncitycount_;
  ::google::protobuf::int32 iattaddpercent_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static BattleLegionReportItem* default_instance_;
};
// -------------------------------------------------------------------

class BattleReportLegionInfo : public ::google::protobuf::Message {
 public:
  BattleReportLegionInfo();
  virtual ~BattleReportLegionInfo();

  BattleReportLegionInfo(const BattleReportLegionInfo& from);

  inline BattleReportLegionInfo& operator=(const BattleReportLegionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleReportLegionInfo& default_instance();

  void Swap(BattleReportLegionInfo* other);

  // implements Message ----------------------------------------------

  BattleReportLegionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleReportLegionInfo& from);
  void MergeFrom(const BattleReportLegionInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.BattleLegionReportItem szLegionList = 1;
  inline int szlegionlist_size() const;
  inline void clear_szlegionlist();
  static const int kSzLegionListFieldNumber = 1;
  inline const ::GSProto::BattleLegionReportItem& szlegionlist(int index) const;
  inline ::GSProto::BattleLegionReportItem* mutable_szlegionlist(int index);
  inline ::GSProto::BattleLegionReportItem* add_szlegionlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::BattleLegionReportItem >&
      szlegionlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::BattleLegionReportItem >*
      mutable_szlegionlist();

  // @@protoc_insertion_point(class_scope:GSProto.BattleReportLegionInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::BattleLegionReportItem > szlegionlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static BattleReportLegionInfo* default_instance_;
};
// -------------------------------------------------------------------

class LegionBattleReported : public ::google::protobuf::Message {
 public:
  LegionBattleReported();
  virtual ~LegionBattleReported();

  LegionBattleReported(const LegionBattleReported& from);

  inline LegionBattleReported& operator=(const LegionBattleReported& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionBattleReported& default_instance();

  void Swap(LegionBattleReported* other);

  // implements Message ----------------------------------------------

  LegionBattleReported* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionBattleReported& from);
  void MergeFrom(const LegionBattleReported& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.LegionBattleCityBase baseCityInfo = 1;
  inline bool has_basecityinfo() const;
  inline void clear_basecityinfo();
  static const int kBaseCityInfoFieldNumber = 1;
  inline const ::GSProto::LegionBattleCityBase& basecityinfo() const;
  inline ::GSProto::LegionBattleCityBase* mutable_basecityinfo();
  inline ::GSProto::LegionBattleCityBase* release_basecityinfo();
  inline void set_allocated_basecityinfo(::GSProto::LegionBattleCityBase* basecityinfo);

  // required .GSProto.BattleReportLegionInfo reportedLegionInfo = 2;
  inline bool has_reportedlegioninfo() const;
  inline void clear_reportedlegioninfo();
  static const int kReportedLegionInfoFieldNumber = 2;
  inline const ::GSProto::BattleReportLegionInfo& reportedlegioninfo() const;
  inline ::GSProto::BattleReportLegionInfo* mutable_reportedlegioninfo();
  inline ::GSProto::BattleReportLegionInfo* release_reportedlegioninfo();
  inline void set_allocated_reportedlegioninfo(::GSProto::BattleReportLegionInfo* reportedlegioninfo);

  // required int32 iLeftSecond = 3;
  inline bool has_ileftsecond() const;
  inline void clear_ileftsecond();
  static const int kILeftSecondFieldNumber = 3;
  inline ::google::protobuf::int32 ileftsecond() const;
  inline void set_ileftsecond(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.LegionBattleReported)
 private:
  inline void set_has_basecityinfo();
  inline void clear_has_basecityinfo();
  inline void set_has_reportedlegioninfo();
  inline void clear_has_reportedlegioninfo();
  inline void set_has_ileftsecond();
  inline void clear_has_ileftsecond();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::LegionBattleCityBase* basecityinfo_;
  ::GSProto::BattleReportLegionInfo* reportedlegioninfo_;
  ::google::protobuf::int32 ileftsecond_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionBattleReported* default_instance_;
};
// -------------------------------------------------------------------

class LegionBattleRecordItem : public ::google::protobuf::Message {
 public:
  LegionBattleRecordItem();
  virtual ~LegionBattleRecordItem();

  LegionBattleRecordItem(const LegionBattleRecordItem& from);

  inline LegionBattleRecordItem& operator=(const LegionBattleRecordItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionBattleRecordItem& default_instance();

  void Swap(LegionBattleRecordItem* other);

  // implements Message ----------------------------------------------

  LegionBattleRecordItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionBattleRecordItem& from);
  void MergeFrom(const LegionBattleRecordItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strWinLegionName = 1;
  inline bool has_strwinlegionname() const;
  inline void clear_strwinlegionname();
  static const int kStrWinLegionNameFieldNumber = 1;
  inline const ::std::string& strwinlegionname() const;
  inline void set_strwinlegionname(const ::std::string& value);
  inline void set_strwinlegionname(const char* value);
  inline void set_strwinlegionname(const char* value, size_t size);
  inline ::std::string* mutable_strwinlegionname();
  inline ::std::string* release_strwinlegionname();
  inline void set_allocated_strwinlegionname(::std::string* strwinlegionname);

  // required string strWinActorName = 2;
  inline bool has_strwinactorname() const;
  inline void clear_strwinactorname();
  static const int kStrWinActorNameFieldNumber = 2;
  inline const ::std::string& strwinactorname() const;
  inline void set_strwinactorname(const ::std::string& value);
  inline void set_strwinactorname(const char* value);
  inline void set_strwinactorname(const char* value, size_t size);
  inline ::std::string* mutable_strwinactorname();
  inline ::std::string* release_strwinactorname();
  inline void set_allocated_strwinactorname(::std::string* strwinactorname);

  // required string strFailLegionName = 3;
  inline bool has_strfaillegionname() const;
  inline void clear_strfaillegionname();
  static const int kStrFailLegionNameFieldNumber = 3;
  inline const ::std::string& strfaillegionname() const;
  inline void set_strfaillegionname(const ::std::string& value);
  inline void set_strfaillegionname(const char* value);
  inline void set_strfaillegionname(const char* value, size_t size);
  inline ::std::string* mutable_strfaillegionname();
  inline ::std::string* release_strfaillegionname();
  inline void set_allocated_strfaillegionname(::std::string* strfaillegionname);

  // required string strFailActorName = 4;
  inline bool has_strfailactorname() const;
  inline void clear_strfailactorname();
  static const int kStrFailActorNameFieldNumber = 4;
  inline const ::std::string& strfailactorname() const;
  inline void set_strfailactorname(const ::std::string& value);
  inline void set_strfailactorname(const char* value);
  inline void set_strfailactorname(const char* value, size_t size);
  inline ::std::string* mutable_strfailactorname();
  inline ::std::string* release_strfailactorname();
  inline void set_allocated_strfailactorname(::std::string* strfailactorname);

  // @@protoc_insertion_point(class_scope:GSProto.LegionBattleRecordItem)
 private:
  inline void set_has_strwinlegionname();
  inline void clear_has_strwinlegionname();
  inline void set_has_strwinactorname();
  inline void clear_has_strwinactorname();
  inline void set_has_strfaillegionname();
  inline void clear_has_strfaillegionname();
  inline void set_has_strfailactorname();
  inline void clear_has_strfailactorname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strwinlegionname_;
  ::std::string* strwinactorname_;
  ::std::string* strfaillegionname_;
  ::std::string* strfailactorname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionBattleRecordItem* default_instance_;
};
// -------------------------------------------------------------------

class LegionBattleRecordPage : public ::google::protobuf::Message {
 public:
  LegionBattleRecordPage();
  virtual ~LegionBattleRecordPage();

  LegionBattleRecordPage(const LegionBattleRecordPage& from);

  inline LegionBattleRecordPage& operator=(const LegionBattleRecordPage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionBattleRecordPage& default_instance();

  void Swap(LegionBattleRecordPage* other);

  // implements Message ----------------------------------------------

  LegionBattleRecordPage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionBattleRecordPage& from);
  void MergeFrom(const LegionBattleRecordPage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.LegionBattleRecordItem szBattleRecordPage = 1;
  inline int szbattlerecordpage_size() const;
  inline void clear_szbattlerecordpage();
  static const int kSzBattleRecordPageFieldNumber = 1;
  inline const ::GSProto::LegionBattleRecordItem& szbattlerecordpage(int index) const;
  inline ::GSProto::LegionBattleRecordItem* mutable_szbattlerecordpage(int index);
  inline ::GSProto::LegionBattleRecordItem* add_szbattlerecordpage();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBattleRecordItem >&
      szbattlerecordpage() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBattleRecordItem >*
      mutable_szbattlerecordpage();

  // @@protoc_insertion_point(class_scope:GSProto.LegionBattleRecordPage)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBattleRecordItem > szbattlerecordpage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionBattleRecordPage* default_instance_;
};
// -------------------------------------------------------------------

class LegionFightStateItem : public ::google::protobuf::Message {
 public:
  LegionFightStateItem();
  virtual ~LegionFightStateItem();

  LegionFightStateItem(const LegionFightStateItem& from);

  inline LegionFightStateItem& operator=(const LegionFightStateItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionFightStateItem& default_instance();

  void Swap(LegionFightStateItem* other);

  // implements Message ----------------------------------------------

  LegionFightStateItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionFightStateItem& from);
  void MergeFrom(const LegionFightStateItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strLegionName = 2;
  inline bool has_strlegionname() const;
  inline void clear_strlegionname();
  static const int kStrLegionNameFieldNumber = 2;
  inline const ::std::string& strlegionname() const;
  inline void set_strlegionname(const ::std::string& value);
  inline void set_strlegionname(const char* value);
  inline void set_strlegionname(const char* value, size_t size);
  inline ::std::string* mutable_strlegionname();
  inline ::std::string* release_strlegionname();
  inline void set_allocated_strlegionname(::std::string* strlegionname);

  // required int32 iLeftAliveMem = 3;
  inline bool has_ileftalivemem() const;
  inline void clear_ileftalivemem();
  static const int kILeftAliveMemFieldNumber = 3;
  inline ::google::protobuf::int32 ileftalivemem() const;
  inline void set_ileftalivemem(::google::protobuf::int32 value);

  // required int32 iLevel = 4;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 4;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.LegionFightStateItem)
 private:
  inline void set_has_strlegionname();
  inline void clear_has_strlegionname();
  inline void set_has_ileftalivemem();
  inline void clear_has_ileftalivemem();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strlegionname_;
  ::google::protobuf::int32 ileftalivemem_;
  ::google::protobuf::int32 ilevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionFightStateItem* default_instance_;
};
// -------------------------------------------------------------------

class LegionFightState : public ::google::protobuf::Message {
 public:
  LegionFightState();
  virtual ~LegionFightState();

  LegionFightState(const LegionFightState& from);

  inline LegionFightState& operator=(const LegionFightState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionFightState& default_instance();

  void Swap(LegionFightState* other);

  // implements Message ----------------------------------------------

  LegionFightState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionFightState& from);
  void MergeFrom(const LegionFightState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.LegionFightStateItem szLegionState = 1;
  inline int szlegionstate_size() const;
  inline void clear_szlegionstate();
  static const int kSzLegionStateFieldNumber = 1;
  inline const ::GSProto::LegionFightStateItem& szlegionstate(int index) const;
  inline ::GSProto::LegionFightStateItem* mutable_szlegionstate(int index);
  inline ::GSProto::LegionFightStateItem* add_szlegionstate();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionFightStateItem >&
      szlegionstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionFightStateItem >*
      mutable_szlegionstate();

  // required bool bFinish = 2;
  inline bool has_bfinish() const;
  inline void clear_bfinish();
  static const int kBFinishFieldNumber = 2;
  inline bool bfinish() const;
  inline void set_bfinish(bool value);

  // optional string strWinLegionName = 3;
  inline bool has_strwinlegionname() const;
  inline void clear_strwinlegionname();
  static const int kStrWinLegionNameFieldNumber = 3;
  inline const ::std::string& strwinlegionname() const;
  inline void set_strwinlegionname(const ::std::string& value);
  inline void set_strwinlegionname(const char* value);
  inline void set_strwinlegionname(const char* value, size_t size);
  inline ::std::string* mutable_strwinlegionname();
  inline ::std::string* release_strwinlegionname();
  inline void set_allocated_strwinlegionname(::std::string* strwinlegionname);

  // @@protoc_insertion_point(class_scope:GSProto.LegionFightState)
 private:
  inline void set_has_bfinish();
  inline void clear_has_bfinish();
  inline void set_has_strwinlegionname();
  inline void clear_has_strwinlegionname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::LegionFightStateItem > szlegionstate_;
  ::std::string* strwinlegionname_;
  bool bfinish_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionFightState* default_instance_;
};
// -------------------------------------------------------------------

class LegionFightSelfState : public ::google::protobuf::Message {
 public:
  LegionFightSelfState();
  virtual ~LegionFightSelfState();

  LegionFightSelfState(const LegionFightSelfState& from);

  inline LegionFightSelfState& operator=(const LegionFightSelfState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionFightSelfState& default_instance();

  void Swap(LegionFightSelfState* other);

  // implements Message ----------------------------------------------

  LegionFightSelfState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionFightSelfState& from);
  void MergeFrom(const LegionFightSelfState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iKillerCount = 1;
  inline bool has_ikillercount() const;
  inline void clear_ikillercount();
  static const int kIKillerCountFieldNumber = 1;
  inline ::google::protobuf::int32 ikillercount() const;
  inline void set_ikillercount(::google::protobuf::int32 value);

  // required int32 iGetHonor = 2;
  inline bool has_igethonor() const;
  inline void clear_igethonor();
  static const int kIGetHonorFieldNumber = 2;
  inline ::google::protobuf::int32 igethonor() const;
  inline void set_igethonor(::google::protobuf::int32 value);

  // required int32 iGetContribute = 3;
  inline bool has_igetcontribute() const;
  inline void clear_igetcontribute();
  static const int kIGetContributeFieldNumber = 3;
  inline ::google::protobuf::int32 igetcontribute() const;
  inline void set_igetcontribute(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.LegionFightSelfState)
 private:
  inline void set_has_ikillercount();
  inline void clear_has_ikillercount();
  inline void set_has_igethonor();
  inline void clear_has_igethonor();
  inline void set_has_igetcontribute();
  inline void clear_has_igetcontribute();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ikillercount_;
  ::google::protobuf::int32 igethonor_;
  ::google::protobuf::int32 igetcontribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionFightSelfState* default_instance_;
};
// -------------------------------------------------------------------

class LegionBattlePage : public ::google::protobuf::Message {
 public:
  LegionBattlePage();
  virtual ~LegionBattlePage();

  LegionBattlePage(const LegionBattlePage& from);

  inline LegionBattlePage& operator=(const LegionBattlePage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionBattlePage& default_instance();

  void Swap(LegionBattlePage* other);

  // implements Message ----------------------------------------------

  LegionBattlePage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionBattlePage& from);
  void MergeFrom(const LegionBattlePage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCityID = 1;
  inline bool has_icityid() const;
  inline void clear_icityid();
  static const int kICityIDFieldNumber = 1;
  inline ::google::protobuf::int32 icityid() const;
  inline void set_icityid(::google::protobuf::int32 value);

  // required .GSProto.LegionBattleRecordPage battleRecordPage = 2;
  inline bool has_battlerecordpage() const;
  inline void clear_battlerecordpage();
  static const int kBattleRecordPageFieldNumber = 2;
  inline const ::GSProto::LegionBattleRecordPage& battlerecordpage() const;
  inline ::GSProto::LegionBattleRecordPage* mutable_battlerecordpage();
  inline ::GSProto::LegionBattleRecordPage* release_battlerecordpage();
  inline void set_allocated_battlerecordpage(::GSProto::LegionBattleRecordPage* battlerecordpage);

  // required .GSProto.LegionFightState legionStateInfo = 3;
  inline bool has_legionstateinfo() const;
  inline void clear_legionstateinfo();
  static const int kLegionStateInfoFieldNumber = 3;
  inline const ::GSProto::LegionFightState& legionstateinfo() const;
  inline ::GSProto::LegionFightState* mutable_legionstateinfo();
  inline ::GSProto::LegionFightState* release_legionstateinfo();
  inline void set_allocated_legionstateinfo(::GSProto::LegionFightState* legionstateinfo);

  // required .GSProto.LegionFightSelfState seflState = 4;
  inline bool has_seflstate() const;
  inline void clear_seflstate();
  static const int kSeflStateFieldNumber = 4;
  inline const ::GSProto::LegionFightSelfState& seflstate() const;
  inline ::GSProto::LegionFightSelfState* mutable_seflstate();
  inline ::GSProto::LegionFightSelfState* release_seflstate();
  inline void set_allocated_seflstate(::GSProto::LegionFightSelfState* seflstate);

  // @@protoc_insertion_point(class_scope:GSProto.LegionBattlePage)
 private:
  inline void set_has_icityid();
  inline void clear_has_icityid();
  inline void set_has_battlerecordpage();
  inline void clear_has_battlerecordpage();
  inline void set_has_legionstateinfo();
  inline void clear_has_legionstateinfo();
  inline void set_has_seflstate();
  inline void clear_has_seflstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::LegionBattleRecordPage* battlerecordpage_;
  ::GSProto::LegionFightState* legionstateinfo_;
  ::GSProto::LegionFightSelfState* seflstate_;
  ::google::protobuf::int32 icityid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionBattlePage* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_LEGIONBATTLE_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_LEGIONBATTLE_SC();
  virtual ~CMD_QUERY_LEGIONBATTLE_SC();

  CMD_QUERY_LEGIONBATTLE_SC(const CMD_QUERY_LEGIONBATTLE_SC& from);

  inline CMD_QUERY_LEGIONBATTLE_SC& operator=(const CMD_QUERY_LEGIONBATTLE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_LEGIONBATTLE_SC& default_instance();

  void Swap(CMD_QUERY_LEGIONBATTLE_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_LEGIONBATTLE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_LEGIONBATTLE_SC& from);
  void MergeFrom(const CMD_QUERY_LEGIONBATTLE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bFightingTime = 1;
  inline bool has_bfightingtime() const;
  inline void clear_bfightingtime();
  static const int kBFightingTimeFieldNumber = 1;
  inline bool bfightingtime() const;
  inline void set_bfightingtime(bool value);

  // required bool bReported = 2;
  inline bool has_breported() const;
  inline void clear_breported();
  static const int kBReportedFieldNumber = 2;
  inline bool breported() const;
  inline void set_breported(bool value);

  // required bool bJoin = 3;
  inline bool has_bjoin() const;
  inline void clear_bjoin();
  static const int kBJoinFieldNumber = 3;
  inline bool bjoin() const;
  inline void set_bjoin(bool value);

  // optional .GSProto.LegionBattleReported reportedInfo = 4;
  inline bool has_reportedinfo() const;
  inline void clear_reportedinfo();
  static const int kReportedInfoFieldNumber = 4;
  inline const ::GSProto::LegionBattleReported& reportedinfo() const;
  inline ::GSProto::LegionBattleReported* mutable_reportedinfo();
  inline ::GSProto::LegionBattleReported* release_reportedinfo();
  inline void set_allocated_reportedinfo(::GSProto::LegionBattleReported* reportedinfo);

  // optional .GSProto.LegionBattlePage battlePage = 5;
  inline bool has_battlepage() const;
  inline void clear_battlepage();
  static const int kBattlePageFieldNumber = 5;
  inline const ::GSProto::LegionBattlePage& battlepage() const;
  inline ::GSProto::LegionBattlePage* mutable_battlepage();
  inline ::GSProto::LegionBattlePage* release_battlepage();
  inline void set_allocated_battlepage(::GSProto::LegionBattlePage* battlepage);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_LEGIONBATTLE_SC)
 private:
  inline void set_has_bfightingtime();
  inline void clear_has_bfightingtime();
  inline void set_has_breported();
  inline void clear_has_breported();
  inline void set_has_bjoin();
  inline void clear_has_bjoin();
  inline void set_has_reportedinfo();
  inline void clear_has_reportedinfo();
  inline void set_has_battlepage();
  inline void clear_has_battlepage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::LegionBattleReported* reportedinfo_;
  ::GSProto::LegionBattlePage* battlepage_;
  bool bfightingtime_;
  bool breported_;
  bool bjoin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_LEGIONBATTLE_SC* default_instance_;
};
// -------------------------------------------------------------------

class LegionCityOwnerItem : public ::google::protobuf::Message {
 public:
  LegionCityOwnerItem();
  virtual ~LegionCityOwnerItem();

  LegionCityOwnerItem(const LegionCityOwnerItem& from);

  inline LegionCityOwnerItem& operator=(const LegionCityOwnerItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionCityOwnerItem& default_instance();

  void Swap(LegionCityOwnerItem* other);

  // implements Message ----------------------------------------------

  LegionCityOwnerItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionCityOwnerItem& from);
  void MergeFrom(const LegionCityOwnerItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCityID = 1;
  inline bool has_icityid() const;
  inline void clear_icityid();
  static const int kICityIDFieldNumber = 1;
  inline ::google::protobuf::int32 icityid() const;
  inline void set_icityid(::google::protobuf::int32 value);

  // required string strOwner = 2;
  inline bool has_strowner() const;
  inline void clear_strowner();
  static const int kStrOwnerFieldNumber = 2;
  inline const ::std::string& strowner() const;
  inline void set_strowner(const ::std::string& value);
  inline void set_strowner(const char* value);
  inline void set_strowner(const char* value, size_t size);
  inline ::std::string* mutable_strowner();
  inline ::std::string* release_strowner();
  inline void set_allocated_strowner(::std::string* strowner);

  // required bool bCanReportFight = 3;
  inline bool has_bcanreportfight() const;
  inline void clear_bcanreportfight();
  static const int kBCanReportFightFieldNumber = 3;
  inline bool bcanreportfight() const;
  inline void set_bcanreportfight(bool value);

  // optional bool bMonsterOwner = 4;
  inline bool has_bmonsterowner() const;
  inline void clear_bmonsterowner();
  static const int kBMonsterOwnerFieldNumber = 4;
  inline bool bmonsterowner() const;
  inline void set_bmonsterowner(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.LegionCityOwnerItem)
 private:
  inline void set_has_icityid();
  inline void clear_has_icityid();
  inline void set_has_strowner();
  inline void clear_has_strowner();
  inline void set_has_bcanreportfight();
  inline void clear_has_bcanreportfight();
  inline void set_has_bmonsterowner();
  inline void clear_has_bmonsterowner();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strowner_;
  ::google::protobuf::int32 icityid_;
  bool bcanreportfight_;
  bool bmonsterowner_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionCityOwnerItem* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_BATTLEOWNER_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_BATTLEOWNER_SC();
  virtual ~CMD_QUERY_BATTLEOWNER_SC();

  CMD_QUERY_BATTLEOWNER_SC(const CMD_QUERY_BATTLEOWNER_SC& from);

  inline CMD_QUERY_BATTLEOWNER_SC& operator=(const CMD_QUERY_BATTLEOWNER_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_BATTLEOWNER_SC& default_instance();

  void Swap(CMD_QUERY_BATTLEOWNER_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_BATTLEOWNER_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_BATTLEOWNER_SC& from);
  void MergeFrom(const CMD_QUERY_BATTLEOWNER_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.LegionCityOwnerItem szCityList = 1;
  inline int szcitylist_size() const;
  inline void clear_szcitylist();
  static const int kSzCityListFieldNumber = 1;
  inline const ::GSProto::LegionCityOwnerItem& szcitylist(int index) const;
  inline ::GSProto::LegionCityOwnerItem* mutable_szcitylist(int index);
  inline ::GSProto::LegionCityOwnerItem* add_szcitylist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionCityOwnerItem >&
      szcitylist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionCityOwnerItem >*
      mutable_szcitylist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_BATTLEOWNER_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::LegionCityOwnerItem > szcitylist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_BATTLEOWNER_SC* default_instance_;
};
// -------------------------------------------------------------------

class LegionCityReportState : public ::google::protobuf::Message {
 public:
  LegionCityReportState();
  virtual ~LegionCityReportState();

  LegionCityReportState(const LegionCityReportState& from);

  inline LegionCityReportState& operator=(const LegionCityReportState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionCityReportState& default_instance();

  void Swap(LegionCityReportState* other);

  // implements Message ----------------------------------------------

  LegionCityReportState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionCityReportState& from);
  void MergeFrom(const LegionCityReportState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCityID = 1;
  inline bool has_icityid() const;
  inline void clear_icityid();
  static const int kICityIDFieldNumber = 1;
  inline ::google::protobuf::int32 icityid() const;
  inline void set_icityid(::google::protobuf::int32 value);

  // required string strLegionName = 2;
  inline bool has_strlegionname() const;
  inline void clear_strlegionname();
  static const int kStrLegionNameFieldNumber = 2;
  inline const ::std::string& strlegionname() const;
  inline void set_strlegionname(const ::std::string& value);
  inline void set_strlegionname(const char* value);
  inline void set_strlegionname(const char* value, size_t size);
  inline ::std::string* mutable_strlegionname();
  inline ::std::string* release_strlegionname();
  inline void set_allocated_strlegionname(::std::string* strlegionname);

  // required string strLeaderName = 3;
  inline bool has_strleadername() const;
  inline void clear_strleadername();
  static const int kStrLeaderNameFieldNumber = 3;
  inline const ::std::string& strleadername() const;
  inline void set_strleadername(const ::std::string& value);
  inline void set_strleadername(const char* value);
  inline void set_strleadername(const char* value, size_t size);
  inline ::std::string* mutable_strleadername();
  inline ::std::string* release_strleadername();
  inline void set_allocated_strleadername(::std::string* strleadername);

  // required int32 iSilver = 4;
  inline bool has_isilver() const;
  inline void clear_isilver();
  static const int kISilverFieldNumber = 4;
  inline ::google::protobuf::int32 isilver() const;
  inline void set_isilver(::google::protobuf::int32 value);

  // required bool bSelfOwner = 5;
  inline bool has_bselfowner() const;
  inline void clear_bselfowner();
  static const int kBSelfOwnerFieldNumber = 5;
  inline bool bselfowner() const;
  inline void set_bselfowner(bool value);

  // required bool bCanReport = 6;
  inline bool has_bcanreport() const;
  inline void clear_bcanreport();
  static const int kBCanReportFieldNumber = 6;
  inline bool bcanreport() const;
  inline void set_bcanreport(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.LegionCityReportState)
 private:
  inline void set_has_icityid();
  inline void clear_has_icityid();
  inline void set_has_strlegionname();
  inline void clear_has_strlegionname();
  inline void set_has_strleadername();
  inline void clear_has_strleadername();
  inline void set_has_isilver();
  inline void clear_has_isilver();
  inline void set_has_bselfowner();
  inline void clear_has_bselfowner();
  inline void set_has_bcanreport();
  inline void clear_has_bcanreport();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strlegionname_;
  ::google::protobuf::int32 icityid_;
  ::google::protobuf::int32 isilver_;
  ::std::string* strleadername_;
  bool bselfowner_;
  bool bcanreport_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionCityReportState* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_LEGIONBATTLE_REPORT_CS : public ::google::protobuf::Message {
 public:
  CMD_QUERY_LEGIONBATTLE_REPORT_CS();
  virtual ~CMD_QUERY_LEGIONBATTLE_REPORT_CS();

  CMD_QUERY_LEGIONBATTLE_REPORT_CS(const CMD_QUERY_LEGIONBATTLE_REPORT_CS& from);

  inline CMD_QUERY_LEGIONBATTLE_REPORT_CS& operator=(const CMD_QUERY_LEGIONBATTLE_REPORT_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_LEGIONBATTLE_REPORT_CS& default_instance();

  void Swap(CMD_QUERY_LEGIONBATTLE_REPORT_CS* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_LEGIONBATTLE_REPORT_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_LEGIONBATTLE_REPORT_CS& from);
  void MergeFrom(const CMD_QUERY_LEGIONBATTLE_REPORT_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iQueryCityID = 1;
  inline bool has_iquerycityid() const;
  inline void clear_iquerycityid();
  static const int kIQueryCityIDFieldNumber = 1;
  inline ::google::protobuf::int32 iquerycityid() const;
  inline void set_iquerycityid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_LEGIONBATTLE_REPORT_CS)
 private:
  inline void set_has_iquerycityid();
  inline void clear_has_iquerycityid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iquerycityid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_LEGIONBATTLE_REPORT_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_LEGIONBATTLE_REPORT_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_LEGIONBATTLE_REPORT_SC();
  virtual ~CMD_QUERY_LEGIONBATTLE_REPORT_SC();

  CMD_QUERY_LEGIONBATTLE_REPORT_SC(const CMD_QUERY_LEGIONBATTLE_REPORT_SC& from);

  inline CMD_QUERY_LEGIONBATTLE_REPORT_SC& operator=(const CMD_QUERY_LEGIONBATTLE_REPORT_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_LEGIONBATTLE_REPORT_SC& default_instance();

  void Swap(CMD_QUERY_LEGIONBATTLE_REPORT_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_LEGIONBATTLE_REPORT_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_LEGIONBATTLE_REPORT_SC& from);
  void MergeFrom(const CMD_QUERY_LEGIONBATTLE_REPORT_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.LegionCityReportState szReportStateList = 1;
  inline int szreportstatelist_size() const;
  inline void clear_szreportstatelist();
  static const int kSzReportStateListFieldNumber = 1;
  inline const ::GSProto::LegionCityReportState& szreportstatelist(int index) const;
  inline ::GSProto::LegionCityReportState* mutable_szreportstatelist(int index);
  inline ::GSProto::LegionCityReportState* add_szreportstatelist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionCityReportState >&
      szreportstatelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionCityReportState >*
      mutable_szreportstatelist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_LEGIONBATTLE_REPORT_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::LegionCityReportState > szreportstatelist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_LEGIONBATTLE_REPORT_SC* default_instance_;
};
// -------------------------------------------------------------------

class LegionLastBattleMsg : public ::google::protobuf::Message {
 public:
  LegionLastBattleMsg();
  virtual ~LegionLastBattleMsg();

  LegionLastBattleMsg(const LegionLastBattleMsg& from);

  inline LegionLastBattleMsg& operator=(const LegionLastBattleMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionLastBattleMsg& default_instance();

  void Swap(LegionLastBattleMsg* other);

  // implements Message ----------------------------------------------

  LegionLastBattleMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionLastBattleMsg& from);
  void MergeFrom(const LegionLastBattleMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCityID = 1;
  inline bool has_icityid() const;
  inline void clear_icityid();
  static const int kICityIDFieldNumber = 1;
  inline ::google::protobuf::int32 icityid() const;
  inline void set_icityid(::google::protobuf::int32 value);

  // required bool bWin = 2;
  inline bool has_bwin() const;
  inline void clear_bwin();
  static const int kBWinFieldNumber = 2;
  inline bool bwin() const;
  inline void set_bwin(bool value);

  // required bool bSelfReport = 3;
  inline bool has_bselfreport() const;
  inline void clear_bselfreport();
  static const int kBSelfReportFieldNumber = 3;
  inline bool bselfreport() const;
  inline void set_bselfreport(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.LegionLastBattleMsg)
 private:
  inline void set_has_icityid();
  inline void clear_has_icityid();
  inline void set_has_bwin();
  inline void clear_has_bwin();
  inline void set_has_bselfreport();
  inline void clear_has_bselfreport();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 icityid_;
  bool bwin_;
  bool bselfreport_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionLastBattleMsg* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_LASTBATTLE_LIST_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_LASTBATTLE_LIST_SC();
  virtual ~CMD_QUERY_LASTBATTLE_LIST_SC();

  CMD_QUERY_LASTBATTLE_LIST_SC(const CMD_QUERY_LASTBATTLE_LIST_SC& from);

  inline CMD_QUERY_LASTBATTLE_LIST_SC& operator=(const CMD_QUERY_LASTBATTLE_LIST_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_LASTBATTLE_LIST_SC& default_instance();

  void Swap(CMD_QUERY_LASTBATTLE_LIST_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_LASTBATTLE_LIST_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_LASTBATTLE_LIST_SC& from);
  void MergeFrom(const CMD_QUERY_LASTBATTLE_LIST_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.LegionLastBattleMsg szLastBattleMsg = 1;
  inline int szlastbattlemsg_size() const;
  inline void clear_szlastbattlemsg();
  static const int kSzLastBattleMsgFieldNumber = 1;
  inline const ::GSProto::LegionLastBattleMsg& szlastbattlemsg(int index) const;
  inline ::GSProto::LegionLastBattleMsg* mutable_szlastbattlemsg(int index);
  inline ::GSProto::LegionLastBattleMsg* add_szlastbattlemsg();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionLastBattleMsg >&
      szlastbattlemsg() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionLastBattleMsg >*
      mutable_szlastbattlemsg();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_LASTBATTLE_LIST_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::LegionLastBattleMsg > szlastbattlemsg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_LASTBATTLE_LIST_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_SINGLE_LASTBATTLE_CS : public ::google::protobuf::Message {
 public:
  CMD_QUERY_SINGLE_LASTBATTLE_CS();
  virtual ~CMD_QUERY_SINGLE_LASTBATTLE_CS();

  CMD_QUERY_SINGLE_LASTBATTLE_CS(const CMD_QUERY_SINGLE_LASTBATTLE_CS& from);

  inline CMD_QUERY_SINGLE_LASTBATTLE_CS& operator=(const CMD_QUERY_SINGLE_LASTBATTLE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_SINGLE_LASTBATTLE_CS& default_instance();

  void Swap(CMD_QUERY_SINGLE_LASTBATTLE_CS* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_SINGLE_LASTBATTLE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_SINGLE_LASTBATTLE_CS& from);
  void MergeFrom(const CMD_QUERY_SINGLE_LASTBATTLE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCityID = 1;
  inline bool has_icityid() const;
  inline void clear_icityid();
  static const int kICityIDFieldNumber = 1;
  inline ::google::protobuf::int32 icityid() const;
  inline void set_icityid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_SINGLE_LASTBATTLE_CS)
 private:
  inline void set_has_icityid();
  inline void clear_has_icityid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 icityid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_SINGLE_LASTBATTLE_CS* default_instance_;
};
// -------------------------------------------------------------------

class LegionLastBattlePage : public ::google::protobuf::Message {
 public:
  LegionLastBattlePage();
  virtual ~LegionLastBattlePage();

  LegionLastBattlePage(const LegionLastBattlePage& from);

  inline LegionLastBattlePage& operator=(const LegionLastBattlePage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionLastBattlePage& default_instance();

  void Swap(LegionLastBattlePage* other);

  // implements Message ----------------------------------------------

  LegionLastBattlePage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionLastBattlePage& from);
  void MergeFrom(const LegionLastBattlePage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCityID = 1;
  inline bool has_icityid() const;
  inline void clear_icityid();
  static const int kICityIDFieldNumber = 1;
  inline ::google::protobuf::int32 icityid() const;
  inline void set_icityid(::google::protobuf::int32 value);

  // required .GSProto.LegionBattleRecordPage battleRecordPage = 2;
  inline bool has_battlerecordpage() const;
  inline void clear_battlerecordpage();
  static const int kBattleRecordPageFieldNumber = 2;
  inline const ::GSProto::LegionBattleRecordPage& battlerecordpage() const;
  inline ::GSProto::LegionBattleRecordPage* mutable_battlerecordpage();
  inline ::GSProto::LegionBattleRecordPage* release_battlerecordpage();
  inline void set_allocated_battlerecordpage(::GSProto::LegionBattleRecordPage* battlerecordpage);

  // required int32 iTotalPage = 3;
  inline bool has_itotalpage() const;
  inline void clear_itotalpage();
  static const int kITotalPageFieldNumber = 3;
  inline ::google::protobuf::int32 itotalpage() const;
  inline void set_itotalpage(::google::protobuf::int32 value);

  // required int32 iCurPage = 4;
  inline bool has_icurpage() const;
  inline void clear_icurpage();
  static const int kICurPageFieldNumber = 4;
  inline ::google::protobuf::int32 icurpage() const;
  inline void set_icurpage(::google::protobuf::int32 value);

  // required .GSProto.LegionFightState legionStateInfo = 5;
  inline bool has_legionstateinfo() const;
  inline void clear_legionstateinfo();
  static const int kLegionStateInfoFieldNumber = 5;
  inline const ::GSProto::LegionFightState& legionstateinfo() const;
  inline ::GSProto::LegionFightState* mutable_legionstateinfo();
  inline ::GSProto::LegionFightState* release_legionstateinfo();
  inline void set_allocated_legionstateinfo(::GSProto::LegionFightState* legionstateinfo);

  // required .GSProto.LegionFightSelfState seflState = 6;
  inline bool has_seflstate() const;
  inline void clear_seflstate();
  static const int kSeflStateFieldNumber = 6;
  inline const ::GSProto::LegionFightSelfState& seflstate() const;
  inline ::GSProto::LegionFightSelfState* mutable_seflstate();
  inline ::GSProto::LegionFightSelfState* release_seflstate();
  inline void set_allocated_seflstate(::GSProto::LegionFightSelfState* seflstate);

  // @@protoc_insertion_point(class_scope:GSProto.LegionLastBattlePage)
 private:
  inline void set_has_icityid();
  inline void clear_has_icityid();
  inline void set_has_battlerecordpage();
  inline void clear_has_battlerecordpage();
  inline void set_has_itotalpage();
  inline void clear_has_itotalpage();
  inline void set_has_icurpage();
  inline void clear_has_icurpage();
  inline void set_has_legionstateinfo();
  inline void clear_has_legionstateinfo();
  inline void set_has_seflstate();
  inline void clear_has_seflstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::LegionBattleRecordPage* battlerecordpage_;
  ::google::protobuf::int32 icityid_;
  ::google::protobuf::int32 itotalpage_;
  ::GSProto::LegionFightState* legionstateinfo_;
  ::GSProto::LegionFightSelfState* seflstate_;
  ::google::protobuf::int32 icurpage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionLastBattlePage* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_SINGLE_LASTBATTLE_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_SINGLE_LASTBATTLE_SC();
  virtual ~CMD_QUERY_SINGLE_LASTBATTLE_SC();

  CMD_QUERY_SINGLE_LASTBATTLE_SC(const CMD_QUERY_SINGLE_LASTBATTLE_SC& from);

  inline CMD_QUERY_SINGLE_LASTBATTLE_SC& operator=(const CMD_QUERY_SINGLE_LASTBATTLE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_SINGLE_LASTBATTLE_SC& default_instance();

  void Swap(CMD_QUERY_SINGLE_LASTBATTLE_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_SINGLE_LASTBATTLE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_SINGLE_LASTBATTLE_SC& from);
  void MergeFrom(const CMD_QUERY_SINGLE_LASTBATTLE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.LegionLastBattlePage lastBattlePage = 1;
  inline bool has_lastbattlepage() const;
  inline void clear_lastbattlepage();
  static const int kLastBattlePageFieldNumber = 1;
  inline const ::GSProto::LegionLastBattlePage& lastbattlepage() const;
  inline ::GSProto::LegionLastBattlePage* mutable_lastbattlepage();
  inline ::GSProto::LegionLastBattlePage* release_lastbattlepage();
  inline void set_allocated_lastbattlepage(::GSProto::LegionLastBattlePage* lastbattlepage);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_SINGLE_LASTBATTLE_SC)
 private:
  inline void set_has_lastbattlepage();
  inline void clear_has_lastbattlepage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::LegionLastBattlePage* lastbattlepage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_SINGLE_LASTBATTLE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_REPORT_LEGIONBATTLE_CS : public ::google::protobuf::Message {
 public:
  CMD_REPORT_LEGIONBATTLE_CS();
  virtual ~CMD_REPORT_LEGIONBATTLE_CS();

  CMD_REPORT_LEGIONBATTLE_CS(const CMD_REPORT_LEGIONBATTLE_CS& from);

  inline CMD_REPORT_LEGIONBATTLE_CS& operator=(const CMD_REPORT_LEGIONBATTLE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_REPORT_LEGIONBATTLE_CS& default_instance();

  void Swap(CMD_REPORT_LEGIONBATTLE_CS* other);

  // implements Message ----------------------------------------------

  CMD_REPORT_LEGIONBATTLE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_REPORT_LEGIONBATTLE_CS& from);
  void MergeFrom(const CMD_REPORT_LEGIONBATTLE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCityID = 1;
  inline bool has_icityid() const;
  inline void clear_icityid();
  static const int kICityIDFieldNumber = 1;
  inline ::google::protobuf::int32 icityid() const;
  inline void set_icityid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_REPORT_LEGIONBATTLE_CS)
 private:
  inline void set_has_icityid();
  inline void clear_has_icityid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 icityid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_REPORT_LEGIONBATTLE_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_REPORT_LEGIONBATTLE_SC : public ::google::protobuf::Message {
 public:
  CMD_REPORT_LEGIONBATTLE_SC();
  virtual ~CMD_REPORT_LEGIONBATTLE_SC();

  CMD_REPORT_LEGIONBATTLE_SC(const CMD_REPORT_LEGIONBATTLE_SC& from);

  inline CMD_REPORT_LEGIONBATTLE_SC& operator=(const CMD_REPORT_LEGIONBATTLE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_REPORT_LEGIONBATTLE_SC& default_instance();

  void Swap(CMD_REPORT_LEGIONBATTLE_SC* other);

  // implements Message ----------------------------------------------

  CMD_REPORT_LEGIONBATTLE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_REPORT_LEGIONBATTLE_SC& from);
  void MergeFrom(const CMD_REPORT_LEGIONBATTLE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.LegionBattleReported reportInfo = 1;
  inline bool has_reportinfo() const;
  inline void clear_reportinfo();
  static const int kReportInfoFieldNumber = 1;
  inline const ::GSProto::LegionBattleReported& reportinfo() const;
  inline ::GSProto::LegionBattleReported* mutable_reportinfo();
  inline ::GSProto::LegionBattleReported* release_reportinfo();
  inline void set_allocated_reportinfo(::GSProto::LegionBattleReported* reportinfo);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_REPORT_LEGIONBATTLE_SC)
 private:
  inline void set_has_reportinfo();
  inline void clear_has_reportinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::LegionBattleReported* reportinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_REPORT_LEGIONBATTLE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_JOIN_LEGIONBATTLE_SC : public ::google::protobuf::Message {
 public:
  CMD_JOIN_LEGIONBATTLE_SC();
  virtual ~CMD_JOIN_LEGIONBATTLE_SC();

  CMD_JOIN_LEGIONBATTLE_SC(const CMD_JOIN_LEGIONBATTLE_SC& from);

  inline CMD_JOIN_LEGIONBATTLE_SC& operator=(const CMD_JOIN_LEGIONBATTLE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_JOIN_LEGIONBATTLE_SC& default_instance();

  void Swap(CMD_JOIN_LEGIONBATTLE_SC* other);

  // implements Message ----------------------------------------------

  CMD_JOIN_LEGIONBATTLE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_JOIN_LEGIONBATTLE_SC& from);
  void MergeFrom(const CMD_JOIN_LEGIONBATTLE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.LegionBattleReported reportInfo = 1;
  inline bool has_reportinfo() const;
  inline void clear_reportinfo();
  static const int kReportInfoFieldNumber = 1;
  inline const ::GSProto::LegionBattleReported& reportinfo() const;
  inline ::GSProto::LegionBattleReported* mutable_reportinfo();
  inline ::GSProto::LegionBattleReported* release_reportinfo();
  inline void set_allocated_reportinfo(::GSProto::LegionBattleReported* reportinfo);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_JOIN_LEGIONBATTLE_SC)
 private:
  inline void set_has_reportinfo();
  inline void clear_has_reportinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::LegionBattleReported* reportinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_JOIN_LEGIONBATTLE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_CURBATTLE_PAGE_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_CURBATTLE_PAGE_SC();
  virtual ~CMD_QUERY_CURBATTLE_PAGE_SC();

  CMD_QUERY_CURBATTLE_PAGE_SC(const CMD_QUERY_CURBATTLE_PAGE_SC& from);

  inline CMD_QUERY_CURBATTLE_PAGE_SC& operator=(const CMD_QUERY_CURBATTLE_PAGE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_CURBATTLE_PAGE_SC& default_instance();

  void Swap(CMD_QUERY_CURBATTLE_PAGE_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_CURBATTLE_PAGE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_CURBATTLE_PAGE_SC& from);
  void MergeFrom(const CMD_QUERY_CURBATTLE_PAGE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.LegionBattlePage battlePage = 1;
  inline bool has_battlepage() const;
  inline void clear_battlepage();
  static const int kBattlePageFieldNumber = 1;
  inline const ::GSProto::LegionBattlePage& battlepage() const;
  inline ::GSProto::LegionBattlePage* mutable_battlepage();
  inline ::GSProto::LegionBattlePage* release_battlepage();
  inline void set_allocated_battlepage(::GSProto::LegionBattlePage* battlepage);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_CURBATTLE_PAGE_SC)
 private:
  inline void set_has_battlepage();
  inline void clear_has_battlepage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::LegionBattlePage* battlepage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_CURBATTLE_PAGE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_ADD_CURBATTLE_RECORD_SC : public ::google::protobuf::Message {
 public:
  CMD_ADD_CURBATTLE_RECORD_SC();
  virtual ~CMD_ADD_CURBATTLE_RECORD_SC();

  CMD_ADD_CURBATTLE_RECORD_SC(const CMD_ADD_CURBATTLE_RECORD_SC& from);

  inline CMD_ADD_CURBATTLE_RECORD_SC& operator=(const CMD_ADD_CURBATTLE_RECORD_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_ADD_CURBATTLE_RECORD_SC& default_instance();

  void Swap(CMD_ADD_CURBATTLE_RECORD_SC* other);

  // implements Message ----------------------------------------------

  CMD_ADD_CURBATTLE_RECORD_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_ADD_CURBATTLE_RECORD_SC& from);
  void MergeFrom(const CMD_ADD_CURBATTLE_RECORD_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.LegionBattleRecordItem szNewBattleRecordPage = 1;
  inline int sznewbattlerecordpage_size() const;
  inline void clear_sznewbattlerecordpage();
  static const int kSzNewBattleRecordPageFieldNumber = 1;
  inline const ::GSProto::LegionBattleRecordItem& sznewbattlerecordpage(int index) const;
  inline ::GSProto::LegionBattleRecordItem* mutable_sznewbattlerecordpage(int index);
  inline ::GSProto::LegionBattleRecordItem* add_sznewbattlerecordpage();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBattleRecordItem >&
      sznewbattlerecordpage() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBattleRecordItem >*
      mutable_sznewbattlerecordpage();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_ADD_CURBATTLE_RECORD_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBattleRecordItem > sznewbattlerecordpage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_ADD_CURBATTLE_RECORD_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_UPDATE_CURBATTLE_SELFINFO_SC : public ::google::protobuf::Message {
 public:
  CMD_UPDATE_CURBATTLE_SELFINFO_SC();
  virtual ~CMD_UPDATE_CURBATTLE_SELFINFO_SC();

  CMD_UPDATE_CURBATTLE_SELFINFO_SC(const CMD_UPDATE_CURBATTLE_SELFINFO_SC& from);

  inline CMD_UPDATE_CURBATTLE_SELFINFO_SC& operator=(const CMD_UPDATE_CURBATTLE_SELFINFO_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_UPDATE_CURBATTLE_SELFINFO_SC& default_instance();

  void Swap(CMD_UPDATE_CURBATTLE_SELFINFO_SC* other);

  // implements Message ----------------------------------------------

  CMD_UPDATE_CURBATTLE_SELFINFO_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_UPDATE_CURBATTLE_SELFINFO_SC& from);
  void MergeFrom(const CMD_UPDATE_CURBATTLE_SELFINFO_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.LegionFightSelfState seflState = 1;
  inline bool has_seflstate() const;
  inline void clear_seflstate();
  static const int kSeflStateFieldNumber = 1;
  inline const ::GSProto::LegionFightSelfState& seflstate() const;
  inline ::GSProto::LegionFightSelfState* mutable_seflstate();
  inline ::GSProto::LegionFightSelfState* release_seflstate();
  inline void set_allocated_seflstate(::GSProto::LegionFightSelfState* seflstate);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_UPDATE_CURBATTLE_SELFINFO_SC)
 private:
  inline void set_has_seflstate();
  inline void clear_has_seflstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::LegionFightSelfState* seflstate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_UPDATE_CURBATTLE_SELFINFO_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_UPDATE_CURBATTLE_LEGIONINFO_SC : public ::google::protobuf::Message {
 public:
  CMD_UPDATE_CURBATTLE_LEGIONINFO_SC();
  virtual ~CMD_UPDATE_CURBATTLE_LEGIONINFO_SC();

  CMD_UPDATE_CURBATTLE_LEGIONINFO_SC(const CMD_UPDATE_CURBATTLE_LEGIONINFO_SC& from);

  inline CMD_UPDATE_CURBATTLE_LEGIONINFO_SC& operator=(const CMD_UPDATE_CURBATTLE_LEGIONINFO_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_UPDATE_CURBATTLE_LEGIONINFO_SC& default_instance();

  void Swap(CMD_UPDATE_CURBATTLE_LEGIONINFO_SC* other);

  // implements Message ----------------------------------------------

  CMD_UPDATE_CURBATTLE_LEGIONINFO_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_UPDATE_CURBATTLE_LEGIONINFO_SC& from);
  void MergeFrom(const CMD_UPDATE_CURBATTLE_LEGIONINFO_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.LegionFightState newState = 1;
  inline bool has_newstate() const;
  inline void clear_newstate();
  static const int kNewStateFieldNumber = 1;
  inline const ::GSProto::LegionFightState& newstate() const;
  inline ::GSProto::LegionFightState* mutable_newstate();
  inline ::GSProto::LegionFightState* release_newstate();
  inline void set_allocated_newstate(::GSProto::LegionFightState* newstate);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_UPDATE_CURBATTLE_LEGIONINFO_SC)
 private:
  inline void set_has_newstate();
  inline void clear_has_newstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::LegionFightState* newstate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_UPDATE_CURBATTLE_LEGIONINFO_SC* default_instance_;
};
// -------------------------------------------------------------------

class LegionBattleSelfRecordItem : public ::google::protobuf::Message {
 public:
  LegionBattleSelfRecordItem();
  virtual ~LegionBattleSelfRecordItem();

  LegionBattleSelfRecordItem(const LegionBattleSelfRecordItem& from);

  inline LegionBattleSelfRecordItem& operator=(const LegionBattleSelfRecordItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LegionBattleSelfRecordItem& default_instance();

  void Swap(LegionBattleSelfRecordItem* other);

  // implements Message ----------------------------------------------

  LegionBattleSelfRecordItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LegionBattleSelfRecordItem& from);
  void MergeFrom(const LegionBattleSelfRecordItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strAttackerLegionName = 1;
  inline bool has_strattackerlegionname() const;
  inline void clear_strattackerlegionname();
  static const int kStrAttackerLegionNameFieldNumber = 1;
  inline const ::std::string& strattackerlegionname() const;
  inline void set_strattackerlegionname(const ::std::string& value);
  inline void set_strattackerlegionname(const char* value);
  inline void set_strattackerlegionname(const char* value, size_t size);
  inline ::std::string* mutable_strattackerlegionname();
  inline ::std::string* release_strattackerlegionname();
  inline void set_allocated_strattackerlegionname(::std::string* strattackerlegionname);

  // required string strAttackerName = 2;
  inline bool has_strattackername() const;
  inline void clear_strattackername();
  static const int kStrAttackerNameFieldNumber = 2;
  inline const ::std::string& strattackername() const;
  inline void set_strattackername(const ::std::string& value);
  inline void set_strattackername(const char* value);
  inline void set_strattackername(const char* value, size_t size);
  inline ::std::string* mutable_strattackername();
  inline ::std::string* release_strattackername();
  inline void set_allocated_strattackername(::std::string* strattackername);

  // required string strTargetLegionName = 3;
  inline bool has_strtargetlegionname() const;
  inline void clear_strtargetlegionname();
  static const int kStrTargetLegionNameFieldNumber = 3;
  inline const ::std::string& strtargetlegionname() const;
  inline void set_strtargetlegionname(const ::std::string& value);
  inline void set_strtargetlegionname(const char* value);
  inline void set_strtargetlegionname(const char* value, size_t size);
  inline ::std::string* mutable_strtargetlegionname();
  inline ::std::string* release_strtargetlegionname();
  inline void set_allocated_strtargetlegionname(::std::string* strtargetlegionname);

  // required string strTargetName = 4;
  inline bool has_strtargetname() const;
  inline void clear_strtargetname();
  static const int kStrTargetNameFieldNumber = 4;
  inline const ::std::string& strtargetname() const;
  inline void set_strtargetname(const ::std::string& value);
  inline void set_strtargetname(const char* value);
  inline void set_strtargetname(const char* value, size_t size);
  inline ::std::string* mutable_strtargetname();
  inline ::std::string* release_strtargetname();
  inline void set_allocated_strtargetname(::std::string* strtargetname);

  // required bool bAttackerWin = 5;
  inline bool has_battackerwin() const;
  inline void clear_battackerwin();
  static const int kBAttackerWinFieldNumber = 5;
  inline bool battackerwin() const;
  inline void set_battackerwin(bool value);

  // required string strFightKey = 6;
  inline bool has_strfightkey() const;
  inline void clear_strfightkey();
  static const int kStrFightKeyFieldNumber = 6;
  inline const ::std::string& strfightkey() const;
  inline void set_strfightkey(const ::std::string& value);
  inline void set_strfightkey(const char* value);
  inline void set_strfightkey(const char* value, size_t size);
  inline ::std::string* mutable_strfightkey();
  inline ::std::string* release_strfightkey();
  inline void set_allocated_strfightkey(::std::string* strfightkey);

  // @@protoc_insertion_point(class_scope:GSProto.LegionBattleSelfRecordItem)
 private:
  inline void set_has_strattackerlegionname();
  inline void clear_has_strattackerlegionname();
  inline void set_has_strattackername();
  inline void clear_has_strattackername();
  inline void set_has_strtargetlegionname();
  inline void clear_has_strtargetlegionname();
  inline void set_has_strtargetname();
  inline void clear_has_strtargetname();
  inline void set_has_battackerwin();
  inline void clear_has_battackerwin();
  inline void set_has_strfightkey();
  inline void clear_has_strfightkey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strattackerlegionname_;
  ::std::string* strattackername_;
  ::std::string* strtargetlegionname_;
  ::std::string* strtargetname_;
  ::std::string* strfightkey_;
  bool battackerwin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static LegionBattleSelfRecordItem* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_CURBATTLE_SELFRECORD_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_CURBATTLE_SELFRECORD_SC();
  virtual ~CMD_QUERY_CURBATTLE_SELFRECORD_SC();

  CMD_QUERY_CURBATTLE_SELFRECORD_SC(const CMD_QUERY_CURBATTLE_SELFRECORD_SC& from);

  inline CMD_QUERY_CURBATTLE_SELFRECORD_SC& operator=(const CMD_QUERY_CURBATTLE_SELFRECORD_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_CURBATTLE_SELFRECORD_SC& default_instance();

  void Swap(CMD_QUERY_CURBATTLE_SELFRECORD_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_CURBATTLE_SELFRECORD_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_CURBATTLE_SELFRECORD_SC& from);
  void MergeFrom(const CMD_QUERY_CURBATTLE_SELFRECORD_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.LegionBattleSelfRecordItem szSelfRecord = 1;
  inline int szselfrecord_size() const;
  inline void clear_szselfrecord();
  static const int kSzSelfRecordFieldNumber = 1;
  inline const ::GSProto::LegionBattleSelfRecordItem& szselfrecord(int index) const;
  inline ::GSProto::LegionBattleSelfRecordItem* mutable_szselfrecord(int index);
  inline ::GSProto::LegionBattleSelfRecordItem* add_szselfrecord();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBattleSelfRecordItem >&
      szselfrecord() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBattleSelfRecordItem >*
      mutable_szselfrecord();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_CURBATTLE_SELFRECORD_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBattleSelfRecordItem > szselfrecord_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_CURBATTLE_SELFRECORD_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_LASTBATTLE_SELFRECORD_CS : public ::google::protobuf::Message {
 public:
  CMD_QUERY_LASTBATTLE_SELFRECORD_CS();
  virtual ~CMD_QUERY_LASTBATTLE_SELFRECORD_CS();

  CMD_QUERY_LASTBATTLE_SELFRECORD_CS(const CMD_QUERY_LASTBATTLE_SELFRECORD_CS& from);

  inline CMD_QUERY_LASTBATTLE_SELFRECORD_CS& operator=(const CMD_QUERY_LASTBATTLE_SELFRECORD_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_LASTBATTLE_SELFRECORD_CS& default_instance();

  void Swap(CMD_QUERY_LASTBATTLE_SELFRECORD_CS* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_LASTBATTLE_SELFRECORD_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_LASTBATTLE_SELFRECORD_CS& from);
  void MergeFrom(const CMD_QUERY_LASTBATTLE_SELFRECORD_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCityID = 1;
  inline bool has_icityid() const;
  inline void clear_icityid();
  static const int kICityIDFieldNumber = 1;
  inline ::google::protobuf::int32 icityid() const;
  inline void set_icityid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_LASTBATTLE_SELFRECORD_CS)
 private:
  inline void set_has_icityid();
  inline void clear_has_icityid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 icityid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_LASTBATTLE_SELFRECORD_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_LASTBATTLE_SELFRECORD_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_LASTBATTLE_SELFRECORD_SC();
  virtual ~CMD_QUERY_LASTBATTLE_SELFRECORD_SC();

  CMD_QUERY_LASTBATTLE_SELFRECORD_SC(const CMD_QUERY_LASTBATTLE_SELFRECORD_SC& from);

  inline CMD_QUERY_LASTBATTLE_SELFRECORD_SC& operator=(const CMD_QUERY_LASTBATTLE_SELFRECORD_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_LASTBATTLE_SELFRECORD_SC& default_instance();

  void Swap(CMD_QUERY_LASTBATTLE_SELFRECORD_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_LASTBATTLE_SELFRECORD_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_LASTBATTLE_SELFRECORD_SC& from);
  void MergeFrom(const CMD_QUERY_LASTBATTLE_SELFRECORD_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.LegionBattleSelfRecordItem szSelfRecord = 1;
  inline int szselfrecord_size() const;
  inline void clear_szselfrecord();
  static const int kSzSelfRecordFieldNumber = 1;
  inline const ::GSProto::LegionBattleSelfRecordItem& szselfrecord(int index) const;
  inline ::GSProto::LegionBattleSelfRecordItem* mutable_szselfrecord(int index);
  inline ::GSProto::LegionBattleSelfRecordItem* add_szselfrecord();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBattleSelfRecordItem >&
      szselfrecord() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBattleSelfRecordItem >*
      mutable_szselfrecord();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_LASTBATTLE_SELFRECORD_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBattleSelfRecordItem > szselfrecord_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_LASTBATTLE_SELFRECORD_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_COMM_QUERYBATTLE_CS : public ::google::protobuf::Message {
 public:
  CMD_COMM_QUERYBATTLE_CS();
  virtual ~CMD_COMM_QUERYBATTLE_CS();

  CMD_COMM_QUERYBATTLE_CS(const CMD_COMM_QUERYBATTLE_CS& from);

  inline CMD_COMM_QUERYBATTLE_CS& operator=(const CMD_COMM_QUERYBATTLE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_COMM_QUERYBATTLE_CS& default_instance();

  void Swap(CMD_COMM_QUERYBATTLE_CS* other);

  // implements Message ----------------------------------------------

  CMD_COMM_QUERYBATTLE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_COMM_QUERYBATTLE_CS& from);
  void MergeFrom(const CMD_COMM_QUERYBATTLE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strFightKey = 1;
  inline bool has_strfightkey() const;
  inline void clear_strfightkey();
  static const int kStrFightKeyFieldNumber = 1;
  inline const ::std::string& strfightkey() const;
  inline void set_strfightkey(const ::std::string& value);
  inline void set_strfightkey(const char* value);
  inline void set_strfightkey(const char* value, size_t size);
  inline ::std::string* mutable_strfightkey();
  inline ::std::string* release_strfightkey();
  inline void set_allocated_strfightkey(::std::string* strfightkey);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_COMM_QUERYBATTLE_CS)
 private:
  inline void set_has_strfightkey();
  inline void clear_has_strfightkey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strfightkey_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_COMM_QUERYBATTLE_CS* default_instance_;
};
// -------------------------------------------------------------------

class HonorRankItem : public ::google::protobuf::Message {
 public:
  HonorRankItem();
  virtual ~HonorRankItem();

  HonorRankItem(const HonorRankItem& from);

  inline HonorRankItem& operator=(const HonorRankItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HonorRankItem& default_instance();

  void Swap(HonorRankItem* other);

  // implements Message ----------------------------------------------

  HonorRankItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HonorRankItem& from);
  void MergeFrom(const HonorRankItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strName = 2;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 2;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // required int32 iLevel = 3;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 3;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // required int32 iKillCount = 4;
  inline bool has_ikillcount() const;
  inline void clear_ikillcount();
  static const int kIKillCountFieldNumber = 4;
  inline ::google::protobuf::int32 ikillcount() const;
  inline void set_ikillcount(::google::protobuf::int32 value);

  // required int32 iGetHonor = 5;
  inline bool has_igethonor() const;
  inline void clear_igethonor();
  static const int kIGetHonorFieldNumber = 5;
  inline ::google::protobuf::int32 igethonor() const;
  inline void set_igethonor(::google::protobuf::int32 value);

  // required int32 iGetContribute = 6;
  inline bool has_igetcontribute() const;
  inline void clear_igetcontribute();
  static const int kIGetContributeFieldNumber = 6;
  inline ::google::protobuf::int32 igetcontribute() const;
  inline void set_igetcontribute(::google::protobuf::int32 value);

  // required string strLegionName = 7;
  inline bool has_strlegionname() const;
  inline void clear_strlegionname();
  static const int kStrLegionNameFieldNumber = 7;
  inline const ::std::string& strlegionname() const;
  inline void set_strlegionname(const ::std::string& value);
  inline void set_strlegionname(const char* value);
  inline void set_strlegionname(const char* value, size_t size);
  inline ::std::string* mutable_strlegionname();
  inline ::std::string* release_strlegionname();
  inline void set_allocated_strlegionname(::std::string* strlegionname);

  // @@protoc_insertion_point(class_scope:GSProto.HonorRankItem)
 private:
  inline void set_has_strname();
  inline void clear_has_strname();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_ikillcount();
  inline void clear_has_ikillcount();
  inline void set_has_igethonor();
  inline void clear_has_igethonor();
  inline void set_has_igetcontribute();
  inline void clear_has_igetcontribute();
  inline void set_has_strlegionname();
  inline void clear_has_strlegionname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strname_;
  ::google::protobuf::int32 ilevel_;
  ::google::protobuf::int32 ikillcount_;
  ::google::protobuf::int32 igethonor_;
  ::google::protobuf::int32 igetcontribute_;
  ::std::string* strlegionname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static HonorRankItem* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_CURBATTLE_HONORRANK_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_CURBATTLE_HONORRANK_SC();
  virtual ~CMD_QUERY_CURBATTLE_HONORRANK_SC();

  CMD_QUERY_CURBATTLE_HONORRANK_SC(const CMD_QUERY_CURBATTLE_HONORRANK_SC& from);

  inline CMD_QUERY_CURBATTLE_HONORRANK_SC& operator=(const CMD_QUERY_CURBATTLE_HONORRANK_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_CURBATTLE_HONORRANK_SC& default_instance();

  void Swap(CMD_QUERY_CURBATTLE_HONORRANK_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_CURBATTLE_HONORRANK_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_CURBATTLE_HONORRANK_SC& from);
  void MergeFrom(const CMD_QUERY_CURBATTLE_HONORRANK_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.HonorRankItem szHornorRank = 1;
  inline int szhornorrank_size() const;
  inline void clear_szhornorrank();
  static const int kSzHornorRankFieldNumber = 1;
  inline const ::GSProto::HonorRankItem& szhornorrank(int index) const;
  inline ::GSProto::HonorRankItem* mutable_szhornorrank(int index);
  inline ::GSProto::HonorRankItem* add_szhornorrank();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HonorRankItem >&
      szhornorrank() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::HonorRankItem >*
      mutable_szhornorrank();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_CURBATTLE_HONORRANK_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::HonorRankItem > szhornorrank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_CURBATTLE_HONORRANK_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_LASTBATTLE_HONORRANK_CS : public ::google::protobuf::Message {
 public:
  CMD_QUERY_LASTBATTLE_HONORRANK_CS();
  virtual ~CMD_QUERY_LASTBATTLE_HONORRANK_CS();

  CMD_QUERY_LASTBATTLE_HONORRANK_CS(const CMD_QUERY_LASTBATTLE_HONORRANK_CS& from);

  inline CMD_QUERY_LASTBATTLE_HONORRANK_CS& operator=(const CMD_QUERY_LASTBATTLE_HONORRANK_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_LASTBATTLE_HONORRANK_CS& default_instance();

  void Swap(CMD_QUERY_LASTBATTLE_HONORRANK_CS* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_LASTBATTLE_HONORRANK_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_LASTBATTLE_HONORRANK_CS& from);
  void MergeFrom(const CMD_QUERY_LASTBATTLE_HONORRANK_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCityID = 1;
  inline bool has_icityid() const;
  inline void clear_icityid();
  static const int kICityIDFieldNumber = 1;
  inline ::google::protobuf::int32 icityid() const;
  inline void set_icityid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_LASTBATTLE_HONORRANK_CS)
 private:
  inline void set_has_icityid();
  inline void clear_has_icityid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 icityid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_LASTBATTLE_HONORRANK_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_LASTBATTLE_HONORRANK_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_LASTBATTLE_HONORRANK_SC();
  virtual ~CMD_QUERY_LASTBATTLE_HONORRANK_SC();

  CMD_QUERY_LASTBATTLE_HONORRANK_SC(const CMD_QUERY_LASTBATTLE_HONORRANK_SC& from);

  inline CMD_QUERY_LASTBATTLE_HONORRANK_SC& operator=(const CMD_QUERY_LASTBATTLE_HONORRANK_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_LASTBATTLE_HONORRANK_SC& default_instance();

  void Swap(CMD_QUERY_LASTBATTLE_HONORRANK_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_LASTBATTLE_HONORRANK_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_LASTBATTLE_HONORRANK_SC& from);
  void MergeFrom(const CMD_QUERY_LASTBATTLE_HONORRANK_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.HonorRankItem szHornorRank = 1;
  inline int szhornorrank_size() const;
  inline void clear_szhornorrank();
  static const int kSzHornorRankFieldNumber = 1;
  inline const ::GSProto::HonorRankItem& szhornorrank(int index) const;
  inline ::GSProto::HonorRankItem* mutable_szhornorrank(int index);
  inline ::GSProto::HonorRankItem* add_szhornorrank();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HonorRankItem >&
      szhornorrank() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::HonorRankItem >*
      mutable_szhornorrank();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_LASTBATTLE_HONORRANK_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::HonorRankItem > szhornorrank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_LASTBATTLE_HONORRANK_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS : public ::google::protobuf::Message {
 public:
  CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS();
  virtual ~CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS();

  CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS(const CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS& from);

  inline CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS& operator=(const CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS& default_instance();

  void Swap(CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS& from);
  void MergeFrom(const CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCityID = 1;
  inline bool has_icityid() const;
  inline void clear_icityid();
  static const int kICityIDFieldNumber = 1;
  inline ::google::protobuf::int32 icityid() const;
  inline void set_icityid(::google::protobuf::int32 value);

  // required int32 iPage = 2;
  inline bool has_ipage() const;
  inline void clear_ipage();
  static const int kIPageFieldNumber = 2;
  inline ::google::protobuf::int32 ipage() const;
  inline void set_ipage(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS)
 private:
  inline void set_has_icityid();
  inline void clear_has_icityid();
  inline void set_has_ipage();
  inline void clear_has_ipage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 icityid_;
  ::google::protobuf::int32 ipage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC();
  virtual ~CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC();

  CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC(const CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC& from);

  inline CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC& operator=(const CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC& default_instance();

  void Swap(CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC& from);
  void MergeFrom(const CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCityID = 1;
  inline bool has_icityid() const;
  inline void clear_icityid();
  static const int kICityIDFieldNumber = 1;
  inline ::google::protobuf::int32 icityid() const;
  inline void set_icityid(::google::protobuf::int32 value);

  // required .GSProto.LegionBattleRecordPage battleRecordPage = 2;
  inline bool has_battlerecordpage() const;
  inline void clear_battlerecordpage();
  static const int kBattleRecordPageFieldNumber = 2;
  inline const ::GSProto::LegionBattleRecordPage& battlerecordpage() const;
  inline ::GSProto::LegionBattleRecordPage* mutable_battlerecordpage();
  inline ::GSProto::LegionBattleRecordPage* release_battlerecordpage();
  inline void set_allocated_battlerecordpage(::GSProto::LegionBattleRecordPage* battlerecordpage);

  // required int32 iTotalPage = 3;
  inline bool has_itotalpage() const;
  inline void clear_itotalpage();
  static const int kITotalPageFieldNumber = 3;
  inline ::google::protobuf::int32 itotalpage() const;
  inline void set_itotalpage(::google::protobuf::int32 value);

  // required int32 iCurPage = 4;
  inline bool has_icurpage() const;
  inline void clear_icurpage();
  static const int kICurPageFieldNumber = 4;
  inline ::google::protobuf::int32 icurpage() const;
  inline void set_icurpage(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC)
 private:
  inline void set_has_icityid();
  inline void clear_has_icityid();
  inline void set_has_battlerecordpage();
  inline void clear_has_battlerecordpage();
  inline void set_has_itotalpage();
  inline void clear_has_itotalpage();
  inline void set_has_icurpage();
  inline void clear_has_icurpage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::LegionBattleRecordPage* battlerecordpage_;
  ::google::protobuf::int32 icityid_;
  ::google::protobuf::int32 itotalpage_;
  ::google::protobuf::int32 icurpage_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC* default_instance_;
};
// -------------------------------------------------------------------

class GiftCustomBody : public ::google::protobuf::Message {
 public:
  GiftCustomBody();
  virtual ~GiftCustomBody();

  GiftCustomBody(const GiftCustomBody& from);

  inline GiftCustomBody& operator=(const GiftCustomBody& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GiftCustomBody& default_instance();

  void Swap(GiftCustomBody* other);

  // implements Message ----------------------------------------------

  GiftCustomBody* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GiftCustomBody& from);
  void MergeFrom(const GiftCustomBody& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strTitle = 1;
  inline bool has_strtitle() const;
  inline void clear_strtitle();
  static const int kStrTitleFieldNumber = 1;
  inline const ::std::string& strtitle() const;
  inline void set_strtitle(const ::std::string& value);
  inline void set_strtitle(const char* value);
  inline void set_strtitle(const char* value, size_t size);
  inline ::std::string* mutable_strtitle();
  inline ::std::string* release_strtitle();
  inline void set_allocated_strtitle(::std::string* strtitle);

  // repeated .GSProto.PropItem szAwardPropList = 2;
  inline int szawardproplist_size() const;
  inline void clear_szawardproplist();
  static const int kSzAwardPropListFieldNumber = 2;
  inline const ::GSProto::PropItem& szawardproplist(int index) const;
  inline ::GSProto::PropItem* mutable_szawardproplist(int index);
  inline ::GSProto::PropItem* add_szawardproplist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
      szawardproplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
      mutable_szawardproplist();

  // repeated .GSProto.FightAwardItem szAwardItemList = 3;
  inline int szawarditemlist_size() const;
  inline void clear_szawarditemlist();
  static const int kSzAwardItemListFieldNumber = 3;
  inline const ::GSProto::FightAwardItem& szawarditemlist(int index) const;
  inline ::GSProto::FightAwardItem* mutable_szawarditemlist(int index);
  inline ::GSProto::FightAwardItem* add_szawarditemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightAwardItem >&
      szawarditemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightAwardItem >*
      mutable_szawarditemlist();

  // optional int32 iAwardedContribute = 4;
  inline bool has_iawardedcontribute() const;
  inline void clear_iawardedcontribute();
  static const int kIAwardedContributeFieldNumber = 4;
  inline ::google::protobuf::int32 iawardedcontribute() const;
  inline void set_iawardedcontribute(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.GiftCustomBody)
 private:
  inline void set_has_strtitle();
  inline void clear_has_strtitle();
  inline void set_has_iawardedcontribute();
  inline void clear_has_iawardedcontribute();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strtitle_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem > szawardproplist_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::FightAwardItem > szawarditemlist_;
  ::google::protobuf::int32 iawardedcontribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static GiftCustomBody* default_instance_;
};
// -------------------------------------------------------------------

class GiftItem : public ::google::protobuf::Message {
 public:
  GiftItem();
  virtual ~GiftItem();

  GiftItem(const GiftItem& from);

  inline GiftItem& operator=(const GiftItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GiftItem& default_instance();

  void Swap(GiftItem* other);

  // implements Message ----------------------------------------------

  GiftItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GiftItem& from);
  void MergeFrom(const GiftItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strUUID = 1;
  inline bool has_struuid() const;
  inline void clear_struuid();
  static const int kStrUUIDFieldNumber = 1;
  inline const ::std::string& struuid() const;
  inline void set_struuid(const ::std::string& value);
  inline void set_struuid(const char* value);
  inline void set_struuid(const char* value, size_t size);
  inline ::std::string* mutable_struuid();
  inline ::std::string* release_struuid();
  inline void set_allocated_struuid(::std::string* struuid);

  // required bool bCustomGift = 2;
  inline bool has_bcustomgift() const;
  inline void clear_bcustomgift();
  static const int kBCustomGiftFieldNumber = 2;
  inline bool bcustomgift() const;
  inline void set_bcustomgift(bool value);

  // optional int32 iGiftID = 3;
  inline bool has_igiftid() const;
  inline void clear_igiftid();
  static const int kIGiftIDFieldNumber = 3;
  inline ::google::protobuf::int32 igiftid() const;
  inline void set_igiftid(::google::protobuf::int32 value);

  // optional .GSProto.GiftCustomBody cutomBody = 4;
  inline bool has_cutombody() const;
  inline void clear_cutombody();
  static const int kCutomBodyFieldNumber = 4;
  inline const ::GSProto::GiftCustomBody& cutombody() const;
  inline ::GSProto::GiftCustomBody* mutable_cutombody();
  inline ::GSProto::GiftCustomBody* release_cutombody();
  inline void set_allocated_cutombody(::GSProto::GiftCustomBody* cutombody);

  // @@protoc_insertion_point(class_scope:GSProto.GiftItem)
 private:
  inline void set_has_struuid();
  inline void clear_has_struuid();
  inline void set_has_bcustomgift();
  inline void clear_has_bcustomgift();
  inline void set_has_igiftid();
  inline void clear_has_igiftid();
  inline void set_has_cutombody();
  inline void clear_has_cutombody();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* struuid_;
  bool bcustomgift_;
  ::google::protobuf::int32 igiftid_;
  ::GSProto::GiftCustomBody* cutombody_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static GiftItem* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_GIFT_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_GIFT_SC();
  virtual ~CMD_QUERY_GIFT_SC();

  CMD_QUERY_GIFT_SC(const CMD_QUERY_GIFT_SC& from);

  inline CMD_QUERY_GIFT_SC& operator=(const CMD_QUERY_GIFT_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_GIFT_SC& default_instance();

  void Swap(CMD_QUERY_GIFT_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_GIFT_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_GIFT_SC& from);
  void MergeFrom(const CMD_QUERY_GIFT_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.GiftItem szGiftItem = 1;
  inline int szgiftitem_size() const;
  inline void clear_szgiftitem();
  static const int kSzGiftItemFieldNumber = 1;
  inline const ::GSProto::GiftItem& szgiftitem(int index) const;
  inline ::GSProto::GiftItem* mutable_szgiftitem(int index);
  inline ::GSProto::GiftItem* add_szgiftitem();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::GiftItem >&
      szgiftitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::GiftItem >*
      mutable_szgiftitem();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_GIFT_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::GiftItem > szgiftitem_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_GIFT_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GET_GIFT_CS : public ::google::protobuf::Message {
 public:
  CMD_GET_GIFT_CS();
  virtual ~CMD_GET_GIFT_CS();

  CMD_GET_GIFT_CS(const CMD_GET_GIFT_CS& from);

  inline CMD_GET_GIFT_CS& operator=(const CMD_GET_GIFT_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GET_GIFT_CS& default_instance();

  void Swap(CMD_GET_GIFT_CS* other);

  // implements Message ----------------------------------------------

  CMD_GET_GIFT_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GET_GIFT_CS& from);
  void MergeFrom(const CMD_GET_GIFT_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strGiftUUID = 1;
  inline bool has_strgiftuuid() const;
  inline void clear_strgiftuuid();
  static const int kStrGiftUUIDFieldNumber = 1;
  inline const ::std::string& strgiftuuid() const;
  inline void set_strgiftuuid(const ::std::string& value);
  inline void set_strgiftuuid(const char* value);
  inline void set_strgiftuuid(const char* value, size_t size);
  inline ::std::string* mutable_strgiftuuid();
  inline ::std::string* release_strgiftuuid();
  inline void set_allocated_strgiftuuid(::std::string* strgiftuuid);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GET_GIFT_CS)
 private:
  inline void set_has_strgiftuuid();
  inline void clear_has_strgiftuuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strgiftuuid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GET_GIFT_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GET_GIFT_SC : public ::google::protobuf::Message {
 public:
  CMD_GET_GIFT_SC();
  virtual ~CMD_GET_GIFT_SC();

  CMD_GET_GIFT_SC(const CMD_GET_GIFT_SC& from);

  inline CMD_GET_GIFT_SC& operator=(const CMD_GET_GIFT_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GET_GIFT_SC& default_instance();

  void Swap(CMD_GET_GIFT_SC* other);

  // implements Message ----------------------------------------------

  CMD_GET_GIFT_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GET_GIFT_SC& from);
  void MergeFrom(const CMD_GET_GIFT_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strGiftUUID = 1;
  inline bool has_strgiftuuid() const;
  inline void clear_strgiftuuid();
  static const int kStrGiftUUIDFieldNumber = 1;
  inline const ::std::string& strgiftuuid() const;
  inline void set_strgiftuuid(const ::std::string& value);
  inline void set_strgiftuuid(const char* value);
  inline void set_strgiftuuid(const char* value, size_t size);
  inline ::std::string* mutable_strgiftuuid();
  inline ::std::string* release_strgiftuuid();
  inline void set_allocated_strgiftuuid(::std::string* strgiftuuid);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GET_GIFT_SC)
 private:
  inline void set_has_strgiftuuid();
  inline void clear_has_strgiftuuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strgiftuuid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GET_GIFT_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_CANCEL_LEGIONAPP_CS : public ::google::protobuf::Message {
 public:
  CMD_CANCEL_LEGIONAPP_CS();
  virtual ~CMD_CANCEL_LEGIONAPP_CS();

  CMD_CANCEL_LEGIONAPP_CS(const CMD_CANCEL_LEGIONAPP_CS& from);

  inline CMD_CANCEL_LEGIONAPP_CS& operator=(const CMD_CANCEL_LEGIONAPP_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_CANCEL_LEGIONAPP_CS& default_instance();

  void Swap(CMD_CANCEL_LEGIONAPP_CS* other);

  // implements Message ----------------------------------------------

  CMD_CANCEL_LEGIONAPP_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_CANCEL_LEGIONAPP_CS& from);
  void MergeFrom(const CMD_CANCEL_LEGIONAPP_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwLegionObjectID = 1;
  inline bool has_dwlegionobjectid() const;
  inline void clear_dwlegionobjectid();
  static const int kDwLegionObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwlegionobjectid() const;
  inline void set_dwlegionobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_CANCEL_LEGIONAPP_CS)
 private:
  inline void set_has_dwlegionobjectid();
  inline void clear_has_dwlegionobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwlegionobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_CANCEL_LEGIONAPP_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_CANCEL_LEGIONAPP_SC : public ::google::protobuf::Message {
 public:
  CMD_CANCEL_LEGIONAPP_SC();
  virtual ~CMD_CANCEL_LEGIONAPP_SC();

  CMD_CANCEL_LEGIONAPP_SC(const CMD_CANCEL_LEGIONAPP_SC& from);

  inline CMD_CANCEL_LEGIONAPP_SC& operator=(const CMD_CANCEL_LEGIONAPP_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_CANCEL_LEGIONAPP_SC& default_instance();

  void Swap(CMD_CANCEL_LEGIONAPP_SC* other);

  // implements Message ----------------------------------------------

  CMD_CANCEL_LEGIONAPP_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_CANCEL_LEGIONAPP_SC& from);
  void MergeFrom(const CMD_CANCEL_LEGIONAPP_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwLegionObjectID = 1;
  inline bool has_dwlegionobjectid() const;
  inline void clear_dwlegionobjectid();
  static const int kDwLegionObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwlegionobjectid() const;
  inline void set_dwlegionobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_CANCEL_LEGIONAPP_SC)
 private:
  inline void set_has_dwlegionobjectid();
  inline void clear_has_dwlegionobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwlegionobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_CANCEL_LEGIONAPP_SC* default_instance_;
};
// -------------------------------------------------------------------

class ArenaPlayer : public ::google::protobuf::Message {
 public:
  ArenaPlayer();
  virtual ~ArenaPlayer();

  ArenaPlayer(const ArenaPlayer& from);

  inline ArenaPlayer& operator=(const ArenaPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaPlayer& default_instance();

  void Swap(ArenaPlayer* other);

  // implements Message ----------------------------------------------

  ArenaPlayer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaPlayer& from);
  void MergeFrom(const ArenaPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iShowID = 1;
  inline bool has_ishowid() const;
  inline void clear_ishowid();
  static const int kIShowIDFieldNumber = 1;
  inline ::google::protobuf::int32 ishowid() const;
  inline void set_ishowid(::google::protobuf::int32 value);

  // required string strName = 2;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 2;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // required int32 iLevel = 3;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 3;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // required int32 iFightValue = 4;
  inline bool has_ifightvalue() const;
  inline void clear_ifightvalue();
  static const int kIFightValueFieldNumber = 4;
  inline ::google::protobuf::int32 ifightvalue() const;
  inline void set_ifightvalue(::google::protobuf::int32 value);

  // required int32 iRank = 5;
  inline bool has_irank() const;
  inline void clear_irank();
  static const int kIRankFieldNumber = 5;
  inline ::google::protobuf::int32 irank() const;
  inline void set_irank(::google::protobuf::int32 value);

  // required bool bMonster = 6;
  inline bool has_bmonster() const;
  inline void clear_bmonster();
  static const int kBMonsterFieldNumber = 6;
  inline bool bmonster() const;
  inline void set_bmonster(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.ArenaPlayer)
 private:
  inline void set_has_ishowid();
  inline void clear_has_ishowid();
  inline void set_has_strname();
  inline void clear_has_strname();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_ifightvalue();
  inline void clear_has_ifightvalue();
  inline void set_has_irank();
  inline void clear_has_irank();
  inline void set_has_bmonster();
  inline void clear_has_bmonster();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strname_;
  ::google::protobuf::int32 ishowid_;
  ::google::protobuf::int32 ilevel_;
  ::google::protobuf::int32 ifightvalue_;
  ::google::protobuf::int32 irank_;
  bool bmonster_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static ArenaPlayer* default_instance_;
};
// -------------------------------------------------------------------

class ArenaChallengeInfo : public ::google::protobuf::Message {
 public:
  ArenaChallengeInfo();
  virtual ~ArenaChallengeInfo();

  ArenaChallengeInfo(const ArenaChallengeInfo& from);

  inline ArenaChallengeInfo& operator=(const ArenaChallengeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaChallengeInfo& default_instance();

  void Swap(ArenaChallengeInfo* other);

  // implements Message ----------------------------------------------

  ArenaChallengeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaChallengeInfo& from);
  void MergeFrom(const ArenaChallengeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.ArenaPlayer szChallengeList = 1;
  inline int szchallengelist_size() const;
  inline void clear_szchallengelist();
  static const int kSzChallengeListFieldNumber = 1;
  inline const ::GSProto::ArenaPlayer& szchallengelist(int index) const;
  inline ::GSProto::ArenaPlayer* mutable_szchallengelist(int index);
  inline ::GSProto::ArenaPlayer* add_szchallengelist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ArenaPlayer >&
      szchallengelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::ArenaPlayer >*
      mutable_szchallengelist();

  // @@protoc_insertion_point(class_scope:GSProto.ArenaChallengeInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::ArenaPlayer > szchallengelist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static ArenaChallengeInfo* default_instance_;
};
// -------------------------------------------------------------------

class ArenaAppendInfo : public ::google::protobuf::Message {
 public:
  ArenaAppendInfo();
  virtual ~ArenaAppendInfo();

  ArenaAppendInfo(const ArenaAppendInfo& from);

  inline ArenaAppendInfo& operator=(const ArenaAppendInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaAppendInfo& default_instance();

  void Swap(ArenaAppendInfo* other);

  // implements Message ----------------------------------------------

  ArenaAppendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaAppendInfo& from);
  void MergeFrom(const ArenaAppendInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.ArenaAppendState state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::GSProto::ArenaAppendState state() const;
  inline void set_state(::GSProto::ArenaAppendState value);

  // optional int32 iCurRemaindTimes = 2;
  inline bool has_icurremaindtimes() const;
  inline void clear_icurremaindtimes();
  static const int kICurRemaindTimesFieldNumber = 2;
  inline ::google::protobuf::int32 icurremaindtimes() const;
  inline void set_icurremaindtimes(::google::protobuf::int32 value);

  // optional int32 iTotalTimes = 3;
  inline bool has_itotaltimes() const;
  inline void clear_itotaltimes();
  static const int kITotalTimesFieldNumber = 3;
  inline ::google::protobuf::int32 itotaltimes() const;
  inline void set_itotaltimes(::google::protobuf::int32 value);

  // optional int32 iRemaindSecond = 4;
  inline bool has_iremaindsecond() const;
  inline void clear_iremaindsecond();
  static const int kIRemaindSecondFieldNumber = 4;
  inline ::google::protobuf::int32 iremaindsecond() const;
  inline void set_iremaindsecond(::google::protobuf::int32 value);

  // optional int32 iCost = 5;
  inline bool has_icost() const;
  inline void clear_icost();
  static const int kICostFieldNumber = 5;
  inline ::google::protobuf::int32 icost() const;
  inline void set_icost(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.ArenaAppendInfo)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_icurremaindtimes();
  inline void clear_has_icurremaindtimes();
  inline void set_has_itotaltimes();
  inline void clear_has_itotaltimes();
  inline void set_has_iremaindsecond();
  inline void clear_has_iremaindsecond();
  inline void set_has_icost();
  inline void clear_has_icost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int state_;
  ::google::protobuf::int32 icurremaindtimes_;
  ::google::protobuf::int32 itotaltimes_;
  ::google::protobuf::int32 iremaindsecond_;
  ::google::protobuf::int32 icost_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static ArenaAppendInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMD_OPEN_ARENA_SC : public ::google::protobuf::Message {
 public:
  CMD_OPEN_ARENA_SC();
  virtual ~CMD_OPEN_ARENA_SC();

  CMD_OPEN_ARENA_SC(const CMD_OPEN_ARENA_SC& from);

  inline CMD_OPEN_ARENA_SC& operator=(const CMD_OPEN_ARENA_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_OPEN_ARENA_SC& default_instance();

  void Swap(CMD_OPEN_ARENA_SC* other);

  // implements Message ----------------------------------------------

  CMD_OPEN_ARENA_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_OPEN_ARENA_SC& from);
  void MergeFrom(const CMD_OPEN_ARENA_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iSelfRank = 1;
  inline bool has_iselfrank() const;
  inline void clear_iselfrank();
  static const int kISelfRankFieldNumber = 1;
  inline ::google::protobuf::int32 iselfrank() const;
  inline void set_iselfrank(::google::protobuf::int32 value);

  // required int32 iFightValue = 2;
  inline bool has_ifightvalue() const;
  inline void clear_ifightvalue();
  static const int kIFightValueFieldNumber = 2;
  inline ::google::protobuf::int32 ifightvalue() const;
  inline void set_ifightvalue(::google::protobuf::int32 value);

  // required .GSProto.ArenaChallengeInfo challengeInfo = 3;
  inline bool has_challengeinfo() const;
  inline void clear_challengeinfo();
  static const int kChallengeInfoFieldNumber = 3;
  inline const ::GSProto::ArenaChallengeInfo& challengeinfo() const;
  inline ::GSProto::ArenaChallengeInfo* mutable_challengeinfo();
  inline ::GSProto::ArenaChallengeInfo* release_challengeinfo();
  inline void set_allocated_challengeinfo(::GSProto::ArenaChallengeInfo* challengeinfo);

  // optional bool bCanGetAward = 4;
  inline bool has_bcangetaward() const;
  inline void clear_bcangetaward();
  static const int kBCanGetAwardFieldNumber = 4;
  inline bool bcangetaward() const;
  inline void set_bcangetaward(bool value);

  // required .GSProto.ArenaAppendInfo appendInfo = 5;
  inline bool has_appendinfo() const;
  inline void clear_appendinfo();
  static const int kAppendInfoFieldNumber = 5;
  inline const ::GSProto::ArenaAppendInfo& appendinfo() const;
  inline ::GSProto::ArenaAppendInfo* mutable_appendinfo();
  inline ::GSProto::ArenaAppendInfo* release_appendinfo();
  inline void set_allocated_appendinfo(::GSProto::ArenaAppendInfo* appendinfo);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_OPEN_ARENA_SC)
 private:
  inline void set_has_iselfrank();
  inline void clear_has_iselfrank();
  inline void set_has_ifightvalue();
  inline void clear_has_ifightvalue();
  inline void set_has_challengeinfo();
  inline void clear_has_challengeinfo();
  inline void set_has_bcangetaward();
  inline void clear_has_bcangetaward();
  inline void set_has_appendinfo();
  inline void clear_has_appendinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iselfrank_;
  ::google::protobuf::int32 ifightvalue_;
  ::GSProto::ArenaChallengeInfo* challengeinfo_;
  ::GSProto::ArenaAppendInfo* appendinfo_;
  bool bcangetaward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_OPEN_ARENA_SC* default_instance_;
};
// -------------------------------------------------------------------

class ArenaAwardItem : public ::google::protobuf::Message {
 public:
  ArenaAwardItem();
  virtual ~ArenaAwardItem();

  ArenaAwardItem(const ArenaAwardItem& from);

  inline ArenaAwardItem& operator=(const ArenaAwardItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaAwardItem& default_instance();

  void Swap(ArenaAwardItem* other);

  // implements Message ----------------------------------------------

  ArenaAwardItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaAwardItem& from);
  void MergeFrom(const ArenaAwardItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwTime = 1;
  inline bool has_dwtime() const;
  inline void clear_dwtime();
  static const int kDwTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 dwtime() const;
  inline void set_dwtime(::google::protobuf::uint32 value);

  // required int32 iRank = 2;
  inline bool has_irank() const;
  inline void clear_irank();
  static const int kIRankFieldNumber = 2;
  inline ::google::protobuf::int32 irank() const;
  inline void set_irank(::google::protobuf::int32 value);

  // required int32 iHonorAward = 3;
  inline bool has_ihonoraward() const;
  inline void clear_ihonoraward();
  static const int kIHonorAwardFieldNumber = 3;
  inline ::google::protobuf::int32 ihonoraward() const;
  inline void set_ihonoraward(::google::protobuf::int32 value);

  // required int32 iSilverAward = 4;
  inline bool has_isilveraward() const;
  inline void clear_isilveraward();
  static const int kISilverAwardFieldNumber = 4;
  inline ::google::protobuf::int32 isilveraward() const;
  inline void set_isilveraward(::google::protobuf::int32 value);

  // required bool bCanGetNow = 5;
  inline bool has_bcangetnow() const;
  inline void clear_bcangetnow();
  static const int kBCanGetNowFieldNumber = 5;
  inline bool bcangetnow() const;
  inline void set_bcangetnow(bool value);

  // optional int32 iLeftSecond = 6;
  inline bool has_ileftsecond() const;
  inline void clear_ileftsecond();
  static const int kILeftSecondFieldNumber = 6;
  inline ::google::protobuf::int32 ileftsecond() const;
  inline void set_ileftsecond(::google::protobuf::int32 value);

  // required string strUUID = 7;
  inline bool has_struuid() const;
  inline void clear_struuid();
  static const int kStrUUIDFieldNumber = 7;
  inline const ::std::string& struuid() const;
  inline void set_struuid(const ::std::string& value);
  inline void set_struuid(const char* value);
  inline void set_struuid(const char* value, size_t size);
  inline ::std::string* mutable_struuid();
  inline ::std::string* release_struuid();
  inline void set_allocated_struuid(::std::string* struuid);

  // optional int32 iGold = 8;
  inline bool has_igold() const;
  inline void clear_igold();
  static const int kIGoldFieldNumber = 8;
  inline ::google::protobuf::int32 igold() const;
  inline void set_igold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.ArenaAwardItem)
 private:
  inline void set_has_dwtime();
  inline void clear_has_dwtime();
  inline void set_has_irank();
  inline void clear_has_irank();
  inline void set_has_ihonoraward();
  inline void clear_has_ihonoraward();
  inline void set_has_isilveraward();
  inline void clear_has_isilveraward();
  inline void set_has_bcangetnow();
  inline void clear_has_bcangetnow();
  inline void set_has_ileftsecond();
  inline void clear_has_ileftsecond();
  inline void set_has_struuid();
  inline void clear_has_struuid();
  inline void set_has_igold();
  inline void clear_has_igold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwtime_;
  ::google::protobuf::int32 irank_;
  ::google::protobuf::int32 ihonoraward_;
  ::google::protobuf::int32 isilveraward_;
  bool bcangetnow_;
  ::google::protobuf::int32 ileftsecond_;
  ::std::string* struuid_;
  ::google::protobuf::int32 igold_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static ArenaAwardItem* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_ARENA_AWARD_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_ARENA_AWARD_SC();
  virtual ~CMD_QUERY_ARENA_AWARD_SC();

  CMD_QUERY_ARENA_AWARD_SC(const CMD_QUERY_ARENA_AWARD_SC& from);

  inline CMD_QUERY_ARENA_AWARD_SC& operator=(const CMD_QUERY_ARENA_AWARD_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_ARENA_AWARD_SC& default_instance();

  void Swap(CMD_QUERY_ARENA_AWARD_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_ARENA_AWARD_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_ARENA_AWARD_SC& from);
  void MergeFrom(const CMD_QUERY_ARENA_AWARD_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.ArenaAwardItem szArenaAwardList = 1;
  inline int szarenaawardlist_size() const;
  inline void clear_szarenaawardlist();
  static const int kSzArenaAwardListFieldNumber = 1;
  inline const ::GSProto::ArenaAwardItem& szarenaawardlist(int index) const;
  inline ::GSProto::ArenaAwardItem* mutable_szarenaawardlist(int index);
  inline ::GSProto::ArenaAwardItem* add_szarenaawardlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ArenaAwardItem >&
      szarenaawardlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::ArenaAwardItem >*
      mutable_szarenaawardlist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_ARENA_AWARD_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::ArenaAwardItem > szarenaawardlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_ARENA_AWARD_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GET_ARENA_AWARD_CS : public ::google::protobuf::Message {
 public:
  CMD_GET_ARENA_AWARD_CS();
  virtual ~CMD_GET_ARENA_AWARD_CS();

  CMD_GET_ARENA_AWARD_CS(const CMD_GET_ARENA_AWARD_CS& from);

  inline CMD_GET_ARENA_AWARD_CS& operator=(const CMD_GET_ARENA_AWARD_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GET_ARENA_AWARD_CS& default_instance();

  void Swap(CMD_GET_ARENA_AWARD_CS* other);

  // implements Message ----------------------------------------------

  CMD_GET_ARENA_AWARD_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GET_ARENA_AWARD_CS& from);
  void MergeFrom(const CMD_GET_ARENA_AWARD_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strUUID = 1;
  inline bool has_struuid() const;
  inline void clear_struuid();
  static const int kStrUUIDFieldNumber = 1;
  inline const ::std::string& struuid() const;
  inline void set_struuid(const ::std::string& value);
  inline void set_struuid(const char* value);
  inline void set_struuid(const char* value, size_t size);
  inline ::std::string* mutable_struuid();
  inline ::std::string* release_struuid();
  inline void set_allocated_struuid(::std::string* struuid);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GET_ARENA_AWARD_CS)
 private:
  inline void set_has_struuid();
  inline void clear_has_struuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* struuid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GET_ARENA_AWARD_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GET_ARENA_AWARD_SC : public ::google::protobuf::Message {
 public:
  CMD_GET_ARENA_AWARD_SC();
  virtual ~CMD_GET_ARENA_AWARD_SC();

  CMD_GET_ARENA_AWARD_SC(const CMD_GET_ARENA_AWARD_SC& from);

  inline CMD_GET_ARENA_AWARD_SC& operator=(const CMD_GET_ARENA_AWARD_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GET_ARENA_AWARD_SC& default_instance();

  void Swap(CMD_GET_ARENA_AWARD_SC* other);

  // implements Message ----------------------------------------------

  CMD_GET_ARENA_AWARD_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GET_ARENA_AWARD_SC& from);
  void MergeFrom(const CMD_GET_ARENA_AWARD_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strUUID = 1;
  inline bool has_struuid() const;
  inline void clear_struuid();
  static const int kStrUUIDFieldNumber = 1;
  inline const ::std::string& struuid() const;
  inline void set_struuid(const ::std::string& value);
  inline void set_struuid(const char* value);
  inline void set_struuid(const char* value, size_t size);
  inline ::std::string* mutable_struuid();
  inline ::std::string* release_struuid();
  inline void set_allocated_struuid(::std::string* struuid);

  // optional bool bCanGetAward = 2;
  inline bool has_bcangetaward() const;
  inline void clear_bcangetaward();
  static const int kBCanGetAwardFieldNumber = 2;
  inline bool bcangetaward() const;
  inline void set_bcangetaward(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GET_ARENA_AWARD_SC)
 private:
  inline void set_has_struuid();
  inline void clear_has_struuid();
  inline void set_has_bcangetaward();
  inline void clear_has_bcangetaward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* struuid_;
  bool bcangetaward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GET_ARENA_AWARD_SC* default_instance_;
};
// -------------------------------------------------------------------

class ArenaRankItem : public ::google::protobuf::Message {
 public:
  ArenaRankItem();
  virtual ~ArenaRankItem();

  ArenaRankItem(const ArenaRankItem& from);

  inline ArenaRankItem& operator=(const ArenaRankItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaRankItem& default_instance();

  void Swap(ArenaRankItem* other);

  // implements Message ----------------------------------------------

  ArenaRankItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaRankItem& from);
  void MergeFrom(const ArenaRankItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strName = 1;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 1;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // required int32 iLevel = 2;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 2;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // required int32 iFightValue = 3;
  inline bool has_ifightvalue() const;
  inline void clear_ifightvalue();
  static const int kIFightValueFieldNumber = 3;
  inline ::google::protobuf::int32 ifightvalue() const;
  inline void set_ifightvalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.ArenaRankItem)
 private:
  inline void set_has_strname();
  inline void clear_has_strname();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_ifightvalue();
  inline void clear_has_ifightvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strname_;
  ::google::protobuf::int32 ilevel_;
  ::google::protobuf::int32 ifightvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static ArenaRankItem* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_ARENA_RANK_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_ARENA_RANK_SC();
  virtual ~CMD_QUERY_ARENA_RANK_SC();

  CMD_QUERY_ARENA_RANK_SC(const CMD_QUERY_ARENA_RANK_SC& from);

  inline CMD_QUERY_ARENA_RANK_SC& operator=(const CMD_QUERY_ARENA_RANK_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_ARENA_RANK_SC& default_instance();

  void Swap(CMD_QUERY_ARENA_RANK_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_ARENA_RANK_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_ARENA_RANK_SC& from);
  void MergeFrom(const CMD_QUERY_ARENA_RANK_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.ArenaRankItem szRankList = 1;
  inline int szranklist_size() const;
  inline void clear_szranklist();
  static const int kSzRankListFieldNumber = 1;
  inline const ::GSProto::ArenaRankItem& szranklist(int index) const;
  inline ::GSProto::ArenaRankItem* mutable_szranklist(int index);
  inline ::GSProto::ArenaRankItem* add_szranklist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ArenaRankItem >&
      szranklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::ArenaRankItem >*
      mutable_szranklist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_ARENA_RANK_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::ArenaRankItem > szranklist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_ARENA_RANK_SC* default_instance_;
};
// -------------------------------------------------------------------

class ArenaLogItem : public ::google::protobuf::Message {
 public:
  ArenaLogItem();
  virtual ~ArenaLogItem();

  ArenaLogItem(const ArenaLogItem& from);

  inline ArenaLogItem& operator=(const ArenaLogItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaLogItem& default_instance();

  void Swap(ArenaLogItem* other);

  // implements Message ----------------------------------------------

  ArenaLogItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaLogItem& from);
  void MergeFrom(const ArenaLogItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strAttName = 1;
  inline bool has_strattname() const;
  inline void clear_strattname();
  static const int kStrAttNameFieldNumber = 1;
  inline const ::std::string& strattname() const;
  inline void set_strattname(const ::std::string& value);
  inline void set_strattname(const char* value);
  inline void set_strattname(const char* value, size_t size);
  inline ::std::string* mutable_strattname();
  inline ::std::string* release_strattname();
  inline void set_allocated_strattname(::std::string* strattname);

  // required string strTarget = 2;
  inline bool has_strtarget() const;
  inline void clear_strtarget();
  static const int kStrTargetFieldNumber = 2;
  inline const ::std::string& strtarget() const;
  inline void set_strtarget(const ::std::string& value);
  inline void set_strtarget(const char* value);
  inline void set_strtarget(const char* value, size_t size);
  inline ::std::string* mutable_strtarget();
  inline ::std::string* release_strtarget();
  inline void set_allocated_strtarget(::std::string* strtarget);

  // required bool bAttackerWin = 3;
  inline bool has_battackerwin() const;
  inline void clear_battackerwin();
  static const int kBAttackerWinFieldNumber = 3;
  inline bool battackerwin() const;
  inline void set_battackerwin(bool value);

  // required int32 iRankChgType = 4;
  inline bool has_irankchgtype() const;
  inline void clear_irankchgtype();
  static const int kIRankChgTypeFieldNumber = 4;
  inline ::google::protobuf::int32 irankchgtype() const;
  inline void set_irankchgtype(::google::protobuf::int32 value);

  // optional int32 iRank = 5;
  inline bool has_irank() const;
  inline void clear_irank();
  static const int kIRankFieldNumber = 5;
  inline ::google::protobuf::int32 irank() const;
  inline void set_irank(::google::protobuf::int32 value);

  // required string strUUID = 6;
  inline bool has_struuid() const;
  inline void clear_struuid();
  static const int kStrUUIDFieldNumber = 6;
  inline const ::std::string& struuid() const;
  inline void set_struuid(const ::std::string& value);
  inline void set_struuid(const char* value);
  inline void set_struuid(const char* value, size_t size);
  inline ::std::string* mutable_struuid();
  inline ::std::string* release_struuid();
  inline void set_allocated_struuid(::std::string* struuid);

  // @@protoc_insertion_point(class_scope:GSProto.ArenaLogItem)
 private:
  inline void set_has_strattname();
  inline void clear_has_strattname();
  inline void set_has_strtarget();
  inline void clear_has_strtarget();
  inline void set_has_battackerwin();
  inline void clear_has_battackerwin();
  inline void set_has_irankchgtype();
  inline void clear_has_irankchgtype();
  inline void set_has_irank();
  inline void clear_has_irank();
  inline void set_has_struuid();
  inline void clear_has_struuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strattname_;
  ::std::string* strtarget_;
  bool battackerwin_;
  ::google::protobuf::int32 irankchgtype_;
  ::std::string* struuid_;
  ::google::protobuf::int32 irank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static ArenaLogItem* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_ARENA_LOG_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_ARENA_LOG_SC();
  virtual ~CMD_QUERY_ARENA_LOG_SC();

  CMD_QUERY_ARENA_LOG_SC(const CMD_QUERY_ARENA_LOG_SC& from);

  inline CMD_QUERY_ARENA_LOG_SC& operator=(const CMD_QUERY_ARENA_LOG_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_ARENA_LOG_SC& default_instance();

  void Swap(CMD_QUERY_ARENA_LOG_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_ARENA_LOG_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_ARENA_LOG_SC& from);
  void MergeFrom(const CMD_QUERY_ARENA_LOG_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.ArenaLogItem szLogItemList = 1;
  inline int szlogitemlist_size() const;
  inline void clear_szlogitemlist();
  static const int kSzLogItemListFieldNumber = 1;
  inline const ::GSProto::ArenaLogItem& szlogitemlist(int index) const;
  inline ::GSProto::ArenaLogItem* mutable_szlogitemlist(int index);
  inline ::GSProto::ArenaLogItem* add_szlogitemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ArenaLogItem >&
      szlogitemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::ArenaLogItem >*
      mutable_szlogitemlist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_ARENA_LOG_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::ArenaLogItem > szlogitemlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_ARENA_LOG_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_ARENA_FIGHT_CS : public ::google::protobuf::Message {
 public:
  CMD_ARENA_FIGHT_CS();
  virtual ~CMD_ARENA_FIGHT_CS();

  CMD_ARENA_FIGHT_CS(const CMD_ARENA_FIGHT_CS& from);

  inline CMD_ARENA_FIGHT_CS& operator=(const CMD_ARENA_FIGHT_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_ARENA_FIGHT_CS& default_instance();

  void Swap(CMD_ARENA_FIGHT_CS* other);

  // implements Message ----------------------------------------------

  CMD_ARENA_FIGHT_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_ARENA_FIGHT_CS& from);
  void MergeFrom(const CMD_ARENA_FIGHT_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iRank = 1;
  inline bool has_irank() const;
  inline void clear_irank();
  static const int kIRankFieldNumber = 1;
  inline ::google::protobuf::int32 irank() const;
  inline void set_irank(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_ARENA_FIGHT_CS)
 private:
  inline void set_has_irank();
  inline void clear_has_irank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 irank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_ARENA_FIGHT_CS* default_instance_;
};
// -------------------------------------------------------------------

class RankNodeInfo : public ::google::protobuf::Message {
 public:
  RankNodeInfo();
  virtual ~RankNodeInfo();

  RankNodeInfo(const RankNodeInfo& from);

  inline RankNodeInfo& operator=(const RankNodeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankNodeInfo& default_instance();

  void Swap(RankNodeInfo* other);

  // implements Message ----------------------------------------------

  RankNodeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RankNodeInfo& from);
  void MergeFrom(const RankNodeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iMainHeroId = 1;
  inline bool has_imainheroid() const;
  inline void clear_imainheroid();
  static const int kIMainHeroIdFieldNumber = 1;
  inline ::google::protobuf::int32 imainheroid() const;
  inline void set_imainheroid(::google::protobuf::int32 value);

  // required int32 iActorHonor = 2;
  inline bool has_iactorhonor() const;
  inline void clear_iactorhonor();
  static const int kIActorHonorFieldNumber = 2;
  inline ::google::protobuf::int32 iactorhonor() const;
  inline void set_iactorhonor(::google::protobuf::int32 value);

  // required string strActorName = 3;
  inline bool has_stractorname() const;
  inline void clear_stractorname();
  static const int kStrActorNameFieldNumber = 3;
  inline const ::std::string& stractorname() const;
  inline void set_stractorname(const ::std::string& value);
  inline void set_stractorname(const char* value);
  inline void set_stractorname(const char* value, size_t size);
  inline ::std::string* mutable_stractorname();
  inline ::std::string* release_stractorname();
  inline void set_allocated_stractorname(::std::string* stractorname);

  // @@protoc_insertion_point(class_scope:GSProto.RankNodeInfo)
 private:
  inline void set_has_imainheroid();
  inline void clear_has_imainheroid();
  inline void set_has_iactorhonor();
  inline void clear_has_iactorhonor();
  inline void set_has_stractorname();
  inline void clear_has_stractorname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 imainheroid_;
  ::google::protobuf::int32 iactorhonor_;
  ::std::string* stractorname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static RankNodeInfo* default_instance_;
};
// -------------------------------------------------------------------

class CampBattlePlayerDetail : public ::google::protobuf::Message {
 public:
  CampBattlePlayerDetail();
  virtual ~CampBattlePlayerDetail();

  CampBattlePlayerDetail(const CampBattlePlayerDetail& from);

  inline CampBattlePlayerDetail& operator=(const CampBattlePlayerDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CampBattlePlayerDetail& default_instance();

  void Swap(CampBattlePlayerDetail* other);

  // implements Message ----------------------------------------------

  CampBattlePlayerDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CampBattlePlayerDetail& from);
  void MergeFrom(const CampBattlePlayerDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iTopDoubleHitTimes = 1;
  inline bool has_itopdoublehittimes() const;
  inline void clear_itopdoublehittimes();
  static const int kITopDoubleHitTimesFieldNumber = 1;
  inline ::google::protobuf::int32 itopdoublehittimes() const;
  inline void set_itopdoublehittimes(::google::protobuf::int32 value);

  // required int32 iCurDoubleHitTimes = 2;
  inline bool has_icurdoublehittimes() const;
  inline void clear_icurdoublehittimes();
  static const int kICurDoubleHitTimesFieldNumber = 2;
  inline ::google::protobuf::int32 icurdoublehittimes() const;
  inline void set_icurdoublehittimes(::google::protobuf::int32 value);

  // required int32 iSumWinTimes = 3;
  inline bool has_isumwintimes() const;
  inline void clear_isumwintimes();
  static const int kISumWinTimesFieldNumber = 3;
  inline ::google::protobuf::int32 isumwintimes() const;
  inline void set_isumwintimes(::google::protobuf::int32 value);

  // required int32 iSumFailedTimes = 4;
  inline bool has_isumfailedtimes() const;
  inline void clear_isumfailedtimes();
  static const int kISumFailedTimesFieldNumber = 4;
  inline ::google::protobuf::int32 isumfailedtimes() const;
  inline void set_isumfailedtimes(::google::protobuf::int32 value);

  // required int32 iSumHonor = 5;
  inline bool has_isumhonor() const;
  inline void clear_isumhonor();
  static const int kISumHonorFieldNumber = 5;
  inline ::google::protobuf::int32 isumhonor() const;
  inline void set_isumhonor(::google::protobuf::int32 value);

  // required int32 iSumSilverCount = 6;
  inline bool has_isumsilvercount() const;
  inline void clear_isumsilvercount();
  static const int kISumSilverCountFieldNumber = 6;
  inline ::google::protobuf::int32 isumsilvercount() const;
  inline void set_isumsilvercount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CampBattlePlayerDetail)
 private:
  inline void set_has_itopdoublehittimes();
  inline void clear_has_itopdoublehittimes();
  inline void set_has_icurdoublehittimes();
  inline void clear_has_icurdoublehittimes();
  inline void set_has_isumwintimes();
  inline void clear_has_isumwintimes();
  inline void set_has_isumfailedtimes();
  inline void clear_has_isumfailedtimes();
  inline void set_has_isumhonor();
  inline void clear_has_isumhonor();
  inline void set_has_isumsilvercount();
  inline void clear_has_isumsilvercount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itopdoublehittimes_;
  ::google::protobuf::int32 icurdoublehittimes_;
  ::google::protobuf::int32 isumwintimes_;
  ::google::protobuf::int32 isumfailedtimes_;
  ::google::protobuf::int32 isumhonor_;
  ::google::protobuf::int32 isumsilvercount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CampBattlePlayerDetail* default_instance_;
};
// -------------------------------------------------------------------

class RemaindTime : public ::google::protobuf::Message {
 public:
  RemaindTime();
  virtual ~RemaindTime();

  RemaindTime(const RemaindTime& from);

  inline RemaindTime& operator=(const RemaindTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemaindTime& default_instance();

  void Swap(RemaindTime* other);

  // implements Message ----------------------------------------------

  RemaindTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemaindTime& from);
  void MergeFrom(const RemaindTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bIsStarted = 1;
  inline bool has_bisstarted() const;
  inline void clear_bisstarted();
  static const int kBIsStartedFieldNumber = 1;
  inline bool bisstarted() const;
  inline void set_bisstarted(bool value);

  // required int32 iRemaindSecond = 2;
  inline bool has_iremaindsecond() const;
  inline void clear_iremaindsecond();
  static const int kIRemaindSecondFieldNumber = 2;
  inline ::google::protobuf::int32 iremaindsecond() const;
  inline void set_iremaindsecond(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.RemaindTime)
 private:
  inline void set_has_bisstarted();
  inline void clear_has_bisstarted();
  inline void set_has_iremaindsecond();
  inline void clear_has_iremaindsecond();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool bisstarted_;
  ::google::protobuf::int32 iremaindsecond_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static RemaindTime* default_instance_;
};
// -------------------------------------------------------------------

class CMD_CAMPBATTLE_OPEN_SC : public ::google::protobuf::Message {
 public:
  CMD_CAMPBATTLE_OPEN_SC();
  virtual ~CMD_CAMPBATTLE_OPEN_SC();

  CMD_CAMPBATTLE_OPEN_SC(const CMD_CAMPBATTLE_OPEN_SC& from);

  inline CMD_CAMPBATTLE_OPEN_SC& operator=(const CMD_CAMPBATTLE_OPEN_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_CAMPBATTLE_OPEN_SC& default_instance();

  void Swap(CMD_CAMPBATTLE_OPEN_SC* other);

  // implements Message ----------------------------------------------

  CMD_CAMPBATTLE_OPEN_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_CAMPBATTLE_OPEN_SC& from);
  void MergeFrom(const CMD_CAMPBATTLE_OPEN_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.RankNodeInfo szLeftRankList = 1;
  inline int szleftranklist_size() const;
  inline void clear_szleftranklist();
  static const int kSzLeftRankListFieldNumber = 1;
  inline const ::GSProto::RankNodeInfo& szleftranklist(int index) const;
  inline ::GSProto::RankNodeInfo* mutable_szleftranklist(int index);
  inline ::GSProto::RankNodeInfo* add_szleftranklist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::RankNodeInfo >&
      szleftranklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::RankNodeInfo >*
      mutable_szleftranklist();

  // repeated .GSProto.RankNodeInfo szRightRankList = 2;
  inline int szrightranklist_size() const;
  inline void clear_szrightranklist();
  static const int kSzRightRankListFieldNumber = 2;
  inline const ::GSProto::RankNodeInfo& szrightranklist(int index) const;
  inline ::GSProto::RankNodeInfo* mutable_szrightranklist(int index);
  inline ::GSProto::RankNodeInfo* add_szrightranklist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::RankNodeInfo >&
      szrightranklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::RankNodeInfo >*
      mutable_szrightranklist();

  // required .GSProto.CampBattlePlayerDetail playerDetail = 3;
  inline bool has_playerdetail() const;
  inline void clear_playerdetail();
  static const int kPlayerDetailFieldNumber = 3;
  inline const ::GSProto::CampBattlePlayerDetail& playerdetail() const;
  inline ::GSProto::CampBattlePlayerDetail* mutable_playerdetail();
  inline ::GSProto::CampBattlePlayerDetail* release_playerdetail();
  inline void set_allocated_playerdetail(::GSProto::CampBattlePlayerDetail* playerdetail);

  // required .GSProto.RemaindTime remaindTime = 4;
  inline bool has_remaindtime() const;
  inline void clear_remaindtime();
  static const int kRemaindTimeFieldNumber = 4;
  inline const ::GSProto::RemaindTime& remaindtime() const;
  inline ::GSProto::RemaindTime* mutable_remaindtime();
  inline ::GSProto::RemaindTime* release_remaindtime();
  inline void set_allocated_remaindtime(::GSProto::RemaindTime* remaindtime);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_CAMPBATTLE_OPEN_SC)
 private:
  inline void set_has_playerdetail();
  inline void clear_has_playerdetail();
  inline void set_has_remaindtime();
  inline void clear_has_remaindtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::RankNodeInfo > szleftranklist_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::RankNodeInfo > szrightranklist_;
  ::GSProto::CampBattlePlayerDetail* playerdetail_;
  ::GSProto::RemaindTime* remaindtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_CAMPBATTLE_OPEN_SC* default_instance_;
};
// -------------------------------------------------------------------

class CampBattleReport : public ::google::protobuf::Message {
 public:
  CampBattleReport();
  virtual ~CampBattleReport();

  CampBattleReport(const CampBattleReport& from);

  inline CampBattleReport& operator=(const CampBattleReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CampBattleReport& default_instance();

  void Swap(CampBattleReport* other);

  // implements Message ----------------------------------------------

  CampBattleReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CampBattleReport& from);
  void MergeFrom(const CampBattleReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strWinActorName = 2;
  inline bool has_strwinactorname() const;
  inline void clear_strwinactorname();
  static const int kStrWinActorNameFieldNumber = 2;
  inline const ::std::string& strwinactorname() const;
  inline void set_strwinactorname(const ::std::string& value);
  inline void set_strwinactorname(const char* value);
  inline void set_strwinactorname(const char* value, size_t size);
  inline ::std::string* mutable_strwinactorname();
  inline ::std::string* release_strwinactorname();
  inline void set_allocated_strwinactorname(::std::string* strwinactorname);

  // required string strFailedActorName = 3;
  inline bool has_strfailedactorname() const;
  inline void clear_strfailedactorname();
  static const int kStrFailedActorNameFieldNumber = 3;
  inline const ::std::string& strfailedactorname() const;
  inline void set_strfailedactorname(const ::std::string& value);
  inline void set_strfailedactorname(const char* value);
  inline void set_strfailedactorname(const char* value, size_t size);
  inline ::std::string* mutable_strfailedactorname();
  inline ::std::string* release_strfailedactorname();
  inline void set_allocated_strfailedactorname(::std::string* strfailedactorname);

  // required int32 iBattleResoultType = 4;
  inline bool has_ibattleresoulttype() const;
  inline void clear_ibattleresoulttype();
  static const int kIBattleResoultTypeFieldNumber = 4;
  inline ::google::protobuf::int32 ibattleresoulttype() const;
  inline void set_ibattleresoulttype(::google::protobuf::int32 value);

  // optional int32 iCurDoubleHitTimes = 5;
  inline bool has_icurdoublehittimes() const;
  inline void clear_icurdoublehittimes();
  static const int kICurDoubleHitTimesFieldNumber = 5;
  inline ::google::protobuf::int32 icurdoublehittimes() const;
  inline void set_icurdoublehittimes(::google::protobuf::int32 value);

  // required int32 iRewardSilver = 6;
  inline bool has_irewardsilver() const;
  inline void clear_irewardsilver();
  static const int kIRewardSilverFieldNumber = 6;
  inline ::google::protobuf::int32 irewardsilver() const;
  inline void set_irewardsilver(::google::protobuf::int32 value);

  // required int32 iRewardHonor = 7;
  inline bool has_irewardhonor() const;
  inline void clear_irewardhonor();
  static const int kIRewardHonorFieldNumber = 7;
  inline ::google::protobuf::int32 irewardhonor() const;
  inline void set_irewardhonor(::google::protobuf::int32 value);

  // required int32 iWinerCampId = 8;
  inline bool has_iwinercampid() const;
  inline void clear_iwinercampid();
  static const int kIWinerCampIdFieldNumber = 8;
  inline ::google::protobuf::int32 iwinercampid() const;
  inline void set_iwinercampid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CampBattleReport)
 private:
  inline void set_has_strwinactorname();
  inline void clear_has_strwinactorname();
  inline void set_has_strfailedactorname();
  inline void clear_has_strfailedactorname();
  inline void set_has_ibattleresoulttype();
  inline void clear_has_ibattleresoulttype();
  inline void set_has_icurdoublehittimes();
  inline void clear_has_icurdoublehittimes();
  inline void set_has_irewardsilver();
  inline void clear_has_irewardsilver();
  inline void set_has_irewardhonor();
  inline void clear_has_irewardhonor();
  inline void set_has_iwinercampid();
  inline void clear_has_iwinercampid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strwinactorname_;
  ::std::string* strfailedactorname_;
  ::google::protobuf::int32 ibattleresoulttype_;
  ::google::protobuf::int32 icurdoublehittimes_;
  ::google::protobuf::int32 irewardsilver_;
  ::google::protobuf::int32 irewardhonor_;
  ::google::protobuf::int32 iwinercampid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CampBattleReport* default_instance_;
};
// -------------------------------------------------------------------

class CMD_CAMPBATTLE_BATTLE_LOG_SC : public ::google::protobuf::Message {
 public:
  CMD_CAMPBATTLE_BATTLE_LOG_SC();
  virtual ~CMD_CAMPBATTLE_BATTLE_LOG_SC();

  CMD_CAMPBATTLE_BATTLE_LOG_SC(const CMD_CAMPBATTLE_BATTLE_LOG_SC& from);

  inline CMD_CAMPBATTLE_BATTLE_LOG_SC& operator=(const CMD_CAMPBATTLE_BATTLE_LOG_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_CAMPBATTLE_BATTLE_LOG_SC& default_instance();

  void Swap(CMD_CAMPBATTLE_BATTLE_LOG_SC* other);

  // implements Message ----------------------------------------------

  CMD_CAMPBATTLE_BATTLE_LOG_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_CAMPBATTLE_BATTLE_LOG_SC& from);
  void MergeFrom(const CMD_CAMPBATTLE_BATTLE_LOG_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.CampBattleReport szBattleReport = 1;
  inline int szbattlereport_size() const;
  inline void clear_szbattlereport();
  static const int kSzBattleReportFieldNumber = 1;
  inline const ::GSProto::CampBattleReport& szbattlereport(int index) const;
  inline ::GSProto::CampBattleReport* mutable_szbattlereport(int index);
  inline ::GSProto::CampBattleReport* add_szbattlereport();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::CampBattleReport >&
      szbattlereport() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::CampBattleReport >*
      mutable_szbattlereport();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_CAMPBATTLE_BATTLE_LOG_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::CampBattleReport > szbattlereport_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_CAMPBATTLE_BATTLE_LOG_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_CAMPBATTLE_REFREASH_RANKLIST_SC : public ::google::protobuf::Message {
 public:
  CMD_CAMPBATTLE_REFREASH_RANKLIST_SC();
  virtual ~CMD_CAMPBATTLE_REFREASH_RANKLIST_SC();

  CMD_CAMPBATTLE_REFREASH_RANKLIST_SC(const CMD_CAMPBATTLE_REFREASH_RANKLIST_SC& from);

  inline CMD_CAMPBATTLE_REFREASH_RANKLIST_SC& operator=(const CMD_CAMPBATTLE_REFREASH_RANKLIST_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_CAMPBATTLE_REFREASH_RANKLIST_SC& default_instance();

  void Swap(CMD_CAMPBATTLE_REFREASH_RANKLIST_SC* other);

  // implements Message ----------------------------------------------

  CMD_CAMPBATTLE_REFREASH_RANKLIST_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_CAMPBATTLE_REFREASH_RANKLIST_SC& from);
  void MergeFrom(const CMD_CAMPBATTLE_REFREASH_RANKLIST_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.RankNodeInfo szLeftRankList = 1;
  inline int szleftranklist_size() const;
  inline void clear_szleftranklist();
  static const int kSzLeftRankListFieldNumber = 1;
  inline const ::GSProto::RankNodeInfo& szleftranklist(int index) const;
  inline ::GSProto::RankNodeInfo* mutable_szleftranklist(int index);
  inline ::GSProto::RankNodeInfo* add_szleftranklist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::RankNodeInfo >&
      szleftranklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::RankNodeInfo >*
      mutable_szleftranklist();

  // repeated .GSProto.RankNodeInfo szRightRankList = 2;
  inline int szrightranklist_size() const;
  inline void clear_szrightranklist();
  static const int kSzRightRankListFieldNumber = 2;
  inline const ::GSProto::RankNodeInfo& szrightranklist(int index) const;
  inline ::GSProto::RankNodeInfo* mutable_szrightranklist(int index);
  inline ::GSProto::RankNodeInfo* add_szrightranklist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::RankNodeInfo >&
      szrightranklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::RankNodeInfo >*
      mutable_szrightranklist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_CAMPBATTLE_REFREASH_RANKLIST_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::RankNodeInfo > szleftranklist_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::RankNodeInfo > szrightranklist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_CAMPBATTLE_REFREASH_RANKLIST_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC : public ::google::protobuf::Message {
 public:
  CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC();
  virtual ~CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC();

  CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC(const CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC& from);

  inline CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC& operator=(const CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC& default_instance();

  void Swap(CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC* other);

  // implements Message ----------------------------------------------

  CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC& from);
  void MergeFrom(const CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.CampBattlePlayerDetail playerDetail = 8;
  inline bool has_playerdetail() const;
  inline void clear_playerdetail();
  static const int kPlayerDetailFieldNumber = 8;
  inline const ::GSProto::CampBattlePlayerDetail& playerdetail() const;
  inline ::GSProto::CampBattlePlayerDetail* mutable_playerdetail();
  inline ::GSProto::CampBattlePlayerDetail* release_playerdetail();
  inline void set_allocated_playerdetail(::GSProto::CampBattlePlayerDetail* playerdetail);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC)
 private:
  inline void set_has_playerdetail();
  inline void clear_has_playerdetail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::CampBattlePlayerDetail* playerdetail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_CAMPBATTLE_REFREASH_TIME_SC : public ::google::protobuf::Message {
 public:
  CMD_CAMPBATTLE_REFREASH_TIME_SC();
  virtual ~CMD_CAMPBATTLE_REFREASH_TIME_SC();

  CMD_CAMPBATTLE_REFREASH_TIME_SC(const CMD_CAMPBATTLE_REFREASH_TIME_SC& from);

  inline CMD_CAMPBATTLE_REFREASH_TIME_SC& operator=(const CMD_CAMPBATTLE_REFREASH_TIME_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_CAMPBATTLE_REFREASH_TIME_SC& default_instance();

  void Swap(CMD_CAMPBATTLE_REFREASH_TIME_SC* other);

  // implements Message ----------------------------------------------

  CMD_CAMPBATTLE_REFREASH_TIME_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_CAMPBATTLE_REFREASH_TIME_SC& from);
  void MergeFrom(const CMD_CAMPBATTLE_REFREASH_TIME_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.RemaindTime remaindTime = 1;
  inline bool has_remaindtime() const;
  inline void clear_remaindtime();
  static const int kRemaindTimeFieldNumber = 1;
  inline const ::GSProto::RemaindTime& remaindtime() const;
  inline ::GSProto::RemaindTime* mutable_remaindtime();
  inline ::GSProto::RemaindTime* release_remaindtime();
  inline void set_allocated_remaindtime(::GSProto::RemaindTime* remaindtime);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_CAMPBATTLE_REFREASH_TIME_SC)
 private:
  inline void set_has_remaindtime();
  inline void clear_has_remaindtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::RemaindTime* remaindtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_CAMPBATTLE_REFREASH_TIME_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_CMAPBATTLE_SYSTEM_CLOSE_SC : public ::google::protobuf::Message {
 public:
  CMD_CMAPBATTLE_SYSTEM_CLOSE_SC();
  virtual ~CMD_CMAPBATTLE_SYSTEM_CLOSE_SC();

  CMD_CMAPBATTLE_SYSTEM_CLOSE_SC(const CMD_CMAPBATTLE_SYSTEM_CLOSE_SC& from);

  inline CMD_CMAPBATTLE_SYSTEM_CLOSE_SC& operator=(const CMD_CMAPBATTLE_SYSTEM_CLOSE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_CMAPBATTLE_SYSTEM_CLOSE_SC& default_instance();

  void Swap(CMD_CMAPBATTLE_SYSTEM_CLOSE_SC* other);

  // implements Message ----------------------------------------------

  CMD_CMAPBATTLE_SYSTEM_CLOSE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_CMAPBATTLE_SYSTEM_CLOSE_SC& from);
  void MergeFrom(const CMD_CMAPBATTLE_SYSTEM_CLOSE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iTopDoubleHitCount = 1;
  inline bool has_itopdoublehitcount() const;
  inline void clear_itopdoublehitcount();
  static const int kITopDoubleHitCountFieldNumber = 1;
  inline ::google::protobuf::int32 itopdoublehitcount() const;
  inline void set_itopdoublehitcount(::google::protobuf::int32 value);

  // required int32 iWinTimes = 2;
  inline bool has_iwintimes() const;
  inline void clear_iwintimes();
  static const int kIWinTimesFieldNumber = 2;
  inline ::google::protobuf::int32 iwintimes() const;
  inline void set_iwintimes(::google::protobuf::int32 value);

  // required int32 iFailedTimes = 3;
  inline bool has_ifailedtimes() const;
  inline void clear_ifailedtimes();
  static const int kIFailedTimesFieldNumber = 3;
  inline ::google::protobuf::int32 ifailedtimes() const;
  inline void set_ifailedtimes(::google::protobuf::int32 value);

  // required int32 iRewardHonor = 4;
  inline bool has_irewardhonor() const;
  inline void clear_irewardhonor();
  static const int kIRewardHonorFieldNumber = 4;
  inline ::google::protobuf::int32 irewardhonor() const;
  inline void set_irewardhonor(::google::protobuf::int32 value);

  // required int32 iRewardSilver = 5;
  inline bool has_irewardsilver() const;
  inline void clear_irewardsilver();
  static const int kIRewardSilverFieldNumber = 5;
  inline ::google::protobuf::int32 irewardsilver() const;
  inline void set_irewardsilver(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_CMAPBATTLE_SYSTEM_CLOSE_SC)
 private:
  inline void set_has_itopdoublehitcount();
  inline void clear_has_itopdoublehitcount();
  inline void set_has_iwintimes();
  inline void clear_has_iwintimes();
  inline void set_has_ifailedtimes();
  inline void clear_has_ifailedtimes();
  inline void set_has_irewardhonor();
  inline void clear_has_irewardhonor();
  inline void set_has_irewardsilver();
  inline void clear_has_irewardsilver();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itopdoublehitcount_;
  ::google::protobuf::int32 iwintimes_;
  ::google::protobuf::int32 ifailedtimes_;
  ::google::protobuf::int32 irewardhonor_;
  ::google::protobuf::int32 irewardsilver_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_CMAPBATTLE_SYSTEM_CLOSE_SC* default_instance_;
};
// -------------------------------------------------------------------

class FriendNodeInfo : public ::google::protobuf::Message {
 public:
  FriendNodeInfo();
  virtual ~FriendNodeInfo();

  FriendNodeInfo(const FriendNodeInfo& from);

  inline FriendNodeInfo& operator=(const FriendNodeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendNodeInfo& default_instance();

  void Swap(FriendNodeInfo* other);

  // implements Message ----------------------------------------------

  FriendNodeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendNodeInfo& from);
  void MergeFrom(const FriendNodeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iVisibleHeroID = 1;
  inline bool has_ivisibleheroid() const;
  inline void clear_ivisibleheroid();
  static const int kIVisibleHeroIDFieldNumber = 1;
  inline ::google::protobuf::int32 ivisibleheroid() const;
  inline void set_ivisibleheroid(::google::protobuf::int32 value);

  // required string strFriendName = 2;
  inline bool has_strfriendname() const;
  inline void clear_strfriendname();
  static const int kStrFriendNameFieldNumber = 2;
  inline const ::std::string& strfriendname() const;
  inline void set_strfriendname(const ::std::string& value);
  inline void set_strfriendname(const char* value);
  inline void set_strfriendname(const char* value, size_t size);
  inline ::std::string* mutable_strfriendname();
  inline ::std::string* release_strfriendname();
  inline void set_allocated_strfriendname(::std::string* strfriendname);

  // required int32 iFriendLevel = 3;
  inline bool has_ifriendlevel() const;
  inline void clear_ifriendlevel();
  static const int kIFriendLevelFieldNumber = 3;
  inline ::google::protobuf::int32 ifriendlevel() const;
  inline void set_ifriendlevel(::google::protobuf::int32 value);

  // required bool bIsOnLine = 4;
  inline bool has_bisonline() const;
  inline void clear_bisonline();
  static const int kBIsOnLineFieldNumber = 4;
  inline bool bisonline() const;
  inline void set_bisonline(bool value);

  // optional int32 iGetType = 5;
  inline bool has_igettype() const;
  inline void clear_igettype();
  static const int kIGetTypeFieldNumber = 5;
  inline ::google::protobuf::int32 igettype() const;
  inline void set_igettype(::google::protobuf::int32 value);

  // optional bool iHaveGive = 6;
  inline bool has_ihavegive() const;
  inline void clear_ihavegive();
  static const int kIHaveGiveFieldNumber = 6;
  inline bool ihavegive() const;
  inline void set_ihavegive(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.FriendNodeInfo)
 private:
  inline void set_has_ivisibleheroid();
  inline void clear_has_ivisibleheroid();
  inline void set_has_strfriendname();
  inline void clear_has_strfriendname();
  inline void set_has_ifriendlevel();
  inline void clear_has_ifriendlevel();
  inline void set_has_bisonline();
  inline void clear_has_bisonline();
  inline void set_has_igettype();
  inline void clear_has_igettype();
  inline void set_has_ihavegive();
  inline void clear_has_ihavegive();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strfriendname_;
  ::google::protobuf::int32 ivisibleheroid_;
  ::google::protobuf::int32 ifriendlevel_;
  ::google::protobuf::int32 igettype_;
  bool bisonline_;
  bool ihavegive_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FriendNodeInfo* default_instance_;
};
// -------------------------------------------------------------------

class FriendPhyStrengthDetail : public ::google::protobuf::Message {
 public:
  FriendPhyStrengthDetail();
  virtual ~FriendPhyStrengthDetail();

  FriendPhyStrengthDetail(const FriendPhyStrengthDetail& from);

  inline FriendPhyStrengthDetail& operator=(const FriendPhyStrengthDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendPhyStrengthDetail& default_instance();

  void Swap(FriendPhyStrengthDetail* other);

  // implements Message ----------------------------------------------

  FriendPhyStrengthDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FriendPhyStrengthDetail& from);
  void MergeFrom(const FriendPhyStrengthDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iGetTimes = 1;
  inline bool has_igettimes() const;
  inline void clear_igettimes();
  static const int kIGetTimesFieldNumber = 1;
  inline ::google::protobuf::int32 igettimes() const;
  inline void set_igettimes(::google::protobuf::int32 value);

  // required int32 iGiveTimes = 2;
  inline bool has_igivetimes() const;
  inline void clear_igivetimes();
  static const int kIGiveTimesFieldNumber = 2;
  inline ::google::protobuf::int32 igivetimes() const;
  inline void set_igivetimes(::google::protobuf::int32 value);

  // required int32 iTopGetTimes = 3;
  inline bool has_itopgettimes() const;
  inline void clear_itopgettimes();
  static const int kITopGetTimesFieldNumber = 3;
  inline ::google::protobuf::int32 itopgettimes() const;
  inline void set_itopgettimes(::google::protobuf::int32 value);

  // required int32 iTopGiveTimes = 4;
  inline bool has_itopgivetimes() const;
  inline void clear_itopgivetimes();
  static const int kITopGiveTimesFieldNumber = 4;
  inline ::google::protobuf::int32 itopgivetimes() const;
  inline void set_itopgivetimes(::google::protobuf::int32 value);

  // required int32 iFrendCountLimit = 5;
  inline bool has_ifrendcountlimit() const;
  inline void clear_ifrendcountlimit();
  static const int kIFrendCountLimitFieldNumber = 5;
  inline ::google::protobuf::int32 ifrendcountlimit() const;
  inline void set_ifrendcountlimit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.FriendPhyStrengthDetail)
 private:
  inline void set_has_igettimes();
  inline void clear_has_igettimes();
  inline void set_has_igivetimes();
  inline void clear_has_igivetimes();
  inline void set_has_itopgettimes();
  inline void clear_has_itopgettimes();
  inline void set_has_itopgivetimes();
  inline void clear_has_itopgivetimes();
  inline void set_has_ifrendcountlimit();
  inline void clear_has_ifrendcountlimit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 igettimes_;
  ::google::protobuf::int32 igivetimes_;
  ::google::protobuf::int32 itopgettimes_;
  ::google::protobuf::int32 itopgivetimes_;
  ::google::protobuf::int32 ifrendcountlimit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static FriendPhyStrengthDetail* default_instance_;
};
// -------------------------------------------------------------------

class CMD_FRIENDSYSTEM_QUERY_SC : public ::google::protobuf::Message {
 public:
  CMD_FRIENDSYSTEM_QUERY_SC();
  virtual ~CMD_FRIENDSYSTEM_QUERY_SC();

  CMD_FRIENDSYSTEM_QUERY_SC(const CMD_FRIENDSYSTEM_QUERY_SC& from);

  inline CMD_FRIENDSYSTEM_QUERY_SC& operator=(const CMD_FRIENDSYSTEM_QUERY_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_FRIENDSYSTEM_QUERY_SC& default_instance();

  void Swap(CMD_FRIENDSYSTEM_QUERY_SC* other);

  // implements Message ----------------------------------------------

  CMD_FRIENDSYSTEM_QUERY_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_FRIENDSYSTEM_QUERY_SC& from);
  void MergeFrom(const CMD_FRIENDSYSTEM_QUERY_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bIsHaveRequest = 1;
  inline bool has_bishaverequest() const;
  inline void clear_bishaverequest();
  static const int kBIsHaveRequestFieldNumber = 1;
  inline bool bishaverequest() const;
  inline void set_bishaverequest(bool value);

  // optional .GSProto.FriendPhyStrengthDetail detail = 2;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 2;
  inline const ::GSProto::FriendPhyStrengthDetail& detail() const;
  inline ::GSProto::FriendPhyStrengthDetail* mutable_detail();
  inline ::GSProto::FriendPhyStrengthDetail* release_detail();
  inline void set_allocated_detail(::GSProto::FriendPhyStrengthDetail* detail);

  // repeated .GSProto.FriendNodeInfo szFriendList = 3;
  inline int szfriendlist_size() const;
  inline void clear_szfriendlist();
  static const int kSzFriendListFieldNumber = 3;
  inline const ::GSProto::FriendNodeInfo& szfriendlist(int index) const;
  inline ::GSProto::FriendNodeInfo* mutable_szfriendlist(int index);
  inline ::GSProto::FriendNodeInfo* add_szfriendlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FriendNodeInfo >&
      szfriendlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FriendNodeInfo >*
      mutable_szfriendlist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_FRIENDSYSTEM_QUERY_SC)
 private:
  inline void set_has_bishaverequest();
  inline void clear_has_bishaverequest();
  inline void set_has_detail();
  inline void clear_has_detail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::FriendPhyStrengthDetail* detail_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::FriendNodeInfo > szfriendlist_;
  bool bishaverequest_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_FRIENDSYSTEM_QUERY_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS : public ::google::protobuf::Message {
 public:
  CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS();
  virtual ~CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS();

  CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS(const CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS& from);

  inline CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS& operator=(const CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS& default_instance();

  void Swap(CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS* other);

  // implements Message ----------------------------------------------

  CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS& from);
  void MergeFrom(const CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strName = 1;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 1;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS)
 private:
  inline void set_has_strname();
  inline void clear_has_strname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_FRIENDSYSTEM_DELETE_FRIEND_CS : public ::google::protobuf::Message {
 public:
  CMD_FRIENDSYSTEM_DELETE_FRIEND_CS();
  virtual ~CMD_FRIENDSYSTEM_DELETE_FRIEND_CS();

  CMD_FRIENDSYSTEM_DELETE_FRIEND_CS(const CMD_FRIENDSYSTEM_DELETE_FRIEND_CS& from);

  inline CMD_FRIENDSYSTEM_DELETE_FRIEND_CS& operator=(const CMD_FRIENDSYSTEM_DELETE_FRIEND_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_FRIENDSYSTEM_DELETE_FRIEND_CS& default_instance();

  void Swap(CMD_FRIENDSYSTEM_DELETE_FRIEND_CS* other);

  // implements Message ----------------------------------------------

  CMD_FRIENDSYSTEM_DELETE_FRIEND_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_FRIENDSYSTEM_DELETE_FRIEND_CS& from);
  void MergeFrom(const CMD_FRIENDSYSTEM_DELETE_FRIEND_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strName = 1;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 1;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_FRIENDSYSTEM_DELETE_FRIEND_CS)
 private:
  inline void set_has_strname();
  inline void clear_has_strname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_FRIENDSYSTEM_DELETE_FRIEND_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC : public ::google::protobuf::Message {
 public:
  CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC();
  virtual ~CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC();

  CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC(const CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC& from);

  inline CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC& operator=(const CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC& default_instance();

  void Swap(CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC* other);

  // implements Message ----------------------------------------------

  CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC& from);
  void MergeFrom(const CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.FriendNodeInfo szSearchResoultList = 1;
  inline int szsearchresoultlist_size() const;
  inline void clear_szsearchresoultlist();
  static const int kSzSearchResoultListFieldNumber = 1;
  inline const ::GSProto::FriendNodeInfo& szsearchresoultlist(int index) const;
  inline ::GSProto::FriendNodeInfo* mutable_szsearchresoultlist(int index);
  inline ::GSProto::FriendNodeInfo* add_szsearchresoultlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FriendNodeInfo >&
      szsearchresoultlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FriendNodeInfo >*
      mutable_szsearchresoultlist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::FriendNodeInfo > szsearchresoultlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS : public ::google::protobuf::Message {
 public:
  CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS();
  virtual ~CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS();

  CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS(const CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS& from);

  inline CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS& operator=(const CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS& default_instance();

  void Swap(CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS* other);

  // implements Message ----------------------------------------------

  CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS& from);
  void MergeFrom(const CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bAgree = 1;
  inline bool has_bagree() const;
  inline void clear_bagree();
  static const int kBAgreeFieldNumber = 1;
  inline bool bagree() const;
  inline void set_bagree(bool value);

  // required string stName = 2;
  inline bool has_stname() const;
  inline void clear_stname();
  static const int kStNameFieldNumber = 2;
  inline const ::std::string& stname() const;
  inline void set_stname(const ::std::string& value);
  inline void set_stname(const char* value);
  inline void set_stname(const char* value, size_t size);
  inline ::std::string* mutable_stname();
  inline ::std::string* release_stname();
  inline void set_allocated_stname(::std::string* stname);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS)
 private:
  inline void set_has_bagree();
  inline void clear_has_bagree();
  inline void set_has_stname();
  inline void clear_has_stname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* stname_;
  bool bagree_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC : public ::google::protobuf::Message {
 public:
  CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC();
  virtual ~CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC();

  CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC(const CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC& from);

  inline CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC& operator=(const CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC& default_instance();

  void Swap(CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC* other);

  // implements Message ----------------------------------------------

  CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC& from);
  void MergeFrom(const CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.FriendPhyStrengthDetail detail = 1;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 1;
  inline const ::GSProto::FriendPhyStrengthDetail& detail() const;
  inline ::GSProto::FriendPhyStrengthDetail* mutable_detail();
  inline ::GSProto::FriendPhyStrengthDetail* release_detail();
  inline void set_allocated_detail(::GSProto::FriendPhyStrengthDetail* detail);

  // repeated .GSProto.FriendNodeInfo szFriendList = 2;
  inline int szfriendlist_size() const;
  inline void clear_szfriendlist();
  static const int kSzFriendListFieldNumber = 2;
  inline const ::GSProto::FriendNodeInfo& szfriendlist(int index) const;
  inline ::GSProto::FriendNodeInfo* mutable_szfriendlist(int index);
  inline ::GSProto::FriendNodeInfo* add_szfriendlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FriendNodeInfo >&
      szfriendlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FriendNodeInfo >*
      mutable_szfriendlist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC)
 private:
  inline void set_has_detail();
  inline void clear_has_detail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::FriendPhyStrengthDetail* detail_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::FriendNodeInfo > szfriendlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC : public ::google::protobuf::Message {
 public:
  CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC();
  virtual ~CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC();

  CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC(const CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC& from);

  inline CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC& operator=(const CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC& default_instance();

  void Swap(CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC* other);

  // implements Message ----------------------------------------------

  CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC& from);
  void MergeFrom(const CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.FriendNodeInfo szFriendList = 1;
  inline int szfriendlist_size() const;
  inline void clear_szfriendlist();
  static const int kSzFriendListFieldNumber = 1;
  inline const ::GSProto::FriendNodeInfo& szfriendlist(int index) const;
  inline ::GSProto::FriendNodeInfo* mutable_szfriendlist(int index);
  inline ::GSProto::FriendNodeInfo* add_szfriendlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FriendNodeInfo >&
      szfriendlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FriendNodeInfo >*
      mutable_szfriendlist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::FriendNodeInfo > szfriendlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS : public ::google::protobuf::Message {
 public:
  CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS();
  virtual ~CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS();

  CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS(const CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS& from);

  inline CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS& operator=(const CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS& default_instance();

  void Swap(CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS* other);

  // implements Message ----------------------------------------------

  CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS& from);
  void MergeFrom(const CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string stName = 1;
  inline bool has_stname() const;
  inline void clear_stname();
  static const int kStNameFieldNumber = 1;
  inline const ::std::string& stname() const;
  inline void set_stname(const ::std::string& value);
  inline void set_stname(const char* value);
  inline void set_stname(const char* value, size_t size);
  inline ::std::string* mutable_stname();
  inline ::std::string* release_stname();
  inline void set_allocated_stname(::std::string* stname);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS)
 private:
  inline void set_has_stname();
  inline void clear_has_stname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* stname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC : public ::google::protobuf::Message {
 public:
  CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC();
  virtual ~CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC();

  CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC(const CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC& from);

  inline CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC& operator=(const CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC& default_instance();

  void Swap(CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC* other);

  // implements Message ----------------------------------------------

  CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC& from);
  void MergeFrom(const CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.FriendPhyStrengthDetail detail = 1;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 1;
  inline const ::GSProto::FriendPhyStrengthDetail& detail() const;
  inline ::GSProto::FriendPhyStrengthDetail* mutable_detail();
  inline ::GSProto::FriendPhyStrengthDetail* release_detail();
  inline void set_allocated_detail(::GSProto::FriendPhyStrengthDetail* detail);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC)
 private:
  inline void set_has_detail();
  inline void clear_has_detail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::FriendPhyStrengthDetail* detail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS : public ::google::protobuf::Message {
 public:
  CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS();
  virtual ~CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS();

  CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS(const CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS& from);

  inline CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS& operator=(const CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS& default_instance();

  void Swap(CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS* other);

  // implements Message ----------------------------------------------

  CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS& from);
  void MergeFrom(const CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string stName = 1;
  inline bool has_stname() const;
  inline void clear_stname();
  static const int kStNameFieldNumber = 1;
  inline const ::std::string& stname() const;
  inline void set_stname(const ::std::string& value);
  inline void set_stname(const char* value);
  inline void set_stname(const char* value, size_t size);
  inline ::std::string* mutable_stname();
  inline ::std::string* release_stname();
  inline void set_allocated_stname(::std::string* stname);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS)
 private:
  inline void set_has_stname();
  inline void clear_has_stname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* stname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC : public ::google::protobuf::Message {
 public:
  CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC();
  virtual ~CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC();

  CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC(const CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC& from);

  inline CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC& operator=(const CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC& default_instance();

  void Swap(CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC* other);

  // implements Message ----------------------------------------------

  CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC& from);
  void MergeFrom(const CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.FriendPhyStrengthDetail detail = 1;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 1;
  inline const ::GSProto::FriendPhyStrengthDetail& detail() const;
  inline ::GSProto::FriendPhyStrengthDetail* mutable_detail();
  inline ::GSProto::FriendPhyStrengthDetail* release_detail();
  inline void set_allocated_detail(::GSProto::FriendPhyStrengthDetail* detail);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC)
 private:
  inline void set_has_detail();
  inline void clear_has_detail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::FriendPhyStrengthDetail* detail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_FRIENDSYSTEM_REQUEST_CS : public ::google::protobuf::Message {
 public:
  CMD_FRIENDSYSTEM_REQUEST_CS();
  virtual ~CMD_FRIENDSYSTEM_REQUEST_CS();

  CMD_FRIENDSYSTEM_REQUEST_CS(const CMD_FRIENDSYSTEM_REQUEST_CS& from);

  inline CMD_FRIENDSYSTEM_REQUEST_CS& operator=(const CMD_FRIENDSYSTEM_REQUEST_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_FRIENDSYSTEM_REQUEST_CS& default_instance();

  void Swap(CMD_FRIENDSYSTEM_REQUEST_CS* other);

  // implements Message ----------------------------------------------

  CMD_FRIENDSYSTEM_REQUEST_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_FRIENDSYSTEM_REQUEST_CS& from);
  void MergeFrom(const CMD_FRIENDSYSTEM_REQUEST_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strName = 1;
  inline bool has_strname() const;
  inline void clear_strname();
  static const int kStrNameFieldNumber = 1;
  inline const ::std::string& strname() const;
  inline void set_strname(const ::std::string& value);
  inline void set_strname(const char* value);
  inline void set_strname(const char* value, size_t size);
  inline ::std::string* mutable_strname();
  inline ::std::string* release_strname();
  inline void set_allocated_strname(::std::string* strname);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_FRIENDSYSTEM_REQUEST_CS)
 private:
  inline void set_has_strname();
  inline void clear_has_strname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_FRIENDSYSTEM_REQUEST_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_USENAME_FINED_ACTOR_INFO_CS : public ::google::protobuf::Message {
 public:
  CMD_USENAME_FINED_ACTOR_INFO_CS();
  virtual ~CMD_USENAME_FINED_ACTOR_INFO_CS();

  CMD_USENAME_FINED_ACTOR_INFO_CS(const CMD_USENAME_FINED_ACTOR_INFO_CS& from);

  inline CMD_USENAME_FINED_ACTOR_INFO_CS& operator=(const CMD_USENAME_FINED_ACTOR_INFO_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_USENAME_FINED_ACTOR_INFO_CS& default_instance();

  void Swap(CMD_USENAME_FINED_ACTOR_INFO_CS* other);

  // implements Message ----------------------------------------------

  CMD_USENAME_FINED_ACTOR_INFO_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_USENAME_FINED_ACTOR_INFO_CS& from);
  void MergeFrom(const CMD_USENAME_FINED_ACTOR_INFO_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strActorName = 1;
  inline bool has_stractorname() const;
  inline void clear_stractorname();
  static const int kStrActorNameFieldNumber = 1;
  inline const ::std::string& stractorname() const;
  inline void set_stractorname(const ::std::string& value);
  inline void set_stractorname(const char* value);
  inline void set_stractorname(const char* value, size_t size);
  inline ::std::string* mutable_stractorname();
  inline ::std::string* release_stractorname();
  inline void set_allocated_stractorname(::std::string* stractorname);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_USENAME_FINED_ACTOR_INFO_CS)
 private:
  inline void set_has_stractorname();
  inline void clear_has_stractorname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* stractorname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_USENAME_FINED_ACTOR_INFO_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS : public ::google::protobuf::Message {
 public:
  CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS();
  virtual ~CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS();

  CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS(const CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS& from);

  inline CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS& operator=(const CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS& default_instance();

  void Swap(CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS* other);

  // implements Message ----------------------------------------------

  CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS& from);
  void MergeFrom(const CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strActorName = 1;
  inline bool has_stractorname() const;
  inline void clear_stractorname();
  static const int kStrActorNameFieldNumber = 1;
  inline const ::std::string& stractorname() const;
  inline void set_stractorname(const ::std::string& value);
  inline void set_stractorname(const char* value);
  inline void set_stractorname(const char* value, size_t size);
  inline ::std::string* mutable_stractorname();
  inline ::std::string* release_stractorname();
  inline void set_allocated_stractorname(::std::string* stractorname);

  // required .GSProto.PBPkRole roleKey = 2;
  inline bool has_rolekey() const;
  inline void clear_rolekey();
  static const int kRoleKeyFieldNumber = 2;
  inline const ::GSProto::PBPkRole& rolekey() const;
  inline ::GSProto::PBPkRole* mutable_rolekey();
  inline ::GSProto::PBPkRole* release_rolekey();
  inline void set_allocated_rolekey(::GSProto::PBPkRole* rolekey);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS)
 private:
  inline void set_has_stractorname();
  inline void clear_has_stractorname();
  inline void set_has_rolekey();
  inline void clear_has_rolekey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* stractorname_;
  ::GSProto::PBPkRole* rolekey_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS* default_instance_;
};
// -------------------------------------------------------------------

class ActorInfoDetail : public ::google::protobuf::Message {
 public:
  ActorInfoDetail();
  virtual ~ActorInfoDetail();

  ActorInfoDetail(const ActorInfoDetail& from);

  inline ActorInfoDetail& operator=(const ActorInfoDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActorInfoDetail& default_instance();

  void Swap(ActorInfoDetail* other);

  // implements Message ----------------------------------------------

  ActorInfoDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActorInfoDetail& from);
  void MergeFrom(const ActorInfoDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strActorName = 1;
  inline bool has_stractorname() const;
  inline void clear_stractorname();
  static const int kStrActorNameFieldNumber = 1;
  inline const ::std::string& stractorname() const;
  inline void set_stractorname(const ::std::string& value);
  inline void set_stractorname(const char* value);
  inline void set_stractorname(const char* value, size_t size);
  inline ::std::string* mutable_stractorname();
  inline ::std::string* release_stractorname();
  inline void set_allocated_stractorname(::std::string* stractorname);

  // required int32 iActorLevel = 2;
  inline bool has_iactorlevel() const;
  inline void clear_iactorlevel();
  static const int kIActorLevelFieldNumber = 2;
  inline ::google::protobuf::int32 iactorlevel() const;
  inline void set_iactorlevel(::google::protobuf::int32 value);

  // required int32 iAreanRank = 3;
  inline bool has_iareanrank() const;
  inline void clear_iareanrank();
  static const int kIAreanRankFieldNumber = 3;
  inline ::google::protobuf::int32 iareanrank() const;
  inline void set_iareanrank(::google::protobuf::int32 value);

  // optional string strBelongLegionName = 4;
  inline bool has_strbelonglegionname() const;
  inline void clear_strbelonglegionname();
  static const int kStrBelongLegionNameFieldNumber = 4;
  inline const ::std::string& strbelonglegionname() const;
  inline void set_strbelonglegionname(const ::std::string& value);
  inline void set_strbelonglegionname(const char* value);
  inline void set_strbelonglegionname(const char* value, size_t size);
  inline ::std::string* mutable_strbelonglegionname();
  inline ::std::string* release_strbelonglegionname();
  inline void set_allocated_strbelonglegionname(::std::string* strbelonglegionname);

  // required int32 iTotalFightStrength = 5;
  inline bool has_itotalfightstrength() const;
  inline void clear_itotalfightstrength();
  static const int kITotalFightStrengthFieldNumber = 5;
  inline ::google::protobuf::int32 itotalfightstrength() const;
  inline void set_itotalfightstrength(::google::protobuf::int32 value);

  // repeated .GSProto.HeroBaseData szHeroList = 6;
  inline int szherolist_size() const;
  inline void clear_szherolist();
  static const int kSzHeroListFieldNumber = 6;
  inline const ::GSProto::HeroBaseData& szherolist(int index) const;
  inline ::GSProto::HeroBaseData* mutable_szherolist(int index);
  inline ::GSProto::HeroBaseData* add_szherolist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HeroBaseData >&
      szherolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::HeroBaseData >*
      mutable_szherolist();

  // required int32 iHeadId = 7;
  inline bool has_iheadid() const;
  inline void clear_iheadid();
  static const int kIHeadIdFieldNumber = 7;
  inline ::google::protobuf::int32 iheadid() const;
  inline void set_iheadid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.ActorInfoDetail)
 private:
  inline void set_has_stractorname();
  inline void clear_has_stractorname();
  inline void set_has_iactorlevel();
  inline void clear_has_iactorlevel();
  inline void set_has_iareanrank();
  inline void clear_has_iareanrank();
  inline void set_has_strbelonglegionname();
  inline void clear_has_strbelonglegionname();
  inline void set_has_itotalfightstrength();
  inline void clear_has_itotalfightstrength();
  inline void set_has_iheadid();
  inline void clear_has_iheadid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* stractorname_;
  ::google::protobuf::int32 iactorlevel_;
  ::google::protobuf::int32 iareanrank_;
  ::std::string* strbelonglegionname_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::HeroBaseData > szherolist_;
  ::google::protobuf::int32 itotalfightstrength_;
  ::google::protobuf::int32 iheadid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static ActorInfoDetail* default_instance_;
};
// -------------------------------------------------------------------

class CMD_FINED_ACTOR_INFO_SC : public ::google::protobuf::Message {
 public:
  CMD_FINED_ACTOR_INFO_SC();
  virtual ~CMD_FINED_ACTOR_INFO_SC();

  CMD_FINED_ACTOR_INFO_SC(const CMD_FINED_ACTOR_INFO_SC& from);

  inline CMD_FINED_ACTOR_INFO_SC& operator=(const CMD_FINED_ACTOR_INFO_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_FINED_ACTOR_INFO_SC& default_instance();

  void Swap(CMD_FINED_ACTOR_INFO_SC* other);

  // implements Message ----------------------------------------------

  CMD_FINED_ACTOR_INFO_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_FINED_ACTOR_INFO_SC& from);
  void MergeFrom(const CMD_FINED_ACTOR_INFO_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.ActorInfoDetail detail = 1;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 1;
  inline const ::GSProto::ActorInfoDetail& detail() const;
  inline ::GSProto::ActorInfoDetail* mutable_detail();
  inline ::GSProto::ActorInfoDetail* release_detail();
  inline void set_allocated_detail(::GSProto::ActorInfoDetail* detail);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_FINED_ACTOR_INFO_SC)
 private:
  inline void set_has_detail();
  inline void clear_has_detail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::ActorInfoDetail* detail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_FINED_ACTOR_INFO_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_ATT_COMEUP_SC : public ::google::protobuf::Message {
 public:
  CMD_ATT_COMEUP_SC();
  virtual ~CMD_ATT_COMEUP_SC();

  CMD_ATT_COMEUP_SC(const CMD_ATT_COMEUP_SC& from);

  inline CMD_ATT_COMEUP_SC& operator=(const CMD_ATT_COMEUP_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_ATT_COMEUP_SC& default_instance();

  void Swap(CMD_ATT_COMEUP_SC* other);

  // implements Message ----------------------------------------------

  CMD_ATT_COMEUP_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_ATT_COMEUP_SC& from);
  void MergeFrom(const CMD_ATT_COMEUP_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bIsComeUp = 1;
  inline bool has_biscomeup() const;
  inline void clear_biscomeup();
  static const int kBIsComeUpFieldNumber = 1;
  inline bool biscomeup() const;
  inline void set_biscomeup(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_ATT_COMEUP_SC)
 private:
  inline void set_has_biscomeup();
  inline void clear_has_biscomeup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool biscomeup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_ATT_COMEUP_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_MARQUEE_SC : public ::google::protobuf::Message {
 public:
  CMD_MARQUEE_SC();
  virtual ~CMD_MARQUEE_SC();

  CMD_MARQUEE_SC(const CMD_MARQUEE_SC& from);

  inline CMD_MARQUEE_SC& operator=(const CMD_MARQUEE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_MARQUEE_SC& default_instance();

  void Swap(CMD_MARQUEE_SC* other);

  // implements Message ----------------------------------------------

  CMD_MARQUEE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_MARQUEE_SC& from);
  void MergeFrom(const CMD_MARQUEE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 marqueeID = 1;
  inline bool has_marqueeid() const;
  inline void clear_marqueeid();
  static const int kMarqueeIDFieldNumber = 1;
  inline ::google::protobuf::int32 marqueeid() const;
  inline void set_marqueeid(::google::protobuf::int32 value);

  // repeated string szStrMessage = 2;
  inline int szstrmessage_size() const;
  inline void clear_szstrmessage();
  static const int kSzStrMessageFieldNumber = 2;
  inline const ::std::string& szstrmessage(int index) const;
  inline ::std::string* mutable_szstrmessage(int index);
  inline void set_szstrmessage(int index, const ::std::string& value);
  inline void set_szstrmessage(int index, const char* value);
  inline void set_szstrmessage(int index, const char* value, size_t size);
  inline ::std::string* add_szstrmessage();
  inline void add_szstrmessage(const ::std::string& value);
  inline void add_szstrmessage(const char* value);
  inline void add_szstrmessage(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& szstrmessage() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_szstrmessage();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_MARQUEE_SC)
 private:
  inline void set_has_marqueeid();
  inline void clear_has_marqueeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> szstrmessage_;
  ::google::protobuf::int32 marqueeid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_MARQUEE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_HERO_SANGONG_CS : public ::google::protobuf::Message {
 public:
  CMD_HERO_SANGONG_CS();
  virtual ~CMD_HERO_SANGONG_CS();

  CMD_HERO_SANGONG_CS(const CMD_HERO_SANGONG_CS& from);

  inline CMD_HERO_SANGONG_CS& operator=(const CMD_HERO_SANGONG_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HERO_SANGONG_CS& default_instance();

  void Swap(CMD_HERO_SANGONG_CS* other);

  // implements Message ----------------------------------------------

  CMD_HERO_SANGONG_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_HERO_SANGONG_CS& from);
  void MergeFrom(const CMD_HERO_SANGONG_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_HERO_SANGONG_CS)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_HERO_SANGONG_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_HERO_SANGONG_SC : public ::google::protobuf::Message {
 public:
  CMD_HERO_SANGONG_SC();
  virtual ~CMD_HERO_SANGONG_SC();

  CMD_HERO_SANGONG_SC(const CMD_HERO_SANGONG_SC& from);

  inline CMD_HERO_SANGONG_SC& operator=(const CMD_HERO_SANGONG_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HERO_SANGONG_SC& default_instance();

  void Swap(CMD_HERO_SANGONG_SC* other);

  // implements Message ----------------------------------------------

  CMD_HERO_SANGONG_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_HERO_SANGONG_SC& from);
  void MergeFrom(const CMD_HERO_SANGONG_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // required int32 iRebackHeroExp = 2;
  inline bool has_irebackheroexp() const;
  inline void clear_irebackheroexp();
  static const int kIRebackHeroExpFieldNumber = 2;
  inline ::google::protobuf::int32 irebackheroexp() const;
  inline void set_irebackheroexp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_HERO_SANGONG_SC)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();
  inline void set_has_irebackheroexp();
  inline void clear_has_irebackheroexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwobjectid_;
  ::google::protobuf::int32 irebackheroexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_HERO_SANGONG_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_ACTORINFO_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_ACTORINFO_SC();
  virtual ~CMD_QUERY_ACTORINFO_SC();

  CMD_QUERY_ACTORINFO_SC(const CMD_QUERY_ACTORINFO_SC& from);

  inline CMD_QUERY_ACTORINFO_SC& operator=(const CMD_QUERY_ACTORINFO_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_ACTORINFO_SC& default_instance();

  void Swap(CMD_QUERY_ACTORINFO_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_ACTORINFO_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_ACTORINFO_SC& from);
  void MergeFrom(const CMD_QUERY_ACTORINFO_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iPhyResumeCD = 1;
  inline bool has_iphyresumecd() const;
  inline void clear_iphyresumecd();
  static const int kIPhyResumeCDFieldNumber = 1;
  inline ::google::protobuf::int32 iphyresumecd() const;
  inline void set_iphyresumecd(::google::protobuf::int32 value);

  // required int32 iFullPhyResumeCD = 2;
  inline bool has_ifullphyresumecd() const;
  inline void clear_ifullphyresumecd();
  static const int kIFullPhyResumeCDFieldNumber = 2;
  inline ::google::protobuf::int32 ifullphyresumecd() const;
  inline void set_ifullphyresumecd(::google::protobuf::int32 value);

  // optional string strLegionName = 3;
  inline bool has_strlegionname() const;
  inline void clear_strlegionname();
  static const int kStrLegionNameFieldNumber = 3;
  inline const ::std::string& strlegionname() const;
  inline void set_strlegionname(const ::std::string& value);
  inline void set_strlegionname(const char* value);
  inline void set_strlegionname(const char* value, size_t size);
  inline ::std::string* mutable_strlegionname();
  inline ::std::string* release_strlegionname();
  inline void set_allocated_strlegionname(::std::string* strlegionname);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_ACTORINFO_SC)
 private:
  inline void set_has_iphyresumecd();
  inline void clear_has_iphyresumecd();
  inline void set_has_ifullphyresumecd();
  inline void clear_has_ifullphyresumecd();
  inline void set_has_strlegionname();
  inline void clear_has_strlegionname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iphyresumecd_;
  ::google::protobuf::int32 ifullphyresumecd_;
  ::std::string* strlegionname_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_ACTORINFO_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_NOTIFY_GUIDE_SC : public ::google::protobuf::Message {
 public:
  CMD_NOTIFY_GUIDE_SC();
  virtual ~CMD_NOTIFY_GUIDE_SC();

  CMD_NOTIFY_GUIDE_SC(const CMD_NOTIFY_GUIDE_SC& from);

  inline CMD_NOTIFY_GUIDE_SC& operator=(const CMD_NOTIFY_GUIDE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_NOTIFY_GUIDE_SC& default_instance();

  void Swap(CMD_NOTIFY_GUIDE_SC* other);

  // implements Message ----------------------------------------------

  CMD_NOTIFY_GUIDE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_NOTIFY_GUIDE_SC& from);
  void MergeFrom(const CMD_NOTIFY_GUIDE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iGuideID = 1;
  inline bool has_iguideid() const;
  inline void clear_iguideid();
  static const int kIGuideIDFieldNumber = 1;
  inline ::google::protobuf::int32 iguideid() const;
  inline void set_iguideid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_NOTIFY_GUIDE_SC)
 private:
  inline void set_has_iguideid();
  inline void clear_has_iguideid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iguideid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_NOTIFY_GUIDE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GUIDE_FINISH_CS : public ::google::protobuf::Message {
 public:
  CMD_GUIDE_FINISH_CS();
  virtual ~CMD_GUIDE_FINISH_CS();

  CMD_GUIDE_FINISH_CS(const CMD_GUIDE_FINISH_CS& from);

  inline CMD_GUIDE_FINISH_CS& operator=(const CMD_GUIDE_FINISH_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GUIDE_FINISH_CS& default_instance();

  void Swap(CMD_GUIDE_FINISH_CS* other);

  // implements Message ----------------------------------------------

  CMD_GUIDE_FINISH_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GUIDE_FINISH_CS& from);
  void MergeFrom(const CMD_GUIDE_FINISH_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iGuideID = 1;
  inline bool has_iguideid() const;
  inline void clear_iguideid();
  static const int kIGuideIDFieldNumber = 1;
  inline ::google::protobuf::int32 iguideid() const;
  inline void set_iguideid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GUIDE_FINISH_CS)
 private:
  inline void set_has_iguideid();
  inline void clear_has_iguideid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iguideid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GUIDE_FINISH_CS* default_instance_;
};
// -------------------------------------------------------------------

class TaskDetail : public ::google::protobuf::Message {
 public:
  TaskDetail();
  virtual ~TaskDetail();

  TaskDetail(const TaskDetail& from);

  inline TaskDetail& operator=(const TaskDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskDetail& default_instance();

  void Swap(TaskDetail* other);

  // implements Message ----------------------------------------------

  TaskDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskDetail& from);
  void MergeFrom(const TaskDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iTaskId = 1;
  inline bool has_itaskid() const;
  inline void clear_itaskid();
  static const int kITaskIdFieldNumber = 1;
  inline ::google::protobuf::int32 itaskid() const;
  inline void set_itaskid(::google::protobuf::int32 value);

  // required int32 iTaskType = 2;
  inline bool has_itasktype() const;
  inline void clear_itasktype();
  static const int kITaskTypeFieldNumber = 2;
  inline ::google::protobuf::int32 itasktype() const;
  inline void set_itasktype(::google::protobuf::int32 value);

  // required int32 iTaskOver = 3;
  inline bool has_itaskover() const;
  inline void clear_itaskover();
  static const int kITaskOverFieldNumber = 3;
  inline ::google::protobuf::int32 itaskover() const;
  inline void set_itaskover(::google::protobuf::int32 value);

  // required int32 iTaskTotal = 4;
  inline bool has_itasktotal() const;
  inline void clear_itasktotal();
  static const int kITaskTotalFieldNumber = 4;
  inline ::google::protobuf::int32 itasktotal() const;
  inline void set_itasktotal(::google::protobuf::int32 value);

  // required int32 iTaskState = 5;
  inline bool has_itaskstate() const;
  inline void clear_itaskstate();
  static const int kITaskStateFieldNumber = 5;
  inline ::google::protobuf::int32 itaskstate() const;
  inline void set_itaskstate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.TaskDetail)
 private:
  inline void set_has_itaskid();
  inline void clear_has_itaskid();
  inline void set_has_itasktype();
  inline void clear_has_itasktype();
  inline void set_has_itaskover();
  inline void clear_has_itaskover();
  inline void set_has_itasktotal();
  inline void clear_has_itasktotal();
  inline void set_has_itaskstate();
  inline void clear_has_itaskstate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itaskid_;
  ::google::protobuf::int32 itasktype_;
  ::google::protobuf::int32 itaskover_;
  ::google::protobuf::int32 itasktotal_;
  ::google::protobuf::int32 itaskstate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static TaskDetail* default_instance_;
};
// -------------------------------------------------------------------

class CMD_TASK_QUERY_TASKINFO_CS : public ::google::protobuf::Message {
 public:
  CMD_TASK_QUERY_TASKINFO_CS();
  virtual ~CMD_TASK_QUERY_TASKINFO_CS();

  CMD_TASK_QUERY_TASKINFO_CS(const CMD_TASK_QUERY_TASKINFO_CS& from);

  inline CMD_TASK_QUERY_TASKINFO_CS& operator=(const CMD_TASK_QUERY_TASKINFO_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_TASK_QUERY_TASKINFO_CS& default_instance();

  void Swap(CMD_TASK_QUERY_TASKINFO_CS* other);

  // implements Message ----------------------------------------------

  CMD_TASK_QUERY_TASKINFO_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_TASK_QUERY_TASKINFO_CS& from);
  void MergeFrom(const CMD_TASK_QUERY_TASKINFO_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.enTaskType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::GSProto::enTaskType type() const;
  inline void set_type(::GSProto::enTaskType value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_TASK_QUERY_TASKINFO_CS)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_TASK_QUERY_TASKINFO_CS* default_instance_;
};
// -------------------------------------------------------------------

class MonthCardInfo : public ::google::protobuf::Message {
 public:
  MonthCardInfo();
  virtual ~MonthCardInfo();

  MonthCardInfo(const MonthCardInfo& from);

  inline MonthCardInfo& operator=(const MonthCardInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MonthCardInfo& default_instance();

  void Swap(MonthCardInfo* other);

  // implements Message ----------------------------------------------

  MonthCardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MonthCardInfo& from);
  void MergeFrom(const MonthCardInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bMonthCardHaveOver = 1;
  inline bool has_bmonthcardhaveover() const;
  inline void clear_bmonthcardhaveover();
  static const int kBMonthCardHaveOverFieldNumber = 1;
  inline bool bmonthcardhaveover() const;
  inline void set_bmonthcardhaveover(bool value);

  // required bool bTodayHaveGet = 2;
  inline bool has_btodayhaveget() const;
  inline void clear_btodayhaveget();
  static const int kBTodayHaveGetFieldNumber = 2;
  inline bool btodayhaveget() const;
  inline void set_btodayhaveget(bool value);

  // required int32 iRemaindTimes = 3;
  inline bool has_iremaindtimes() const;
  inline void clear_iremaindtimes();
  static const int kIRemaindTimesFieldNumber = 3;
  inline ::google::protobuf::int32 iremaindtimes() const;
  inline void set_iremaindtimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.MonthCardInfo)
 private:
  inline void set_has_bmonthcardhaveover();
  inline void clear_has_bmonthcardhaveover();
  inline void set_has_btodayhaveget();
  inline void clear_has_btodayhaveget();
  inline void set_has_iremaindtimes();
  inline void clear_has_iremaindtimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool bmonthcardhaveover_;
  bool btodayhaveget_;
  ::google::protobuf::int32 iremaindtimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static MonthCardInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMD_TASK_QUERY_TASKINFO_SC : public ::google::protobuf::Message {
 public:
  CMD_TASK_QUERY_TASKINFO_SC();
  virtual ~CMD_TASK_QUERY_TASKINFO_SC();

  CMD_TASK_QUERY_TASKINFO_SC(const CMD_TASK_QUERY_TASKINFO_SC& from);

  inline CMD_TASK_QUERY_TASKINFO_SC& operator=(const CMD_TASK_QUERY_TASKINFO_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_TASK_QUERY_TASKINFO_SC& default_instance();

  void Swap(CMD_TASK_QUERY_TASKINFO_SC* other);

  // implements Message ----------------------------------------------

  CMD_TASK_QUERY_TASKINFO_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_TASK_QUERY_TASKINFO_SC& from);
  void MergeFrom(const CMD_TASK_QUERY_TASKINFO_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.enTaskType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::GSProto::enTaskType type() const;
  inline void set_type(::GSProto::enTaskType value);

  // repeated .GSProto.TaskDetail szTaskDetail = 2;
  inline int sztaskdetail_size() const;
  inline void clear_sztaskdetail();
  static const int kSzTaskDetailFieldNumber = 2;
  inline const ::GSProto::TaskDetail& sztaskdetail(int index) const;
  inline ::GSProto::TaskDetail* mutable_sztaskdetail(int index);
  inline ::GSProto::TaskDetail* add_sztaskdetail();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::TaskDetail >&
      sztaskdetail() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::TaskDetail >*
      mutable_sztaskdetail();

  // required bool bVigorHaveGet = 3;
  inline bool has_bvigorhaveget() const;
  inline void clear_bvigorhaveget();
  static const int kBVigorHaveGetFieldNumber = 3;
  inline bool bvigorhaveget() const;
  inline void set_bvigorhaveget(bool value);

  // required .GSProto.MonthCardInfo monthcardInfo = 4;
  inline bool has_monthcardinfo() const;
  inline void clear_monthcardinfo();
  static const int kMonthcardInfoFieldNumber = 4;
  inline const ::GSProto::MonthCardInfo& monthcardinfo() const;
  inline ::GSProto::MonthCardInfo* mutable_monthcardinfo();
  inline ::GSProto::MonthCardInfo* release_monthcardinfo();
  inline void set_allocated_monthcardinfo(::GSProto::MonthCardInfo* monthcardinfo);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_TASK_QUERY_TASKINFO_SC)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_bvigorhaveget();
  inline void clear_has_bvigorhaveget();
  inline void set_has_monthcardinfo();
  inline void clear_has_monthcardinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::TaskDetail > sztaskdetail_;
  int type_;
  bool bvigorhaveget_;
  ::GSProto::MonthCardInfo* monthcardinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_TASK_QUERY_TASKINFO_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_TASK_GET_REWARD_CS : public ::google::protobuf::Message {
 public:
  CMD_TASK_GET_REWARD_CS();
  virtual ~CMD_TASK_GET_REWARD_CS();

  CMD_TASK_GET_REWARD_CS(const CMD_TASK_GET_REWARD_CS& from);

  inline CMD_TASK_GET_REWARD_CS& operator=(const CMD_TASK_GET_REWARD_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_TASK_GET_REWARD_CS& default_instance();

  void Swap(CMD_TASK_GET_REWARD_CS* other);

  // implements Message ----------------------------------------------

  CMD_TASK_GET_REWARD_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_TASK_GET_REWARD_CS& from);
  void MergeFrom(const CMD_TASK_GET_REWARD_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iTaskId = 1;
  inline bool has_itaskid() const;
  inline void clear_itaskid();
  static const int kITaskIdFieldNumber = 1;
  inline ::google::protobuf::int32 itaskid() const;
  inline void set_itaskid(::google::protobuf::int32 value);

  // required .GSProto.enTaskType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::GSProto::enTaskType type() const;
  inline void set_type(::GSProto::enTaskType value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_TASK_GET_REWARD_CS)
 private:
  inline void set_has_itaskid();
  inline void clear_has_itaskid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itaskid_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_TASK_GET_REWARD_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_FIGHT_USEACTORSKILL_CS : public ::google::protobuf::Message {
 public:
  CMD_FIGHT_USEACTORSKILL_CS();
  virtual ~CMD_FIGHT_USEACTORSKILL_CS();

  CMD_FIGHT_USEACTORSKILL_CS(const CMD_FIGHT_USEACTORSKILL_CS& from);

  inline CMD_FIGHT_USEACTORSKILL_CS& operator=(const CMD_FIGHT_USEACTORSKILL_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_FIGHT_USEACTORSKILL_CS& default_instance();

  void Swap(CMD_FIGHT_USEACTORSKILL_CS* other);

  // implements Message ----------------------------------------------

  CMD_FIGHT_USEACTORSKILL_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_FIGHT_USEACTORSKILL_CS& from);
  void MergeFrom(const CMD_FIGHT_USEACTORSKILL_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iActionIndex = 1;
  inline bool has_iactionindex() const;
  inline void clear_iactionindex();
  static const int kIActionIndexFieldNumber = 1;
  inline ::google::protobuf::int32 iactionindex() const;
  inline void set_iactionindex(::google::protobuf::int32 value);

  // required int32 iResultSetIndex = 2;
  inline bool has_iresultsetindex() const;
  inline void clear_iresultsetindex();
  static const int kIResultSetIndexFieldNumber = 2;
  inline ::google::protobuf::int32 iresultsetindex() const;
  inline void set_iresultsetindex(::google::protobuf::int32 value);

  // required bool bPost = 3;
  inline bool has_bpost() const;
  inline void clear_bpost();
  static const int kBPostFieldNumber = 3;
  inline bool bpost() const;
  inline void set_bpost(bool value);

  // required int32 iActorSkillID = 4;
  inline bool has_iactorskillid() const;
  inline void clear_iactorskillid();
  static const int kIActorSkillIDFieldNumber = 4;
  inline ::google::protobuf::int32 iactorskillid() const;
  inline void set_iactorskillid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_FIGHT_USEACTORSKILL_CS)
 private:
  inline void set_has_iactionindex();
  inline void clear_has_iactionindex();
  inline void set_has_iresultsetindex();
  inline void clear_has_iresultsetindex();
  inline void set_has_bpost();
  inline void clear_has_bpost();
  inline void set_has_iactorskillid();
  inline void clear_has_iactorskillid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iactionindex_;
  ::google::protobuf::int32 iresultsetindex_;
  bool bpost_;
  ::google::protobuf::int32 iactorskillid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_FIGHT_USEACTORSKILL_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_FIGHT_USEACTORSKILL_SC : public ::google::protobuf::Message {
 public:
  CMD_FIGHT_USEACTORSKILL_SC();
  virtual ~CMD_FIGHT_USEACTORSKILL_SC();

  CMD_FIGHT_USEACTORSKILL_SC(const CMD_FIGHT_USEACTORSKILL_SC& from);

  inline CMD_FIGHT_USEACTORSKILL_SC& operator=(const CMD_FIGHT_USEACTORSKILL_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_FIGHT_USEACTORSKILL_SC& default_instance();

  void Swap(CMD_FIGHT_USEACTORSKILL_SC* other);

  // implements Message ----------------------------------------------

  CMD_FIGHT_USEACTORSKILL_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_FIGHT_USEACTORSKILL_SC& from);
  void MergeFrom(const CMD_FIGHT_USEACTORSKILL_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bUseSuccess = 1;
  inline bool has_busesuccess() const;
  inline void clear_busesuccess();
  static const int kBUseSuccessFieldNumber = 1;
  inline bool busesuccess() const;
  inline void set_busesuccess(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_FIGHT_USEACTORSKILL_SC)
 private:
  inline void set_has_busesuccess();
  inline void clear_has_busesuccess();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool busesuccess_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_FIGHT_USEACTORSKILL_SC* default_instance_;
};
// -------------------------------------------------------------------

class GodAnimalSoulUnit : public ::google::protobuf::Message {
 public:
  GodAnimalSoulUnit();
  virtual ~GodAnimalSoulUnit();

  GodAnimalSoulUnit(const GodAnimalSoulUnit& from);

  inline GodAnimalSoulUnit& operator=(const GodAnimalSoulUnit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodAnimalSoulUnit& default_instance();

  void Swap(GodAnimalSoulUnit* other);

  // implements Message ----------------------------------------------

  GodAnimalSoulUnit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodAnimalSoulUnit& from);
  void MergeFrom(const GodAnimalSoulUnit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iAnimalSoulID = 1;
  inline bool has_ianimalsoulid() const;
  inline void clear_ianimalsoulid();
  static const int kIAnimalSoulIDFieldNumber = 1;
  inline ::google::protobuf::int32 ianimalsoulid() const;
  inline void set_ianimalsoulid(::google::protobuf::int32 value);

  // required .GSProto.PropItem price = 2;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 2;
  inline const ::GSProto::PropItem& price() const;
  inline ::GSProto::PropItem* mutable_price();
  inline ::GSProto::PropItem* release_price();
  inline void set_allocated_price(::GSProto::PropItem* price);

  // @@protoc_insertion_point(class_scope:GSProto.GodAnimalSoulUnit)
 private:
  inline void set_has_ianimalsoulid();
  inline void clear_has_ianimalsoulid();
  inline void set_has_price();
  inline void clear_has_price();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::PropItem* price_;
  ::google::protobuf::int32 ianimalsoulid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static GodAnimalSoulUnit* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GODANIMAL_ANIMALSOUL_QUERY_SC : public ::google::protobuf::Message {
 public:
  CMD_GODANIMAL_ANIMALSOUL_QUERY_SC();
  virtual ~CMD_GODANIMAL_ANIMALSOUL_QUERY_SC();

  CMD_GODANIMAL_ANIMALSOUL_QUERY_SC(const CMD_GODANIMAL_ANIMALSOUL_QUERY_SC& from);

  inline CMD_GODANIMAL_ANIMALSOUL_QUERY_SC& operator=(const CMD_GODANIMAL_ANIMALSOUL_QUERY_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GODANIMAL_ANIMALSOUL_QUERY_SC& default_instance();

  void Swap(CMD_GODANIMAL_ANIMALSOUL_QUERY_SC* other);

  // implements Message ----------------------------------------------

  CMD_GODANIMAL_ANIMALSOUL_QUERY_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GODANIMAL_ANIMALSOUL_QUERY_SC& from);
  void MergeFrom(const CMD_GODANIMAL_ANIMALSOUL_QUERY_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.GodAnimalSoulUnit szUnit = 1;
  inline int szunit_size() const;
  inline void clear_szunit();
  static const int kSzUnitFieldNumber = 1;
  inline const ::GSProto::GodAnimalSoulUnit& szunit(int index) const;
  inline ::GSProto::GodAnimalSoulUnit* mutable_szunit(int index);
  inline ::GSProto::GodAnimalSoulUnit* add_szunit();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::GodAnimalSoulUnit >&
      szunit() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::GodAnimalSoulUnit >*
      mutable_szunit();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GODANIMAL_ANIMALSOUL_QUERY_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::GodAnimalSoulUnit > szunit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GODANIMAL_ANIMALSOUL_QUERY_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS : public ::google::protobuf::Message {
 public:
  CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS();
  virtual ~CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS();

  CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS(const CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS& from);

  inline CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS& operator=(const CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS& default_instance();

  void Swap(CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS* other);

  // implements Message ----------------------------------------------

  CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS& from);
  void MergeFrom(const CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iAnimalSoulID = 1;
  inline bool has_ianimalsoulid() const;
  inline void clear_ianimalsoulid();
  static const int kIAnimalSoulIDFieldNumber = 1;
  inline ::google::protobuf::int32 ianimalsoulid() const;
  inline void set_ianimalsoulid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS)
 private:
  inline void set_has_ianimalsoulid();
  inline void clear_has_ianimalsoulid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ianimalsoulid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GODANIMAL_ANIMALSOUL_SELL_CS : public ::google::protobuf::Message {
 public:
  CMD_GODANIMAL_ANIMALSOUL_SELL_CS();
  virtual ~CMD_GODANIMAL_ANIMALSOUL_SELL_CS();

  CMD_GODANIMAL_ANIMALSOUL_SELL_CS(const CMD_GODANIMAL_ANIMALSOUL_SELL_CS& from);

  inline CMD_GODANIMAL_ANIMALSOUL_SELL_CS& operator=(const CMD_GODANIMAL_ANIMALSOUL_SELL_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GODANIMAL_ANIMALSOUL_SELL_CS& default_instance();

  void Swap(CMD_GODANIMAL_ANIMALSOUL_SELL_CS* other);

  // implements Message ----------------------------------------------

  CMD_GODANIMAL_ANIMALSOUL_SELL_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GODANIMAL_ANIMALSOUL_SELL_CS& from);
  void MergeFrom(const CMD_GODANIMAL_ANIMALSOUL_SELL_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iAnimalSoulID = 1;
  inline bool has_ianimalsoulid() const;
  inline void clear_ianimalsoulid();
  static const int kIAnimalSoulIDFieldNumber = 1;
  inline ::google::protobuf::int32 ianimalsoulid() const;
  inline void set_ianimalsoulid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GODANIMAL_ANIMALSOUL_SELL_CS)
 private:
  inline void set_has_ianimalsoulid();
  inline void clear_has_ianimalsoulid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ianimalsoulid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GODANIMAL_ANIMALSOUL_SELL_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_NEWPASS_SECTION_SC : public ::google::protobuf::Message {
 public:
  CMD_NEWPASS_SECTION_SC();
  virtual ~CMD_NEWPASS_SECTION_SC();

  CMD_NEWPASS_SECTION_SC(const CMD_NEWPASS_SECTION_SC& from);

  inline CMD_NEWPASS_SECTION_SC& operator=(const CMD_NEWPASS_SECTION_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_NEWPASS_SECTION_SC& default_instance();

  void Swap(CMD_NEWPASS_SECTION_SC* other);

  // implements Message ----------------------------------------------

  CMD_NEWPASS_SECTION_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_NEWPASS_SECTION_SC& from);
  void MergeFrom(const CMD_NEWPASS_SECTION_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iPassedSectionID = 1;
  inline bool has_ipassedsectionid() const;
  inline void clear_ipassedsectionid();
  static const int kIPassedSectionIDFieldNumber = 1;
  inline ::google::protobuf::int32 ipassedsectionid() const;
  inline void set_ipassedsectionid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_NEWPASS_SECTION_SC)
 private:
  inline void set_has_ipassedsectionid();
  inline void clear_has_ipassedsectionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ipassedsectionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_NEWPASS_SECTION_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_HEROSYSTEM_SELLHERO_CS : public ::google::protobuf::Message {
 public:
  CMD_HEROSYSTEM_SELLHERO_CS();
  virtual ~CMD_HEROSYSTEM_SELLHERO_CS();

  CMD_HEROSYSTEM_SELLHERO_CS(const CMD_HEROSYSTEM_SELLHERO_CS& from);

  inline CMD_HEROSYSTEM_SELLHERO_CS& operator=(const CMD_HEROSYSTEM_SELLHERO_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HEROSYSTEM_SELLHERO_CS& default_instance();

  void Swap(CMD_HEROSYSTEM_SELLHERO_CS* other);

  // implements Message ----------------------------------------------

  CMD_HEROSYSTEM_SELLHERO_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_HEROSYSTEM_SELLHERO_CS& from);
  void MergeFrom(const CMD_HEROSYSTEM_SELLHERO_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iHeroID = 1;
  inline bool has_iheroid() const;
  inline void clear_iheroid();
  static const int kIHeroIDFieldNumber = 1;
  inline ::google::protobuf::int32 iheroid() const;
  inline void set_iheroid(::google::protobuf::int32 value);

  // required int32 iSoulCount = 2;
  inline bool has_isoulcount() const;
  inline void clear_isoulcount();
  static const int kISoulCountFieldNumber = 2;
  inline ::google::protobuf::int32 isoulcount() const;
  inline void set_isoulcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_HEROSYSTEM_SELLHERO_CS)
 private:
  inline void set_has_iheroid();
  inline void clear_has_iheroid();
  inline void set_has_isoulcount();
  inline void clear_has_isoulcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iheroid_;
  ::google::protobuf::int32 isoulcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_HEROSYSTEM_SELLHERO_CS* default_instance_;
};
// -------------------------------------------------------------------

class EquipInfo : public ::google::protobuf::Message {
 public:
  EquipInfo();
  virtual ~EquipInfo();

  EquipInfo(const EquipInfo& from);

  inline EquipInfo& operator=(const EquipInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipInfo& default_instance();

  void Swap(EquipInfo* other);

  // implements Message ----------------------------------------------

  EquipInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipInfo& from);
  void MergeFrom(const EquipInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // required int32 iItemID = 2;
  inline bool has_iitemid() const;
  inline void clear_iitemid();
  static const int kIItemIDFieldNumber = 2;
  inline ::google::protobuf::int32 iitemid() const;
  inline void set_iitemid(::google::protobuf::int32 value);

  // required int32 iPos = 3;
  inline bool has_ipos() const;
  inline void clear_ipos();
  static const int kIPosFieldNumber = 3;
  inline ::google::protobuf::int32 ipos() const;
  inline void set_ipos(::google::protobuf::int32 value);

  // repeated .GSProto.PropItem szBasePropList = 4;
  inline int szbaseproplist_size() const;
  inline void clear_szbaseproplist();
  static const int kSzBasePropListFieldNumber = 4;
  inline const ::GSProto::PropItem& szbaseproplist(int index) const;
  inline ::GSProto::PropItem* mutable_szbaseproplist(int index);
  inline ::GSProto::PropItem* add_szbaseproplist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
      szbaseproplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
      mutable_szbaseproplist();

  // repeated .GSProto.PropItem szSpecialPropList = 5;
  inline int szspecialproplist_size() const;
  inline void clear_szspecialproplist();
  static const int kSzSpecialPropListFieldNumber = 5;
  inline const ::GSProto::PropItem& szspecialproplist(int index) const;
  inline ::GSProto::PropItem* mutable_szspecialproplist(int index);
  inline ::GSProto::PropItem* add_szspecialproplist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
      szspecialproplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
      mutable_szspecialproplist();

  // repeated .GSProto.PropItem xilianPropList = 6;
  inline int xilianproplist_size() const;
  inline void clear_xilianproplist();
  static const int kXilianPropListFieldNumber = 6;
  inline const ::GSProto::PropItem& xilianproplist(int index) const;
  inline ::GSProto::PropItem* mutable_xilianproplist(int index);
  inline ::GSProto::PropItem* add_xilianproplist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
      xilianproplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
      mutable_xilianproplist();

  // optional int32 iSuitID = 7;
  inline bool has_isuitid() const;
  inline void clear_isuitid();
  static const int kISuitIDFieldNumber = 7;
  inline ::google::protobuf::int32 isuitid() const;
  inline void set_isuitid(::google::protobuf::int32 value);

  // optional int32 iSellMoney = 8;
  inline bool has_isellmoney() const;
  inline void clear_isellmoney();
  static const int kISellMoneyFieldNumber = 8;
  inline ::google::protobuf::int32 isellmoney() const;
  inline void set_isellmoney(::google::protobuf::int32 value);

  // optional int32 iEquipLevel = 9;
  inline bool has_iequiplevel() const;
  inline void clear_iequiplevel();
  static const int kIEquipLevelFieldNumber = 9;
  inline ::google::protobuf::int32 iequiplevel() const;
  inline void set_iequiplevel(::google::protobuf::int32 value);

  // optional .GSProto.PropItem equipRandomProp = 10;
  inline bool has_equiprandomprop() const;
  inline void clear_equiprandomprop();
  static const int kEquipRandomPropFieldNumber = 10;
  inline const ::GSProto::PropItem& equiprandomprop() const;
  inline ::GSProto::PropItem* mutable_equiprandomprop();
  inline ::GSProto::PropItem* release_equiprandomprop();
  inline void set_allocated_equiprandomprop(::GSProto::PropItem* equiprandomprop);

  // @@protoc_insertion_point(class_scope:GSProto.EquipInfo)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();
  inline void set_has_iitemid();
  inline void clear_has_iitemid();
  inline void set_has_ipos();
  inline void clear_has_ipos();
  inline void set_has_isuitid();
  inline void clear_has_isuitid();
  inline void set_has_isellmoney();
  inline void clear_has_isellmoney();
  inline void set_has_iequiplevel();
  inline void clear_has_iequiplevel();
  inline void set_has_equiprandomprop();
  inline void clear_has_equiprandomprop();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwobjectid_;
  ::google::protobuf::int32 iitemid_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem > szbaseproplist_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem > szspecialproplist_;
  ::google::protobuf::int32 ipos_;
  ::google::protobuf::int32 isuitid_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem > xilianproplist_;
  ::google::protobuf::int32 isellmoney_;
  ::google::protobuf::int32 iequiplevel_;
  ::GSProto::PropItem* equiprandomprop_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static EquipInfo* default_instance_;
};
// -------------------------------------------------------------------

class EquipSuitState : public ::google::protobuf::Message {
 public:
  EquipSuitState();
  virtual ~EquipSuitState();

  EquipSuitState(const EquipSuitState& from);

  inline EquipSuitState& operator=(const EquipSuitState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipSuitState& default_instance();

  void Swap(EquipSuitState* other);

  // implements Message ----------------------------------------------

  EquipSuitState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipSuitState& from);
  void MergeFrom(const EquipSuitState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iSuitID = 1;
  inline bool has_isuitid() const;
  inline void clear_isuitid();
  static const int kISuitIDFieldNumber = 1;
  inline ::google::protobuf::int32 isuitid() const;
  inline void set_isuitid(::google::protobuf::int32 value);

  // required sint32 iActiveCount = 2;
  inline bool has_iactivecount() const;
  inline void clear_iactivecount();
  static const int kIActiveCountFieldNumber = 2;
  inline ::google::protobuf::int32 iactivecount() const;
  inline void set_iactivecount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.EquipSuitState)
 private:
  inline void set_has_isuitid();
  inline void clear_has_isuitid();
  inline void set_has_iactivecount();
  inline void clear_has_iactivecount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isuitid_;
  ::google::protobuf::int32 iactivecount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static EquipSuitState* default_instance_;
};
// -------------------------------------------------------------------

class CMD_HERO_COVERT_OPEN_SC : public ::google::protobuf::Message {
 public:
  CMD_HERO_COVERT_OPEN_SC();
  virtual ~CMD_HERO_COVERT_OPEN_SC();

  CMD_HERO_COVERT_OPEN_SC(const CMD_HERO_COVERT_OPEN_SC& from);

  inline CMD_HERO_COVERT_OPEN_SC& operator=(const CMD_HERO_COVERT_OPEN_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HERO_COVERT_OPEN_SC& default_instance();

  void Swap(CMD_HERO_COVERT_OPEN_SC* other);

  // implements Message ----------------------------------------------

  CMD_HERO_COVERT_OPEN_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_HERO_COVERT_OPEN_SC& from);
  void MergeFrom(const CMD_HERO_COVERT_OPEN_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.COVERHEROVIEM iOpenId = 1;
  inline bool has_iopenid() const;
  inline void clear_iopenid();
  static const int kIOpenIdFieldNumber = 1;
  inline ::GSProto::COVERHEROVIEM iopenid() const;
  inline void set_iopenid(::GSProto::COVERHEROVIEM value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_HERO_COVERT_OPEN_SC)
 private:
  inline void set_has_iopenid();
  inline void clear_has_iopenid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int iopenid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_HERO_COVERT_OPEN_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_BAG_SC : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_BAG_SC();
  virtual ~CMD_EQUIP_BAG_SC();

  CMD_EQUIP_BAG_SC(const CMD_EQUIP_BAG_SC& from);

  inline CMD_EQUIP_BAG_SC& operator=(const CMD_EQUIP_BAG_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_BAG_SC& default_instance();

  void Swap(CMD_EQUIP_BAG_SC* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_BAG_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_BAG_SC& from);
  void MergeFrom(const CMD_EQUIP_BAG_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.EquipInfo szEquipList = 1;
  inline int szequiplist_size() const;
  inline void clear_szequiplist();
  static const int kSzEquipListFieldNumber = 1;
  inline const ::GSProto::EquipInfo& szequiplist(int index) const;
  inline ::GSProto::EquipInfo* mutable_szequiplist(int index);
  inline ::GSProto::EquipInfo* add_szequiplist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::EquipInfo >&
      szequiplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::EquipInfo >*
      mutable_szequiplist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_BAG_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::EquipInfo > szequiplist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_BAG_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_SUITSTATE_UPDATE_SC : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_SUITSTATE_UPDATE_SC();
  virtual ~CMD_EQUIP_SUITSTATE_UPDATE_SC();

  CMD_EQUIP_SUITSTATE_UPDATE_SC(const CMD_EQUIP_SUITSTATE_UPDATE_SC& from);

  inline CMD_EQUIP_SUITSTATE_UPDATE_SC& operator=(const CMD_EQUIP_SUITSTATE_UPDATE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_SUITSTATE_UPDATE_SC& default_instance();

  void Swap(CMD_EQUIP_SUITSTATE_UPDATE_SC* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_SUITSTATE_UPDATE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_SUITSTATE_UPDATE_SC& from);
  void MergeFrom(const CMD_EQUIP_SUITSTATE_UPDATE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // repeated .GSProto.EquipSuitState szsuitState = 2;
  inline int szsuitstate_size() const;
  inline void clear_szsuitstate();
  static const int kSzsuitStateFieldNumber = 2;
  inline const ::GSProto::EquipSuitState& szsuitstate(int index) const;
  inline ::GSProto::EquipSuitState* mutable_szsuitstate(int index);
  inline ::GSProto::EquipSuitState* add_szsuitstate();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::EquipSuitState >&
      szsuitstate() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::EquipSuitState >*
      mutable_szsuitstate();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_SUITSTATE_UPDATE_SC)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::EquipSuitState > szsuitstate_;
  ::google::protobuf::uint32 dwobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_SUITSTATE_UPDATE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_HEROEQUIP_CS : public ::google::protobuf::Message {
 public:
  CMD_QUERY_HEROEQUIP_CS();
  virtual ~CMD_QUERY_HEROEQUIP_CS();

  CMD_QUERY_HEROEQUIP_CS(const CMD_QUERY_HEROEQUIP_CS& from);

  inline CMD_QUERY_HEROEQUIP_CS& operator=(const CMD_QUERY_HEROEQUIP_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_HEROEQUIP_CS& default_instance();

  void Swap(CMD_QUERY_HEROEQUIP_CS* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_HEROEQUIP_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_HEROEQUIP_CS& from);
  void MergeFrom(const CMD_QUERY_HEROEQUIP_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_HEROEQUIP_CS)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwheroobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_HEROEQUIP_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_HEROEQUIP_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_HEROEQUIP_SC();
  virtual ~CMD_QUERY_HEROEQUIP_SC();

  CMD_QUERY_HEROEQUIP_SC(const CMD_QUERY_HEROEQUIP_SC& from);

  inline CMD_QUERY_HEROEQUIP_SC& operator=(const CMD_QUERY_HEROEQUIP_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_HEROEQUIP_SC& default_instance();

  void Swap(CMD_QUERY_HEROEQUIP_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_HEROEQUIP_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_HEROEQUIP_SC& from);
  void MergeFrom(const CMD_QUERY_HEROEQUIP_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // repeated .GSProto.EquipInfo szEquipList = 2;
  inline int szequiplist_size() const;
  inline void clear_szequiplist();
  static const int kSzEquipListFieldNumber = 2;
  inline const ::GSProto::EquipInfo& szequiplist(int index) const;
  inline ::GSProto::EquipInfo* mutable_szequiplist(int index);
  inline ::GSProto::EquipInfo* add_szequiplist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::EquipInfo >&
      szequiplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::EquipInfo >*
      mutable_szequiplist();

  // repeated .GSProto.EquipSuitState szSuitStateList = 3;
  inline int szsuitstatelist_size() const;
  inline void clear_szsuitstatelist();
  static const int kSzSuitStateListFieldNumber = 3;
  inline const ::GSProto::EquipSuitState& szsuitstatelist(int index) const;
  inline ::GSProto::EquipSuitState* mutable_szsuitstatelist(int index);
  inline ::GSProto::EquipSuitState* add_szsuitstatelist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::EquipSuitState >&
      szsuitstatelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::EquipSuitState >*
      mutable_szsuitstatelist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_HEROEQUIP_SC)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::EquipInfo > szequiplist_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::EquipSuitState > szsuitstatelist_;
  ::google::protobuf::uint32 dwheroobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_HEROEQUIP_SC* default_instance_;
};
// -------------------------------------------------------------------

class EquipChgItem : public ::google::protobuf::Message {
 public:
  EquipChgItem();
  virtual ~EquipChgItem();

  EquipChgItem(const EquipChgItem& from);

  inline EquipChgItem& operator=(const EquipChgItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipChgItem& default_instance();

  void Swap(EquipChgItem* other);

  // implements Message ----------------------------------------------

  EquipChgItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipChgItem& from);
  void MergeFrom(const EquipChgItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iPos = 1;
  inline bool has_ipos() const;
  inline void clear_ipos();
  static const int kIPosFieldNumber = 1;
  inline ::google::protobuf::int32 ipos() const;
  inline void set_ipos(::google::protobuf::int32 value);

  // required bool bDel = 2;
  inline bool has_bdel() const;
  inline void clear_bdel();
  static const int kBDelFieldNumber = 2;
  inline bool bdel() const;
  inline void set_bdel(bool value);

  // optional .GSProto.EquipInfo equipData = 3;
  inline bool has_equipdata() const;
  inline void clear_equipdata();
  static const int kEquipDataFieldNumber = 3;
  inline const ::GSProto::EquipInfo& equipdata() const;
  inline ::GSProto::EquipInfo* mutable_equipdata();
  inline ::GSProto::EquipInfo* release_equipdata();
  inline void set_allocated_equipdata(::GSProto::EquipInfo* equipdata);

  // @@protoc_insertion_point(class_scope:GSProto.EquipChgItem)
 private:
  inline void set_has_ipos();
  inline void clear_has_ipos();
  inline void set_has_bdel();
  inline void clear_has_bdel();
  inline void set_has_equipdata();
  inline void clear_has_equipdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ipos_;
  bool bdel_;
  ::GSProto::EquipInfo* equipdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static EquipChgItem* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_MOVE_CS : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_MOVE_CS();
  virtual ~CMD_EQUIP_MOVE_CS();

  CMD_EQUIP_MOVE_CS(const CMD_EQUIP_MOVE_CS& from);

  inline CMD_EQUIP_MOVE_CS& operator=(const CMD_EQUIP_MOVE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_MOVE_CS& default_instance();

  void Swap(CMD_EQUIP_MOVE_CS* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_MOVE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_MOVE_CS& from);
  void MergeFrom(const CMD_EQUIP_MOVE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwSrcObjectID = 1;
  inline bool has_dwsrcobjectid() const;
  inline void clear_dwsrcobjectid();
  static const int kDwSrcObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwsrcobjectid() const;
  inline void set_dwsrcobjectid(::google::protobuf::uint32 value);

  // required uint32 dwDstObjectID = 2;
  inline bool has_dwdstobjectid() const;
  inline void clear_dwdstobjectid();
  static const int kDwDstObjectIDFieldNumber = 2;
  inline ::google::protobuf::uint32 dwdstobjectid() const;
  inline void set_dwdstobjectid(::google::protobuf::uint32 value);

  // required sint32 iSrcPos = 3;
  inline bool has_isrcpos() const;
  inline void clear_isrcpos();
  static const int kISrcPosFieldNumber = 3;
  inline ::google::protobuf::int32 isrcpos() const;
  inline void set_isrcpos(::google::protobuf::int32 value);

  // required sint32 iDstPos = 4;
  inline bool has_idstpos() const;
  inline void clear_idstpos();
  static const int kIDstPosFieldNumber = 4;
  inline ::google::protobuf::int32 idstpos() const;
  inline void set_idstpos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_MOVE_CS)
 private:
  inline void set_has_dwsrcobjectid();
  inline void clear_has_dwsrcobjectid();
  inline void set_has_dwdstobjectid();
  inline void clear_has_dwdstobjectid();
  inline void set_has_isrcpos();
  inline void clear_has_isrcpos();
  inline void set_has_idstpos();
  inline void clear_has_idstpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwsrcobjectid_;
  ::google::protobuf::uint32 dwdstobjectid_;
  ::google::protobuf::int32 isrcpos_;
  ::google::protobuf::int32 idstpos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_MOVE_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIPCONTAINER_CHG_SC : public ::google::protobuf::Message {
 public:
  CMD_EQUIPCONTAINER_CHG_SC();
  virtual ~CMD_EQUIPCONTAINER_CHG_SC();

  CMD_EQUIPCONTAINER_CHG_SC(const CMD_EQUIPCONTAINER_CHG_SC& from);

  inline CMD_EQUIPCONTAINER_CHG_SC& operator=(const CMD_EQUIPCONTAINER_CHG_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIPCONTAINER_CHG_SC& default_instance();

  void Swap(CMD_EQUIPCONTAINER_CHG_SC* other);

  // implements Message ----------------------------------------------

  CMD_EQUIPCONTAINER_CHG_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIPCONTAINER_CHG_SC& from);
  void MergeFrom(const CMD_EQUIPCONTAINER_CHG_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwObjectID = 1;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // repeated .GSProto.EquipChgItem szChgList = 3;
  inline int szchglist_size() const;
  inline void clear_szchglist();
  static const int kSzChgListFieldNumber = 3;
  inline const ::GSProto::EquipChgItem& szchglist(int index) const;
  inline ::GSProto::EquipChgItem* mutable_szchglist(int index);
  inline ::GSProto::EquipChgItem* add_szchglist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::EquipChgItem >&
      szchglist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::EquipChgItem >*
      mutable_szchglist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIPCONTAINER_CHG_SC)
 private:
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::EquipChgItem > szchglist_;
  ::google::protobuf::uint32 dwobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIPCONTAINER_CHG_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_SELLBYPOS_CS : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_SELLBYPOS_CS();
  virtual ~CMD_EQUIP_SELLBYPOS_CS();

  CMD_EQUIP_SELLBYPOS_CS(const CMD_EQUIP_SELLBYPOS_CS& from);

  inline CMD_EQUIP_SELLBYPOS_CS& operator=(const CMD_EQUIP_SELLBYPOS_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_SELLBYPOS_CS& default_instance();

  void Swap(CMD_EQUIP_SELLBYPOS_CS* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_SELLBYPOS_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_SELLBYPOS_CS& from);
  void MergeFrom(const CMD_EQUIP_SELLBYPOS_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iEquipPos = 1;
  inline bool has_iequippos() const;
  inline void clear_iequippos();
  static const int kIEquipPosFieldNumber = 1;
  inline ::google::protobuf::int32 iequippos() const;
  inline void set_iequippos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_SELLBYPOS_CS)
 private:
  inline void set_has_iequippos();
  inline void clear_has_iequippos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iequippos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_SELLBYPOS_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_SELLBYQUALITY_CS : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_SELLBYQUALITY_CS();
  virtual ~CMD_EQUIP_SELLBYQUALITY_CS();

  CMD_EQUIP_SELLBYQUALITY_CS(const CMD_EQUIP_SELLBYQUALITY_CS& from);

  inline CMD_EQUIP_SELLBYQUALITY_CS& operator=(const CMD_EQUIP_SELLBYQUALITY_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_SELLBYQUALITY_CS& default_instance();

  void Swap(CMD_EQUIP_SELLBYQUALITY_CS* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_SELLBYQUALITY_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_SELLBYQUALITY_CS& from);
  void MergeFrom(const CMD_EQUIP_SELLBYQUALITY_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bSellGreen = 1;
  inline bool has_bsellgreen() const;
  inline void clear_bsellgreen();
  static const int kBSellGreenFieldNumber = 1;
  inline bool bsellgreen() const;
  inline void set_bsellgreen(bool value);

  // required bool bSellBlue = 2;
  inline bool has_bsellblue() const;
  inline void clear_bsellblue();
  static const int kBSellBlueFieldNumber = 2;
  inline bool bsellblue() const;
  inline void set_bsellblue(bool value);

  // required bool bSellPurple = 3;
  inline bool has_bsellpurple() const;
  inline void clear_bsellpurple();
  static const int kBSellPurpleFieldNumber = 3;
  inline bool bsellpurple() const;
  inline void set_bsellpurple(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_SELLBYQUALITY_CS)
 private:
  inline void set_has_bsellgreen();
  inline void clear_has_bsellgreen();
  inline void set_has_bsellblue();
  inline void clear_has_bsellblue();
  inline void set_has_bsellpurple();
  inline void clear_has_bsellpurple();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool bsellgreen_;
  bool bsellblue_;
  bool bsellpurple_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_SELLBYQUALITY_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_COMBINE_CS : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_COMBINE_CS();
  virtual ~CMD_EQUIP_COMBINE_CS();

  CMD_EQUIP_COMBINE_CS(const CMD_EQUIP_COMBINE_CS& from);

  inline CMD_EQUIP_COMBINE_CS& operator=(const CMD_EQUIP_COMBINE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_COMBINE_CS& default_instance();

  void Swap(CMD_EQUIP_COMBINE_CS* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_COMBINE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_COMBINE_CS& from);
  void MergeFrom(const CMD_EQUIP_COMBINE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwSrcObjectID = 1;
  inline bool has_dwsrcobjectid() const;
  inline void clear_dwsrcobjectid();
  static const int kDwSrcObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwsrcobjectid() const;
  inline void set_dwsrcobjectid(::google::protobuf::uint32 value);

  // required int32 iSrcEquipPos = 2;
  inline bool has_isrcequippos() const;
  inline void clear_isrcequippos();
  static const int kISrcEquipPosFieldNumber = 2;
  inline ::google::protobuf::int32 isrcequippos() const;
  inline void set_isrcequippos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_COMBINE_CS)
 private:
  inline void set_has_dwsrcobjectid();
  inline void clear_has_dwsrcobjectid();
  inline void set_has_isrcequippos();
  inline void clear_has_isrcequippos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwsrcobjectid_;
  ::google::protobuf::int32 isrcequippos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_COMBINE_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_EQUIPDESC_BYID_CS : public ::google::protobuf::Message {
 public:
  CMD_QUERY_EQUIPDESC_BYID_CS();
  virtual ~CMD_QUERY_EQUIPDESC_BYID_CS();

  CMD_QUERY_EQUIPDESC_BYID_CS(const CMD_QUERY_EQUIPDESC_BYID_CS& from);

  inline CMD_QUERY_EQUIPDESC_BYID_CS& operator=(const CMD_QUERY_EQUIPDESC_BYID_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_EQUIPDESC_BYID_CS& default_instance();

  void Swap(CMD_QUERY_EQUIPDESC_BYID_CS* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_EQUIPDESC_BYID_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_EQUIPDESC_BYID_CS& from);
  void MergeFrom(const CMD_QUERY_EQUIPDESC_BYID_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iEquipID = 1;
  inline bool has_iequipid() const;
  inline void clear_iequipid();
  static const int kIEquipIDFieldNumber = 1;
  inline ::google::protobuf::int32 iequipid() const;
  inline void set_iequipid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_EQUIPDESC_BYID_CS)
 private:
  inline void set_has_iequipid();
  inline void clear_has_iequipid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iequipid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_EQUIPDESC_BYID_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_EQUIPDESC_BYID_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_EQUIPDESC_BYID_SC();
  virtual ~CMD_QUERY_EQUIPDESC_BYID_SC();

  CMD_QUERY_EQUIPDESC_BYID_SC(const CMD_QUERY_EQUIPDESC_BYID_SC& from);

  inline CMD_QUERY_EQUIPDESC_BYID_SC& operator=(const CMD_QUERY_EQUIPDESC_BYID_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_EQUIPDESC_BYID_SC& default_instance();

  void Swap(CMD_QUERY_EQUIPDESC_BYID_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_EQUIPDESC_BYID_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_EQUIPDESC_BYID_SC& from);
  void MergeFrom(const CMD_QUERY_EQUIPDESC_BYID_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.EquipInfo equipData = 1;
  inline bool has_equipdata() const;
  inline void clear_equipdata();
  static const int kEquipDataFieldNumber = 1;
  inline const ::GSProto::EquipInfo& equipdata() const;
  inline ::GSProto::EquipInfo* mutable_equipdata();
  inline ::GSProto::EquipInfo* release_equipdata();
  inline void set_allocated_equipdata(::GSProto::EquipInfo* equipdata);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_EQUIPDESC_BYID_SC)
 private:
  inline void set_has_equipdata();
  inline void clear_has_equipdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::EquipInfo* equipdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_EQUIPDESC_BYID_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_EQUIPSOURCE_CS : public ::google::protobuf::Message {
 public:
  CMD_QUERY_EQUIPSOURCE_CS();
  virtual ~CMD_QUERY_EQUIPSOURCE_CS();

  CMD_QUERY_EQUIPSOURCE_CS(const CMD_QUERY_EQUIPSOURCE_CS& from);

  inline CMD_QUERY_EQUIPSOURCE_CS& operator=(const CMD_QUERY_EQUIPSOURCE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_EQUIPSOURCE_CS& default_instance();

  void Swap(CMD_QUERY_EQUIPSOURCE_CS* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_EQUIPSOURCE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_EQUIPSOURCE_CS& from);
  void MergeFrom(const CMD_QUERY_EQUIPSOURCE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iEquipID = 1;
  inline bool has_iequipid() const;
  inline void clear_iequipid();
  static const int kIEquipIDFieldNumber = 1;
  inline ::google::protobuf::int32 iequipid() const;
  inline void set_iequipid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_EQUIPSOURCE_CS)
 private:
  inline void set_has_iequipid();
  inline void clear_has_iequipid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iequipid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_EQUIPSOURCE_CS* default_instance_;
};
// -------------------------------------------------------------------

class EquipSource : public ::google::protobuf::Message {
 public:
  EquipSource();
  virtual ~EquipSource();

  EquipSource(const EquipSource& from);

  inline EquipSource& operator=(const EquipSource& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipSource& default_instance();

  void Swap(EquipSource* other);

  // implements Message ----------------------------------------------

  EquipSource* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipSource& from);
  void MergeFrom(const EquipSource& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iSectionID = 1;
  inline bool has_isectionid() const;
  inline void clear_isectionid();
  static const int kISectionIDFieldNumber = 1;
  inline ::google::protobuf::int32 isectionid() const;
  inline void set_isectionid(::google::protobuf::int32 value);

  // required int32 iSceneID = 2;
  inline bool has_isceneid() const;
  inline void clear_isceneid();
  static const int kISceneIDFieldNumber = 2;
  inline ::google::protobuf::int32 isceneid() const;
  inline void set_isceneid(::google::protobuf::int32 value);

  // required bool bOpened = 3;
  inline bool has_bopened() const;
  inline void clear_bopened();
  static const int kBOpenedFieldNumber = 3;
  inline bool bopened() const;
  inline void set_bopened(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.EquipSource)
 private:
  inline void set_has_isectionid();
  inline void clear_has_isectionid();
  inline void set_has_isceneid();
  inline void clear_has_isceneid();
  inline void set_has_bopened();
  inline void clear_has_bopened();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isectionid_;
  ::google::protobuf::int32 isceneid_;
  bool bopened_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static EquipSource* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_EQUIPSOURCE_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_EQUIPSOURCE_SC();
  virtual ~CMD_QUERY_EQUIPSOURCE_SC();

  CMD_QUERY_EQUIPSOURCE_SC(const CMD_QUERY_EQUIPSOURCE_SC& from);

  inline CMD_QUERY_EQUIPSOURCE_SC& operator=(const CMD_QUERY_EQUIPSOURCE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_EQUIPSOURCE_SC& default_instance();

  void Swap(CMD_QUERY_EQUIPSOURCE_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_EQUIPSOURCE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_EQUIPSOURCE_SC& from);
  void MergeFrom(const CMD_QUERY_EQUIPSOURCE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iEquipID = 1;
  inline bool has_iequipid() const;
  inline void clear_iequipid();
  static const int kIEquipIDFieldNumber = 1;
  inline ::google::protobuf::int32 iequipid() const;
  inline void set_iequipid(::google::protobuf::int32 value);

  // repeated .GSProto.EquipSource szEquipSource = 2;
  inline int szequipsource_size() const;
  inline void clear_szequipsource();
  static const int kSzEquipSourceFieldNumber = 2;
  inline const ::GSProto::EquipSource& szequipsource(int index) const;
  inline ::GSProto::EquipSource* mutable_szequipsource(int index);
  inline ::GSProto::EquipSource* add_szequipsource();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::EquipSource >&
      szequipsource() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::EquipSource >*
      mutable_szequipsource();

  // optional string strSpecialSource = 3;
  inline bool has_strspecialsource() const;
  inline void clear_strspecialsource();
  static const int kStrSpecialSourceFieldNumber = 3;
  inline const ::std::string& strspecialsource() const;
  inline void set_strspecialsource(const ::std::string& value);
  inline void set_strspecialsource(const char* value);
  inline void set_strspecialsource(const char* value, size_t size);
  inline ::std::string* mutable_strspecialsource();
  inline ::std::string* release_strspecialsource();
  inline void set_allocated_strspecialsource(::std::string* strspecialsource);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_EQUIPSOURCE_SC)
 private:
  inline void set_has_iequipid();
  inline void clear_has_iequipid();
  inline void set_has_strspecialsource();
  inline void clear_has_strspecialsource();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::EquipSource > szequipsource_;
  ::std::string* strspecialsource_;
  ::google::protobuf::int32 iequipid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_EQUIPSOURCE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_DELETE_HEROS_SC : public ::google::protobuf::Message {
 public:
  CMD_DELETE_HEROS_SC();
  virtual ~CMD_DELETE_HEROS_SC();

  CMD_DELETE_HEROS_SC(const CMD_DELETE_HEROS_SC& from);

  inline CMD_DELETE_HEROS_SC& operator=(const CMD_DELETE_HEROS_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_DELETE_HEROS_SC& default_instance();

  void Swap(CMD_DELETE_HEROS_SC* other);

  // implements Message ----------------------------------------------

  CMD_DELETE_HEROS_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_DELETE_HEROS_SC& from);
  void MergeFrom(const CMD_DELETE_HEROS_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 szHeroObjecetId = 1;
  inline int szheroobjecetid_size() const;
  inline void clear_szheroobjecetid();
  static const int kSzHeroObjecetIdFieldNumber = 1;
  inline ::google::protobuf::int32 szheroobjecetid(int index) const;
  inline void set_szheroobjecetid(int index, ::google::protobuf::int32 value);
  inline void add_szheroobjecetid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      szheroobjecetid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_szheroobjecetid();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_DELETE_HEROS_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > szheroobjecetid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_DELETE_HEROS_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_QUERYENHANCE_CS : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_QUERYENHANCE_CS();
  virtual ~CMD_EQUIP_QUERYENHANCE_CS();

  CMD_EQUIP_QUERYENHANCE_CS(const CMD_EQUIP_QUERYENHANCE_CS& from);

  inline CMD_EQUIP_QUERYENHANCE_CS& operator=(const CMD_EQUIP_QUERYENHANCE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_QUERYENHANCE_CS& default_instance();

  void Swap(CMD_EQUIP_QUERYENHANCE_CS* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_QUERYENHANCE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_QUERYENHANCE_CS& from);
  void MergeFrom(const CMD_EQUIP_QUERYENHANCE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // required int32 iEquipPos = 2;
  inline bool has_iequippos() const;
  inline void clear_iequippos();
  static const int kIEquipPosFieldNumber = 2;
  inline ::google::protobuf::int32 iequippos() const;
  inline void set_iequippos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_QUERYENHANCE_CS)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();
  inline void set_has_iequippos();
  inline void clear_has_iequippos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwheroobjectid_;
  ::google::protobuf::int32 iequippos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_QUERYENHANCE_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_QUERYENHANCE_SC : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_QUERYENHANCE_SC();
  virtual ~CMD_EQUIP_QUERYENHANCE_SC();

  CMD_EQUIP_QUERYENHANCE_SC(const CMD_EQUIP_QUERYENHANCE_SC& from);

  inline CMD_EQUIP_QUERYENHANCE_SC& operator=(const CMD_EQUIP_QUERYENHANCE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_QUERYENHANCE_SC& default_instance();

  void Swap(CMD_EQUIP_QUERYENHANCE_SC* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_QUERYENHANCE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_QUERYENHANCE_SC& from);
  void MergeFrom(const CMD_EQUIP_QUERYENHANCE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // required int32 iEquipPos = 2;
  inline bool has_iequippos() const;
  inline void clear_iequippos();
  static const int kIEquipPosFieldNumber = 2;
  inline ::google::protobuf::int32 iequippos() const;
  inline void set_iequippos(::google::protobuf::int32 value);

  // required int32 iCurLevel = 3;
  inline bool has_icurlevel() const;
  inline void clear_icurlevel();
  static const int kICurLevelFieldNumber = 3;
  inline ::google::protobuf::int32 icurlevel() const;
  inline void set_icurlevel(::google::protobuf::int32 value);

  // required int32 iNextLevel = 4;
  inline bool has_inextlevel() const;
  inline void clear_inextlevel();
  static const int kINextLevelFieldNumber = 4;
  inline ::google::protobuf::int32 inextlevel() const;
  inline void set_inextlevel(::google::protobuf::int32 value);

  // repeated .GSProto.PropItem szCurPropList = 5;
  inline int szcurproplist_size() const;
  inline void clear_szcurproplist();
  static const int kSzCurPropListFieldNumber = 5;
  inline const ::GSProto::PropItem& szcurproplist(int index) const;
  inline ::GSProto::PropItem* mutable_szcurproplist(int index);
  inline ::GSProto::PropItem* add_szcurproplist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
      szcurproplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
      mutable_szcurproplist();

  // repeated .GSProto.PropItem szNextPropList = 6;
  inline int sznextproplist_size() const;
  inline void clear_sznextproplist();
  static const int kSzNextPropListFieldNumber = 6;
  inline const ::GSProto::PropItem& sznextproplist(int index) const;
  inline ::GSProto::PropItem* mutable_sznextproplist(int index);
  inline ::GSProto::PropItem* add_sznextproplist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
      sznextproplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
      mutable_sznextproplist();

  // required int32 iCostSilver = 7;
  inline bool has_icostsilver() const;
  inline void clear_icostsilver();
  static const int kICostSilverFieldNumber = 7;
  inline ::google::protobuf::int32 icostsilver() const;
  inline void set_icostsilver(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_QUERYENHANCE_SC)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();
  inline void set_has_iequippos();
  inline void clear_has_iequippos();
  inline void set_has_icurlevel();
  inline void clear_has_icurlevel();
  inline void set_has_inextlevel();
  inline void clear_has_inextlevel();
  inline void set_has_icostsilver();
  inline void clear_has_icostsilver();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwheroobjectid_;
  ::google::protobuf::int32 iequippos_;
  ::google::protobuf::int32 icurlevel_;
  ::google::protobuf::int32 inextlevel_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem > szcurproplist_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem > sznextproplist_;
  ::google::protobuf::int32 icostsilver_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_QUERYENHANCE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_ENHANCE_CS : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_ENHANCE_CS();
  virtual ~CMD_EQUIP_ENHANCE_CS();

  CMD_EQUIP_ENHANCE_CS(const CMD_EQUIP_ENHANCE_CS& from);

  inline CMD_EQUIP_ENHANCE_CS& operator=(const CMD_EQUIP_ENHANCE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_ENHANCE_CS& default_instance();

  void Swap(CMD_EQUIP_ENHANCE_CS* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_ENHANCE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_ENHANCE_CS& from);
  void MergeFrom(const CMD_EQUIP_ENHANCE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // required int32 iEquipPos = 2;
  inline bool has_iequippos() const;
  inline void clear_iequippos();
  static const int kIEquipPosFieldNumber = 2;
  inline ::google::protobuf::int32 iequippos() const;
  inline void set_iequippos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_ENHANCE_CS)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();
  inline void set_has_iequippos();
  inline void clear_has_iequippos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwheroobjectid_;
  ::google::protobuf::int32 iequippos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_ENHANCE_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_ENHANCE_SC : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_ENHANCE_SC();
  virtual ~CMD_EQUIP_ENHANCE_SC();

  CMD_EQUIP_ENHANCE_SC(const CMD_EQUIP_ENHANCE_SC& from);

  inline CMD_EQUIP_ENHANCE_SC& operator=(const CMD_EQUIP_ENHANCE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_ENHANCE_SC& default_instance();

  void Swap(CMD_EQUIP_ENHANCE_SC* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_ENHANCE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_ENHANCE_SC& from);
  void MergeFrom(const CMD_EQUIP_ENHANCE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bSuccess = 1;
  inline bool has_bsuccess() const;
  inline void clear_bsuccess();
  static const int kBSuccessFieldNumber = 1;
  inline bool bsuccess() const;
  inline void set_bsuccess(bool value);

  // optional int32 iAddLevel = 2;
  inline bool has_iaddlevel() const;
  inline void clear_iaddlevel();
  static const int kIAddLevelFieldNumber = 2;
  inline ::google::protobuf::int32 iaddlevel() const;
  inline void set_iaddlevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_ENHANCE_SC)
 private:
  inline void set_has_bsuccess();
  inline void clear_has_bsuccess();
  inline void set_has_iaddlevel();
  inline void clear_has_iaddlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool bsuccess_;
  ::google::protobuf::int32 iaddlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_ENHANCE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_CHIPSELL_CS : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_CHIPSELL_CS();
  virtual ~CMD_EQUIP_CHIPSELL_CS();

  CMD_EQUIP_CHIPSELL_CS(const CMD_EQUIP_CHIPSELL_CS& from);

  inline CMD_EQUIP_CHIPSELL_CS& operator=(const CMD_EQUIP_CHIPSELL_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_CHIPSELL_CS& default_instance();

  void Swap(CMD_EQUIP_CHIPSELL_CS* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_CHIPSELL_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_CHIPSELL_CS& from);
  void MergeFrom(const CMD_EQUIP_CHIPSELL_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iEquipCipID = 1;
  inline bool has_iequipcipid() const;
  inline void clear_iequipcipid();
  static const int kIEquipCipIDFieldNumber = 1;
  inline ::google::protobuf::int32 iequipcipid() const;
  inline void set_iequipcipid(::google::protobuf::int32 value);

  // required int32 iCount = 2;
  inline bool has_icount() const;
  inline void clear_icount();
  static const int kICountFieldNumber = 2;
  inline ::google::protobuf::int32 icount() const;
  inline void set_icount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_CHIPSELL_CS)
 private:
  inline void set_has_iequipcipid();
  inline void clear_has_iequipcipid();
  inline void set_has_icount();
  inline void clear_has_icount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iequipcipid_;
  ::google::protobuf::int32 icount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_CHIPSELL_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_CHIPCOMBINE_CS : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_CHIPCOMBINE_CS();
  virtual ~CMD_EQUIP_CHIPCOMBINE_CS();

  CMD_EQUIP_CHIPCOMBINE_CS(const CMD_EQUIP_CHIPCOMBINE_CS& from);

  inline CMD_EQUIP_CHIPCOMBINE_CS& operator=(const CMD_EQUIP_CHIPCOMBINE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_CHIPCOMBINE_CS& default_instance();

  void Swap(CMD_EQUIP_CHIPCOMBINE_CS* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_CHIPCOMBINE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_CHIPCOMBINE_CS& from);
  void MergeFrom(const CMD_EQUIP_CHIPCOMBINE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iEquipChipID = 1;
  inline bool has_iequipchipid() const;
  inline void clear_iequipchipid();
  static const int kIEquipChipIDFieldNumber = 1;
  inline ::google::protobuf::int32 iequipchipid() const;
  inline void set_iequipchipid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_CHIPCOMBINE_CS)
 private:
  inline void set_has_iequipchipid();
  inline void clear_has_iequipchipid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iequipchipid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_CHIPCOMBINE_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_DUNGEON_SAODANG_CS : public ::google::protobuf::Message {
 public:
  CMD_DUNGEON_SAODANG_CS();
  virtual ~CMD_DUNGEON_SAODANG_CS();

  CMD_DUNGEON_SAODANG_CS(const CMD_DUNGEON_SAODANG_CS& from);

  inline CMD_DUNGEON_SAODANG_CS& operator=(const CMD_DUNGEON_SAODANG_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_DUNGEON_SAODANG_CS& default_instance();

  void Swap(CMD_DUNGEON_SAODANG_CS* other);

  // implements Message ----------------------------------------------

  CMD_DUNGEON_SAODANG_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_DUNGEON_SAODANG_CS& from);
  void MergeFrom(const CMD_DUNGEON_SAODANG_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iSceneID = 1;
  inline bool has_isceneid() const;
  inline void clear_isceneid();
  static const int kISceneIDFieldNumber = 1;
  inline ::google::protobuf::int32 isceneid() const;
  inline void set_isceneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_DUNGEON_SAODANG_CS)
 private:
  inline void set_has_isceneid();
  inline void clear_has_isceneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isceneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_DUNGEON_SAODANG_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_DUNGEON_SAODANG_SC : public ::google::protobuf::Message {
 public:
  CMD_DUNGEON_SAODANG_SC();
  virtual ~CMD_DUNGEON_SAODANG_SC();

  CMD_DUNGEON_SAODANG_SC(const CMD_DUNGEON_SAODANG_SC& from);

  inline CMD_DUNGEON_SAODANG_SC& operator=(const CMD_DUNGEON_SAODANG_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_DUNGEON_SAODANG_SC& default_instance();

  void Swap(CMD_DUNGEON_SAODANG_SC* other);

  // implements Message ----------------------------------------------

  CMD_DUNGEON_SAODANG_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_DUNGEON_SAODANG_SC& from);
  void MergeFrom(const CMD_DUNGEON_SAODANG_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iSceneID = 1;
  inline bool has_isceneid() const;
  inline void clear_isceneid();
  static const int kISceneIDFieldNumber = 1;
  inline ::google::protobuf::int32 isceneid() const;
  inline void set_isceneid(::google::protobuf::int32 value);

  // required .GSProto.FightAwardResult awardInfo = 2;
  inline bool has_awardinfo() const;
  inline void clear_awardinfo();
  static const int kAwardInfoFieldNumber = 2;
  inline const ::GSProto::FightAwardResult& awardinfo() const;
  inline ::GSProto::FightAwardResult* mutable_awardinfo();
  inline ::GSProto::FightAwardResult* release_awardinfo();
  inline void set_allocated_awardinfo(::GSProto::FightAwardResult* awardinfo);

  // required int32 iHeroGetExp = 3;
  inline bool has_iherogetexp() const;
  inline void clear_iherogetexp();
  static const int kIHeroGetExpFieldNumber = 3;
  inline ::google::protobuf::int32 iherogetexp() const;
  inline void set_iherogetexp(::google::protobuf::int32 value);

  // repeated .GSProto.HeroExpAwardDetail szHeroAward = 4;
  inline int szheroaward_size() const;
  inline void clear_szheroaward();
  static const int kSzHeroAwardFieldNumber = 4;
  inline const ::GSProto::HeroExpAwardDetail& szheroaward(int index) const;
  inline ::GSProto::HeroExpAwardDetail* mutable_szheroaward(int index);
  inline ::GSProto::HeroExpAwardDetail* add_szheroaward();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HeroExpAwardDetail >&
      szheroaward() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::HeroExpAwardDetail >*
      mutable_szheroaward();

  // optional bool bCanFP = 5;
  inline bool has_bcanfp() const;
  inline void clear_bcanfp();
  static const int kBCanFPFieldNumber = 5;
  inline bool bcanfp() const;
  inline void set_bcanfp(bool value);

  // optional int32 iCostGold = 6;
  inline bool has_icostgold() const;
  inline void clear_icostgold();
  static const int kICostGoldFieldNumber = 6;
  inline ::google::protobuf::int32 icostgold() const;
  inline void set_icostgold(::google::protobuf::int32 value);

  // required int32 iExtraExp = 7;
  inline bool has_iextraexp() const;
  inline void clear_iextraexp();
  static const int kIExtraExpFieldNumber = 7;
  inline ::google::protobuf::int32 iextraexp() const;
  inline void set_iextraexp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_DUNGEON_SAODANG_SC)
 private:
  inline void set_has_isceneid();
  inline void clear_has_isceneid();
  inline void set_has_awardinfo();
  inline void clear_has_awardinfo();
  inline void set_has_iherogetexp();
  inline void clear_has_iherogetexp();
  inline void set_has_bcanfp();
  inline void clear_has_bcanfp();
  inline void set_has_icostgold();
  inline void clear_has_icostgold();
  inline void set_has_iextraexp();
  inline void clear_has_iextraexp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::FightAwardResult* awardinfo_;
  ::google::protobuf::int32 isceneid_;
  ::google::protobuf::int32 iherogetexp_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::HeroExpAwardDetail > szheroaward_;
  bool bcanfp_;
  ::google::protobuf::int32 icostgold_;
  ::google::protobuf::int32 iextraexp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_DUNGEON_SAODANG_SC* default_instance_;
};
// -------------------------------------------------------------------

class MailDetail : public ::google::protobuf::Message {
 public:
  MailDetail();
  virtual ~MailDetail();

  MailDetail(const MailDetail& from);

  inline MailDetail& operator=(const MailDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailDetail& default_instance();

  void Swap(MailDetail* other);

  // implements Message ----------------------------------------------

  MailDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailDetail& from);
  void MergeFrom(const MailDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strUUID = 1;
  inline bool has_struuid() const;
  inline void clear_struuid();
  static const int kStrUUIDFieldNumber = 1;
  inline const ::std::string& struuid() const;
  inline void set_struuid(const ::std::string& value);
  inline void set_struuid(const char* value);
  inline void set_struuid(const char* value, size_t size);
  inline ::std::string* mutable_struuid();
  inline ::std::string* release_struuid();
  inline void set_allocated_struuid(::std::string* struuid);

  // required string strMailTitle = 2;
  inline bool has_strmailtitle() const;
  inline void clear_strmailtitle();
  static const int kStrMailTitleFieldNumber = 2;
  inline const ::std::string& strmailtitle() const;
  inline void set_strmailtitle(const ::std::string& value);
  inline void set_strmailtitle(const char* value);
  inline void set_strmailtitle(const char* value, size_t size);
  inline ::std::string* mutable_strmailtitle();
  inline ::std::string* release_strmailtitle();
  inline void set_allocated_strmailtitle(::std::string* strmailtitle);

  // required string strMailSender = 3;
  inline bool has_strmailsender() const;
  inline void clear_strmailsender();
  static const int kStrMailSenderFieldNumber = 3;
  inline const ::std::string& strmailsender() const;
  inline void set_strmailsender(const ::std::string& value);
  inline void set_strmailsender(const char* value);
  inline void set_strmailsender(const char* value, size_t size);
  inline ::std::string* mutable_strmailsender();
  inline ::std::string* release_strmailsender();
  inline void set_allocated_strmailsender(::std::string* strmailsender);

  // required uint32 dwSendTime = 4;
  inline bool has_dwsendtime() const;
  inline void clear_dwsendtime();
  static const int kDwSendTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 dwsendtime() const;
  inline void set_dwsendtime(::google::protobuf::uint32 value);

  // required string strContent = 5;
  inline bool has_strcontent() const;
  inline void clear_strcontent();
  static const int kStrContentFieldNumber = 5;
  inline const ::std::string& strcontent() const;
  inline void set_strcontent(const ::std::string& value);
  inline void set_strcontent(const char* value);
  inline void set_strcontent(const char* value, size_t size);
  inline ::std::string* mutable_strcontent();
  inline ::std::string* release_strcontent();
  inline void set_allocated_strcontent(::std::string* strcontent);

  // required int32 iState = 6;
  inline bool has_istate() const;
  inline void clear_istate();
  static const int kIStateFieldNumber = 6;
  inline ::google::protobuf::int32 istate() const;
  inline void set_istate(::google::protobuf::int32 value);

  // optional .GSProto.FightAwardResult awardInfo = 7;
  inline bool has_awardinfo() const;
  inline void clear_awardinfo();
  static const int kAwardInfoFieldNumber = 7;
  inline const ::GSProto::FightAwardResult& awardinfo() const;
  inline ::GSProto::FightAwardResult* mutable_awardinfo();
  inline ::GSProto::FightAwardResult* release_awardinfo();
  inline void set_allocated_awardinfo(::GSProto::FightAwardResult* awardinfo);

  // @@protoc_insertion_point(class_scope:GSProto.MailDetail)
 private:
  inline void set_has_struuid();
  inline void clear_has_struuid();
  inline void set_has_strmailtitle();
  inline void clear_has_strmailtitle();
  inline void set_has_strmailsender();
  inline void clear_has_strmailsender();
  inline void set_has_dwsendtime();
  inline void clear_has_dwsendtime();
  inline void set_has_strcontent();
  inline void clear_has_strcontent();
  inline void set_has_istate();
  inline void clear_has_istate();
  inline void set_has_awardinfo();
  inline void clear_has_awardinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* struuid_;
  ::std::string* strmailtitle_;
  ::std::string* strmailsender_;
  ::std::string* strcontent_;
  ::google::protobuf::uint32 dwsendtime_;
  ::google::protobuf::int32 istate_;
  ::GSProto::FightAwardResult* awardinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static MailDetail* default_instance_;
};
// -------------------------------------------------------------------

class MailShotDesc : public ::google::protobuf::Message {
 public:
  MailShotDesc();
  virtual ~MailShotDesc();

  MailShotDesc(const MailShotDesc& from);

  inline MailShotDesc& operator=(const MailShotDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailShotDesc& default_instance();

  void Swap(MailShotDesc* other);

  // implements Message ----------------------------------------------

  MailShotDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailShotDesc& from);
  void MergeFrom(const MailShotDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strUUID = 1;
  inline bool has_struuid() const;
  inline void clear_struuid();
  static const int kStrUUIDFieldNumber = 1;
  inline const ::std::string& struuid() const;
  inline void set_struuid(const ::std::string& value);
  inline void set_struuid(const char* value);
  inline void set_struuid(const char* value, size_t size);
  inline ::std::string* mutable_struuid();
  inline ::std::string* release_struuid();
  inline void set_allocated_struuid(::std::string* struuid);

  // required string strMailTitle = 2;
  inline bool has_strmailtitle() const;
  inline void clear_strmailtitle();
  static const int kStrMailTitleFieldNumber = 2;
  inline const ::std::string& strmailtitle() const;
  inline void set_strmailtitle(const ::std::string& value);
  inline void set_strmailtitle(const char* value);
  inline void set_strmailtitle(const char* value, size_t size);
  inline ::std::string* mutable_strmailtitle();
  inline ::std::string* release_strmailtitle();
  inline void set_allocated_strmailtitle(::std::string* strmailtitle);

  // required string strMailSender = 3;
  inline bool has_strmailsender() const;
  inline void clear_strmailsender();
  static const int kStrMailSenderFieldNumber = 3;
  inline const ::std::string& strmailsender() const;
  inline void set_strmailsender(const ::std::string& value);
  inline void set_strmailsender(const char* value);
  inline void set_strmailsender(const char* value, size_t size);
  inline ::std::string* mutable_strmailsender();
  inline ::std::string* release_strmailsender();
  inline void set_allocated_strmailsender(::std::string* strmailsender);

  // required uint32 dwSendTime = 4;
  inline bool has_dwsendtime() const;
  inline void clear_dwsendtime();
  static const int kDwSendTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 dwsendtime() const;
  inline void set_dwsendtime(::google::protobuf::uint32 value);

  // required int32 iState = 5;
  inline bool has_istate() const;
  inline void clear_istate();
  static const int kIStateFieldNumber = 5;
  inline ::google::protobuf::int32 istate() const;
  inline void set_istate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.MailShotDesc)
 private:
  inline void set_has_struuid();
  inline void clear_has_struuid();
  inline void set_has_strmailtitle();
  inline void clear_has_strmailtitle();
  inline void set_has_strmailsender();
  inline void clear_has_strmailsender();
  inline void set_has_dwsendtime();
  inline void clear_has_dwsendtime();
  inline void set_has_istate();
  inline void clear_has_istate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* struuid_;
  ::std::string* strmailtitle_;
  ::std::string* strmailsender_;
  ::google::protobuf::uint32 dwsendtime_;
  ::google::protobuf::int32 istate_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static MailShotDesc* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_MAILLIST_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_MAILLIST_SC();
  virtual ~CMD_QUERY_MAILLIST_SC();

  CMD_QUERY_MAILLIST_SC(const CMD_QUERY_MAILLIST_SC& from);

  inline CMD_QUERY_MAILLIST_SC& operator=(const CMD_QUERY_MAILLIST_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_MAILLIST_SC& default_instance();

  void Swap(CMD_QUERY_MAILLIST_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_MAILLIST_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_MAILLIST_SC& from);
  void MergeFrom(const CMD_QUERY_MAILLIST_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.MailShotDesc szMailIndexList = 1;
  inline int szmailindexlist_size() const;
  inline void clear_szmailindexlist();
  static const int kSzMailIndexListFieldNumber = 1;
  inline const ::GSProto::MailShotDesc& szmailindexlist(int index) const;
  inline ::GSProto::MailShotDesc* mutable_szmailindexlist(int index);
  inline ::GSProto::MailShotDesc* add_szmailindexlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::MailShotDesc >&
      szmailindexlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::MailShotDesc >*
      mutable_szmailindexlist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_MAILLIST_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::MailShotDesc > szmailindexlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_MAILLIST_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_MAILDESC_CS : public ::google::protobuf::Message {
 public:
  CMD_QUERY_MAILDESC_CS();
  virtual ~CMD_QUERY_MAILDESC_CS();

  CMD_QUERY_MAILDESC_CS(const CMD_QUERY_MAILDESC_CS& from);

  inline CMD_QUERY_MAILDESC_CS& operator=(const CMD_QUERY_MAILDESC_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_MAILDESC_CS& default_instance();

  void Swap(CMD_QUERY_MAILDESC_CS* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_MAILDESC_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_MAILDESC_CS& from);
  void MergeFrom(const CMD_QUERY_MAILDESC_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strUUID = 1;
  inline bool has_struuid() const;
  inline void clear_struuid();
  static const int kStrUUIDFieldNumber = 1;
  inline const ::std::string& struuid() const;
  inline void set_struuid(const ::std::string& value);
  inline void set_struuid(const char* value);
  inline void set_struuid(const char* value, size_t size);
  inline ::std::string* mutable_struuid();
  inline ::std::string* release_struuid();
  inline void set_allocated_struuid(::std::string* struuid);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_MAILDESC_CS)
 private:
  inline void set_has_struuid();
  inline void clear_has_struuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* struuid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_MAILDESC_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GET_MAILAWARD_CS : public ::google::protobuf::Message {
 public:
  CMD_GET_MAILAWARD_CS();
  virtual ~CMD_GET_MAILAWARD_CS();

  CMD_GET_MAILAWARD_CS(const CMD_GET_MAILAWARD_CS& from);

  inline CMD_GET_MAILAWARD_CS& operator=(const CMD_GET_MAILAWARD_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GET_MAILAWARD_CS& default_instance();

  void Swap(CMD_GET_MAILAWARD_CS* other);

  // implements Message ----------------------------------------------

  CMD_GET_MAILAWARD_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GET_MAILAWARD_CS& from);
  void MergeFrom(const CMD_GET_MAILAWARD_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strUUID = 1;
  inline bool has_struuid() const;
  inline void clear_struuid();
  static const int kStrUUIDFieldNumber = 1;
  inline const ::std::string& struuid() const;
  inline void set_struuid(const ::std::string& value);
  inline void set_struuid(const char* value);
  inline void set_struuid(const char* value, size_t size);
  inline ::std::string* mutable_struuid();
  inline ::std::string* release_struuid();
  inline void set_allocated_struuid(::std::string* struuid);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GET_MAILAWARD_CS)
 private:
  inline void set_has_struuid();
  inline void clear_has_struuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* struuid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GET_MAILAWARD_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GET_MAILAWARD_SC : public ::google::protobuf::Message {
 public:
  CMD_GET_MAILAWARD_SC();
  virtual ~CMD_GET_MAILAWARD_SC();

  CMD_GET_MAILAWARD_SC(const CMD_GET_MAILAWARD_SC& from);

  inline CMD_GET_MAILAWARD_SC& operator=(const CMD_GET_MAILAWARD_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GET_MAILAWARD_SC& default_instance();

  void Swap(CMD_GET_MAILAWARD_SC* other);

  // implements Message ----------------------------------------------

  CMD_GET_MAILAWARD_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GET_MAILAWARD_SC& from);
  void MergeFrom(const CMD_GET_MAILAWARD_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strUUID = 1;
  inline bool has_struuid() const;
  inline void clear_struuid();
  static const int kStrUUIDFieldNumber = 1;
  inline const ::std::string& struuid() const;
  inline void set_struuid(const ::std::string& value);
  inline void set_struuid(const char* value);
  inline void set_struuid(const char* value, size_t size);
  inline ::std::string* mutable_struuid();
  inline ::std::string* release_struuid();
  inline void set_allocated_struuid(::std::string* struuid);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GET_MAILAWARD_SC)
 private:
  inline void set_has_struuid();
  inline void clear_has_struuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* struuid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GET_MAILAWARD_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_MAILDESC_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_MAILDESC_SC();
  virtual ~CMD_QUERY_MAILDESC_SC();

  CMD_QUERY_MAILDESC_SC(const CMD_QUERY_MAILDESC_SC& from);

  inline CMD_QUERY_MAILDESC_SC& operator=(const CMD_QUERY_MAILDESC_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_MAILDESC_SC& default_instance();

  void Swap(CMD_QUERY_MAILDESC_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_MAILDESC_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_MAILDESC_SC& from);
  void MergeFrom(const CMD_QUERY_MAILDESC_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.MailDetail mailData = 1;
  inline bool has_maildata() const;
  inline void clear_maildata();
  static const int kMailDataFieldNumber = 1;
  inline const ::GSProto::MailDetail& maildata() const;
  inline ::GSProto::MailDetail* mutable_maildata();
  inline ::GSProto::MailDetail* release_maildata();
  inline void set_allocated_maildata(::GSProto::MailDetail* maildata);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_MAILDESC_SC)
 private:
  inline void set_has_maildata();
  inline void clear_has_maildata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::MailDetail* maildata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_MAILDESC_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_DREAMLAND_QUERY_SCENEINFO_CS : public ::google::protobuf::Message {
 public:
  CMD_DREAMLAND_QUERY_SCENEINFO_CS();
  virtual ~CMD_DREAMLAND_QUERY_SCENEINFO_CS();

  CMD_DREAMLAND_QUERY_SCENEINFO_CS(const CMD_DREAMLAND_QUERY_SCENEINFO_CS& from);

  inline CMD_DREAMLAND_QUERY_SCENEINFO_CS& operator=(const CMD_DREAMLAND_QUERY_SCENEINFO_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_DREAMLAND_QUERY_SCENEINFO_CS& default_instance();

  void Swap(CMD_DREAMLAND_QUERY_SCENEINFO_CS* other);

  // implements Message ----------------------------------------------

  CMD_DREAMLAND_QUERY_SCENEINFO_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_DREAMLAND_QUERY_SCENEINFO_CS& from);
  void MergeFrom(const CMD_DREAMLAND_QUERY_SCENEINFO_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iSectionID = 1;
  inline bool has_isectionid() const;
  inline void clear_isectionid();
  static const int kISectionIDFieldNumber = 1;
  inline ::google::protobuf::int32 isectionid() const;
  inline void set_isectionid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_DREAMLAND_QUERY_SCENEINFO_CS)
 private:
  inline void set_has_isectionid();
  inline void clear_has_isectionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isectionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_DREAMLAND_QUERY_SCENEINFO_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_DREAMLAND_OPEN_REQSECTON_SC : public ::google::protobuf::Message {
 public:
  CMD_DREAMLAND_OPEN_REQSECTON_SC();
  virtual ~CMD_DREAMLAND_OPEN_REQSECTON_SC();

  CMD_DREAMLAND_OPEN_REQSECTON_SC(const CMD_DREAMLAND_OPEN_REQSECTON_SC& from);

  inline CMD_DREAMLAND_OPEN_REQSECTON_SC& operator=(const CMD_DREAMLAND_OPEN_REQSECTON_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_DREAMLAND_OPEN_REQSECTON_SC& default_instance();

  void Swap(CMD_DREAMLAND_OPEN_REQSECTON_SC* other);

  // implements Message ----------------------------------------------

  CMD_DREAMLAND_OPEN_REQSECTON_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_DREAMLAND_OPEN_REQSECTON_SC& from);
  void MergeFrom(const CMD_DREAMLAND_OPEN_REQSECTON_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iOPenCount = 1;
  inline bool has_iopencount() const;
  inline void clear_iopencount();
  static const int kIOPenCountFieldNumber = 1;
  inline ::google::protobuf::int32 iopencount() const;
  inline void set_iopencount(::google::protobuf::int32 value);

  // required int32 unLockSectionID = 2;
  inline bool has_unlocksectionid() const;
  inline void clear_unlocksectionid();
  static const int kUnLockSectionIDFieldNumber = 2;
  inline ::google::protobuf::int32 unlocksectionid() const;
  inline void set_unlocksectionid(::google::protobuf::int32 value);

  // required int32 iResetTimes = 3;
  inline bool has_iresettimes() const;
  inline void clear_iresettimes();
  static const int kIResetTimesFieldNumber = 3;
  inline ::google::protobuf::int32 iresettimes() const;
  inline void set_iresettimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_DREAMLAND_OPEN_REQSECTON_SC)
 private:
  inline void set_has_iopencount();
  inline void clear_has_iopencount();
  inline void set_has_unlocksectionid();
  inline void clear_has_unlocksectionid();
  inline void set_has_iresettimes();
  inline void clear_has_iresettimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iopencount_;
  ::google::protobuf::int32 unlocksectionid_;
  ::google::protobuf::int32 iresettimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_DREAMLAND_OPEN_REQSECTON_SC* default_instance_;
};
// -------------------------------------------------------------------

class SceneDetail : public ::google::protobuf::Message {
 public:
  SceneDetail();
  virtual ~SceneDetail();

  SceneDetail(const SceneDetail& from);

  inline SceneDetail& operator=(const SceneDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneDetail& default_instance();

  void Swap(SceneDetail* other);

  // implements Message ----------------------------------------------

  SceneDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneDetail& from);
  void MergeFrom(const SceneDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iSceneIndex = 1;
  inline bool has_isceneindex() const;
  inline void clear_isceneindex();
  static const int kISceneIndexFieldNumber = 1;
  inline ::google::protobuf::int32 isceneindex() const;
  inline void set_isceneindex(::google::protobuf::int32 value);

  // required int32 iSceneId = 2;
  inline bool has_isceneid() const;
  inline void clear_isceneid();
  static const int kISceneIdFieldNumber = 2;
  inline ::google::protobuf::int32 isceneid() const;
  inline void set_isceneid(::google::protobuf::int32 value);

  // required int32 iSceneState = 3;
  inline bool has_iscenestate() const;
  inline void clear_iscenestate();
  static const int kISceneStateFieldNumber = 3;
  inline ::google::protobuf::int32 iscenestate() const;
  inline void set_iscenestate(::google::protobuf::int32 value);

  // required bool bHaveGetReward = 4;
  inline bool has_bhavegetreward() const;
  inline void clear_bhavegetreward();
  static const int kBHaveGetRewardFieldNumber = 4;
  inline bool bhavegetreward() const;
  inline void set_bhavegetreward(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.SceneDetail)
 private:
  inline void set_has_isceneindex();
  inline void clear_has_isceneindex();
  inline void set_has_isceneid();
  inline void clear_has_isceneid();
  inline void set_has_iscenestate();
  inline void clear_has_iscenestate();
  inline void set_has_bhavegetreward();
  inline void clear_has_bhavegetreward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isceneindex_;
  ::google::protobuf::int32 isceneid_;
  ::google::protobuf::int32 iscenestate_;
  bool bhavegetreward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static SceneDetail* default_instance_;
};
// -------------------------------------------------------------------

class CMD_DREAMLAND_QUERY_SCENEINFO_SC : public ::google::protobuf::Message {
 public:
  CMD_DREAMLAND_QUERY_SCENEINFO_SC();
  virtual ~CMD_DREAMLAND_QUERY_SCENEINFO_SC();

  CMD_DREAMLAND_QUERY_SCENEINFO_SC(const CMD_DREAMLAND_QUERY_SCENEINFO_SC& from);

  inline CMD_DREAMLAND_QUERY_SCENEINFO_SC& operator=(const CMD_DREAMLAND_QUERY_SCENEINFO_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_DREAMLAND_QUERY_SCENEINFO_SC& default_instance();

  void Swap(CMD_DREAMLAND_QUERY_SCENEINFO_SC* other);

  // implements Message ----------------------------------------------

  CMD_DREAMLAND_QUERY_SCENEINFO_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_DREAMLAND_QUERY_SCENEINFO_SC& from);
  void MergeFrom(const CMD_DREAMLAND_QUERY_SCENEINFO_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.SceneDetail szSceneDetail = 1;
  inline int szscenedetail_size() const;
  inline void clear_szscenedetail();
  static const int kSzSceneDetailFieldNumber = 1;
  inline const ::GSProto::SceneDetail& szscenedetail(int index) const;
  inline ::GSProto::SceneDetail* mutable_szscenedetail(int index);
  inline ::GSProto::SceneDetail* add_szscenedetail();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::SceneDetail >&
      szscenedetail() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::SceneDetail >*
      mutable_szscenedetail();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_DREAMLAND_QUERY_SCENEINFO_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::SceneDetail > szscenedetail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_DREAMLAND_QUERY_SCENEINFO_SC* default_instance_;
};
// -------------------------------------------------------------------

class DreamLandFormation : public ::google::protobuf::Message {
 public:
  DreamLandFormation();
  virtual ~DreamLandFormation();

  DreamLandFormation(const DreamLandFormation& from);

  inline DreamLandFormation& operator=(const DreamLandFormation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DreamLandFormation& default_instance();

  void Swap(DreamLandFormation* other);

  // implements Message ----------------------------------------------

  DreamLandFormation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DreamLandFormation& from);
  void MergeFrom(const DreamLandFormation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwObjcetId = 1;
  inline bool has_dwobjcetid() const;
  inline void clear_dwobjcetid();
  static const int kDwObjcetIdFieldNumber = 1;
  inline ::google::protobuf::int32 dwobjcetid() const;
  inline void set_dwobjcetid(::google::protobuf::int32 value);

  // required int32 iPos = 2;
  inline bool has_ipos() const;
  inline void clear_ipos();
  static const int kIPosFieldNumber = 2;
  inline ::google::protobuf::int32 ipos() const;
  inline void set_ipos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.DreamLandFormation)
 private:
  inline void set_has_dwobjcetid();
  inline void clear_has_dwobjcetid();
  inline void set_has_ipos();
  inline void clear_has_ipos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwobjcetid_;
  ::google::protobuf::int32 ipos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static DreamLandFormation* default_instance_;
};
// -------------------------------------------------------------------

class DreamLandHeroInfo : public ::google::protobuf::Message {
 public:
  DreamLandHeroInfo();
  virtual ~DreamLandHeroInfo();

  DreamLandHeroInfo(const DreamLandHeroInfo& from);

  inline DreamLandHeroInfo& operator=(const DreamLandHeroInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DreamLandHeroInfo& default_instance();

  void Swap(DreamLandHeroInfo* other);

  // implements Message ----------------------------------------------

  DreamLandHeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DreamLandHeroInfo& from);
  void MergeFrom(const DreamLandHeroInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwObjcetId = 1;
  inline bool has_dwobjcetid() const;
  inline void clear_dwobjcetid();
  static const int kDwObjcetIdFieldNumber = 1;
  inline ::google::protobuf::int32 dwobjcetid() const;
  inline void set_dwobjcetid(::google::protobuf::int32 value);

  // required int32 iBlootPresent = 2;
  inline bool has_iblootpresent() const;
  inline void clear_iblootpresent();
  static const int kIBlootPresentFieldNumber = 2;
  inline ::google::protobuf::int32 iblootpresent() const;
  inline void set_iblootpresent(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.DreamLandHeroInfo)
 private:
  inline void set_has_dwobjcetid();
  inline void clear_has_dwobjcetid();
  inline void set_has_iblootpresent();
  inline void clear_has_iblootpresent();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwobjcetid_;
  ::google::protobuf::int32 iblootpresent_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static DreamLandHeroInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC : public ::google::protobuf::Message {
 public:
  CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC();
  virtual ~CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC();

  CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC(const CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC& from);

  inline CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC& operator=(const CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC& default_instance();

  void Swap(CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC* other);

  // implements Message ----------------------------------------------

  CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC& from);
  void MergeFrom(const CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.DreamLandFormation szDreamLandFormation = 1;
  inline int szdreamlandformation_size() const;
  inline void clear_szdreamlandformation();
  static const int kSzDreamLandFormationFieldNumber = 1;
  inline const ::GSProto::DreamLandFormation& szdreamlandformation(int index) const;
  inline ::GSProto::DreamLandFormation* mutable_szdreamlandformation(int index);
  inline ::GSProto::DreamLandFormation* add_szdreamlandformation();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::DreamLandFormation >&
      szdreamlandformation() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::DreamLandFormation >*
      mutable_szdreamlandformation();

  // required int32 remaindTime = 2;
  inline bool has_remaindtime() const;
  inline void clear_remaindtime();
  static const int kRemaindTimeFieldNumber = 2;
  inline ::google::protobuf::int32 remaindtime() const;
  inline void set_remaindtime(::google::protobuf::int32 value);

  // repeated .GSProto.DreamLandHeroInfo szHaveBattleHeroInfo = 3;
  inline int szhavebattleheroinfo_size() const;
  inline void clear_szhavebattleheroinfo();
  static const int kSzHaveBattleHeroInfoFieldNumber = 3;
  inline const ::GSProto::DreamLandHeroInfo& szhavebattleheroinfo(int index) const;
  inline ::GSProto::DreamLandHeroInfo* mutable_szhavebattleheroinfo(int index);
  inline ::GSProto::DreamLandHeroInfo* add_szhavebattleheroinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::DreamLandHeroInfo >&
      szhavebattleheroinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::DreamLandHeroInfo >*
      mutable_szhavebattleheroinfo();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC)
 private:
  inline void set_has_remaindtime();
  inline void clear_has_remaindtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::DreamLandFormation > szdreamlandformation_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::DreamLandHeroInfo > szhavebattleheroinfo_;
  ::google::protobuf::int32 remaindtime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_DREAMLAND_REQUEST_OPENBOX_CS : public ::google::protobuf::Message {
 public:
  CMD_DREAMLAND_REQUEST_OPENBOX_CS();
  virtual ~CMD_DREAMLAND_REQUEST_OPENBOX_CS();

  CMD_DREAMLAND_REQUEST_OPENBOX_CS(const CMD_DREAMLAND_REQUEST_OPENBOX_CS& from);

  inline CMD_DREAMLAND_REQUEST_OPENBOX_CS& operator=(const CMD_DREAMLAND_REQUEST_OPENBOX_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_DREAMLAND_REQUEST_OPENBOX_CS& default_instance();

  void Swap(CMD_DREAMLAND_REQUEST_OPENBOX_CS* other);

  // implements Message ----------------------------------------------

  CMD_DREAMLAND_REQUEST_OPENBOX_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_DREAMLAND_REQUEST_OPENBOX_CS& from);
  void MergeFrom(const CMD_DREAMLAND_REQUEST_OPENBOX_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iSectionID = 1;
  inline bool has_isectionid() const;
  inline void clear_isectionid();
  static const int kISectionIDFieldNumber = 1;
  inline ::google::protobuf::int32 isectionid() const;
  inline void set_isectionid(::google::protobuf::int32 value);

  // required int32 iSceneId = 2;
  inline bool has_isceneid() const;
  inline void clear_isceneid();
  static const int kISceneIdFieldNumber = 2;
  inline ::google::protobuf::int32 isceneid() const;
  inline void set_isceneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_DREAMLAND_REQUEST_OPENBOX_CS)
 private:
  inline void set_has_isectionid();
  inline void clear_has_isectionid();
  inline void set_has_isceneid();
  inline void clear_has_isceneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isectionid_;
  ::google::protobuf::int32 isceneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_DREAMLAND_REQUEST_OPENBOX_CS* default_instance_;
};
// -------------------------------------------------------------------

class DreamRewardHero : public ::google::protobuf::Message {
 public:
  DreamRewardHero();
  virtual ~DreamRewardHero();

  DreamRewardHero(const DreamRewardHero& from);

  inline DreamRewardHero& operator=(const DreamRewardHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DreamRewardHero& default_instance();

  void Swap(DreamRewardHero* other);

  // implements Message ----------------------------------------------

  DreamRewardHero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DreamRewardHero& from);
  void MergeFrom(const DreamRewardHero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iHeroId = 1;
  inline bool has_iheroid() const;
  inline void clear_iheroid();
  static const int kIHeroIdFieldNumber = 1;
  inline ::google::protobuf::int32 iheroid() const;
  inline void set_iheroid(::google::protobuf::int32 value);

  // required int32 iHeroSoulId = 2;
  inline bool has_iherosoulid() const;
  inline void clear_iherosoulid();
  static const int kIHeroSoulIdFieldNumber = 2;
  inline ::google::protobuf::int32 iherosoulid() const;
  inline void set_iherosoulid(::google::protobuf::int32 value);

  // required int32 iCount = 3;
  inline bool has_icount() const;
  inline void clear_icount();
  static const int kICountFieldNumber = 3;
  inline ::google::protobuf::int32 icount() const;
  inline void set_icount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.DreamRewardHero)
 private:
  inline void set_has_iheroid();
  inline void clear_has_iheroid();
  inline void set_has_iherosoulid();
  inline void clear_has_iherosoulid();
  inline void set_has_icount();
  inline void clear_has_icount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iheroid_;
  ::google::protobuf::int32 iherosoulid_;
  ::google::protobuf::int32 icount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static DreamRewardHero* default_instance_;
};
// -------------------------------------------------------------------

class CMD_DREAMLAND_REQUEST_OPENBOX_SC : public ::google::protobuf::Message {
 public:
  CMD_DREAMLAND_REQUEST_OPENBOX_SC();
  virtual ~CMD_DREAMLAND_REQUEST_OPENBOX_SC();

  CMD_DREAMLAND_REQUEST_OPENBOX_SC(const CMD_DREAMLAND_REQUEST_OPENBOX_SC& from);

  inline CMD_DREAMLAND_REQUEST_OPENBOX_SC& operator=(const CMD_DREAMLAND_REQUEST_OPENBOX_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_DREAMLAND_REQUEST_OPENBOX_SC& default_instance();

  void Swap(CMD_DREAMLAND_REQUEST_OPENBOX_SC* other);

  // implements Message ----------------------------------------------

  CMD_DREAMLAND_REQUEST_OPENBOX_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_DREAMLAND_REQUEST_OPENBOX_SC& from);
  void MergeFrom(const CMD_DREAMLAND_REQUEST_OPENBOX_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.FightAwardResult awardResoult = 1;
  inline bool has_awardresoult() const;
  inline void clear_awardresoult();
  static const int kAwardResoultFieldNumber = 1;
  inline const ::GSProto::FightAwardResult& awardresoult() const;
  inline ::GSProto::FightAwardResult* mutable_awardresoult();
  inline ::GSProto::FightAwardResult* release_awardresoult();
  inline void set_allocated_awardresoult(::GSProto::FightAwardResult* awardresoult);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_DREAMLAND_REQUEST_OPENBOX_SC)
 private:
  inline void set_has_awardresoult();
  inline void clear_has_awardresoult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::FightAwardResult* awardresoult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_DREAMLAND_REQUEST_OPENBOX_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_DREAMLAND_QUERY_BOX_CS : public ::google::protobuf::Message {
 public:
  CMD_DREAMLAND_QUERY_BOX_CS();
  virtual ~CMD_DREAMLAND_QUERY_BOX_CS();

  CMD_DREAMLAND_QUERY_BOX_CS(const CMD_DREAMLAND_QUERY_BOX_CS& from);

  inline CMD_DREAMLAND_QUERY_BOX_CS& operator=(const CMD_DREAMLAND_QUERY_BOX_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_DREAMLAND_QUERY_BOX_CS& default_instance();

  void Swap(CMD_DREAMLAND_QUERY_BOX_CS* other);

  // implements Message ----------------------------------------------

  CMD_DREAMLAND_QUERY_BOX_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_DREAMLAND_QUERY_BOX_CS& from);
  void MergeFrom(const CMD_DREAMLAND_QUERY_BOX_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iSectionID = 1;
  inline bool has_isectionid() const;
  inline void clear_isectionid();
  static const int kISectionIDFieldNumber = 1;
  inline ::google::protobuf::int32 isectionid() const;
  inline void set_isectionid(::google::protobuf::int32 value);

  // required int32 iSceneId = 2;
  inline bool has_isceneid() const;
  inline void clear_isceneid();
  static const int kISceneIdFieldNumber = 2;
  inline ::google::protobuf::int32 isceneid() const;
  inline void set_isceneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_DREAMLAND_QUERY_BOX_CS)
 private:
  inline void set_has_isectionid();
  inline void clear_has_isectionid();
  inline void set_has_isceneid();
  inline void clear_has_isceneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isectionid_;
  ::google::protobuf::int32 isceneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_DREAMLAND_QUERY_BOX_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_DREAMLAND_QUERY_BOX_SC : public ::google::protobuf::Message {
 public:
  CMD_DREAMLAND_QUERY_BOX_SC();
  virtual ~CMD_DREAMLAND_QUERY_BOX_SC();

  CMD_DREAMLAND_QUERY_BOX_SC(const CMD_DREAMLAND_QUERY_BOX_SC& from);

  inline CMD_DREAMLAND_QUERY_BOX_SC& operator=(const CMD_DREAMLAND_QUERY_BOX_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_DREAMLAND_QUERY_BOX_SC& default_instance();

  void Swap(CMD_DREAMLAND_QUERY_BOX_SC* other);

  // implements Message ----------------------------------------------

  CMD_DREAMLAND_QUERY_BOX_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_DREAMLAND_QUERY_BOX_SC& from);
  void MergeFrom(const CMD_DREAMLAND_QUERY_BOX_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.FightAwardResult awardResoult = 1;
  inline bool has_awardresoult() const;
  inline void clear_awardresoult();
  static const int kAwardResoultFieldNumber = 1;
  inline const ::GSProto::FightAwardResult& awardresoult() const;
  inline ::GSProto::FightAwardResult* mutable_awardresoult();
  inline ::GSProto::FightAwardResult* release_awardresoult();
  inline void set_allocated_awardresoult(::GSProto::FightAwardResult* awardresoult);

  // required bool bHaveMagic = 2;
  inline bool has_bhavemagic() const;
  inline void clear_bhavemagic();
  static const int kBHaveMagicFieldNumber = 2;
  inline bool bhavemagic() const;
  inline void set_bhavemagic(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_DREAMLAND_QUERY_BOX_SC)
 private:
  inline void set_has_awardresoult();
  inline void clear_has_awardresoult();
  inline void set_has_bhavemagic();
  inline void clear_has_bhavemagic();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::FightAwardResult* awardresoult_;
  bool bhavemagic_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_DREAMLAND_QUERY_BOX_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_DREAMLAND_FORMATION_CHG_CS : public ::google::protobuf::Message {
 public:
  CMD_DREAMLAND_FORMATION_CHG_CS();
  virtual ~CMD_DREAMLAND_FORMATION_CHG_CS();

  CMD_DREAMLAND_FORMATION_CHG_CS(const CMD_DREAMLAND_FORMATION_CHG_CS& from);

  inline CMD_DREAMLAND_FORMATION_CHG_CS& operator=(const CMD_DREAMLAND_FORMATION_CHG_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_DREAMLAND_FORMATION_CHG_CS& default_instance();

  void Swap(CMD_DREAMLAND_FORMATION_CHG_CS* other);

  // implements Message ----------------------------------------------

  CMD_DREAMLAND_FORMATION_CHG_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_DREAMLAND_FORMATION_CHG_CS& from);
  void MergeFrom(const CMD_DREAMLAND_FORMATION_CHG_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.DreamLandFormation szFormationList = 1;
  inline int szformationlist_size() const;
  inline void clear_szformationlist();
  static const int kSzFormationListFieldNumber = 1;
  inline const ::GSProto::DreamLandFormation& szformationlist(int index) const;
  inline ::GSProto::DreamLandFormation* mutable_szformationlist(int index);
  inline ::GSProto::DreamLandFormation* add_szformationlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::DreamLandFormation >&
      szformationlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::DreamLandFormation >*
      mutable_szformationlist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_DREAMLAND_FORMATION_CHG_CS)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::DreamLandFormation > szformationlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_DREAMLAND_FORMATION_CHG_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_DREAMLAND_REQUEST_FIGHT_CS : public ::google::protobuf::Message {
 public:
  CMD_DREAMLAND_REQUEST_FIGHT_CS();
  virtual ~CMD_DREAMLAND_REQUEST_FIGHT_CS();

  CMD_DREAMLAND_REQUEST_FIGHT_CS(const CMD_DREAMLAND_REQUEST_FIGHT_CS& from);

  inline CMD_DREAMLAND_REQUEST_FIGHT_CS& operator=(const CMD_DREAMLAND_REQUEST_FIGHT_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_DREAMLAND_REQUEST_FIGHT_CS& default_instance();

  void Swap(CMD_DREAMLAND_REQUEST_FIGHT_CS* other);

  // implements Message ----------------------------------------------

  CMD_DREAMLAND_REQUEST_FIGHT_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_DREAMLAND_REQUEST_FIGHT_CS& from);
  void MergeFrom(const CMD_DREAMLAND_REQUEST_FIGHT_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iSectionID = 1;
  inline bool has_isectionid() const;
  inline void clear_isectionid();
  static const int kISectionIDFieldNumber = 1;
  inline ::google::protobuf::int32 isectionid() const;
  inline void set_isectionid(::google::protobuf::int32 value);

  // required int32 iSceneId = 2;
  inline bool has_isceneid() const;
  inline void clear_isceneid();
  static const int kISceneIdFieldNumber = 2;
  inline ::google::protobuf::int32 isceneid() const;
  inline void set_isceneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_DREAMLAND_REQUEST_FIGHT_CS)
 private:
  inline void set_has_isectionid();
  inline void clear_has_isectionid();
  inline void set_has_isceneid();
  inline void clear_has_isceneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isectionid_;
  ::google::protobuf::int32 isceneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_DREAMLAND_REQUEST_FIGHT_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_DREAMLAND_QUERY_SCENEFORMATION_CS : public ::google::protobuf::Message {
 public:
  CMD_DREAMLAND_QUERY_SCENEFORMATION_CS();
  virtual ~CMD_DREAMLAND_QUERY_SCENEFORMATION_CS();

  CMD_DREAMLAND_QUERY_SCENEFORMATION_CS(const CMD_DREAMLAND_QUERY_SCENEFORMATION_CS& from);

  inline CMD_DREAMLAND_QUERY_SCENEFORMATION_CS& operator=(const CMD_DREAMLAND_QUERY_SCENEFORMATION_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_DREAMLAND_QUERY_SCENEFORMATION_CS& default_instance();

  void Swap(CMD_DREAMLAND_QUERY_SCENEFORMATION_CS* other);

  // implements Message ----------------------------------------------

  CMD_DREAMLAND_QUERY_SCENEFORMATION_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_DREAMLAND_QUERY_SCENEFORMATION_CS& from);
  void MergeFrom(const CMD_DREAMLAND_QUERY_SCENEFORMATION_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iSectionID = 1;
  inline bool has_isectionid() const;
  inline void clear_isectionid();
  static const int kISectionIDFieldNumber = 1;
  inline ::google::protobuf::int32 isectionid() const;
  inline void set_isectionid(::google::protobuf::int32 value);

  // required int32 iSceneId = 2;
  inline bool has_isceneid() const;
  inline void clear_isceneid();
  static const int kISceneIdFieldNumber = 2;
  inline ::google::protobuf::int32 isceneid() const;
  inline void set_isceneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_DREAMLAND_QUERY_SCENEFORMATION_CS)
 private:
  inline void set_has_isectionid();
  inline void clear_has_isectionid();
  inline void set_has_isceneid();
  inline void clear_has_isceneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isectionid_;
  ::google::protobuf::int32 isceneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_DREAMLAND_QUERY_SCENEFORMATION_CS* default_instance_;
};
// -------------------------------------------------------------------

class DreamLandFormationItem : public ::google::protobuf::Message {
 public:
  DreamLandFormationItem();
  virtual ~DreamLandFormationItem();

  DreamLandFormationItem(const DreamLandFormationItem& from);

  inline DreamLandFormationItem& operator=(const DreamLandFormationItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DreamLandFormationItem& default_instance();

  void Swap(DreamLandFormationItem* other);

  // implements Message ----------------------------------------------

  DreamLandFormationItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DreamLandFormationItem& from);
  void MergeFrom(const DreamLandFormationItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iPos = 1;
  inline bool has_ipos() const;
  inline void clear_ipos();
  static const int kIPosFieldNumber = 1;
  inline ::google::protobuf::int32 ipos() const;
  inline void set_ipos(::google::protobuf::int32 value);

  // required int32 iBaseId = 2;
  inline bool has_ibaseid() const;
  inline void clear_ibaseid();
  static const int kIBaseIdFieldNumber = 2;
  inline ::google::protobuf::int32 ibaseid() const;
  inline void set_ibaseid(::google::protobuf::int32 value);

  // required int32 iLevelStep = 3;
  inline bool has_ilevelstep() const;
  inline void clear_ilevelstep();
  static const int kILevelStepFieldNumber = 3;
  inline ::google::protobuf::int32 ilevelstep() const;
  inline void set_ilevelstep(::google::protobuf::int32 value);

  // required int32 iLevel = 4;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 4;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // optional int32 iHp = 5;
  inline bool has_ihp() const;
  inline void clear_ihp();
  static const int kIHpFieldNumber = 5;
  inline ::google::protobuf::int32 ihp() const;
  inline void set_ihp(::google::protobuf::int32 value);

  // optional int32 iMaxHP = 6;
  inline bool has_imaxhp() const;
  inline void clear_imaxhp();
  static const int kIMaxHPFieldNumber = 6;
  inline ::google::protobuf::int32 imaxhp() const;
  inline void set_imaxhp(::google::protobuf::int32 value);

  // required bool bIsGodAnimal = 7;
  inline bool has_bisgodanimal() const;
  inline void clear_bisgodanimal();
  static const int kBIsGodAnimalFieldNumber = 7;
  inline bool bisgodanimal() const;
  inline void set_bisgodanimal(bool value);

  // required int32 iQuality = 8;
  inline bool has_iquality() const;
  inline void clear_iquality();
  static const int kIQualityFieldNumber = 8;
  inline ::google::protobuf::int32 iquality() const;
  inline void set_iquality(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.DreamLandFormationItem)
 private:
  inline void set_has_ipos();
  inline void clear_has_ipos();
  inline void set_has_ibaseid();
  inline void clear_has_ibaseid();
  inline void set_has_ilevelstep();
  inline void clear_has_ilevelstep();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_ihp();
  inline void clear_has_ihp();
  inline void set_has_imaxhp();
  inline void clear_has_imaxhp();
  inline void set_has_bisgodanimal();
  inline void clear_has_bisgodanimal();
  inline void set_has_iquality();
  inline void clear_has_iquality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ipos_;
  ::google::protobuf::int32 ibaseid_;
  ::google::protobuf::int32 ilevelstep_;
  ::google::protobuf::int32 ilevel_;
  ::google::protobuf::int32 ihp_;
  ::google::protobuf::int32 imaxhp_;
  bool bisgodanimal_;
  ::google::protobuf::int32 iquality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static DreamLandFormationItem* default_instance_;
};
// -------------------------------------------------------------------

class CMD_DREAMLAND_QUERY_SCENEFORMATION_SC : public ::google::protobuf::Message {
 public:
  CMD_DREAMLAND_QUERY_SCENEFORMATION_SC();
  virtual ~CMD_DREAMLAND_QUERY_SCENEFORMATION_SC();

  CMD_DREAMLAND_QUERY_SCENEFORMATION_SC(const CMD_DREAMLAND_QUERY_SCENEFORMATION_SC& from);

  inline CMD_DREAMLAND_QUERY_SCENEFORMATION_SC& operator=(const CMD_DREAMLAND_QUERY_SCENEFORMATION_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_DREAMLAND_QUERY_SCENEFORMATION_SC& default_instance();

  void Swap(CMD_DREAMLAND_QUERY_SCENEFORMATION_SC* other);

  // implements Message ----------------------------------------------

  CMD_DREAMLAND_QUERY_SCENEFORMATION_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_DREAMLAND_QUERY_SCENEFORMATION_SC& from);
  void MergeFrom(const CMD_DREAMLAND_QUERY_SCENEFORMATION_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strActorName = 1;
  inline bool has_stractorname() const;
  inline void clear_stractorname();
  static const int kStrActorNameFieldNumber = 1;
  inline const ::std::string& stractorname() const;
  inline void set_stractorname(const ::std::string& value);
  inline void set_stractorname(const char* value);
  inline void set_stractorname(const char* value, size_t size);
  inline ::std::string* mutable_stractorname();
  inline ::std::string* release_stractorname();
  inline void set_allocated_stractorname(::std::string* stractorname);

  // repeated .GSProto.DreamLandFormationItem szFormationItem = 2;
  inline int szformationitem_size() const;
  inline void clear_szformationitem();
  static const int kSzFormationItemFieldNumber = 2;
  inline const ::GSProto::DreamLandFormationItem& szformationitem(int index) const;
  inline ::GSProto::DreamLandFormationItem* mutable_szformationitem(int index);
  inline ::GSProto::DreamLandFormationItem* add_szformationitem();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::DreamLandFormationItem >&
      szformationitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::DreamLandFormationItem >*
      mutable_szformationitem();

  // required int32 iTotalFightVaule = 3;
  inline bool has_itotalfightvaule() const;
  inline void clear_itotalfightvaule();
  static const int kITotalFightVauleFieldNumber = 3;
  inline ::google::protobuf::int32 itotalfightvaule() const;
  inline void set_itotalfightvaule(::google::protobuf::int32 value);

  // required int32 iActorHead = 4;
  inline bool has_iactorhead() const;
  inline void clear_iactorhead();
  static const int kIActorHeadFieldNumber = 4;
  inline ::google::protobuf::int32 iactorhead() const;
  inline void set_iactorhead(::google::protobuf::int32 value);

  // required int32 iActorLevel = 5;
  inline bool has_iactorlevel() const;
  inline void clear_iactorlevel();
  static const int kIActorLevelFieldNumber = 5;
  inline ::google::protobuf::int32 iactorlevel() const;
  inline void set_iactorlevel(::google::protobuf::int32 value);

  // optional string strLegionName = 6;
  inline bool has_strlegionname() const;
  inline void clear_strlegionname();
  static const int kStrLegionNameFieldNumber = 6;
  inline const ::std::string& strlegionname() const;
  inline void set_strlegionname(const ::std::string& value);
  inline void set_strlegionname(const char* value);
  inline void set_strlegionname(const char* value, size_t size);
  inline ::std::string* mutable_strlegionname();
  inline ::std::string* release_strlegionname();
  inline void set_allocated_strlegionname(::std::string* strlegionname);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_DREAMLAND_QUERY_SCENEFORMATION_SC)
 private:
  inline void set_has_stractorname();
  inline void clear_has_stractorname();
  inline void set_has_itotalfightvaule();
  inline void clear_has_itotalfightvaule();
  inline void set_has_iactorhead();
  inline void clear_has_iactorhead();
  inline void set_has_iactorlevel();
  inline void clear_has_iactorlevel();
  inline void set_has_strlegionname();
  inline void clear_has_strlegionname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* stractorname_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::DreamLandFormationItem > szformationitem_;
  ::google::protobuf::int32 itotalfightvaule_;
  ::google::protobuf::int32 iactorhead_;
  ::std::string* strlegionname_;
  ::google::protobuf::int32 iactorlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_DREAMLAND_QUERY_SCENEFORMATION_SC* default_instance_;
};
// -------------------------------------------------------------------

class HeroLevelStepState : public ::google::protobuf::Message {
 public:
  HeroLevelStepState();
  virtual ~HeroLevelStepState();

  HeroLevelStepState(const HeroLevelStepState& from);

  inline HeroLevelStepState& operator=(const HeroLevelStepState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroLevelStepState& default_instance();

  void Swap(HeroLevelStepState* other);

  // implements Message ----------------------------------------------

  HeroLevelStepState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroLevelStepState& from);
  void MergeFrom(const HeroLevelStepState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iLevelStep = 1;
  inline bool has_ilevelstep() const;
  inline void clear_ilevelstep();
  static const int kILevelStepFieldNumber = 1;
  inline ::google::protobuf::int32 ilevelstep() const;
  inline void set_ilevelstep(::google::protobuf::int32 value);

  // required int32 iHPGrow = 2;
  inline bool has_ihpgrow() const;
  inline void clear_ihpgrow();
  static const int kIHPGrowFieldNumber = 2;
  inline ::google::protobuf::int32 ihpgrow() const;
  inline void set_ihpgrow(::google::protobuf::int32 value);

  // required int32 iAttGrow = 3;
  inline bool has_iattgrow() const;
  inline void clear_iattgrow();
  static const int kIAttGrowFieldNumber = 3;
  inline ::google::protobuf::int32 iattgrow() const;
  inline void set_iattgrow(::google::protobuf::int32 value);

  // optional int32 iDefGrow = 4;
  inline bool has_idefgrow() const;
  inline void clear_idefgrow();
  static const int kIDefGrowFieldNumber = 4;
  inline ::google::protobuf::int32 idefgrow() const;
  inline void set_idefgrow(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.HeroLevelStepState)
 private:
  inline void set_has_ilevelstep();
  inline void clear_has_ilevelstep();
  inline void set_has_ihpgrow();
  inline void clear_has_ihpgrow();
  inline void set_has_iattgrow();
  inline void clear_has_iattgrow();
  inline void set_has_idefgrow();
  inline void clear_has_idefgrow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ilevelstep_;
  ::google::protobuf::int32 ihpgrow_;
  ::google::protobuf::int32 iattgrow_;
  ::google::protobuf::int32 idefgrow_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static HeroLevelStepState* default_instance_;
};
// -------------------------------------------------------------------

class CMD_HERO_LEVELSTEPUP_SC : public ::google::protobuf::Message {
 public:
  CMD_HERO_LEVELSTEPUP_SC();
  virtual ~CMD_HERO_LEVELSTEPUP_SC();

  CMD_HERO_LEVELSTEPUP_SC(const CMD_HERO_LEVELSTEPUP_SC& from);

  inline CMD_HERO_LEVELSTEPUP_SC& operator=(const CMD_HERO_LEVELSTEPUP_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HERO_LEVELSTEPUP_SC& default_instance();

  void Swap(CMD_HERO_LEVELSTEPUP_SC* other);

  // implements Message ----------------------------------------------

  CMD_HERO_LEVELSTEPUP_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_HERO_LEVELSTEPUP_SC& from);
  void MergeFrom(const CMD_HERO_LEVELSTEPUP_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // required .GSProto.HeroLevelStepState oldState = 2;
  inline bool has_oldstate() const;
  inline void clear_oldstate();
  static const int kOldStateFieldNumber = 2;
  inline const ::GSProto::HeroLevelStepState& oldstate() const;
  inline ::GSProto::HeroLevelStepState* mutable_oldstate();
  inline ::GSProto::HeroLevelStepState* release_oldstate();
  inline void set_allocated_oldstate(::GSProto::HeroLevelStepState* oldstate);

  // required .GSProto.HeroLevelStepState newState = 3;
  inline bool has_newstate() const;
  inline void clear_newstate();
  static const int kNewStateFieldNumber = 3;
  inline const ::GSProto::HeroLevelStepState& newstate() const;
  inline ::GSProto::HeroLevelStepState* mutable_newstate();
  inline ::GSProto::HeroLevelStepState* release_newstate();
  inline void set_allocated_newstate(::GSProto::HeroLevelStepState* newstate);

  // required int32 iHPAddValue = 4;
  inline bool has_ihpaddvalue() const;
  inline void clear_ihpaddvalue();
  static const int kIHPAddValueFieldNumber = 4;
  inline ::google::protobuf::int32 ihpaddvalue() const;
  inline void set_ihpaddvalue(::google::protobuf::int32 value);

  // required int32 iAttAddValue = 5;
  inline bool has_iattaddvalue() const;
  inline void clear_iattaddvalue();
  static const int kIAttAddValueFieldNumber = 5;
  inline ::google::protobuf::int32 iattaddvalue() const;
  inline void set_iattaddvalue(::google::protobuf::int32 value);

  // optional int32 iDefAddValue = 6;
  inline bool has_idefaddvalue() const;
  inline void clear_idefaddvalue();
  static const int kIDefAddValueFieldNumber = 6;
  inline ::google::protobuf::int32 idefaddvalue() const;
  inline void set_idefaddvalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_HERO_LEVELSTEPUP_SC)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();
  inline void set_has_oldstate();
  inline void clear_has_oldstate();
  inline void set_has_newstate();
  inline void clear_has_newstate();
  inline void set_has_ihpaddvalue();
  inline void clear_has_ihpaddvalue();
  inline void set_has_iattaddvalue();
  inline void clear_has_iattaddvalue();
  inline void set_has_idefaddvalue();
  inline void clear_has_idefaddvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::HeroLevelStepState* oldstate_;
  ::google::protobuf::uint32 dwheroobjectid_;
  ::google::protobuf::int32 ihpaddvalue_;
  ::GSProto::HeroLevelStepState* newstate_;
  ::google::protobuf::int32 iattaddvalue_;
  ::google::protobuf::int32 idefaddvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_HERO_LEVELSTEPUP_SC* default_instance_;
};
// -------------------------------------------------------------------

class HeroSoulChg : public ::google::protobuf::Message {
 public:
  HeroSoulChg();
  virtual ~HeroSoulChg();

  HeroSoulChg(const HeroSoulChg& from);

  inline HeroSoulChg& operator=(const HeroSoulChg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroSoulChg& default_instance();

  void Swap(HeroSoulChg* other);

  // implements Message ----------------------------------------------

  HeroSoulChg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroSoulChg& from);
  void MergeFrom(const HeroSoulChg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iHeroID = 1;
  inline bool has_iheroid() const;
  inline void clear_iheroid();
  static const int kIHeroIDFieldNumber = 1;
  inline ::google::protobuf::int32 iheroid() const;
  inline void set_iheroid(::google::protobuf::int32 value);

  // required sint32 iChgCount = 2;
  inline bool has_ichgcount() const;
  inline void clear_ichgcount();
  static const int kIChgCountFieldNumber = 2;
  inline ::google::protobuf::int32 ichgcount() const;
  inline void set_ichgcount(::google::protobuf::int32 value);

  // required int32 iCurCount = 3;
  inline bool has_icurcount() const;
  inline void clear_icurcount();
  static const int kICurCountFieldNumber = 3;
  inline ::google::protobuf::int32 icurcount() const;
  inline void set_icurcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.HeroSoulChg)
 private:
  inline void set_has_iheroid();
  inline void clear_has_iheroid();
  inline void set_has_ichgcount();
  inline void clear_has_ichgcount();
  inline void set_has_icurcount();
  inline void clear_has_icurcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iheroid_;
  ::google::protobuf::int32 ichgcount_;
  ::google::protobuf::int32 icurcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static HeroSoulChg* default_instance_;
};
// -------------------------------------------------------------------

class CMD_HERO_SOULCHG_SC : public ::google::protobuf::Message {
 public:
  CMD_HERO_SOULCHG_SC();
  virtual ~CMD_HERO_SOULCHG_SC();

  CMD_HERO_SOULCHG_SC(const CMD_HERO_SOULCHG_SC& from);

  inline CMD_HERO_SOULCHG_SC& operator=(const CMD_HERO_SOULCHG_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HERO_SOULCHG_SC& default_instance();

  void Swap(CMD_HERO_SOULCHG_SC* other);

  // implements Message ----------------------------------------------

  CMD_HERO_SOULCHG_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_HERO_SOULCHG_SC& from);
  void MergeFrom(const CMD_HERO_SOULCHG_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.HeroSoulChg szChgList = 1;
  inline int szchglist_size() const;
  inline void clear_szchglist();
  static const int kSzChgListFieldNumber = 1;
  inline const ::GSProto::HeroSoulChg& szchglist(int index) const;
  inline ::GSProto::HeroSoulChg* mutable_szchglist(int index);
  inline ::GSProto::HeroSoulChg* add_szchglist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HeroSoulChg >&
      szchglist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::HeroSoulChg >*
      mutable_szchglist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_HERO_SOULCHG_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::HeroSoulChg > szchglist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_HERO_SOULCHG_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_HERO_TALLENT_LEVELUP_CS : public ::google::protobuf::Message {
 public:
  CMD_HERO_TALLENT_LEVELUP_CS();
  virtual ~CMD_HERO_TALLENT_LEVELUP_CS();

  CMD_HERO_TALLENT_LEVELUP_CS(const CMD_HERO_TALLENT_LEVELUP_CS& from);

  inline CMD_HERO_TALLENT_LEVELUP_CS& operator=(const CMD_HERO_TALLENT_LEVELUP_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HERO_TALLENT_LEVELUP_CS& default_instance();

  void Swap(CMD_HERO_TALLENT_LEVELUP_CS* other);

  // implements Message ----------------------------------------------

  CMD_HERO_TALLENT_LEVELUP_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_HERO_TALLENT_LEVELUP_CS& from);
  void MergeFrom(const CMD_HERO_TALLENT_LEVELUP_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // required int32 iTallentID = 2;
  inline bool has_itallentid() const;
  inline void clear_itallentid();
  static const int kITallentIDFieldNumber = 2;
  inline ::google::protobuf::int32 itallentid() const;
  inline void set_itallentid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_HERO_TALLENT_LEVELUP_CS)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();
  inline void set_has_itallentid();
  inline void clear_has_itallentid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwheroobjectid_;
  ::google::protobuf::int32 itallentid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_HERO_TALLENT_LEVELUP_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_HERO_TALLENT_UPDATE_SC : public ::google::protobuf::Message {
 public:
  CMD_HERO_TALLENT_UPDATE_SC();
  virtual ~CMD_HERO_TALLENT_UPDATE_SC();

  CMD_HERO_TALLENT_UPDATE_SC(const CMD_HERO_TALLENT_UPDATE_SC& from);

  inline CMD_HERO_TALLENT_UPDATE_SC& operator=(const CMD_HERO_TALLENT_UPDATE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HERO_TALLENT_UPDATE_SC& default_instance();

  void Swap(CMD_HERO_TALLENT_UPDATE_SC* other);

  // implements Message ----------------------------------------------

  CMD_HERO_TALLENT_UPDATE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_HERO_TALLENT_UPDATE_SC& from);
  void MergeFrom(const CMD_HERO_TALLENT_UPDATE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.HeroTallent tallentData = 1;
  inline bool has_tallentdata() const;
  inline void clear_tallentdata();
  static const int kTallentDataFieldNumber = 1;
  inline const ::GSProto::HeroTallent& tallentdata() const;
  inline ::GSProto::HeroTallent* mutable_tallentdata();
  inline ::GSProto::HeroTallent* release_tallentdata();
  inline void set_allocated_tallentdata(::GSProto::HeroTallent* tallentdata);

  // optional uint32 dwObjectID = 2;
  inline bool has_dwobjectid() const;
  inline void clear_dwobjectid();
  static const int kDwObjectIDFieldNumber = 2;
  inline ::google::protobuf::uint32 dwobjectid() const;
  inline void set_dwobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_HERO_TALLENT_UPDATE_SC)
 private:
  inline void set_has_tallentdata();
  inline void clear_has_tallentdata();
  inline void set_has_dwobjectid();
  inline void clear_has_dwobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::HeroTallent* tallentdata_;
  ::google::protobuf::uint32 dwobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_HERO_TALLENT_UPDATE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_ITEM_SELLITEM_CS : public ::google::protobuf::Message {
 public:
  CMD_ITEM_SELLITEM_CS();
  virtual ~CMD_ITEM_SELLITEM_CS();

  CMD_ITEM_SELLITEM_CS(const CMD_ITEM_SELLITEM_CS& from);

  inline CMD_ITEM_SELLITEM_CS& operator=(const CMD_ITEM_SELLITEM_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_ITEM_SELLITEM_CS& default_instance();

  void Swap(CMD_ITEM_SELLITEM_CS* other);

  // implements Message ----------------------------------------------

  CMD_ITEM_SELLITEM_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_ITEM_SELLITEM_CS& from);
  void MergeFrom(const CMD_ITEM_SELLITEM_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iItemBaseId = 1;
  inline bool has_iitembaseid() const;
  inline void clear_iitembaseid();
  static const int kIItemBaseIdFieldNumber = 1;
  inline ::google::protobuf::int32 iitembaseid() const;
  inline void set_iitembaseid(::google::protobuf::int32 value);

  // required int32 iItemCount = 2;
  inline bool has_iitemcount() const;
  inline void clear_iitemcount();
  static const int kIItemCountFieldNumber = 2;
  inline ::google::protobuf::int32 iitemcount() const;
  inline void set_iitemcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_ITEM_SELLITEM_CS)
 private:
  inline void set_has_iitembaseid();
  inline void clear_has_iitembaseid();
  inline void set_has_iitemcount();
  inline void clear_has_iitemcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iitembaseid_;
  ::google::protobuf::int32 iitemcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_ITEM_SELLITEM_CS* default_instance_;
};
// -------------------------------------------------------------------

class GodAnimalLevelStepState : public ::google::protobuf::Message {
 public:
  GodAnimalLevelStepState();
  virtual ~GodAnimalLevelStepState();

  GodAnimalLevelStepState(const GodAnimalLevelStepState& from);

  inline GodAnimalLevelStepState& operator=(const GodAnimalLevelStepState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GodAnimalLevelStepState& default_instance();

  void Swap(GodAnimalLevelStepState* other);

  // implements Message ----------------------------------------------

  GodAnimalLevelStepState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GodAnimalLevelStepState& from);
  void MergeFrom(const GodAnimalLevelStepState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iGodAnimalLevelStep = 1;
  inline bool has_igodanimallevelstep() const;
  inline void clear_igodanimallevelstep();
  static const int kIGodAnimalLevelStepFieldNumber = 1;
  inline ::google::protobuf::int32 igodanimallevelstep() const;
  inline void set_igodanimallevelstep(::google::protobuf::int32 value);

  // required int32 iHpGrow = 2;
  inline bool has_ihpgrow() const;
  inline void clear_ihpgrow();
  static const int kIHpGrowFieldNumber = 2;
  inline ::google::protobuf::int32 ihpgrow() const;
  inline void set_ihpgrow(::google::protobuf::int32 value);

  // required int32 iAttGrow = 3;
  inline bool has_iattgrow() const;
  inline void clear_iattgrow();
  static const int kIAttGrowFieldNumber = 3;
  inline ::google::protobuf::int32 iattgrow() const;
  inline void set_iattgrow(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.GodAnimalLevelStepState)
 private:
  inline void set_has_igodanimallevelstep();
  inline void clear_has_igodanimallevelstep();
  inline void set_has_ihpgrow();
  inline void clear_has_ihpgrow();
  inline void set_has_iattgrow();
  inline void clear_has_iattgrow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 igodanimallevelstep_;
  ::google::protobuf::int32 ihpgrow_;
  ::google::protobuf::int32 iattgrow_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static GodAnimalLevelStepState* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GODANIMAL_EXELEVELSTEPUP_SC : public ::google::protobuf::Message {
 public:
  CMD_GODANIMAL_EXELEVELSTEPUP_SC();
  virtual ~CMD_GODANIMAL_EXELEVELSTEPUP_SC();

  CMD_GODANIMAL_EXELEVELSTEPUP_SC(const CMD_GODANIMAL_EXELEVELSTEPUP_SC& from);

  inline CMD_GODANIMAL_EXELEVELSTEPUP_SC& operator=(const CMD_GODANIMAL_EXELEVELSTEPUP_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GODANIMAL_EXELEVELSTEPUP_SC& default_instance();

  void Swap(CMD_GODANIMAL_EXELEVELSTEPUP_SC* other);

  // implements Message ----------------------------------------------

  CMD_GODANIMAL_EXELEVELSTEPUP_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GODANIMAL_EXELEVELSTEPUP_SC& from);
  void MergeFrom(const CMD_GODANIMAL_EXELEVELSTEPUP_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwNewGodAnimalObjectId = 1;
  inline bool has_dwnewgodanimalobjectid() const;
  inline void clear_dwnewgodanimalobjectid();
  static const int kDwNewGodAnimalObjectIdFieldNumber = 1;
  inline ::google::protobuf::uint32 dwnewgodanimalobjectid() const;
  inline void set_dwnewgodanimalobjectid(::google::protobuf::uint32 value);

  // required .GSProto.GodAnimalLevelStepState oldState = 2;
  inline bool has_oldstate() const;
  inline void clear_oldstate();
  static const int kOldStateFieldNumber = 2;
  inline const ::GSProto::GodAnimalLevelStepState& oldstate() const;
  inline ::GSProto::GodAnimalLevelStepState* mutable_oldstate();
  inline ::GSProto::GodAnimalLevelStepState* release_oldstate();
  inline void set_allocated_oldstate(::GSProto::GodAnimalLevelStepState* oldstate);

  // required .GSProto.GodAnimalLevelStepState newState = 3;
  inline bool has_newstate() const;
  inline void clear_newstate();
  static const int kNewStateFieldNumber = 3;
  inline const ::GSProto::GodAnimalLevelStepState& newstate() const;
  inline ::GSProto::GodAnimalLevelStepState* mutable_newstate();
  inline ::GSProto::GodAnimalLevelStepState* release_newstate();
  inline void set_allocated_newstate(::GSProto::GodAnimalLevelStepState* newstate);

  // required int32 iHPAddValue = 4;
  inline bool has_ihpaddvalue() const;
  inline void clear_ihpaddvalue();
  static const int kIHPAddValueFieldNumber = 4;
  inline ::google::protobuf::int32 ihpaddvalue() const;
  inline void set_ihpaddvalue(::google::protobuf::int32 value);

  // required int32 iAttAddValue = 5;
  inline bool has_iattaddvalue() const;
  inline void clear_iattaddvalue();
  static const int kIAttAddValueFieldNumber = 5;
  inline ::google::protobuf::int32 iattaddvalue() const;
  inline void set_iattaddvalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GODANIMAL_EXELEVELSTEPUP_SC)
 private:
  inline void set_has_dwnewgodanimalobjectid();
  inline void clear_has_dwnewgodanimalobjectid();
  inline void set_has_oldstate();
  inline void clear_has_oldstate();
  inline void set_has_newstate();
  inline void clear_has_newstate();
  inline void set_has_ihpaddvalue();
  inline void clear_has_ihpaddvalue();
  inline void set_has_iattaddvalue();
  inline void clear_has_iattaddvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::GodAnimalLevelStepState* oldstate_;
  ::google::protobuf::uint32 dwnewgodanimalobjectid_;
  ::google::protobuf::int32 ihpaddvalue_;
  ::GSProto::GodAnimalLevelStepState* newstate_;
  ::google::protobuf::int32 iattaddvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GODANIMAL_EXELEVELSTEPUP_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_COMMON_GETHERO_SC : public ::google::protobuf::Message {
 public:
  CMD_COMMON_GETHERO_SC();
  virtual ~CMD_COMMON_GETHERO_SC();

  CMD_COMMON_GETHERO_SC(const CMD_COMMON_GETHERO_SC& from);

  inline CMD_COMMON_GETHERO_SC& operator=(const CMD_COMMON_GETHERO_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_COMMON_GETHERO_SC& default_instance();

  void Swap(CMD_COMMON_GETHERO_SC* other);

  // implements Message ----------------------------------------------

  CMD_COMMON_GETHERO_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_COMMON_GETHERO_SC& from);
  void MergeFrom(const CMD_COMMON_GETHERO_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iHeroBaseId = 1;
  inline bool has_iherobaseid() const;
  inline void clear_iherobaseid();
  static const int kIHeroBaseIdFieldNumber = 1;
  inline ::google::protobuf::int32 iherobaseid() const;
  inline void set_iherobaseid(::google::protobuf::int32 value);

  // required int32 iGetHeroSoul = 2;
  inline bool has_igetherosoul() const;
  inline void clear_igetherosoul();
  static const int kIGetHeroSoulFieldNumber = 2;
  inline ::google::protobuf::int32 igetherosoul() const;
  inline void set_igetherosoul(::google::protobuf::int32 value);

  // required int32 iHeroOldStep = 3;
  inline bool has_iherooldstep() const;
  inline void clear_iherooldstep();
  static const int kIHeroOldStepFieldNumber = 3;
  inline ::google::protobuf::int32 iherooldstep() const;
  inline void set_iherooldstep(::google::protobuf::int32 value);

  // required int32 iHeroNewStep = 4;
  inline bool has_iheronewstep() const;
  inline void clear_iheronewstep();
  static const int kIHeroNewStepFieldNumber = 4;
  inline ::google::protobuf::int32 iheronewstep() const;
  inline void set_iheronewstep(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_COMMON_GETHERO_SC)
 private:
  inline void set_has_iherobaseid();
  inline void clear_has_iherobaseid();
  inline void set_has_igetherosoul();
  inline void clear_has_igetherosoul();
  inline void set_has_iherooldstep();
  inline void clear_has_iherooldstep();
  inline void set_has_iheronewstep();
  inline void clear_has_iheronewstep();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iherobaseid_;
  ::google::protobuf::int32 igetherosoul_;
  ::google::protobuf::int32 iherooldstep_;
  ::google::protobuf::int32 iheronewstep_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_COMMON_GETHERO_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_CHG_ACTOR_HEAD_CS : public ::google::protobuf::Message {
 public:
  CMD_CHG_ACTOR_HEAD_CS();
  virtual ~CMD_CHG_ACTOR_HEAD_CS();

  CMD_CHG_ACTOR_HEAD_CS(const CMD_CHG_ACTOR_HEAD_CS& from);

  inline CMD_CHG_ACTOR_HEAD_CS& operator=(const CMD_CHG_ACTOR_HEAD_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_CHG_ACTOR_HEAD_CS& default_instance();

  void Swap(CMD_CHG_ACTOR_HEAD_CS* other);

  // implements Message ----------------------------------------------

  CMD_CHG_ACTOR_HEAD_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_CHG_ACTOR_HEAD_CS& from);
  void MergeFrom(const CMD_CHG_ACTOR_HEAD_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.enHeadType enHeadType = 1;
  inline bool has_enheadtype() const;
  inline void clear_enheadtype();
  static const int kEnHeadTypeFieldNumber = 1;
  inline ::GSProto::enHeadType enheadtype() const;
  inline void set_enheadtype(::GSProto::enHeadType value);

  // required int32 iHeadId = 2;
  inline bool has_iheadid() const;
  inline void clear_iheadid();
  static const int kIHeadIdFieldNumber = 2;
  inline ::google::protobuf::int32 iheadid() const;
  inline void set_iheadid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_CHG_ACTOR_HEAD_CS)
 private:
  inline void set_has_enheadtype();
  inline void clear_has_enheadtype();
  inline void set_has_iheadid();
  inline void clear_has_iheadid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int enheadtype_;
  ::google::protobuf::int32 iheadid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_CHG_ACTOR_HEAD_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_RONGLIAN_CS : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_RONGLIAN_CS();
  virtual ~CMD_EQUIP_RONGLIAN_CS();

  CMD_EQUIP_RONGLIAN_CS(const CMD_EQUIP_RONGLIAN_CS& from);

  inline CMD_EQUIP_RONGLIAN_CS& operator=(const CMD_EQUIP_RONGLIAN_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_RONGLIAN_CS& default_instance();

  void Swap(CMD_EQUIP_RONGLIAN_CS* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_RONGLIAN_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_RONGLIAN_CS& from);
  void MergeFrom(const CMD_EQUIP_RONGLIAN_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 equipPosList = 1;
  inline int equipposlist_size() const;
  inline void clear_equipposlist();
  static const int kEquipPosListFieldNumber = 1;
  inline ::google::protobuf::int32 equipposlist(int index) const;
  inline void set_equipposlist(int index, ::google::protobuf::int32 value);
  inline void add_equipposlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      equipposlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_equipposlist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_RONGLIAN_CS)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > equipposlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_RONGLIAN_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_RONGLIAN_SC : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_RONGLIAN_SC();
  virtual ~CMD_EQUIP_RONGLIAN_SC();

  CMD_EQUIP_RONGLIAN_SC(const CMD_EQUIP_RONGLIAN_SC& from);

  inline CMD_EQUIP_RONGLIAN_SC& operator=(const CMD_EQUIP_RONGLIAN_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_RONGLIAN_SC& default_instance();

  void Swap(CMD_EQUIP_RONGLIAN_SC* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_RONGLIAN_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_RONGLIAN_SC& from);
  void MergeFrom(const CMD_EQUIP_RONGLIAN_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retCode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // optional .GSProto.EquipInfo equipData = 2;
  inline bool has_equipdata() const;
  inline void clear_equipdata();
  static const int kEquipDataFieldNumber = 2;
  inline const ::GSProto::EquipInfo& equipdata() const;
  inline ::GSProto::EquipInfo* mutable_equipdata();
  inline ::GSProto::EquipInfo* release_equipdata();
  inline void set_allocated_equipdata(::GSProto::EquipInfo* equipdata);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_RONGLIAN_SC)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_equipdata();
  inline void clear_has_equipdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::EquipInfo* equipdata_;
  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_RONGLIAN_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_XILIAN_DATA_SC : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_XILIAN_DATA_SC();
  virtual ~CMD_EQUIP_XILIAN_DATA_SC();

  CMD_EQUIP_XILIAN_DATA_SC(const CMD_EQUIP_XILIAN_DATA_SC& from);

  inline CMD_EQUIP_XILIAN_DATA_SC& operator=(const CMD_EQUIP_XILIAN_DATA_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_XILIAN_DATA_SC& default_instance();

  void Swap(CMD_EQUIP_XILIAN_DATA_SC* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_XILIAN_DATA_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_XILIAN_DATA_SC& from);
  void MergeFrom(const CMD_EQUIP_XILIAN_DATA_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 objId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::uint32 objid() const;
  inline void set_objid(::google::protobuf::uint32 value);

  // repeated .GSProto.PropItem propList = 2;
  inline int proplist_size() const;
  inline void clear_proplist();
  static const int kPropListFieldNumber = 2;
  inline const ::GSProto::PropItem& proplist(int index) const;
  inline ::GSProto::PropItem* mutable_proplist(int index);
  inline ::GSProto::PropItem* add_proplist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
      proplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
      mutable_proplist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_XILIAN_DATA_SC)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem > proplist_;
  ::google::protobuf::uint32 objid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_XILIAN_DATA_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_XILIAN_GEN_CS : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_XILIAN_GEN_CS();
  virtual ~CMD_EQUIP_XILIAN_GEN_CS();

  CMD_EQUIP_XILIAN_GEN_CS(const CMD_EQUIP_XILIAN_GEN_CS& from);

  inline CMD_EQUIP_XILIAN_GEN_CS& operator=(const CMD_EQUIP_XILIAN_GEN_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_XILIAN_GEN_CS& default_instance();

  void Swap(CMD_EQUIP_XILIAN_GEN_CS* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_XILIAN_GEN_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_XILIAN_GEN_CS& from);
  void MergeFrom(const CMD_EQUIP_XILIAN_GEN_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cobjid = 1;
  inline bool has_cobjid() const;
  inline void clear_cobjid();
  static const int kCobjidFieldNumber = 1;
  inline ::google::protobuf::uint32 cobjid() const;
  inline void set_cobjid(::google::protobuf::uint32 value);

  // required int32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // repeated int32 lockPosList = 3;
  inline int lockposlist_size() const;
  inline void clear_lockposlist();
  static const int kLockPosListFieldNumber = 3;
  inline ::google::protobuf::int32 lockposlist(int index) const;
  inline void set_lockposlist(int index, ::google::protobuf::int32 value);
  inline void add_lockposlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lockposlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lockposlist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_XILIAN_GEN_CS)
 private:
  inline void set_has_cobjid();
  inline void clear_has_cobjid();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cobjid_;
  ::google::protobuf::int32 pos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lockposlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_XILIAN_GEN_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_XILIAN_GEN_SC : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_XILIAN_GEN_SC();
  virtual ~CMD_EQUIP_XILIAN_GEN_SC();

  CMD_EQUIP_XILIAN_GEN_SC(const CMD_EQUIP_XILIAN_GEN_SC& from);

  inline CMD_EQUIP_XILIAN_GEN_SC& operator=(const CMD_EQUIP_XILIAN_GEN_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_XILIAN_GEN_SC& default_instance();

  void Swap(CMD_EQUIP_XILIAN_GEN_SC* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_XILIAN_GEN_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_XILIAN_GEN_SC& from);
  void MergeFrom(const CMD_EQUIP_XILIAN_GEN_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retCode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // required uint32 objId = 2;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 2;
  inline ::google::protobuf::uint32 objid() const;
  inline void set_objid(::google::protobuf::uint32 value);

  // repeated .GSProto.PropItem propList = 3;
  inline int proplist_size() const;
  inline void clear_proplist();
  static const int kPropListFieldNumber = 3;
  inline const ::GSProto::PropItem& proplist(int index) const;
  inline ::GSProto::PropItem* mutable_proplist(int index);
  inline ::GSProto::PropItem* add_proplist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
      proplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
      mutable_proplist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_XILIAN_GEN_SC)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();
  inline void set_has_objid();
  inline void clear_has_objid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 objid_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem > proplist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_XILIAN_GEN_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_XILIAN_REPLACE_CS : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_XILIAN_REPLACE_CS();
  virtual ~CMD_EQUIP_XILIAN_REPLACE_CS();

  CMD_EQUIP_XILIAN_REPLACE_CS(const CMD_EQUIP_XILIAN_REPLACE_CS& from);

  inline CMD_EQUIP_XILIAN_REPLACE_CS& operator=(const CMD_EQUIP_XILIAN_REPLACE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_XILIAN_REPLACE_CS& default_instance();

  void Swap(CMD_EQUIP_XILIAN_REPLACE_CS* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_XILIAN_REPLACE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_XILIAN_REPLACE_CS& from);
  void MergeFrom(const CMD_EQUIP_XILIAN_REPLACE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cobjid = 1;
  inline bool has_cobjid() const;
  inline void clear_cobjid();
  static const int kCobjidFieldNumber = 1;
  inline ::google::protobuf::uint32 cobjid() const;
  inline void set_cobjid(::google::protobuf::uint32 value);

  // required int32 pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline ::google::protobuf::int32 pos() const;
  inline void set_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_XILIAN_REPLACE_CS)
 private:
  inline void set_has_cobjid();
  inline void clear_has_cobjid();
  inline void set_has_pos();
  inline void clear_has_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cobjid_;
  ::google::protobuf::int32 pos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_XILIAN_REPLACE_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_XILIAN_REPLACE_SC : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_XILIAN_REPLACE_SC();
  virtual ~CMD_EQUIP_XILIAN_REPLACE_SC();

  CMD_EQUIP_XILIAN_REPLACE_SC(const CMD_EQUIP_XILIAN_REPLACE_SC& from);

  inline CMD_EQUIP_XILIAN_REPLACE_SC& operator=(const CMD_EQUIP_XILIAN_REPLACE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_XILIAN_REPLACE_SC& default_instance();

  void Swap(CMD_EQUIP_XILIAN_REPLACE_SC* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_XILIAN_REPLACE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_XILIAN_REPLACE_SC& from);
  void MergeFrom(const CMD_EQUIP_XILIAN_REPLACE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retCode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_XILIAN_REPLACE_SC)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_XILIAN_REPLACE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_XILIAN_TRANSFER_CS : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_XILIAN_TRANSFER_CS();
  virtual ~CMD_EQUIP_XILIAN_TRANSFER_CS();

  CMD_EQUIP_XILIAN_TRANSFER_CS(const CMD_EQUIP_XILIAN_TRANSFER_CS& from);

  inline CMD_EQUIP_XILIAN_TRANSFER_CS& operator=(const CMD_EQUIP_XILIAN_TRANSFER_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_XILIAN_TRANSFER_CS& default_instance();

  void Swap(CMD_EQUIP_XILIAN_TRANSFER_CS* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_XILIAN_TRANSFER_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_XILIAN_TRANSFER_CS& from);
  void MergeFrom(const CMD_EQUIP_XILIAN_TRANSFER_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 srcCObjId = 1;
  inline bool has_srccobjid() const;
  inline void clear_srccobjid();
  static const int kSrcCObjIdFieldNumber = 1;
  inline ::google::protobuf::uint32 srccobjid() const;
  inline void set_srccobjid(::google::protobuf::uint32 value);

  // required uint32 dstCObjId = 2;
  inline bool has_dstcobjid() const;
  inline void clear_dstcobjid();
  static const int kDstCObjIdFieldNumber = 2;
  inline ::google::protobuf::uint32 dstcobjid() const;
  inline void set_dstcobjid(::google::protobuf::uint32 value);

  // required int32 srcPos = 3;
  inline bool has_srcpos() const;
  inline void clear_srcpos();
  static const int kSrcPosFieldNumber = 3;
  inline ::google::protobuf::int32 srcpos() const;
  inline void set_srcpos(::google::protobuf::int32 value);

  // required int32 dstPos = 4;
  inline bool has_dstpos() const;
  inline void clear_dstpos();
  static const int kDstPosFieldNumber = 4;
  inline ::google::protobuf::int32 dstpos() const;
  inline void set_dstpos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_XILIAN_TRANSFER_CS)
 private:
  inline void set_has_srccobjid();
  inline void clear_has_srccobjid();
  inline void set_has_dstcobjid();
  inline void clear_has_dstcobjid();
  inline void set_has_srcpos();
  inline void clear_has_srcpos();
  inline void set_has_dstpos();
  inline void clear_has_dstpos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 srccobjid_;
  ::google::protobuf::uint32 dstcobjid_;
  ::google::protobuf::int32 srcpos_;
  ::google::protobuf::int32 dstpos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_XILIAN_TRANSFER_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_XILIAN_BUYLOCK_CS : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_XILIAN_BUYLOCK_CS();
  virtual ~CMD_EQUIP_XILIAN_BUYLOCK_CS();

  CMD_EQUIP_XILIAN_BUYLOCK_CS(const CMD_EQUIP_XILIAN_BUYLOCK_CS& from);

  inline CMD_EQUIP_XILIAN_BUYLOCK_CS& operator=(const CMD_EQUIP_XILIAN_BUYLOCK_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_XILIAN_BUYLOCK_CS& default_instance();

  void Swap(CMD_EQUIP_XILIAN_BUYLOCK_CS* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_XILIAN_BUYLOCK_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_XILIAN_BUYLOCK_CS& from);
  void MergeFrom(const CMD_EQUIP_XILIAN_BUYLOCK_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_XILIAN_BUYLOCK_CS)
 private:
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_XILIAN_BUYLOCK_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_XILIAN_BUYLOCK_SC : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_XILIAN_BUYLOCK_SC();
  virtual ~CMD_EQUIP_XILIAN_BUYLOCK_SC();

  CMD_EQUIP_XILIAN_BUYLOCK_SC(const CMD_EQUIP_XILIAN_BUYLOCK_SC& from);

  inline CMD_EQUIP_XILIAN_BUYLOCK_SC& operator=(const CMD_EQUIP_XILIAN_BUYLOCK_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_XILIAN_BUYLOCK_SC& default_instance();

  void Swap(CMD_EQUIP_XILIAN_BUYLOCK_SC* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_XILIAN_BUYLOCK_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_XILIAN_BUYLOCK_SC& from);
  void MergeFrom(const CMD_EQUIP_XILIAN_BUYLOCK_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retCode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_XILIAN_BUYLOCK_SC)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_XILIAN_BUYLOCK_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_EQUIP_XILIAN_TRANSFER_SC : public ::google::protobuf::Message {
 public:
  CMD_EQUIP_XILIAN_TRANSFER_SC();
  virtual ~CMD_EQUIP_XILIAN_TRANSFER_SC();

  CMD_EQUIP_XILIAN_TRANSFER_SC(const CMD_EQUIP_XILIAN_TRANSFER_SC& from);

  inline CMD_EQUIP_XILIAN_TRANSFER_SC& operator=(const CMD_EQUIP_XILIAN_TRANSFER_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_EQUIP_XILIAN_TRANSFER_SC& default_instance();

  void Swap(CMD_EQUIP_XILIAN_TRANSFER_SC* other);

  // implements Message ----------------------------------------------

  CMD_EQUIP_XILIAN_TRANSFER_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_EQUIP_XILIAN_TRANSFER_SC& from);
  void MergeFrom(const CMD_EQUIP_XILIAN_TRANSFER_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 retCode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 retcode() const;
  inline void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_EQUIP_XILIAN_TRANSFER_SC)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 retcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_EQUIP_XILIAN_TRANSFER_SC* default_instance_;
};
// -------------------------------------------------------------------

class ManorResDetail : public ::google::protobuf::Message {
 public:
  ManorResDetail();
  virtual ~ManorResDetail();

  ManorResDetail(const ManorResDetail& from);

  inline ManorResDetail& operator=(const ManorResDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManorResDetail& default_instance();

  void Swap(ManorResDetail* other);

  // implements Message ----------------------------------------------

  ManorResDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManorResDetail& from);
  void MergeFrom(const ManorResDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iResId = 1;
  inline bool has_iresid() const;
  inline void clear_iresid();
  static const int kIResIdFieldNumber = 1;
  inline ::google::protobuf::int32 iresid() const;
  inline void set_iresid(::google::protobuf::int32 value);

  // required int32 iResLevel = 2;
  inline bool has_ireslevel() const;
  inline void clear_ireslevel();
  static const int kIResLevelFieldNumber = 2;
  inline ::google::protobuf::int32 ireslevel() const;
  inline void set_ireslevel(::google::protobuf::int32 value);

  // required bool bResInBuild = 3;
  inline bool has_bresinbuild() const;
  inline void clear_bresinbuild();
  static const int kBResInBuildFieldNumber = 3;
  inline bool bresinbuild() const;
  inline void set_bresinbuild(bool value);

  // optional int32 iRemainSecond = 4;
  inline bool has_iremainsecond() const;
  inline void clear_iremainsecond();
  static const int kIRemainSecondFieldNumber = 4;
  inline ::google::protobuf::int32 iremainsecond() const;
  inline void set_iremainsecond(::google::protobuf::int32 value);

  // optional bool bCanHarvest = 5;
  inline bool has_bcanharvest() const;
  inline void clear_bcanharvest();
  static const int kBCanHarvestFieldNumber = 5;
  inline bool bcanharvest() const;
  inline void set_bcanharvest(bool value);

  // required .GSProto.ManorResType iResType = 6;
  inline bool has_irestype() const;
  inline void clear_irestype();
  static const int kIResTypeFieldNumber = 6;
  inline ::GSProto::ManorResType irestype() const;
  inline void set_irestype(::GSProto::ManorResType value);

  // @@protoc_insertion_point(class_scope:GSProto.ManorResDetail)
 private:
  inline void set_has_iresid();
  inline void clear_has_iresid();
  inline void set_has_ireslevel();
  inline void clear_has_ireslevel();
  inline void set_has_bresinbuild();
  inline void clear_has_bresinbuild();
  inline void set_has_iremainsecond();
  inline void clear_has_iremainsecond();
  inline void set_has_bcanharvest();
  inline void clear_has_bcanharvest();
  inline void set_has_irestype();
  inline void clear_has_irestype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresid_;
  ::google::protobuf::int32 ireslevel_;
  ::google::protobuf::int32 iremainsecond_;
  bool bresinbuild_;
  bool bcanharvest_;
  int irestype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static ManorResDetail* default_instance_;
};
// -------------------------------------------------------------------

class CMD_MANOR_QUERY_SC : public ::google::protobuf::Message {
 public:
  CMD_MANOR_QUERY_SC();
  virtual ~CMD_MANOR_QUERY_SC();

  CMD_MANOR_QUERY_SC(const CMD_MANOR_QUERY_SC& from);

  inline CMD_MANOR_QUERY_SC& operator=(const CMD_MANOR_QUERY_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_MANOR_QUERY_SC& default_instance();

  void Swap(CMD_MANOR_QUERY_SC* other);

  // implements Message ----------------------------------------------

  CMD_MANOR_QUERY_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_MANOR_QUERY_SC& from);
  void MergeFrom(const CMD_MANOR_QUERY_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.ManorResDetail szManorSilverResDetail = 1;
  inline int szmanorsilverresdetail_size() const;
  inline void clear_szmanorsilverresdetail();
  static const int kSzManorSilverResDetailFieldNumber = 1;
  inline const ::GSProto::ManorResDetail& szmanorsilverresdetail(int index) const;
  inline ::GSProto::ManorResDetail* mutable_szmanorsilverresdetail(int index);
  inline ::GSProto::ManorResDetail* add_szmanorsilverresdetail();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ManorResDetail >&
      szmanorsilverresdetail() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::ManorResDetail >*
      mutable_szmanorsilverresdetail();

  // repeated .GSProto.ManorResDetail szManorHeroExpResDetail = 2;
  inline int szmanorheroexpresdetail_size() const;
  inline void clear_szmanorheroexpresdetail();
  static const int kSzManorHeroExpResDetailFieldNumber = 2;
  inline const ::GSProto::ManorResDetail& szmanorheroexpresdetail(int index) const;
  inline ::GSProto::ManorResDetail* mutable_szmanorheroexpresdetail(int index);
  inline ::GSProto::ManorResDetail* add_szmanorheroexpresdetail();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ManorResDetail >&
      szmanorheroexpresdetail() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::ManorResDetail >*
      mutable_szmanorheroexpresdetail();

  // required int32 iSilverProductSpeed = 3;
  inline bool has_isilverproductspeed() const;
  inline void clear_isilverproductspeed();
  static const int kISilverProductSpeedFieldNumber = 3;
  inline ::google::protobuf::int32 isilverproductspeed() const;
  inline void set_isilverproductspeed(::google::protobuf::int32 value);

  // required int32 iHeroExpProductSpeed = 4;
  inline bool has_iheroexpproductspeed() const;
  inline void clear_iheroexpproductspeed();
  static const int kIHeroExpProductSpeedFieldNumber = 4;
  inline ::google::protobuf::int32 iheroexpproductspeed() const;
  inline void set_iheroexpproductspeed(::google::protobuf::int32 value);

  // required int32 iSilverTotalProduct = 5;
  inline bool has_isilvertotalproduct() const;
  inline void clear_isilvertotalproduct();
  static const int kISilverTotalProductFieldNumber = 5;
  inline ::google::protobuf::int32 isilvertotalproduct() const;
  inline void set_isilvertotalproduct(::google::protobuf::int32 value);

  // required int32 iHeroExpTotalProduct = 6;
  inline bool has_iheroexptotalproduct() const;
  inline void clear_iheroexptotalproduct();
  static const int kIHeroExpTotalProductFieldNumber = 6;
  inline ::google::protobuf::int32 iheroexptotalproduct() const;
  inline void set_iheroexptotalproduct(::google::protobuf::int32 value);

  // required .GSProto.ManorResDetail TieJiangPuDetail = 7;
  inline bool has_tiejiangpudetail() const;
  inline void clear_tiejiangpudetail();
  static const int kTieJiangPuDetailFieldNumber = 7;
  inline const ::GSProto::ManorResDetail& tiejiangpudetail() const;
  inline ::GSProto::ManorResDetail* mutable_tiejiangpudetail();
  inline ::GSProto::ManorResDetail* release_tiejiangpudetail();
  inline void set_allocated_tiejiangpudetail(::GSProto::ManorResDetail* tiejiangpudetail);

  // required .GSProto.ManorResDetail WuHunDianDetail = 8;
  inline bool has_wuhundiandetail() const;
  inline void clear_wuhundiandetail();
  static const int kWuHunDianDetailFieldNumber = 8;
  inline const ::GSProto::ManorResDetail& wuhundiandetail() const;
  inline ::GSProto::ManorResDetail* mutable_wuhundiandetail();
  inline ::GSProto::ManorResDetail* release_wuhundiandetail();
  inline void set_allocated_wuhundiandetail(::GSProto::ManorResDetail* wuhundiandetail);

  // required int32 iNowBulidTeams = 9;
  inline bool has_inowbulidteams() const;
  inline void clear_inowbulidteams();
  static const int kINowBulidTeamsFieldNumber = 9;
  inline ::google::protobuf::int32 inowbulidteams() const;
  inline void set_inowbulidteams(::google::protobuf::int32 value);

  // required int32 iTotalBuildTeams = 10;
  inline bool has_itotalbuildteams() const;
  inline void clear_itotalbuildteams();
  static const int kITotalBuildTeamsFieldNumber = 10;
  inline ::google::protobuf::int32 itotalbuildteams() const;
  inline void set_itotalbuildteams(::google::protobuf::int32 value);

  // required int32 iCurSilverPutOut = 11;
  inline bool has_icursilverputout() const;
  inline void clear_icursilverputout();
  static const int kICurSilverPutOutFieldNumber = 11;
  inline ::google::protobuf::int32 icursilverputout() const;
  inline void set_icursilverputout(::google::protobuf::int32 value);

  // required int32 iCurHeroExpPutOut = 12;
  inline bool has_icurheroexpputout() const;
  inline void clear_icurheroexpputout();
  static const int kICurHeroExpPutOutFieldNumber = 12;
  inline ::google::protobuf::int32 icurheroexpputout() const;
  inline void set_icurheroexpputout(::google::protobuf::int32 value);

  // required int32 iCurCanHavestTimes = 13;
  inline bool has_icurcanhavesttimes() const;
  inline void clear_icurcanhavesttimes();
  static const int kICurCanHavestTimesFieldNumber = 13;
  inline ::google::protobuf::int32 icurcanhavesttimes() const;
  inline void set_icurcanhavesttimes(::google::protobuf::int32 value);

  // required int32 iTotalHavestTimes = 14;
  inline bool has_itotalhavesttimes() const;
  inline void clear_itotalhavesttimes();
  static const int kITotalHavestTimesFieldNumber = 14;
  inline ::google::protobuf::int32 itotalhavesttimes() const;
  inline void set_itotalhavesttimes(::google::protobuf::int32 value);

  // required int32 iRemaindProtectSecond = 16;
  inline bool has_iremaindprotectsecond() const;
  inline void clear_iremaindprotectsecond();
  static const int kIRemaindProtectSecondFieldNumber = 16;
  inline ::google::protobuf::int32 iremaindprotectsecond() const;
  inline void set_iremaindprotectsecond(::google::protobuf::int32 value);

  // required int32 iSearchCost = 17;
  inline bool has_isearchcost() const;
  inline void clear_isearchcost();
  static const int kISearchCostFieldNumber = 17;
  inline ::google::protobuf::int32 isearchcost() const;
  inline void set_isearchcost(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_MANOR_QUERY_SC)
 private:
  inline void set_has_isilverproductspeed();
  inline void clear_has_isilverproductspeed();
  inline void set_has_iheroexpproductspeed();
  inline void clear_has_iheroexpproductspeed();
  inline void set_has_isilvertotalproduct();
  inline void clear_has_isilvertotalproduct();
  inline void set_has_iheroexptotalproduct();
  inline void clear_has_iheroexptotalproduct();
  inline void set_has_tiejiangpudetail();
  inline void clear_has_tiejiangpudetail();
  inline void set_has_wuhundiandetail();
  inline void clear_has_wuhundiandetail();
  inline void set_has_inowbulidteams();
  inline void clear_has_inowbulidteams();
  inline void set_has_itotalbuildteams();
  inline void clear_has_itotalbuildteams();
  inline void set_has_icursilverputout();
  inline void clear_has_icursilverputout();
  inline void set_has_icurheroexpputout();
  inline void clear_has_icurheroexpputout();
  inline void set_has_icurcanhavesttimes();
  inline void clear_has_icurcanhavesttimes();
  inline void set_has_itotalhavesttimes();
  inline void clear_has_itotalhavesttimes();
  inline void set_has_iremaindprotectsecond();
  inline void clear_has_iremaindprotectsecond();
  inline void set_has_isearchcost();
  inline void clear_has_isearchcost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::ManorResDetail > szmanorsilverresdetail_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::ManorResDetail > szmanorheroexpresdetail_;
  ::google::protobuf::int32 isilverproductspeed_;
  ::google::protobuf::int32 iheroexpproductspeed_;
  ::google::protobuf::int32 isilvertotalproduct_;
  ::google::protobuf::int32 iheroexptotalproduct_;
  ::GSProto::ManorResDetail* tiejiangpudetail_;
  ::GSProto::ManorResDetail* wuhundiandetail_;
  ::google::protobuf::int32 inowbulidteams_;
  ::google::protobuf::int32 itotalbuildteams_;
  ::google::protobuf::int32 icursilverputout_;
  ::google::protobuf::int32 icurheroexpputout_;
  ::google::protobuf::int32 icurcanhavesttimes_;
  ::google::protobuf::int32 itotalhavesttimes_;
  ::google::protobuf::int32 iremaindprotectsecond_;
  ::google::protobuf::int32 isearchcost_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_MANOR_QUERY_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_MANOR_RES_USE_GOLD_LEVELUP_CS : public ::google::protobuf::Message {
 public:
  CMD_MANOR_RES_USE_GOLD_LEVELUP_CS();
  virtual ~CMD_MANOR_RES_USE_GOLD_LEVELUP_CS();

  CMD_MANOR_RES_USE_GOLD_LEVELUP_CS(const CMD_MANOR_RES_USE_GOLD_LEVELUP_CS& from);

  inline CMD_MANOR_RES_USE_GOLD_LEVELUP_CS& operator=(const CMD_MANOR_RES_USE_GOLD_LEVELUP_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_MANOR_RES_USE_GOLD_LEVELUP_CS& default_instance();

  void Swap(CMD_MANOR_RES_USE_GOLD_LEVELUP_CS* other);

  // implements Message ----------------------------------------------

  CMD_MANOR_RES_USE_GOLD_LEVELUP_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_MANOR_RES_USE_GOLD_LEVELUP_CS& from);
  void MergeFrom(const CMD_MANOR_RES_USE_GOLD_LEVELUP_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iResId = 1;
  inline bool has_iresid() const;
  inline void clear_iresid();
  static const int kIResIdFieldNumber = 1;
  inline ::google::protobuf::int32 iresid() const;
  inline void set_iresid(::google::protobuf::int32 value);

  // required .GSProto.ManorResType iResType = 2;
  inline bool has_irestype() const;
  inline void clear_irestype();
  static const int kIResTypeFieldNumber = 2;
  inline ::GSProto::ManorResType irestype() const;
  inline void set_irestype(::GSProto::ManorResType value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_MANOR_RES_USE_GOLD_LEVELUP_CS)
 private:
  inline void set_has_iresid();
  inline void clear_has_iresid();
  inline void set_has_irestype();
  inline void clear_has_irestype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresid_;
  int irestype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_MANOR_RES_USE_GOLD_LEVELUP_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_MANOR_RES_COMMON_LEVELUP_CS : public ::google::protobuf::Message {
 public:
  CMD_MANOR_RES_COMMON_LEVELUP_CS();
  virtual ~CMD_MANOR_RES_COMMON_LEVELUP_CS();

  CMD_MANOR_RES_COMMON_LEVELUP_CS(const CMD_MANOR_RES_COMMON_LEVELUP_CS& from);

  inline CMD_MANOR_RES_COMMON_LEVELUP_CS& operator=(const CMD_MANOR_RES_COMMON_LEVELUP_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_MANOR_RES_COMMON_LEVELUP_CS& default_instance();

  void Swap(CMD_MANOR_RES_COMMON_LEVELUP_CS* other);

  // implements Message ----------------------------------------------

  CMD_MANOR_RES_COMMON_LEVELUP_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_MANOR_RES_COMMON_LEVELUP_CS& from);
  void MergeFrom(const CMD_MANOR_RES_COMMON_LEVELUP_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iResId = 1;
  inline bool has_iresid() const;
  inline void clear_iresid();
  static const int kIResIdFieldNumber = 1;
  inline ::google::protobuf::int32 iresid() const;
  inline void set_iresid(::google::protobuf::int32 value);

  // required .GSProto.ManorResType iResType = 2;
  inline bool has_irestype() const;
  inline void clear_irestype();
  static const int kIResTypeFieldNumber = 2;
  inline ::GSProto::ManorResType irestype() const;
  inline void set_irestype(::GSProto::ManorResType value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_MANOR_RES_COMMON_LEVELUP_CS)
 private:
  inline void set_has_iresid();
  inline void clear_has_iresid();
  inline void set_has_irestype();
  inline void clear_has_irestype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresid_;
  int irestype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_MANOR_RES_COMMON_LEVELUP_CS* default_instance_;
};
// -------------------------------------------------------------------

class MonerHeroSoulDetail : public ::google::protobuf::Message {
 public:
  MonerHeroSoulDetail();
  virtual ~MonerHeroSoulDetail();

  MonerHeroSoulDetail(const MonerHeroSoulDetail& from);

  inline MonerHeroSoulDetail& operator=(const MonerHeroSoulDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MonerHeroSoulDetail& default_instance();

  void Swap(MonerHeroSoulDetail* other);

  // implements Message ----------------------------------------------

  MonerHeroSoulDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MonerHeroSoulDetail& from);
  void MergeFrom(const MonerHeroSoulDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iHeroSoulId = 1;
  inline bool has_iherosoulid() const;
  inline void clear_iherosoulid();
  static const int kIHeroSoulIdFieldNumber = 1;
  inline ::google::protobuf::int32 iherosoulid() const;
  inline void set_iherosoulid(::google::protobuf::int32 value);

  // required bool bHeroIsWuXieKeJi = 2;
  inline bool has_bheroiswuxiekeji() const;
  inline void clear_bheroiswuxiekeji();
  static const int kBHeroIsWuXieKeJiFieldNumber = 2;
  inline bool bheroiswuxiekeji() const;
  inline void set_bheroiswuxiekeji(bool value);

  // required int32 iHeroSoulCount = 3;
  inline bool has_iherosoulcount() const;
  inline void clear_iherosoulcount();
  static const int kIHeroSoulCountFieldNumber = 3;
  inline ::google::protobuf::int32 iherosoulcount() const;
  inline void set_iherosoulcount(::google::protobuf::int32 value);

  // required int32 iHeroHaveSoulLootCount = 4;
  inline bool has_iherohavesoullootcount() const;
  inline void clear_iherohavesoullootcount();
  static const int kIHeroHaveSoulLootCountFieldNumber = 4;
  inline ::google::protobuf::int32 iherohavesoullootcount() const;
  inline void set_iherohavesoullootcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.MonerHeroSoulDetail)
 private:
  inline void set_has_iherosoulid();
  inline void clear_has_iherosoulid();
  inline void set_has_bheroiswuxiekeji();
  inline void clear_has_bheroiswuxiekeji();
  inline void set_has_iherosoulcount();
  inline void clear_has_iherosoulcount();
  inline void set_has_iherohavesoullootcount();
  inline void clear_has_iherohavesoullootcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iherosoulid_;
  bool bheroiswuxiekeji_;
  ::google::protobuf::int32 iherosoulcount_;
  ::google::protobuf::int32 iherohavesoullootcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static MonerHeroSoulDetail* default_instance_;
};
// -------------------------------------------------------------------

class ManorHeroSoulBox : public ::google::protobuf::Message {
 public:
  ManorHeroSoulBox();
  virtual ~ManorHeroSoulBox();

  ManorHeroSoulBox(const ManorHeroSoulBox& from);

  inline ManorHeroSoulBox& operator=(const ManorHeroSoulBox& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManorHeroSoulBox& default_instance();

  void Swap(ManorHeroSoulBox* other);

  // implements Message ----------------------------------------------

  ManorHeroSoulBox* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManorHeroSoulBox& from);
  void MergeFrom(const ManorHeroSoulBox& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bIsOpen = 1;
  inline bool has_bisopen() const;
  inline void clear_bisopen();
  static const int kBIsOpenFieldNumber = 1;
  inline bool bisopen() const;
  inline void set_bisopen(bool value);

  // optional int32 iBoxOpenLevel = 2;
  inline bool has_iboxopenlevel() const;
  inline void clear_iboxopenlevel();
  static const int kIBoxOpenLevelFieldNumber = 2;
  inline ::google::protobuf::int32 iboxopenlevel() const;
  inline void set_iboxopenlevel(::google::protobuf::int32 value);

  // optional .GSProto.MonerHeroSoulDetail detail = 3;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 3;
  inline const ::GSProto::MonerHeroSoulDetail& detail() const;
  inline ::GSProto::MonerHeroSoulDetail* mutable_detail();
  inline ::GSProto::MonerHeroSoulDetail* release_detail();
  inline void set_allocated_detail(::GSProto::MonerHeroSoulDetail* detail);

  // required int32 iBoxIndex = 4;
  inline bool has_iboxindex() const;
  inline void clear_iboxindex();
  static const int kIBoxIndexFieldNumber = 4;
  inline ::google::protobuf::int32 iboxindex() const;
  inline void set_iboxindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.ManorHeroSoulBox)
 private:
  inline void set_has_bisopen();
  inline void clear_has_bisopen();
  inline void set_has_iboxopenlevel();
  inline void clear_has_iboxopenlevel();
  inline void set_has_detail();
  inline void clear_has_detail();
  inline void set_has_iboxindex();
  inline void clear_has_iboxindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool bisopen_;
  ::google::protobuf::int32 iboxopenlevel_;
  ::GSProto::MonerHeroSoulDetail* detail_;
  ::google::protobuf::int32 iboxindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static ManorHeroSoulBox* default_instance_;
};
// -------------------------------------------------------------------

class CMD_MANOR_WUHUNDIAN_QUERY_SC : public ::google::protobuf::Message {
 public:
  CMD_MANOR_WUHUNDIAN_QUERY_SC();
  virtual ~CMD_MANOR_WUHUNDIAN_QUERY_SC();

  CMD_MANOR_WUHUNDIAN_QUERY_SC(const CMD_MANOR_WUHUNDIAN_QUERY_SC& from);

  inline CMD_MANOR_WUHUNDIAN_QUERY_SC& operator=(const CMD_MANOR_WUHUNDIAN_QUERY_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_MANOR_WUHUNDIAN_QUERY_SC& default_instance();

  void Swap(CMD_MANOR_WUHUNDIAN_QUERY_SC* other);

  // implements Message ----------------------------------------------

  CMD_MANOR_WUHUNDIAN_QUERY_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_MANOR_WUHUNDIAN_QUERY_SC& from);
  void MergeFrom(const CMD_MANOR_WUHUNDIAN_QUERY_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bIsBulid = 1;
  inline bool has_bisbulid() const;
  inline void clear_bisbulid();
  static const int kBIsBulidFieldNumber = 1;
  inline bool bisbulid() const;
  inline void set_bisbulid(bool value);

  // optional int32 iBulidRemainSecond = 2;
  inline bool has_ibulidremainsecond() const;
  inline void clear_ibulidremainsecond();
  static const int kIBulidRemainSecondFieldNumber = 2;
  inline ::google::protobuf::int32 ibulidremainsecond() const;
  inline void set_ibulidremainsecond(::google::protobuf::int32 value);

  // repeated .GSProto.ManorHeroSoulBox szManorHeroSoulBox = 3;
  inline int szmanorherosoulbox_size() const;
  inline void clear_szmanorherosoulbox();
  static const int kSzManorHeroSoulBoxFieldNumber = 3;
  inline const ::GSProto::ManorHeroSoulBox& szmanorherosoulbox(int index) const;
  inline ::GSProto::ManorHeroSoulBox* mutable_szmanorherosoulbox(int index);
  inline ::GSProto::ManorHeroSoulBox* add_szmanorherosoulbox();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ManorHeroSoulBox >&
      szmanorherosoulbox() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::ManorHeroSoulBox >*
      mutable_szmanorherosoulbox();

  // required bool bIsProduct = 4;
  inline bool has_bisproduct() const;
  inline void clear_bisproduct();
  static const int kBIsProductFieldNumber = 4;
  inline bool bisproduct() const;
  inline void set_bisproduct(bool value);

  // optional int32 iRefreshCost = 5;
  inline bool has_irefreshcost() const;
  inline void clear_irefreshcost();
  static const int kIRefreshCostFieldNumber = 5;
  inline ::google::protobuf::int32 irefreshcost() const;
  inline void set_irefreshcost(::google::protobuf::int32 value);

  // optional int32 iProductReaminSecond = 6;
  inline bool has_iproductreaminsecond() const;
  inline void clear_iproductreaminsecond();
  static const int kIProductReaminSecondFieldNumber = 6;
  inline ::google::protobuf::int32 iproductreaminsecond() const;
  inline void set_iproductreaminsecond(::google::protobuf::int32 value);

  // optional int32 iRemianRefreshTimes = 7;
  inline bool has_iremianrefreshtimes() const;
  inline void clear_iremianrefreshtimes();
  static const int kIRemianRefreshTimesFieldNumber = 7;
  inline ::google::protobuf::int32 iremianrefreshtimes() const;
  inline void set_iremianrefreshtimes(::google::protobuf::int32 value);

  // optional int32 iTotalRemainRefreshTimes = 8;
  inline bool has_itotalremainrefreshtimes() const;
  inline void clear_itotalremainrefreshtimes();
  static const int kITotalRemainRefreshTimesFieldNumber = 8;
  inline ::google::protobuf::int32 itotalremainrefreshtimes() const;
  inline void set_itotalremainrefreshtimes(::google::protobuf::int32 value);

  // required int32 iLevelID = 9;
  inline bool has_ilevelid() const;
  inline void clear_ilevelid();
  static const int kILevelIDFieldNumber = 9;
  inline ::google::protobuf::int32 ilevelid() const;
  inline void set_ilevelid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_MANOR_WUHUNDIAN_QUERY_SC)
 private:
  inline void set_has_bisbulid();
  inline void clear_has_bisbulid();
  inline void set_has_ibulidremainsecond();
  inline void clear_has_ibulidremainsecond();
  inline void set_has_bisproduct();
  inline void clear_has_bisproduct();
  inline void set_has_irefreshcost();
  inline void clear_has_irefreshcost();
  inline void set_has_iproductreaminsecond();
  inline void clear_has_iproductreaminsecond();
  inline void set_has_iremianrefreshtimes();
  inline void clear_has_iremianrefreshtimes();
  inline void set_has_itotalremainrefreshtimes();
  inline void clear_has_itotalremainrefreshtimes();
  inline void set_has_ilevelid();
  inline void clear_has_ilevelid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ibulidremainsecond_;
  bool bisbulid_;
  bool bisproduct_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::ManorHeroSoulBox > szmanorherosoulbox_;
  ::google::protobuf::int32 irefreshcost_;
  ::google::protobuf::int32 iproductreaminsecond_;
  ::google::protobuf::int32 iremianrefreshtimes_;
  ::google::protobuf::int32 itotalremainrefreshtimes_;
  ::google::protobuf::int32 ilevelid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_MANOR_WUHUNDIAN_QUERY_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS : public ::google::protobuf::Message {
 public:
  CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS();
  virtual ~CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS();

  CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS(const CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS& from);

  inline CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS& operator=(const CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS& default_instance();

  void Swap(CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS* other);

  // implements Message ----------------------------------------------

  CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS& from);
  void MergeFrom(const CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iBoxIndex = 1;
  inline bool has_iboxindex() const;
  inline void clear_iboxindex();
  static const int kIBoxIndexFieldNumber = 1;
  inline ::google::protobuf::int32 iboxindex() const;
  inline void set_iboxindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS)
 private:
  inline void set_has_iboxindex();
  inline void clear_has_iboxindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iboxindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS* default_instance_;
};
// -------------------------------------------------------------------

class ManorTieJiangPuItemDetail : public ::google::protobuf::Message {
 public:
  ManorTieJiangPuItemDetail();
  virtual ~ManorTieJiangPuItemDetail();

  ManorTieJiangPuItemDetail(const ManorTieJiangPuItemDetail& from);

  inline ManorTieJiangPuItemDetail& operator=(const ManorTieJiangPuItemDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManorTieJiangPuItemDetail& default_instance();

  void Swap(ManorTieJiangPuItemDetail* other);

  // implements Message ----------------------------------------------

  ManorTieJiangPuItemDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManorTieJiangPuItemDetail& from);
  void MergeFrom(const ManorTieJiangPuItemDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iItemId = 1;
  inline bool has_iitemid() const;
  inline void clear_iitemid();
  static const int kIItemIdFieldNumber = 1;
  inline ::google::protobuf::int32 iitemid() const;
  inline void set_iitemid(::google::protobuf::int32 value);

  // required bool bItemIsWuXieKeJi = 2;
  inline bool has_bitemiswuxiekeji() const;
  inline void clear_bitemiswuxiekeji();
  static const int kBItemIsWuXieKeJiFieldNumber = 2;
  inline bool bitemiswuxiekeji() const;
  inline void set_bitemiswuxiekeji(bool value);

  // required int32 iItemCount = 3;
  inline bool has_iitemcount() const;
  inline void clear_iitemcount();
  static const int kIItemCountFieldNumber = 3;
  inline ::google::protobuf::int32 iitemcount() const;
  inline void set_iitemcount(::google::protobuf::int32 value);

  // required int32 iItemHaveLootCount = 4;
  inline bool has_iitemhavelootcount() const;
  inline void clear_iitemhavelootcount();
  static const int kIItemHaveLootCountFieldNumber = 4;
  inline ::google::protobuf::int32 iitemhavelootcount() const;
  inline void set_iitemhavelootcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.ManorTieJiangPuItemDetail)
 private:
  inline void set_has_iitemid();
  inline void clear_has_iitemid();
  inline void set_has_bitemiswuxiekeji();
  inline void clear_has_bitemiswuxiekeji();
  inline void set_has_iitemcount();
  inline void clear_has_iitemcount();
  inline void set_has_iitemhavelootcount();
  inline void clear_has_iitemhavelootcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iitemid_;
  bool bitemiswuxiekeji_;
  ::google::protobuf::int32 iitemcount_;
  ::google::protobuf::int32 iitemhavelootcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static ManorTieJiangPuItemDetail* default_instance_;
};
// -------------------------------------------------------------------

class ManorTieJiangPuItemBox : public ::google::protobuf::Message {
 public:
  ManorTieJiangPuItemBox();
  virtual ~ManorTieJiangPuItemBox();

  ManorTieJiangPuItemBox(const ManorTieJiangPuItemBox& from);

  inline ManorTieJiangPuItemBox& operator=(const ManorTieJiangPuItemBox& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManorTieJiangPuItemBox& default_instance();

  void Swap(ManorTieJiangPuItemBox* other);

  // implements Message ----------------------------------------------

  ManorTieJiangPuItemBox* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManorTieJiangPuItemBox& from);
  void MergeFrom(const ManorTieJiangPuItemBox& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bIsOpen = 1;
  inline bool has_bisopen() const;
  inline void clear_bisopen();
  static const int kBIsOpenFieldNumber = 1;
  inline bool bisopen() const;
  inline void set_bisopen(bool value);

  // optional .GSProto.ManorTieJiangPuItemDetail itemDetail = 2;
  inline bool has_itemdetail() const;
  inline void clear_itemdetail();
  static const int kItemDetailFieldNumber = 2;
  inline const ::GSProto::ManorTieJiangPuItemDetail& itemdetail() const;
  inline ::GSProto::ManorTieJiangPuItemDetail* mutable_itemdetail();
  inline ::GSProto::ManorTieJiangPuItemDetail* release_itemdetail();
  inline void set_allocated_itemdetail(::GSProto::ManorTieJiangPuItemDetail* itemdetail);

  // required int32 iBoxIndex = 3;
  inline bool has_iboxindex() const;
  inline void clear_iboxindex();
  static const int kIBoxIndexFieldNumber = 3;
  inline ::google::protobuf::int32 iboxindex() const;
  inline void set_iboxindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.ManorTieJiangPuItemBox)
 private:
  inline void set_has_bisopen();
  inline void clear_has_bisopen();
  inline void set_has_itemdetail();
  inline void clear_has_itemdetail();
  inline void set_has_iboxindex();
  inline void clear_has_iboxindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::ManorTieJiangPuItemDetail* itemdetail_;
  bool bisopen_;
  ::google::protobuf::int32 iboxindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static ManorTieJiangPuItemBox* default_instance_;
};
// -------------------------------------------------------------------

class CMD_MANOR_TIEJIANGPU_QUERY_SC : public ::google::protobuf::Message {
 public:
  CMD_MANOR_TIEJIANGPU_QUERY_SC();
  virtual ~CMD_MANOR_TIEJIANGPU_QUERY_SC();

  CMD_MANOR_TIEJIANGPU_QUERY_SC(const CMD_MANOR_TIEJIANGPU_QUERY_SC& from);

  inline CMD_MANOR_TIEJIANGPU_QUERY_SC& operator=(const CMD_MANOR_TIEJIANGPU_QUERY_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_MANOR_TIEJIANGPU_QUERY_SC& default_instance();

  void Swap(CMD_MANOR_TIEJIANGPU_QUERY_SC* other);

  // implements Message ----------------------------------------------

  CMD_MANOR_TIEJIANGPU_QUERY_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_MANOR_TIEJIANGPU_QUERY_SC& from);
  void MergeFrom(const CMD_MANOR_TIEJIANGPU_QUERY_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bIsBulid = 1;
  inline bool has_bisbulid() const;
  inline void clear_bisbulid();
  static const int kBIsBulidFieldNumber = 1;
  inline bool bisbulid() const;
  inline void set_bisbulid(bool value);

  // optional int32 iBulidRemainSecond = 2;
  inline bool has_ibulidremainsecond() const;
  inline void clear_ibulidremainsecond();
  static const int kIBulidRemainSecondFieldNumber = 2;
  inline ::google::protobuf::int32 ibulidremainsecond() const;
  inline void set_ibulidremainsecond(::google::protobuf::int32 value);

  // repeated .GSProto.ManorTieJiangPuItemBox szManorTieJiangPuItemBox = 3;
  inline int szmanortiejiangpuitembox_size() const;
  inline void clear_szmanortiejiangpuitembox();
  static const int kSzManorTieJiangPuItemBoxFieldNumber = 3;
  inline const ::GSProto::ManorTieJiangPuItemBox& szmanortiejiangpuitembox(int index) const;
  inline ::GSProto::ManorTieJiangPuItemBox* mutable_szmanortiejiangpuitembox(int index);
  inline ::GSProto::ManorTieJiangPuItemBox* add_szmanortiejiangpuitembox();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ManorTieJiangPuItemBox >&
      szmanortiejiangpuitembox() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::ManorTieJiangPuItemBox >*
      mutable_szmanortiejiangpuitembox();

  // required bool bIsProduct = 4;
  inline bool has_bisproduct() const;
  inline void clear_bisproduct();
  static const int kBIsProductFieldNumber = 4;
  inline bool bisproduct() const;
  inline void set_bisproduct(bool value);

  // optional int32 iRefreshCost = 5;
  inline bool has_irefreshcost() const;
  inline void clear_irefreshcost();
  static const int kIRefreshCostFieldNumber = 5;
  inline ::google::protobuf::int32 irefreshcost() const;
  inline void set_irefreshcost(::google::protobuf::int32 value);

  // optional int32 iProductReaminSecond = 6;
  inline bool has_iproductreaminsecond() const;
  inline void clear_iproductreaminsecond();
  static const int kIProductReaminSecondFieldNumber = 6;
  inline ::google::protobuf::int32 iproductreaminsecond() const;
  inline void set_iproductreaminsecond(::google::protobuf::int32 value);

  // optional int32 iRemianRefreshTimes = 7;
  inline bool has_iremianrefreshtimes() const;
  inline void clear_iremianrefreshtimes();
  static const int kIRemianRefreshTimesFieldNumber = 7;
  inline ::google::protobuf::int32 iremianrefreshtimes() const;
  inline void set_iremianrefreshtimes(::google::protobuf::int32 value);

  // optional int32 iTotalRemainRefreshTimes = 8;
  inline bool has_itotalremainrefreshtimes() const;
  inline void clear_itotalremainrefreshtimes();
  static const int kITotalRemainRefreshTimesFieldNumber = 8;
  inline ::google::protobuf::int32 itotalremainrefreshtimes() const;
  inline void set_itotalremainrefreshtimes(::google::protobuf::int32 value);

  // required int32 iLevelID = 9;
  inline bool has_ilevelid() const;
  inline void clear_ilevelid();
  static const int kILevelIDFieldNumber = 9;
  inline ::google::protobuf::int32 ilevelid() const;
  inline void set_ilevelid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_MANOR_TIEJIANGPU_QUERY_SC)
 private:
  inline void set_has_bisbulid();
  inline void clear_has_bisbulid();
  inline void set_has_ibulidremainsecond();
  inline void clear_has_ibulidremainsecond();
  inline void set_has_bisproduct();
  inline void clear_has_bisproduct();
  inline void set_has_irefreshcost();
  inline void clear_has_irefreshcost();
  inline void set_has_iproductreaminsecond();
  inline void clear_has_iproductreaminsecond();
  inline void set_has_iremianrefreshtimes();
  inline void clear_has_iremianrefreshtimes();
  inline void set_has_itotalremainrefreshtimes();
  inline void clear_has_itotalremainrefreshtimes();
  inline void set_has_ilevelid();
  inline void clear_has_ilevelid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ibulidremainsecond_;
  bool bisbulid_;
  bool bisproduct_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::ManorTieJiangPuItemBox > szmanortiejiangpuitembox_;
  ::google::protobuf::int32 irefreshcost_;
  ::google::protobuf::int32 iproductreaminsecond_;
  ::google::protobuf::int32 iremianrefreshtimes_;
  ::google::protobuf::int32 itotalremainrefreshtimes_;
  ::google::protobuf::int32 ilevelid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_MANOR_TIEJIANGPU_QUERY_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS : public ::google::protobuf::Message {
 public:
  CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS();
  virtual ~CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS();

  CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS(const CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS& from);

  inline CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS& operator=(const CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS& default_instance();

  void Swap(CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS* other);

  // implements Message ----------------------------------------------

  CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS& from);
  void MergeFrom(const CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iBoxIndex = 1;
  inline bool has_iboxindex() const;
  inline void clear_iboxindex();
  static const int kIBoxIndexFieldNumber = 1;
  inline ::google::protobuf::int32 iboxindex() const;
  inline void set_iboxindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS)
 private:
  inline void set_has_iboxindex();
  inline void clear_has_iboxindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iboxindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS* default_instance_;
};
// -------------------------------------------------------------------

class ManorLootLog : public ::google::protobuf::Message {
 public:
  ManorLootLog();
  virtual ~ManorLootLog();

  ManorLootLog(const ManorLootLog& from);

  inline ManorLootLog& operator=(const ManorLootLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManorLootLog& default_instance();

  void Swap(ManorLootLog* other);

  // implements Message ----------------------------------------------

  ManorLootLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManorLootLog& from);
  void MergeFrom(const ManorLootLog& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.PBPkRole attacker = 1;
  inline bool has_attacker() const;
  inline void clear_attacker();
  static const int kAttackerFieldNumber = 1;
  inline const ::GSProto::PBPkRole& attacker() const;
  inline ::GSProto::PBPkRole* mutable_attacker();
  inline ::GSProto::PBPkRole* release_attacker();
  inline void set_allocated_attacker(::GSProto::PBPkRole* attacker);

  // required int32 bAttackerWin = 2;
  inline bool has_battackerwin() const;
  inline void clear_battackerwin();
  static const int kBAttackerWinFieldNumber = 2;
  inline ::google::protobuf::int32 battackerwin() const;
  inline void set_battackerwin(::google::protobuf::int32 value);

  // required string strAttackerName = 3;
  inline bool has_strattackername() const;
  inline void clear_strattackername();
  static const int kStrAttackerNameFieldNumber = 3;
  inline const ::std::string& strattackername() const;
  inline void set_strattackername(const ::std::string& value);
  inline void set_strattackername(const char* value);
  inline void set_strattackername(const char* value, size_t size);
  inline ::std::string* mutable_strattackername();
  inline ::std::string* release_strattackername();
  inline void set_allocated_strattackername(::std::string* strattackername);

  // optional .GSProto.FightAwardResult award = 4;
  inline bool has_award() const;
  inline void clear_award();
  static const int kAwardFieldNumber = 4;
  inline const ::GSProto::FightAwardResult& award() const;
  inline ::GSProto::FightAwardResult* mutable_award();
  inline ::GSProto::FightAwardResult* release_award();
  inline void set_allocated_award(::GSProto::FightAwardResult* award);

  // @@protoc_insertion_point(class_scope:GSProto.ManorLootLog)
 private:
  inline void set_has_attacker();
  inline void clear_has_attacker();
  inline void set_has_battackerwin();
  inline void clear_has_battackerwin();
  inline void set_has_strattackername();
  inline void clear_has_strattackername();
  inline void set_has_award();
  inline void clear_has_award();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::PBPkRole* attacker_;
  ::std::string* strattackername_;
  ::GSProto::FightAwardResult* award_;
  ::google::protobuf::int32 battackerwin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static ManorLootLog* default_instance_;
};
// -------------------------------------------------------------------

class CMD_MANOR_QUERY_LOG_SC : public ::google::protobuf::Message {
 public:
  CMD_MANOR_QUERY_LOG_SC();
  virtual ~CMD_MANOR_QUERY_LOG_SC();

  CMD_MANOR_QUERY_LOG_SC(const CMD_MANOR_QUERY_LOG_SC& from);

  inline CMD_MANOR_QUERY_LOG_SC& operator=(const CMD_MANOR_QUERY_LOG_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_MANOR_QUERY_LOG_SC& default_instance();

  void Swap(CMD_MANOR_QUERY_LOG_SC* other);

  // implements Message ----------------------------------------------

  CMD_MANOR_QUERY_LOG_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_MANOR_QUERY_LOG_SC& from);
  void MergeFrom(const CMD_MANOR_QUERY_LOG_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.ManorLootLog szManorLootLog = 1;
  inline int szmanorlootlog_size() const;
  inline void clear_szmanorlootlog();
  static const int kSzManorLootLogFieldNumber = 1;
  inline const ::GSProto::ManorLootLog& szmanorlootlog(int index) const;
  inline ::GSProto::ManorLootLog* mutable_szmanorlootlog(int index);
  inline ::GSProto::ManorLootLog* add_szmanorlootlog();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ManorLootLog >&
      szmanorlootlog() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::ManorLootLog >*
      mutable_szmanorlootlog();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_MANOR_QUERY_LOG_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::ManorLootLog > szmanorlootlog_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_MANOR_QUERY_LOG_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_MANOR_REVENGE_CS : public ::google::protobuf::Message {
 public:
  CMD_MANOR_REVENGE_CS();
  virtual ~CMD_MANOR_REVENGE_CS();

  CMD_MANOR_REVENGE_CS(const CMD_MANOR_REVENGE_CS& from);

  inline CMD_MANOR_REVENGE_CS& operator=(const CMD_MANOR_REVENGE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_MANOR_REVENGE_CS& default_instance();

  void Swap(CMD_MANOR_REVENGE_CS* other);

  // implements Message ----------------------------------------------

  CMD_MANOR_REVENGE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_MANOR_REVENGE_CS& from);
  void MergeFrom(const CMD_MANOR_REVENGE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.PBPkRole enemy = 1;
  inline bool has_enemy() const;
  inline void clear_enemy();
  static const int kEnemyFieldNumber = 1;
  inline const ::GSProto::PBPkRole& enemy() const;
  inline ::GSProto::PBPkRole* mutable_enemy();
  inline ::GSProto::PBPkRole* release_enemy();
  inline void set_allocated_enemy(::GSProto::PBPkRole* enemy);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_MANOR_REVENGE_CS)
 private:
  inline void set_has_enemy();
  inline void clear_has_enemy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::PBPkRole* enemy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_MANOR_REVENGE_CS* default_instance_;
};
// -------------------------------------------------------------------

class BeLootActorInfo : public ::google::protobuf::Message {
 public:
  BeLootActorInfo();
  virtual ~BeLootActorInfo();

  BeLootActorInfo(const BeLootActorInfo& from);

  inline BeLootActorInfo& operator=(const BeLootActorInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BeLootActorInfo& default_instance();

  void Swap(BeLootActorInfo* other);

  // implements Message ----------------------------------------------

  BeLootActorInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BeLootActorInfo& from);
  void MergeFrom(const BeLootActorInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strActorName = 1;
  inline bool has_stractorname() const;
  inline void clear_stractorname();
  static const int kStrActorNameFieldNumber = 1;
  inline const ::std::string& stractorname() const;
  inline void set_stractorname(const ::std::string& value);
  inline void set_stractorname(const char* value);
  inline void set_stractorname(const char* value, size_t size);
  inline ::std::string* mutable_stractorname();
  inline ::std::string* release_stractorname();
  inline void set_allocated_stractorname(::std::string* stractorname);

  // required int32 iActorLevel = 2;
  inline bool has_iactorlevel() const;
  inline void clear_iactorlevel();
  static const int kIActorLevelFieldNumber = 2;
  inline ::google::protobuf::int32 iactorlevel() const;
  inline void set_iactorlevel(::google::protobuf::int32 value);

  // required int32 iFightValue = 3;
  inline bool has_ifightvalue() const;
  inline void clear_ifightvalue();
  static const int kIFightValueFieldNumber = 3;
  inline ::google::protobuf::int32 ifightvalue() const;
  inline void set_ifightvalue(::google::protobuf::int32 value);

  // required int32 iHeadID = 4;
  inline bool has_iheadid() const;
  inline void clear_iheadid();
  static const int kIHeadIDFieldNumber = 4;
  inline ::google::protobuf::int32 iheadid() const;
  inline void set_iheadid(::google::protobuf::int32 value);

  // required string legionName = 5;
  inline bool has_legionname() const;
  inline void clear_legionname();
  static const int kLegionNameFieldNumber = 5;
  inline const ::std::string& legionname() const;
  inline void set_legionname(const ::std::string& value);
  inline void set_legionname(const char* value);
  inline void set_legionname(const char* value, size_t size);
  inline ::std::string* mutable_legionname();
  inline ::std::string* release_legionname();
  inline void set_allocated_legionname(::std::string* legionname);

  // @@protoc_insertion_point(class_scope:GSProto.BeLootActorInfo)
 private:
  inline void set_has_stractorname();
  inline void clear_has_stractorname();
  inline void set_has_iactorlevel();
  inline void clear_has_iactorlevel();
  inline void set_has_ifightvalue();
  inline void clear_has_ifightvalue();
  inline void set_has_iheadid();
  inline void clear_has_iheadid();
  inline void set_has_legionname();
  inline void clear_has_legionname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* stractorname_;
  ::google::protobuf::int32 iactorlevel_;
  ::google::protobuf::int32 ifightvalue_;
  ::std::string* legionname_;
  ::google::protobuf::int32 iheadid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static BeLootActorInfo* default_instance_;
};
// -------------------------------------------------------------------

class ManorEnemyHeroFormation : public ::google::protobuf::Message {
 public:
  ManorEnemyHeroFormation();
  virtual ~ManorEnemyHeroFormation();

  ManorEnemyHeroFormation(const ManorEnemyHeroFormation& from);

  inline ManorEnemyHeroFormation& operator=(const ManorEnemyHeroFormation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManorEnemyHeroFormation& default_instance();

  void Swap(ManorEnemyHeroFormation* other);

  // implements Message ----------------------------------------------

  ManorEnemyHeroFormation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ManorEnemyHeroFormation& from);
  void MergeFrom(const ManorEnemyHeroFormation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iPos = 1;
  inline bool has_ipos() const;
  inline void clear_ipos();
  static const int kIPosFieldNumber = 1;
  inline ::google::protobuf::int32 ipos() const;
  inline void set_ipos(::google::protobuf::int32 value);

  // required int32 iBaseId = 2;
  inline bool has_ibaseid() const;
  inline void clear_ibaseid();
  static const int kIBaseIdFieldNumber = 2;
  inline ::google::protobuf::int32 ibaseid() const;
  inline void set_ibaseid(::google::protobuf::int32 value);

  // required int32 iLevelStep = 3;
  inline bool has_ilevelstep() const;
  inline void clear_ilevelstep();
  static const int kILevelStepFieldNumber = 3;
  inline ::google::protobuf::int32 ilevelstep() const;
  inline void set_ilevelstep(::google::protobuf::int32 value);

  // required int32 iLevel = 4;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 4;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // required int32 iquality = 5;
  inline bool has_iquality() const;
  inline void clear_iquality();
  static const int kIqualityFieldNumber = 5;
  inline ::google::protobuf::int32 iquality() const;
  inline void set_iquality(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.ManorEnemyHeroFormation)
 private:
  inline void set_has_ipos();
  inline void clear_has_ipos();
  inline void set_has_ibaseid();
  inline void clear_has_ibaseid();
  inline void set_has_ilevelstep();
  inline void clear_has_ilevelstep();
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_iquality();
  inline void clear_has_iquality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ipos_;
  ::google::protobuf::int32 ibaseid_;
  ::google::protobuf::int32 ilevelstep_;
  ::google::protobuf::int32 ilevel_;
  ::google::protobuf::int32 iquality_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static ManorEnemyHeroFormation* default_instance_;
};
// -------------------------------------------------------------------

class OtherManorResDetail : public ::google::protobuf::Message {
 public:
  OtherManorResDetail();
  virtual ~OtherManorResDetail();

  OtherManorResDetail(const OtherManorResDetail& from);

  inline OtherManorResDetail& operator=(const OtherManorResDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OtherManorResDetail& default_instance();

  void Swap(OtherManorResDetail* other);

  // implements Message ----------------------------------------------

  OtherManorResDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OtherManorResDetail& from);
  void MergeFrom(const OtherManorResDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iResId = 1;
  inline bool has_iresid() const;
  inline void clear_iresid();
  static const int kIResIdFieldNumber = 1;
  inline ::google::protobuf::int32 iresid() const;
  inline void set_iresid(::google::protobuf::int32 value);

  // required int32 iResLevel = 2;
  inline bool has_ireslevel() const;
  inline void clear_ireslevel();
  static const int kIResLevelFieldNumber = 2;
  inline ::google::protobuf::int32 ireslevel() const;
  inline void set_ireslevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.OtherManorResDetail)
 private:
  inline void set_has_iresid();
  inline void clear_has_iresid();
  inline void set_has_ireslevel();
  inline void clear_has_ireslevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iresid_;
  ::google::protobuf::int32 ireslevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static OtherManorResDetail* default_instance_;
};
// -------------------------------------------------------------------

class CMD_MANOR_REQUEST_LOOT_SC : public ::google::protobuf::Message {
 public:
  CMD_MANOR_REQUEST_LOOT_SC();
  virtual ~CMD_MANOR_REQUEST_LOOT_SC();

  CMD_MANOR_REQUEST_LOOT_SC(const CMD_MANOR_REQUEST_LOOT_SC& from);

  inline CMD_MANOR_REQUEST_LOOT_SC& operator=(const CMD_MANOR_REQUEST_LOOT_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_MANOR_REQUEST_LOOT_SC& default_instance();

  void Swap(CMD_MANOR_REQUEST_LOOT_SC* other);

  // implements Message ----------------------------------------------

  CMD_MANOR_REQUEST_LOOT_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_MANOR_REQUEST_LOOT_SC& from);
  void MergeFrom(const CMD_MANOR_REQUEST_LOOT_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.BeLootActorInfo beLootActorInfo = 1;
  inline bool has_belootactorinfo() const;
  inline void clear_belootactorinfo();
  static const int kBeLootActorInfoFieldNumber = 1;
  inline const ::GSProto::BeLootActorInfo& belootactorinfo() const;
  inline ::GSProto::BeLootActorInfo* mutable_belootactorinfo();
  inline ::GSProto::BeLootActorInfo* release_belootactorinfo();
  inline void set_allocated_belootactorinfo(::GSProto::BeLootActorInfo* belootactorinfo);

  // required int32 iCanLootSilver = 2;
  inline bool has_icanlootsilver() const;
  inline void clear_icanlootsilver();
  static const int kICanLootSilverFieldNumber = 2;
  inline ::google::protobuf::int32 icanlootsilver() const;
  inline void set_icanlootsilver(::google::protobuf::int32 value);

  // required int32 iCanLootHeroExp = 3;
  inline bool has_icanlootheroexp() const;
  inline void clear_icanlootheroexp();
  static const int kICanLootHeroExpFieldNumber = 3;
  inline ::google::protobuf::int32 icanlootheroexp() const;
  inline void set_icanlootheroexp(::google::protobuf::int32 value);

  // repeated .GSProto.ManorEnemyHeroFormation szEnemyHeroFormation = 4;
  inline int szenemyheroformation_size() const;
  inline void clear_szenemyheroformation();
  static const int kSzEnemyHeroFormationFieldNumber = 4;
  inline const ::GSProto::ManorEnemyHeroFormation& szenemyheroformation(int index) const;
  inline ::GSProto::ManorEnemyHeroFormation* mutable_szenemyheroformation(int index);
  inline ::GSProto::ManorEnemyHeroFormation* add_szenemyheroformation();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ManorEnemyHeroFormation >&
      szenemyheroformation() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::ManorEnemyHeroFormation >*
      mutable_szenemyheroformation();

  // required int32 iRefreshCost = 5;
  inline bool has_irefreshcost() const;
  inline void clear_irefreshcost();
  static const int kIRefreshCostFieldNumber = 5;
  inline ::google::protobuf::int32 irefreshcost() const;
  inline void set_irefreshcost(::google::protobuf::int32 value);

  // required int32 iLootCostVigor = 6;
  inline bool has_ilootcostvigor() const;
  inline void clear_ilootcostvigor();
  static const int kILootCostVigorFieldNumber = 6;
  inline ::google::protobuf::int32 ilootcostvigor() const;
  inline void set_ilootcostvigor(::google::protobuf::int32 value);

  // required .GSProto.PBPkRole enemy = 7;
  inline bool has_enemy() const;
  inline void clear_enemy();
  static const int kEnemyFieldNumber = 7;
  inline const ::GSProto::PBPkRole& enemy() const;
  inline ::GSProto::PBPkRole* mutable_enemy();
  inline ::GSProto::PBPkRole* release_enemy();
  inline void set_allocated_enemy(::GSProto::PBPkRole* enemy);

  // repeated .GSProto.OtherManorResDetail silverRes = 8;
  inline int silverres_size() const;
  inline void clear_silverres();
  static const int kSilverResFieldNumber = 8;
  inline const ::GSProto::OtherManorResDetail& silverres(int index) const;
  inline ::GSProto::OtherManorResDetail* mutable_silverres(int index);
  inline ::GSProto::OtherManorResDetail* add_silverres();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::OtherManorResDetail >&
      silverres() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::OtherManorResDetail >*
      mutable_silverres();

  // repeated .GSProto.OtherManorResDetail heroExpRes = 9;
  inline int heroexpres_size() const;
  inline void clear_heroexpres();
  static const int kHeroExpResFieldNumber = 9;
  inline const ::GSProto::OtherManorResDetail& heroexpres(int index) const;
  inline ::GSProto::OtherManorResDetail* mutable_heroexpres(int index);
  inline ::GSProto::OtherManorResDetail* add_heroexpres();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::OtherManorResDetail >&
      heroexpres() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::OtherManorResDetail >*
      mutable_heroexpres();

  // required .GSProto.OtherManorResDetail tieJiangyPu = 10;
  inline bool has_tiejiangypu() const;
  inline void clear_tiejiangypu();
  static const int kTieJiangyPuFieldNumber = 10;
  inline const ::GSProto::OtherManorResDetail& tiejiangypu() const;
  inline ::GSProto::OtherManorResDetail* mutable_tiejiangypu();
  inline ::GSProto::OtherManorResDetail* release_tiejiangypu();
  inline void set_allocated_tiejiangypu(::GSProto::OtherManorResDetail* tiejiangypu);

  // required .GSProto.OtherManorResDetail wuHunDian = 11;
  inline bool has_wuhundian() const;
  inline void clear_wuhundian();
  static const int kWuHunDianFieldNumber = 11;
  inline const ::GSProto::OtherManorResDetail& wuhundian() const;
  inline ::GSProto::OtherManorResDetail* mutable_wuhundian();
  inline ::GSProto::OtherManorResDetail* release_wuhundian();
  inline void set_allocated_wuhundian(::GSProto::OtherManorResDetail* wuhundian);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_MANOR_REQUEST_LOOT_SC)
 private:
  inline void set_has_belootactorinfo();
  inline void clear_has_belootactorinfo();
  inline void set_has_icanlootsilver();
  inline void clear_has_icanlootsilver();
  inline void set_has_icanlootheroexp();
  inline void clear_has_icanlootheroexp();
  inline void set_has_irefreshcost();
  inline void clear_has_irefreshcost();
  inline void set_has_ilootcostvigor();
  inline void clear_has_ilootcostvigor();
  inline void set_has_enemy();
  inline void clear_has_enemy();
  inline void set_has_tiejiangypu();
  inline void clear_has_tiejiangypu();
  inline void set_has_wuhundian();
  inline void clear_has_wuhundian();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::BeLootActorInfo* belootactorinfo_;
  ::google::protobuf::int32 icanlootsilver_;
  ::google::protobuf::int32 icanlootheroexp_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::ManorEnemyHeroFormation > szenemyheroformation_;
  ::google::protobuf::int32 irefreshcost_;
  ::google::protobuf::int32 ilootcostvigor_;
  ::GSProto::PBPkRole* enemy_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::OtherManorResDetail > silverres_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::OtherManorResDetail > heroexpres_;
  ::GSProto::OtherManorResDetail* tiejiangypu_;
  ::GSProto::OtherManorResDetail* wuhundian_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_MANOR_REQUEST_LOOT_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_MANOR_REQUEST_LOOT_BATTLE_CS : public ::google::protobuf::Message {
 public:
  CMD_MANOR_REQUEST_LOOT_BATTLE_CS();
  virtual ~CMD_MANOR_REQUEST_LOOT_BATTLE_CS();

  CMD_MANOR_REQUEST_LOOT_BATTLE_CS(const CMD_MANOR_REQUEST_LOOT_BATTLE_CS& from);

  inline CMD_MANOR_REQUEST_LOOT_BATTLE_CS& operator=(const CMD_MANOR_REQUEST_LOOT_BATTLE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_MANOR_REQUEST_LOOT_BATTLE_CS& default_instance();

  void Swap(CMD_MANOR_REQUEST_LOOT_BATTLE_CS* other);

  // implements Message ----------------------------------------------

  CMD_MANOR_REQUEST_LOOT_BATTLE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_MANOR_REQUEST_LOOT_BATTLE_CS& from);
  void MergeFrom(const CMD_MANOR_REQUEST_LOOT_BATTLE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.PBPkRole enemy = 1;
  inline bool has_enemy() const;
  inline void clear_enemy();
  static const int kEnemyFieldNumber = 1;
  inline const ::GSProto::PBPkRole& enemy() const;
  inline ::GSProto::PBPkRole* mutable_enemy();
  inline ::GSProto::PBPkRole* release_enemy();
  inline void set_allocated_enemy(::GSProto::PBPkRole* enemy);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_MANOR_REQUEST_LOOT_BATTLE_CS)
 private:
  inline void set_has_enemy();
  inline void clear_has_enemy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::PBPkRole* enemy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_MANOR_REQUEST_LOOT_BATTLE_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_HERO_CALLHERO_CS : public ::google::protobuf::Message {
 public:
  CMD_HERO_CALLHERO_CS();
  virtual ~CMD_HERO_CALLHERO_CS();

  CMD_HERO_CALLHERO_CS(const CMD_HERO_CALLHERO_CS& from);

  inline CMD_HERO_CALLHERO_CS& operator=(const CMD_HERO_CALLHERO_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HERO_CALLHERO_CS& default_instance();

  void Swap(CMD_HERO_CALLHERO_CS* other);

  // implements Message ----------------------------------------------

  CMD_HERO_CALLHERO_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_HERO_CALLHERO_CS& from);
  void MergeFrom(const CMD_HERO_CALLHERO_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iHeorID = 1;
  inline bool has_iheorid() const;
  inline void clear_iheorid();
  static const int kIHeorIDFieldNumber = 1;
  inline ::google::protobuf::int32 iheorid() const;
  inline void set_iheorid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_HERO_CALLHERO_CS)
 private:
  inline void set_has_iheorid();
  inline void clear_has_iheorid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iheorid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_HERO_CALLHERO_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_HERO_CALLHERO_SC : public ::google::protobuf::Message {
 public:
  CMD_HERO_CALLHERO_SC();
  virtual ~CMD_HERO_CALLHERO_SC();

  CMD_HERO_CALLHERO_SC(const CMD_HERO_CALLHERO_SC& from);

  inline CMD_HERO_CALLHERO_SC& operator=(const CMD_HERO_CALLHERO_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HERO_CALLHERO_SC& default_instance();

  void Swap(CMD_HERO_CALLHERO_SC* other);

  // implements Message ----------------------------------------------

  CMD_HERO_CALLHERO_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_HERO_CALLHERO_SC& from);
  void MergeFrom(const CMD_HERO_CALLHERO_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iHeroID = 1;
  inline bool has_iheroid() const;
  inline void clear_iheroid();
  static const int kIHeroIDFieldNumber = 1;
  inline ::google::protobuf::int32 iheroid() const;
  inline void set_iheroid(::google::protobuf::int32 value);

  // required uint32 dwNewHeroID = 2;
  inline bool has_dwnewheroid() const;
  inline void clear_dwnewheroid();
  static const int kDwNewHeroIDFieldNumber = 2;
  inline ::google::protobuf::uint32 dwnewheroid() const;
  inline void set_dwnewheroid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_HERO_CALLHERO_SC)
 private:
  inline void set_has_iheroid();
  inline void clear_has_iheroid();
  inline void set_has_dwnewheroid();
  inline void clear_has_dwnewheroid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iheroid_;
  ::google::protobuf::uint32 dwnewheroid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_HERO_CALLHERO_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_HERO_EQUIP_FAVORITE_CS : public ::google::protobuf::Message {
 public:
  CMD_HERO_EQUIP_FAVORITE_CS();
  virtual ~CMD_HERO_EQUIP_FAVORITE_CS();

  CMD_HERO_EQUIP_FAVORITE_CS(const CMD_HERO_EQUIP_FAVORITE_CS& from);

  inline CMD_HERO_EQUIP_FAVORITE_CS& operator=(const CMD_HERO_EQUIP_FAVORITE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HERO_EQUIP_FAVORITE_CS& default_instance();

  void Swap(CMD_HERO_EQUIP_FAVORITE_CS* other);

  // implements Message ----------------------------------------------

  CMD_HERO_EQUIP_FAVORITE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_HERO_EQUIP_FAVORITE_CS& from);
  void MergeFrom(const CMD_HERO_EQUIP_FAVORITE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // required int32 iItemID = 2;
  inline bool has_iitemid() const;
  inline void clear_iitemid();
  static const int kIItemIDFieldNumber = 2;
  inline ::google::protobuf::int32 iitemid() const;
  inline void set_iitemid(::google::protobuf::int32 value);

  // required int32 iPos = 3;
  inline bool has_ipos() const;
  inline void clear_ipos();
  static const int kIPosFieldNumber = 3;
  inline ::google::protobuf::int32 ipos() const;
  inline void set_ipos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_HERO_EQUIP_FAVORITE_CS)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();
  inline void set_has_iitemid();
  inline void clear_has_iitemid();
  inline void set_has_ipos();
  inline void clear_has_ipos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwheroobjectid_;
  ::google::protobuf::int32 iitemid_;
  ::google::protobuf::int32 ipos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_HERO_EQUIP_FAVORITE_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_HERO_EQUIP_FAVORITE_SC : public ::google::protobuf::Message {
 public:
  CMD_HERO_EQUIP_FAVORITE_SC();
  virtual ~CMD_HERO_EQUIP_FAVORITE_SC();

  CMD_HERO_EQUIP_FAVORITE_SC(const CMD_HERO_EQUIP_FAVORITE_SC& from);

  inline CMD_HERO_EQUIP_FAVORITE_SC& operator=(const CMD_HERO_EQUIP_FAVORITE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HERO_EQUIP_FAVORITE_SC& default_instance();

  void Swap(CMD_HERO_EQUIP_FAVORITE_SC* other);

  // implements Message ----------------------------------------------

  CMD_HERO_EQUIP_FAVORITE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_HERO_EQUIP_FAVORITE_SC& from);
  void MergeFrom(const CMD_HERO_EQUIP_FAVORITE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // required bool bResult = 2;
  inline bool has_bresult() const;
  inline void clear_bresult();
  static const int kBResultFieldNumber = 2;
  inline bool bresult() const;
  inline void set_bresult(bool value);

  // required int32 iItemID = 3;
  inline bool has_iitemid() const;
  inline void clear_iitemid();
  static const int kIItemIDFieldNumber = 3;
  inline ::google::protobuf::int32 iitemid() const;
  inline void set_iitemid(::google::protobuf::int32 value);

  // required int32 iPos = 4;
  inline bool has_ipos() const;
  inline void clear_ipos();
  static const int kIPosFieldNumber = 4;
  inline ::google::protobuf::int32 ipos() const;
  inline void set_ipos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_HERO_EQUIP_FAVORITE_SC)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();
  inline void set_has_bresult();
  inline void clear_has_bresult();
  inline void set_has_iitemid();
  inline void clear_has_iitemid();
  inline void set_has_ipos();
  inline void clear_has_ipos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwheroobjectid_;
  bool bresult_;
  ::google::protobuf::int32 iitemid_;
  ::google::protobuf::int32 ipos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_HERO_EQUIP_FAVORITE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_HERO_COMBINE_FAVORITE_CS : public ::google::protobuf::Message {
 public:
  CMD_HERO_COMBINE_FAVORITE_CS();
  virtual ~CMD_HERO_COMBINE_FAVORITE_CS();

  CMD_HERO_COMBINE_FAVORITE_CS(const CMD_HERO_COMBINE_FAVORITE_CS& from);

  inline CMD_HERO_COMBINE_FAVORITE_CS& operator=(const CMD_HERO_COMBINE_FAVORITE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HERO_COMBINE_FAVORITE_CS& default_instance();

  void Swap(CMD_HERO_COMBINE_FAVORITE_CS* other);

  // implements Message ----------------------------------------------

  CMD_HERO_COMBINE_FAVORITE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_HERO_COMBINE_FAVORITE_CS& from);
  void MergeFrom(const CMD_HERO_COMBINE_FAVORITE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iItemID = 1;
  inline bool has_iitemid() const;
  inline void clear_iitemid();
  static const int kIItemIDFieldNumber = 1;
  inline ::google::protobuf::int32 iitemid() const;
  inline void set_iitemid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_HERO_COMBINE_FAVORITE_CS)
 private:
  inline void set_has_iitemid();
  inline void clear_has_iitemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iitemid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_HERO_COMBINE_FAVORITE_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_HERO_COMBINE_FAVORITE_SC : public ::google::protobuf::Message {
 public:
  CMD_HERO_COMBINE_FAVORITE_SC();
  virtual ~CMD_HERO_COMBINE_FAVORITE_SC();

  CMD_HERO_COMBINE_FAVORITE_SC(const CMD_HERO_COMBINE_FAVORITE_SC& from);

  inline CMD_HERO_COMBINE_FAVORITE_SC& operator=(const CMD_HERO_COMBINE_FAVORITE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HERO_COMBINE_FAVORITE_SC& default_instance();

  void Swap(CMD_HERO_COMBINE_FAVORITE_SC* other);

  // implements Message ----------------------------------------------

  CMD_HERO_COMBINE_FAVORITE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_HERO_COMBINE_FAVORITE_SC& from);
  void MergeFrom(const CMD_HERO_COMBINE_FAVORITE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bResult = 1;
  inline bool has_bresult() const;
  inline void clear_bresult();
  static const int kBResultFieldNumber = 1;
  inline bool bresult() const;
  inline void set_bresult(bool value);

  // required int32 iItemID = 2;
  inline bool has_iitemid() const;
  inline void clear_iitemid();
  static const int kIItemIDFieldNumber = 2;
  inline ::google::protobuf::int32 iitemid() const;
  inline void set_iitemid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_HERO_COMBINE_FAVORITE_SC)
 private:
  inline void set_has_bresult();
  inline void clear_has_bresult();
  inline void set_has_iitemid();
  inline void clear_has_iitemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool bresult_;
  ::google::protobuf::int32 iitemid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_HERO_COMBINE_FAVORITE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_HERO_QUALITY_UP_CS : public ::google::protobuf::Message {
 public:
  CMD_HERO_QUALITY_UP_CS();
  virtual ~CMD_HERO_QUALITY_UP_CS();

  CMD_HERO_QUALITY_UP_CS(const CMD_HERO_QUALITY_UP_CS& from);

  inline CMD_HERO_QUALITY_UP_CS& operator=(const CMD_HERO_QUALITY_UP_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HERO_QUALITY_UP_CS& default_instance();

  void Swap(CMD_HERO_QUALITY_UP_CS* other);

  // implements Message ----------------------------------------------

  CMD_HERO_QUALITY_UP_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_HERO_QUALITY_UP_CS& from);
  void MergeFrom(const CMD_HERO_QUALITY_UP_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_HERO_QUALITY_UP_CS)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwheroobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_HERO_QUALITY_UP_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_HERO_QUALITY_UP_SC : public ::google::protobuf::Message {
 public:
  CMD_HERO_QUALITY_UP_SC();
  virtual ~CMD_HERO_QUALITY_UP_SC();

  CMD_HERO_QUALITY_UP_SC(const CMD_HERO_QUALITY_UP_SC& from);

  inline CMD_HERO_QUALITY_UP_SC& operator=(const CMD_HERO_QUALITY_UP_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_HERO_QUALITY_UP_SC& default_instance();

  void Swap(CMD_HERO_QUALITY_UP_SC* other);

  // implements Message ----------------------------------------------

  CMD_HERO_QUALITY_UP_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_HERO_QUALITY_UP_SC& from);
  void MergeFrom(const CMD_HERO_QUALITY_UP_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // repeated .GSProto.PropItem szPropAddValueList = 2;
  inline int szpropaddvaluelist_size() const;
  inline void clear_szpropaddvaluelist();
  static const int kSzPropAddValueListFieldNumber = 2;
  inline const ::GSProto::PropItem& szpropaddvaluelist(int index) const;
  inline ::GSProto::PropItem* mutable_szpropaddvaluelist(int index);
  inline ::GSProto::PropItem* add_szpropaddvaluelist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
      szpropaddvaluelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
      mutable_szpropaddvaluelist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_HERO_QUALITY_UP_SC)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem > szpropaddvaluelist_;
  ::google::protobuf::uint32 dwheroobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_HERO_QUALITY_UP_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_SHOPSYSTEM_RANDITEMORHERO_CS : public ::google::protobuf::Message {
 public:
  CMD_SHOPSYSTEM_RANDITEMORHERO_CS();
  virtual ~CMD_SHOPSYSTEM_RANDITEMORHERO_CS();

  CMD_SHOPSYSTEM_RANDITEMORHERO_CS(const CMD_SHOPSYSTEM_RANDITEMORHERO_CS& from);

  inline CMD_SHOPSYSTEM_RANDITEMORHERO_CS& operator=(const CMD_SHOPSYSTEM_RANDITEMORHERO_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_SHOPSYSTEM_RANDITEMORHERO_CS& default_instance();

  void Swap(CMD_SHOPSYSTEM_RANDITEMORHERO_CS* other);

  // implements Message ----------------------------------------------

  CMD_SHOPSYSTEM_RANDITEMORHERO_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_SHOPSYSTEM_RANDITEMORHERO_CS& from);
  void MergeFrom(const CMD_SHOPSYSTEM_RANDITEMORHERO_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.RandomType enType = 1;
  inline bool has_entype() const;
  inline void clear_entype();
  static const int kEnTypeFieldNumber = 1;
  inline ::GSProto::RandomType entype() const;
  inline void set_entype(::GSProto::RandomType value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_SHOPSYSTEM_RANDITEMORHERO_CS)
 private:
  inline void set_has_entype();
  inline void clear_has_entype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int entype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_SHOPSYSTEM_RANDITEMORHERO_CS* default_instance_;
};
// -------------------------------------------------------------------

class RandReturnUnit : public ::google::protobuf::Message {
 public:
  RandReturnUnit();
  virtual ~RandReturnUnit();

  RandReturnUnit(const RandReturnUnit& from);

  inline RandReturnUnit& operator=(const RandReturnUnit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RandReturnUnit& default_instance();

  void Swap(RandReturnUnit* other);

  // implements Message ----------------------------------------------

  RandReturnUnit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RandReturnUnit& from);
  void MergeFrom(const RandReturnUnit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.enRandReturnType enType = 1;
  inline bool has_entype() const;
  inline void clear_entype();
  static const int kEnTypeFieldNumber = 1;
  inline ::GSProto::enRandReturnType entype() const;
  inline void set_entype(::GSProto::enRandReturnType value);

  // required int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 iCount = 3;
  inline bool has_icount() const;
  inline void clear_icount();
  static const int kICountFieldNumber = 3;
  inline ::google::protobuf::int32 icount() const;
  inline void set_icount(::google::protobuf::int32 value);

  // optional int32 iLevelUp = 4;
  inline bool has_ilevelup() const;
  inline void clear_ilevelup();
  static const int kILevelUpFieldNumber = 4;
  inline ::google::protobuf::int32 ilevelup() const;
  inline void set_ilevelup(::google::protobuf::int32 value);

  // optional int32 iHeroId = 5;
  inline bool has_iheroid() const;
  inline void clear_iheroid();
  static const int kIHeroIdFieldNumber = 5;
  inline ::google::protobuf::int32 iheroid() const;
  inline void set_iheroid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.RandReturnUnit)
 private:
  inline void set_has_entype();
  inline void clear_has_entype();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_icount();
  inline void clear_has_icount();
  inline void set_has_ilevelup();
  inline void clear_has_ilevelup();
  inline void set_has_iheroid();
  inline void clear_has_iheroid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int entype_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 icount_;
  ::google::protobuf::int32 ilevelup_;
  ::google::protobuf::int32 iheroid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static RandReturnUnit* default_instance_;
};
// -------------------------------------------------------------------

class CMD_SHOPSYSTEM_RANDITEMORHERO_SC : public ::google::protobuf::Message {
 public:
  CMD_SHOPSYSTEM_RANDITEMORHERO_SC();
  virtual ~CMD_SHOPSYSTEM_RANDITEMORHERO_SC();

  CMD_SHOPSYSTEM_RANDITEMORHERO_SC(const CMD_SHOPSYSTEM_RANDITEMORHERO_SC& from);

  inline CMD_SHOPSYSTEM_RANDITEMORHERO_SC& operator=(const CMD_SHOPSYSTEM_RANDITEMORHERO_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_SHOPSYSTEM_RANDITEMORHERO_SC& default_instance();

  void Swap(CMD_SHOPSYSTEM_RANDITEMORHERO_SC* other);

  // implements Message ----------------------------------------------

  CMD_SHOPSYSTEM_RANDITEMORHERO_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_SHOPSYSTEM_RANDITEMORHERO_SC& from);
  void MergeFrom(const CMD_SHOPSYSTEM_RANDITEMORHERO_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.RandReturnUnit szReturn = 1;
  inline int szreturn_size() const;
  inline void clear_szreturn();
  static const int kSzReturnFieldNumber = 1;
  inline const ::GSProto::RandReturnUnit& szreturn(int index) const;
  inline ::GSProto::RandReturnUnit* mutable_szreturn(int index);
  inline ::GSProto::RandReturnUnit* add_szreturn();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::RandReturnUnit >&
      szreturn() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::RandReturnUnit >*
      mutable_szreturn();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_SHOPSYSTEM_RANDITEMORHERO_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::RandReturnUnit > szreturn_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_SHOPSYSTEM_RANDITEMORHERO_SC* default_instance_;
};
// -------------------------------------------------------------------

class HonerGoodDetail : public ::google::protobuf::Message {
 public:
  HonerGoodDetail();
  virtual ~HonerGoodDetail();

  HonerGoodDetail(const HonerGoodDetail& from);

  inline HonerGoodDetail& operator=(const HonerGoodDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HonerGoodDetail& default_instance();

  void Swap(HonerGoodDetail* other);

  // implements Message ----------------------------------------------

  HonerGoodDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HonerGoodDetail& from);
  void MergeFrom(const HonerGoodDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iGoodId = 1;
  inline bool has_igoodid() const;
  inline void clear_igoodid();
  static const int kIGoodIdFieldNumber = 1;
  inline ::google::protobuf::int32 igoodid() const;
  inline void set_igoodid(::google::protobuf::int32 value);

  // required bool bIsSale = 2;
  inline bool has_bissale() const;
  inline void clear_bissale();
  static const int kBIsSaleFieldNumber = 2;
  inline bool bissale() const;
  inline void set_bissale(bool value);

  // required int32 iIndex = 3;
  inline bool has_iindex() const;
  inline void clear_iindex();
  static const int kIIndexFieldNumber = 3;
  inline ::google::protobuf::int32 iindex() const;
  inline void set_iindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.HonerGoodDetail)
 private:
  inline void set_has_igoodid();
  inline void clear_has_igoodid();
  inline void set_has_bissale();
  inline void clear_has_bissale();
  inline void set_has_iindex();
  inline void clear_has_iindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 igoodid_;
  bool bissale_;
  ::google::protobuf::int32 iindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static HonerGoodDetail* default_instance_;
};
// -------------------------------------------------------------------

class CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC : public ::google::protobuf::Message {
 public:
  CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC();
  virtual ~CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC();

  CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC(const CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC& from);

  inline CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC& operator=(const CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC& default_instance();

  void Swap(CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC* other);

  // implements Message ----------------------------------------------

  CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC& from);
  void MergeFrom(const CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.HonerGoodDetail szGoodList = 1;
  inline int szgoodlist_size() const;
  inline void clear_szgoodlist();
  static const int kSzGoodListFieldNumber = 1;
  inline const ::GSProto::HonerGoodDetail& szgoodlist(int index) const;
  inline ::GSProto::HonerGoodDetail* mutable_szgoodlist(int index);
  inline ::GSProto::HonerGoodDetail* add_szgoodlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HonerGoodDetail >&
      szgoodlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::HonerGoodDetail >*
      mutable_szgoodlist();

  // required bool bIsToday = 2;
  inline bool has_bistoday() const;
  inline void clear_bistoday();
  static const int kBIsTodayFieldNumber = 2;
  inline bool bistoday() const;
  inline void set_bistoday(bool value);

  // required int32 iUpdateMoment = 3;
  inline bool has_iupdatemoment() const;
  inline void clear_iupdatemoment();
  static const int kIUpdateMomentFieldNumber = 3;
  inline ::google::protobuf::int32 iupdatemoment() const;
  inline void set_iupdatemoment(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC)
 private:
  inline void set_has_bistoday();
  inline void clear_has_bistoday();
  inline void set_has_iupdatemoment();
  inline void clear_has_iupdatemoment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::HonerGoodDetail > szgoodlist_;
  bool bistoday_;
  ::google::protobuf::int32 iupdatemoment_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS : public ::google::protobuf::Message {
 public:
  CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS();
  virtual ~CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS();

  CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS(const CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS& from);

  inline CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS& operator=(const CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS& default_instance();

  void Swap(CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS* other);

  // implements Message ----------------------------------------------

  CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS& from);
  void MergeFrom(const CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iIndex = 1;
  inline bool has_iindex() const;
  inline void clear_iindex();
  static const int kIIndexFieldNumber = 1;
  inline ::google::protobuf::int32 iindex() const;
  inline void set_iindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS)
 private:
  inline void set_has_iindex();
  inline void clear_has_iindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_SANGONG_CS : public ::google::protobuf::Message {
 public:
  CMD_QUERY_SANGONG_CS();
  virtual ~CMD_QUERY_SANGONG_CS();

  CMD_QUERY_SANGONG_CS(const CMD_QUERY_SANGONG_CS& from);

  inline CMD_QUERY_SANGONG_CS& operator=(const CMD_QUERY_SANGONG_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_SANGONG_CS& default_instance();

  void Swap(CMD_QUERY_SANGONG_CS* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_SANGONG_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_SANGONG_CS& from);
  void MergeFrom(const CMD_QUERY_SANGONG_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_SANGONG_CS)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwheroobjectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_SANGONG_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_SANGONG_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_SANGONG_SC();
  virtual ~CMD_QUERY_SANGONG_SC();

  CMD_QUERY_SANGONG_SC(const CMD_QUERY_SANGONG_SC& from);

  inline CMD_QUERY_SANGONG_SC& operator=(const CMD_QUERY_SANGONG_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_SANGONG_SC& default_instance();

  void Swap(CMD_QUERY_SANGONG_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_SANGONG_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_SANGONG_SC& from);
  void MergeFrom(const CMD_QUERY_SANGONG_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dwHeroObjectID = 1;
  inline bool has_dwheroobjectid() const;
  inline void clear_dwheroobjectid();
  static const int kDwHeroObjectIDFieldNumber = 1;
  inline ::google::protobuf::uint32 dwheroobjectid() const;
  inline void set_dwheroobjectid(::google::protobuf::uint32 value);

  // required int32 iSilver = 2;
  inline bool has_isilver() const;
  inline void clear_isilver();
  static const int kISilverFieldNumber = 2;
  inline ::google::protobuf::int32 isilver() const;
  inline void set_isilver(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_SANGONG_SC)
 private:
  inline void set_has_dwheroobjectid();
  inline void clear_has_dwheroobjectid();
  inline void set_has_isilver();
  inline void clear_has_isilver();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dwheroobjectid_;
  ::google::protobuf::int32 isilver_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_SANGONG_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_CHAT_CHANNEL_QUERY_SC : public ::google::protobuf::Message {
 public:
  CMD_CHAT_CHANNEL_QUERY_SC();
  virtual ~CMD_CHAT_CHANNEL_QUERY_SC();

  CMD_CHAT_CHANNEL_QUERY_SC(const CMD_CHAT_CHANNEL_QUERY_SC& from);

  inline CMD_CHAT_CHANNEL_QUERY_SC& operator=(const CMD_CHAT_CHANNEL_QUERY_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_CHAT_CHANNEL_QUERY_SC& default_instance();

  void Swap(CMD_CHAT_CHANNEL_QUERY_SC* other);

  // implements Message ----------------------------------------------

  CMD_CHAT_CHANNEL_QUERY_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_CHAT_CHANNEL_QUERY_SC& from);
  void MergeFrom(const CMD_CHAT_CHANNEL_QUERY_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iRemaindTimes = 1;
  inline bool has_iremaindtimes() const;
  inline void clear_iremaindtimes();
  static const int kIRemaindTimesFieldNumber = 1;
  inline ::google::protobuf::int32 iremaindtimes() const;
  inline void set_iremaindtimes(::google::protobuf::int32 value);

  // optional int32 iTotalTimes = 2;
  inline bool has_itotaltimes() const;
  inline void clear_itotaltimes();
  static const int kITotalTimesFieldNumber = 2;
  inline ::google::protobuf::int32 itotaltimes() const;
  inline void set_itotaltimes(::google::protobuf::int32 value);

  // optional int32 iCost = 3;
  inline bool has_icost() const;
  inline void clear_icost();
  static const int kICostFieldNumber = 3;
  inline ::google::protobuf::int32 icost() const;
  inline void set_icost(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_CHAT_CHANNEL_QUERY_SC)
 private:
  inline void set_has_iremaindtimes();
  inline void clear_has_iremaindtimes();
  inline void set_has_itotaltimes();
  inline void clear_has_itotaltimes();
  inline void set_has_icost();
  inline void clear_has_icost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iremaindtimes_;
  ::google::protobuf::int32 itotaltimes_;
  ::google::protobuf::int32 icost_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_CHAT_CHANNEL_QUERY_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_COINTREE_SHAKE_QUERY_CS : public ::google::protobuf::Message {
 public:
  CMD_COINTREE_SHAKE_QUERY_CS();
  virtual ~CMD_COINTREE_SHAKE_QUERY_CS();

  CMD_COINTREE_SHAKE_QUERY_CS(const CMD_COINTREE_SHAKE_QUERY_CS& from);

  inline CMD_COINTREE_SHAKE_QUERY_CS& operator=(const CMD_COINTREE_SHAKE_QUERY_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_COINTREE_SHAKE_QUERY_CS& default_instance();

  void Swap(CMD_COINTREE_SHAKE_QUERY_CS* other);

  // implements Message ----------------------------------------------

  CMD_COINTREE_SHAKE_QUERY_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_COINTREE_SHAKE_QUERY_CS& from);
  void MergeFrom(const CMD_COINTREE_SHAKE_QUERY_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.CoinTreeShakeType enType = 1;
  inline bool has_entype() const;
  inline void clear_entype();
  static const int kEnTypeFieldNumber = 1;
  inline ::GSProto::CoinTreeShakeType entype() const;
  inline void set_entype(::GSProto::CoinTreeShakeType value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_COINTREE_SHAKE_QUERY_CS)
 private:
  inline void set_has_entype();
  inline void clear_has_entype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int entype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_COINTREE_SHAKE_QUERY_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_COINTREE_SHAKE_QUERY_SC : public ::google::protobuf::Message {
 public:
  CMD_COINTREE_SHAKE_QUERY_SC();
  virtual ~CMD_COINTREE_SHAKE_QUERY_SC();

  CMD_COINTREE_SHAKE_QUERY_SC(const CMD_COINTREE_SHAKE_QUERY_SC& from);

  inline CMD_COINTREE_SHAKE_QUERY_SC& operator=(const CMD_COINTREE_SHAKE_QUERY_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_COINTREE_SHAKE_QUERY_SC& default_instance();

  void Swap(CMD_COINTREE_SHAKE_QUERY_SC* other);

  // implements Message ----------------------------------------------

  CMD_COINTREE_SHAKE_QUERY_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_COINTREE_SHAKE_QUERY_SC& from);
  void MergeFrom(const CMD_COINTREE_SHAKE_QUERY_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.CoinTreeDetail detail = 1;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 1;
  inline const ::GSProto::CoinTreeDetail& detail() const;
  inline ::GSProto::CoinTreeDetail* mutable_detail();
  inline ::GSProto::CoinTreeDetail* release_detail();
  inline void set_allocated_detail(::GSProto::CoinTreeDetail* detail);

  // optional int32 iCanShakeTimes = 2;
  inline bool has_icanshaketimes() const;
  inline void clear_icanshaketimes();
  static const int kICanShakeTimesFieldNumber = 2;
  inline ::google::protobuf::int32 icanshaketimes() const;
  inline void set_icanshaketimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_COINTREE_SHAKE_QUERY_SC)
 private:
  inline void set_has_detail();
  inline void clear_has_detail();
  inline void set_has_icanshaketimes();
  inline void clear_has_icanshaketimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::CoinTreeDetail* detail_;
  ::google::protobuf::int32 icanshaketimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_COINTREE_SHAKE_QUERY_SC* default_instance_;
};
// -------------------------------------------------------------------

class CoinTreeShakeResoult : public ::google::protobuf::Message {
 public:
  CoinTreeShakeResoult();
  virtual ~CoinTreeShakeResoult();

  CoinTreeShakeResoult(const CoinTreeShakeResoult& from);

  inline CoinTreeShakeResoult& operator=(const CoinTreeShakeResoult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CoinTreeShakeResoult& default_instance();

  void Swap(CoinTreeShakeResoult* other);

  // implements Message ----------------------------------------------

  CoinTreeShakeResoult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CoinTreeShakeResoult& from);
  void MergeFrom(const CoinTreeShakeResoult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCost = 1;
  inline bool has_icost() const;
  inline void clear_icost();
  static const int kICostFieldNumber = 1;
  inline ::google::protobuf::int32 icost() const;
  inline void set_icost(::google::protobuf::int32 value);

  // required int32 iGet = 2;
  inline bool has_iget() const;
  inline void clear_iget();
  static const int kIGetFieldNumber = 2;
  inline ::google::protobuf::int32 iget() const;
  inline void set_iget(::google::protobuf::int32 value);

  // required int32 iKnock = 3;
  inline bool has_iknock() const;
  inline void clear_iknock();
  static const int kIKnockFieldNumber = 3;
  inline ::google::protobuf::int32 iknock() const;
  inline void set_iknock(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CoinTreeShakeResoult)
 private:
  inline void set_has_icost();
  inline void clear_has_icost();
  inline void set_has_iget();
  inline void clear_has_iget();
  inline void set_has_iknock();
  inline void clear_has_iknock();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 icost_;
  ::google::protobuf::int32 iget_;
  ::google::protobuf::int32 iknock_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CoinTreeShakeResoult* default_instance_;
};
// -------------------------------------------------------------------

class CoinTreeDetail : public ::google::protobuf::Message {
 public:
  CoinTreeDetail();
  virtual ~CoinTreeDetail();

  CoinTreeDetail(const CoinTreeDetail& from);

  inline CoinTreeDetail& operator=(const CoinTreeDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CoinTreeDetail& default_instance();

  void Swap(CoinTreeDetail* other);

  // implements Message ----------------------------------------------

  CoinTreeDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CoinTreeDetail& from);
  void MergeFrom(const CoinTreeDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.CoinTreeShakeType enType = 1;
  inline bool has_entype() const;
  inline void clear_entype();
  static const int kEnTypeFieldNumber = 1;
  inline ::GSProto::CoinTreeShakeType entype() const;
  inline void set_entype(::GSProto::CoinTreeShakeType value);

  // optional int32 iRemaindShakeTimes = 2;
  inline bool has_iremaindshaketimes() const;
  inline void clear_iremaindshaketimes();
  static const int kIRemaindShakeTimesFieldNumber = 2;
  inline ::google::protobuf::int32 iremaindshaketimes() const;
  inline void set_iremaindshaketimes(::google::protobuf::int32 value);

  // optional int32 iTotalShakeTimes = 3;
  inline bool has_itotalshaketimes() const;
  inline void clear_itotalshaketimes();
  static const int kITotalShakeTimesFieldNumber = 3;
  inline ::google::protobuf::int32 itotalshaketimes() const;
  inline void set_itotalshaketimes(::google::protobuf::int32 value);

  // required int32 iCost = 4;
  inline bool has_icost() const;
  inline void clear_icost();
  static const int kICostFieldNumber = 4;
  inline ::google::protobuf::int32 icost() const;
  inline void set_icost(::google::protobuf::int32 value);

  // required int32 iGet = 5;
  inline bool has_iget() const;
  inline void clear_iget();
  static const int kIGetFieldNumber = 5;
  inline ::google::protobuf::int32 iget() const;
  inline void set_iget(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CoinTreeDetail)
 private:
  inline void set_has_entype();
  inline void clear_has_entype();
  inline void set_has_iremaindshaketimes();
  inline void clear_has_iremaindshaketimes();
  inline void set_has_itotalshaketimes();
  inline void clear_has_itotalshaketimes();
  inline void set_has_icost();
  inline void clear_has_icost();
  inline void set_has_iget();
  inline void clear_has_iget();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int entype_;
  ::google::protobuf::int32 iremaindshaketimes_;
  ::google::protobuf::int32 itotalshaketimes_;
  ::google::protobuf::int32 icost_;
  ::google::protobuf::int32 iget_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CoinTreeDetail* default_instance_;
};
// -------------------------------------------------------------------

class CMD_COINTREE_SHAKE_SC : public ::google::protobuf::Message {
 public:
  CMD_COINTREE_SHAKE_SC();
  virtual ~CMD_COINTREE_SHAKE_SC();

  CMD_COINTREE_SHAKE_SC(const CMD_COINTREE_SHAKE_SC& from);

  inline CMD_COINTREE_SHAKE_SC& operator=(const CMD_COINTREE_SHAKE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_COINTREE_SHAKE_SC& default_instance();

  void Swap(CMD_COINTREE_SHAKE_SC* other);

  // implements Message ----------------------------------------------

  CMD_COINTREE_SHAKE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_COINTREE_SHAKE_SC& from);
  void MergeFrom(const CMD_COINTREE_SHAKE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.CoinTreeDetail detail = 1;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 1;
  inline const ::GSProto::CoinTreeDetail& detail() const;
  inline ::GSProto::CoinTreeDetail* mutable_detail();
  inline ::GSProto::CoinTreeDetail* release_detail();
  inline void set_allocated_detail(::GSProto::CoinTreeDetail* detail);

  // repeated .GSProto.CoinTreeShakeResoult szShakeResoult = 2;
  inline int szshakeresoult_size() const;
  inline void clear_szshakeresoult();
  static const int kSzShakeResoultFieldNumber = 2;
  inline const ::GSProto::CoinTreeShakeResoult& szshakeresoult(int index) const;
  inline ::GSProto::CoinTreeShakeResoult* mutable_szshakeresoult(int index);
  inline ::GSProto::CoinTreeShakeResoult* add_szshakeresoult();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::CoinTreeShakeResoult >&
      szshakeresoult() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::CoinTreeShakeResoult >*
      mutable_szshakeresoult();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_COINTREE_SHAKE_SC)
 private:
  inline void set_has_detail();
  inline void clear_has_detail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::CoinTreeDetail* detail_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::CoinTreeShakeResoult > szshakeresoult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_COINTREE_SHAKE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_COINTREE_SHAKE_CS : public ::google::protobuf::Message {
 public:
  CMD_COINTREE_SHAKE_CS();
  virtual ~CMD_COINTREE_SHAKE_CS();

  CMD_COINTREE_SHAKE_CS(const CMD_COINTREE_SHAKE_CS& from);

  inline CMD_COINTREE_SHAKE_CS& operator=(const CMD_COINTREE_SHAKE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_COINTREE_SHAKE_CS& default_instance();

  void Swap(CMD_COINTREE_SHAKE_CS* other);

  // implements Message ----------------------------------------------

  CMD_COINTREE_SHAKE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_COINTREE_SHAKE_CS& from);
  void MergeFrom(const CMD_COINTREE_SHAKE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.CoinTreeShakeType enType = 1;
  inline bool has_entype() const;
  inline void clear_entype();
  static const int kEnTypeFieldNumber = 1;
  inline ::GSProto::CoinTreeShakeType entype() const;
  inline void set_entype(::GSProto::CoinTreeShakeType value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_COINTREE_SHAKE_CS)
 private:
  inline void set_has_entype();
  inline void clear_has_entype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int entype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_COINTREE_SHAKE_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_MANOR_TIEJIANGPU_LEVELUP_SC : public ::google::protobuf::Message {
 public:
  CMD_MANOR_TIEJIANGPU_LEVELUP_SC();
  virtual ~CMD_MANOR_TIEJIANGPU_LEVELUP_SC();

  CMD_MANOR_TIEJIANGPU_LEVELUP_SC(const CMD_MANOR_TIEJIANGPU_LEVELUP_SC& from);

  inline CMD_MANOR_TIEJIANGPU_LEVELUP_SC& operator=(const CMD_MANOR_TIEJIANGPU_LEVELUP_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_MANOR_TIEJIANGPU_LEVELUP_SC& default_instance();

  void Swap(CMD_MANOR_TIEJIANGPU_LEVELUP_SC* other);

  // implements Message ----------------------------------------------

  CMD_MANOR_TIEJIANGPU_LEVELUP_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_MANOR_TIEJIANGPU_LEVELUP_SC& from);
  void MergeFrom(const CMD_MANOR_TIEJIANGPU_LEVELUP_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iNeedActorLevel = 1;
  inline bool has_ineedactorlevel() const;
  inline void clear_ineedactorlevel();
  static const int kINeedActorLevelFieldNumber = 1;
  inline ::google::protobuf::int32 ineedactorlevel() const;
  inline void set_ineedactorlevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_MANOR_TIEJIANGPU_LEVELUP_SC)
 private:
  inline void set_has_ineedactorlevel();
  inline void clear_has_ineedactorlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ineedactorlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_MANOR_TIEJIANGPU_LEVELUP_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_MANOR_WUHUNDIAN_LEVELUP_SC : public ::google::protobuf::Message {
 public:
  CMD_MANOR_WUHUNDIAN_LEVELUP_SC();
  virtual ~CMD_MANOR_WUHUNDIAN_LEVELUP_SC();

  CMD_MANOR_WUHUNDIAN_LEVELUP_SC(const CMD_MANOR_WUHUNDIAN_LEVELUP_SC& from);

  inline CMD_MANOR_WUHUNDIAN_LEVELUP_SC& operator=(const CMD_MANOR_WUHUNDIAN_LEVELUP_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_MANOR_WUHUNDIAN_LEVELUP_SC& default_instance();

  void Swap(CMD_MANOR_WUHUNDIAN_LEVELUP_SC* other);

  // implements Message ----------------------------------------------

  CMD_MANOR_WUHUNDIAN_LEVELUP_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_MANOR_WUHUNDIAN_LEVELUP_SC& from);
  void MergeFrom(const CMD_MANOR_WUHUNDIAN_LEVELUP_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iNeedActorLevel = 1;
  inline bool has_ineedactorlevel() const;
  inline void clear_ineedactorlevel();
  static const int kINeedActorLevelFieldNumber = 1;
  inline ::google::protobuf::int32 ineedactorlevel() const;
  inline void set_ineedactorlevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_MANOR_WUHUNDIAN_LEVELUP_SC)
 private:
  inline void set_has_ineedactorlevel();
  inline void clear_has_ineedactorlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ineedactorlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_MANOR_WUHUNDIAN_LEVELUP_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_MANOR_RES_COMMON_LEVELUP_SC : public ::google::protobuf::Message {
 public:
  CMD_MANOR_RES_COMMON_LEVELUP_SC();
  virtual ~CMD_MANOR_RES_COMMON_LEVELUP_SC();

  CMD_MANOR_RES_COMMON_LEVELUP_SC(const CMD_MANOR_RES_COMMON_LEVELUP_SC& from);

  inline CMD_MANOR_RES_COMMON_LEVELUP_SC& operator=(const CMD_MANOR_RES_COMMON_LEVELUP_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_MANOR_RES_COMMON_LEVELUP_SC& default_instance();

  void Swap(CMD_MANOR_RES_COMMON_LEVELUP_SC* other);

  // implements Message ----------------------------------------------

  CMD_MANOR_RES_COMMON_LEVELUP_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_MANOR_RES_COMMON_LEVELUP_SC& from);
  void MergeFrom(const CMD_MANOR_RES_COMMON_LEVELUP_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iNeedActorLevel = 1;
  inline bool has_ineedactorlevel() const;
  inline void clear_ineedactorlevel();
  static const int kINeedActorLevelFieldNumber = 1;
  inline ::google::protobuf::int32 ineedactorlevel() const;
  inline void set_ineedactorlevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_MANOR_RES_COMMON_LEVELUP_SC)
 private:
  inline void set_has_ineedactorlevel();
  inline void clear_has_ineedactorlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ineedactorlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_MANOR_RES_COMMON_LEVELUP_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_SEND_COVERT_CODE_CS : public ::google::protobuf::Message {
 public:
  CMD_SEND_COVERT_CODE_CS();
  virtual ~CMD_SEND_COVERT_CODE_CS();

  CMD_SEND_COVERT_CODE_CS(const CMD_SEND_COVERT_CODE_CS& from);

  inline CMD_SEND_COVERT_CODE_CS& operator=(const CMD_SEND_COVERT_CODE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_SEND_COVERT_CODE_CS& default_instance();

  void Swap(CMD_SEND_COVERT_CODE_CS* other);

  // implements Message ----------------------------------------------

  CMD_SEND_COVERT_CODE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_SEND_COVERT_CODE_CS& from);
  void MergeFrom(const CMD_SEND_COVERT_CODE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strCovertCode = 1;
  inline bool has_strcovertcode() const;
  inline void clear_strcovertcode();
  static const int kStrCovertCodeFieldNumber = 1;
  inline const ::std::string& strcovertcode() const;
  inline void set_strcovertcode(const ::std::string& value);
  inline void set_strcovertcode(const char* value);
  inline void set_strcovertcode(const char* value, size_t size);
  inline ::std::string* mutable_strcovertcode();
  inline ::std::string* release_strcovertcode();
  inline void set_allocated_strcovertcode(::std::string* strcovertcode);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_SEND_COVERT_CODE_CS)
 private:
  inline void set_has_strcovertcode();
  inline void clear_has_strcovertcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strcovertcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_SEND_COVERT_CODE_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_SEND_COVERT_CODE_SC : public ::google::protobuf::Message {
 public:
  CMD_SEND_COVERT_CODE_SC();
  virtual ~CMD_SEND_COVERT_CODE_SC();

  CMD_SEND_COVERT_CODE_SC(const CMD_SEND_COVERT_CODE_SC& from);

  inline CMD_SEND_COVERT_CODE_SC& operator=(const CMD_SEND_COVERT_CODE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_SEND_COVERT_CODE_SC& default_instance();

  void Swap(CMD_SEND_COVERT_CODE_SC* other);

  // implements Message ----------------------------------------------

  CMD_SEND_COVERT_CODE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_SEND_COVERT_CODE_SC& from);
  void MergeFrom(const CMD_SEND_COVERT_CODE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.FightAwardResult converResoult = 1;
  inline bool has_converresoult() const;
  inline void clear_converresoult();
  static const int kConverResoultFieldNumber = 1;
  inline const ::GSProto::FightAwardResult& converresoult() const;
  inline ::GSProto::FightAwardResult* mutable_converresoult();
  inline ::GSProto::FightAwardResult* release_converresoult();
  inline void set_allocated_converresoult(::GSProto::FightAwardResult* converresoult);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_SEND_COVERT_CODE_SC)
 private:
  inline void set_has_converresoult();
  inline void clear_has_converresoult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::FightAwardResult* converresoult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_SEND_COVERT_CODE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_CANSAVEMONEY_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_CANSAVEMONEY_SC();
  virtual ~CMD_QUERY_CANSAVEMONEY_SC();

  CMD_QUERY_CANSAVEMONEY_SC(const CMD_QUERY_CANSAVEMONEY_SC& from);

  inline CMD_QUERY_CANSAVEMONEY_SC& operator=(const CMD_QUERY_CANSAVEMONEY_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_CANSAVEMONEY_SC& default_instance();

  void Swap(CMD_QUERY_CANSAVEMONEY_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_CANSAVEMONEY_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_CANSAVEMONEY_SC& from);
  void MergeFrom(const CMD_QUERY_CANSAVEMONEY_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iZoneID = 1;
  inline bool has_izoneid() const;
  inline void clear_izoneid();
  static const int kIZoneIDFieldNumber = 1;
  inline ::google::protobuf::int32 izoneid() const;
  inline void set_izoneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_CANSAVEMONEY_SC)
 private:
  inline void set_has_izoneid();
  inline void clear_has_izoneid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 izoneid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_CANSAVEMONEY_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_TBT_GETUUID_SC : public ::google::protobuf::Message {
 public:
  CMD_TBT_GETUUID_SC();
  virtual ~CMD_TBT_GETUUID_SC();

  CMD_TBT_GETUUID_SC(const CMD_TBT_GETUUID_SC& from);

  inline CMD_TBT_GETUUID_SC& operator=(const CMD_TBT_GETUUID_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_TBT_GETUUID_SC& default_instance();

  void Swap(CMD_TBT_GETUUID_SC* other);

  // implements Message ----------------------------------------------

  CMD_TBT_GETUUID_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_TBT_GETUUID_SC& from);
  void MergeFrom(const CMD_TBT_GETUUID_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strUUId = 1;
  inline bool has_struuid() const;
  inline void clear_struuid();
  static const int kStrUUIdFieldNumber = 1;
  inline const ::std::string& struuid() const;
  inline void set_struuid(const ::std::string& value);
  inline void set_struuid(const char* value);
  inline void set_struuid(const char* value, size_t size);
  inline ::std::string* mutable_struuid();
  inline ::std::string* release_struuid();
  inline void set_allocated_struuid(::std::string* struuid);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_TBT_GETUUID_SC)
 private:
  inline void set_has_struuid();
  inline void clear_has_struuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* struuid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_TBT_GETUUID_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_LEGION_APPOINT_CS : public ::google::protobuf::Message {
 public:
  CMD_LEGION_APPOINT_CS();
  virtual ~CMD_LEGION_APPOINT_CS();

  CMD_LEGION_APPOINT_CS(const CMD_LEGION_APPOINT_CS& from);

  inline CMD_LEGION_APPOINT_CS& operator=(const CMD_LEGION_APPOINT_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_LEGION_APPOINT_CS& default_instance();

  void Swap(CMD_LEGION_APPOINT_CS* other);

  // implements Message ----------------------------------------------

  CMD_LEGION_APPOINT_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_LEGION_APPOINT_CS& from);
  void MergeFrom(const CMD_LEGION_APPOINT_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strLegionMemName = 1;
  inline bool has_strlegionmemname() const;
  inline void clear_strlegionmemname();
  static const int kStrLegionMemNameFieldNumber = 1;
  inline const ::std::string& strlegionmemname() const;
  inline void set_strlegionmemname(const ::std::string& value);
  inline void set_strlegionmemname(const char* value);
  inline void set_strlegionmemname(const char* value, size_t size);
  inline ::std::string* mutable_strlegionmemname();
  inline ::std::string* release_strlegionmemname();
  inline void set_allocated_strlegionmemname(::std::string* strlegionmemname);

  // required bool bIsAppoint = 2;
  inline bool has_bisappoint() const;
  inline void clear_bisappoint();
  static const int kBIsAppointFieldNumber = 2;
  inline bool bisappoint() const;
  inline void set_bisappoint(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_LEGION_APPOINT_CS)
 private:
  inline void set_has_strlegionmemname();
  inline void clear_has_strlegionmemname();
  inline void set_has_bisappoint();
  inline void clear_has_bisappoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strlegionmemname_;
  bool bisappoint_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_LEGION_APPOINT_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_LEGION_QUERY_WORSHIP_SC : public ::google::protobuf::Message {
 public:
  CMD_LEGION_QUERY_WORSHIP_SC();
  virtual ~CMD_LEGION_QUERY_WORSHIP_SC();

  CMD_LEGION_QUERY_WORSHIP_SC(const CMD_LEGION_QUERY_WORSHIP_SC& from);

  inline CMD_LEGION_QUERY_WORSHIP_SC& operator=(const CMD_LEGION_QUERY_WORSHIP_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_LEGION_QUERY_WORSHIP_SC& default_instance();

  void Swap(CMD_LEGION_QUERY_WORSHIP_SC* other);

  // implements Message ----------------------------------------------

  CMD_LEGION_QUERY_WORSHIP_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_LEGION_QUERY_WORSHIP_SC& from);
  void MergeFrom(const CMD_LEGION_QUERY_WORSHIP_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iRemainWorshipTimes = 1;
  inline bool has_iremainworshiptimes() const;
  inline void clear_iremainworshiptimes();
  static const int kIRemainWorshipTimesFieldNumber = 1;
  inline ::google::protobuf::int32 iremainworshiptimes() const;
  inline void set_iremainworshiptimes(::google::protobuf::int32 value);

  // required int32 iTotalWorshipTimes = 2;
  inline bool has_itotalworshiptimes() const;
  inline void clear_itotalworshiptimes();
  static const int kITotalWorshipTimesFieldNumber = 2;
  inline ::google::protobuf::int32 itotalworshiptimes() const;
  inline void set_itotalworshiptimes(::google::protobuf::int32 value);

  // required int32 iCanGetWorshipReward = 3;
  inline bool has_icangetworshipreward() const;
  inline void clear_icangetworshipreward();
  static const int kICanGetWorshipRewardFieldNumber = 3;
  inline ::google::protobuf::int32 icangetworshipreward() const;
  inline void set_icangetworshipreward(::google::protobuf::int32 value);

  // required int32 iActorContribute = 4;
  inline bool has_iactorcontribute() const;
  inline void clear_iactorcontribute();
  static const int kIActorContributeFieldNumber = 4;
  inline ::google::protobuf::int32 iactorcontribute() const;
  inline void set_iactorcontribute(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_LEGION_QUERY_WORSHIP_SC)
 private:
  inline void set_has_iremainworshiptimes();
  inline void clear_has_iremainworshiptimes();
  inline void set_has_itotalworshiptimes();
  inline void clear_has_itotalworshiptimes();
  inline void set_has_icangetworshipreward();
  inline void clear_has_icangetworshipreward();
  inline void set_has_iactorcontribute();
  inline void clear_has_iactorcontribute();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iremainworshiptimes_;
  ::google::protobuf::int32 itotalworshiptimes_;
  ::google::protobuf::int32 icangetworshipreward_;
  ::google::protobuf::int32 iactorcontribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_LEGION_QUERY_WORSHIP_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_LEGION_WORSHIP_MEMBER_CS : public ::google::protobuf::Message {
 public:
  CMD_LEGION_WORSHIP_MEMBER_CS();
  virtual ~CMD_LEGION_WORSHIP_MEMBER_CS();

  CMD_LEGION_WORSHIP_MEMBER_CS(const CMD_LEGION_WORSHIP_MEMBER_CS& from);

  inline CMD_LEGION_WORSHIP_MEMBER_CS& operator=(const CMD_LEGION_WORSHIP_MEMBER_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_LEGION_WORSHIP_MEMBER_CS& default_instance();

  void Swap(CMD_LEGION_WORSHIP_MEMBER_CS* other);

  // implements Message ----------------------------------------------

  CMD_LEGION_WORSHIP_MEMBER_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_LEGION_WORSHIP_MEMBER_CS& from);
  void MergeFrom(const CMD_LEGION_WORSHIP_MEMBER_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strMemberName = 1;
  inline bool has_strmembername() const;
  inline void clear_strmembername();
  static const int kStrMemberNameFieldNumber = 1;
  inline const ::std::string& strmembername() const;
  inline void set_strmembername(const ::std::string& value);
  inline void set_strmembername(const char* value);
  inline void set_strmembername(const char* value, size_t size);
  inline ::std::string* mutable_strmembername();
  inline ::std::string* release_strmembername();
  inline void set_allocated_strmembername(::std::string* strmembername);

  // required uint32 worshipType = 2;
  inline bool has_worshiptype() const;
  inline void clear_worshiptype();
  static const int kWorshipTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 worshiptype() const;
  inline void set_worshiptype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_LEGION_WORSHIP_MEMBER_CS)
 private:
  inline void set_has_strmembername();
  inline void clear_has_strmembername();
  inline void set_has_worshiptype();
  inline void clear_has_worshiptype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strmembername_;
  ::google::protobuf::uint32 worshiptype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_LEGION_WORSHIP_MEMBER_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_LEAVE_LEGION_SC : public ::google::protobuf::Message {
 public:
  CMD_LEAVE_LEGION_SC();
  virtual ~CMD_LEAVE_LEGION_SC();

  CMD_LEAVE_LEGION_SC(const CMD_LEAVE_LEGION_SC& from);

  inline CMD_LEAVE_LEGION_SC& operator=(const CMD_LEAVE_LEGION_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_LEAVE_LEGION_SC& default_instance();

  void Swap(CMD_LEAVE_LEGION_SC* other);

  // implements Message ----------------------------------------------

  CMD_LEAVE_LEGION_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_LEAVE_LEGION_SC& from);
  void MergeFrom(const CMD_LEAVE_LEGION_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iGetContribute = 1;
  inline bool has_igetcontribute() const;
  inline void clear_igetcontribute();
  static const int kIGetContributeFieldNumber = 1;
  inline ::google::protobuf::int32 igetcontribute() const;
  inline void set_igetcontribute(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_LEAVE_LEGION_SC)
 private:
  inline void set_has_igetcontribute();
  inline void clear_has_igetcontribute();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 igetcontribute_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_LEAVE_LEGION_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_SHOPSYSTEM_QUERY_SC : public ::google::protobuf::Message {
 public:
  CMD_SHOPSYSTEM_QUERY_SC();
  virtual ~CMD_SHOPSYSTEM_QUERY_SC();

  CMD_SHOPSYSTEM_QUERY_SC(const CMD_SHOPSYSTEM_QUERY_SC& from);

  inline CMD_SHOPSYSTEM_QUERY_SC& operator=(const CMD_SHOPSYSTEM_QUERY_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_SHOPSYSTEM_QUERY_SC& default_instance();

  void Swap(CMD_SHOPSYSTEM_QUERY_SC* other);

  // implements Message ----------------------------------------------

  CMD_SHOPSYSTEM_QUERY_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_SHOPSYSTEM_QUERY_SC& from);
  void MergeFrom(const CMD_SHOPSYSTEM_QUERY_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bTokenHaveFreeTimes = 1;
  inline bool has_btokenhavefreetimes() const;
  inline void clear_btokenhavefreetimes();
  static const int kBTokenHaveFreeTimesFieldNumber = 1;
  inline bool btokenhavefreetimes() const;
  inline void set_btokenhavefreetimes(bool value);

  // optional bool bHaveTime = 2;
  inline bool has_bhavetime() const;
  inline void clear_bhavetime();
  static const int kBHaveTimeFieldNumber = 2;
  inline bool bhavetime() const;
  inline void set_bhavetime(bool value);

  // optional uint32 iSecond = 3;
  inline bool has_isecond() const;
  inline void clear_isecond();
  static const int kISecondFieldNumber = 3;
  inline ::google::protobuf::uint32 isecond() const;
  inline void set_isecond(::google::protobuf::uint32 value);

  // optional int32 iTotalFreeTimes = 4;
  inline bool has_itotalfreetimes() const;
  inline void clear_itotalfreetimes();
  static const int kITotalFreeTimesFieldNumber = 4;
  inline ::google::protobuf::int32 itotalfreetimes() const;
  inline void set_itotalfreetimes(::google::protobuf::int32 value);

  // optional int32 iRemaindFreeTimes = 5;
  inline bool has_iremaindfreetimes() const;
  inline void clear_iremaindfreetimes();
  static const int kIRemaindFreeTimesFieldNumber = 5;
  inline ::google::protobuf::int32 iremaindfreetimes() const;
  inline void set_iremaindfreetimes(::google::protobuf::int32 value);

  // required bool bGoldCanFree = 6;
  inline bool has_bgoldcanfree() const;
  inline void clear_bgoldcanfree();
  static const int kBGoldCanFreeFieldNumber = 6;
  inline bool bgoldcanfree() const;
  inline void set_bgoldcanfree(bool value);

  // optional uint32 iRemainSecond = 7;
  inline bool has_iremainsecond() const;
  inline void clear_iremainsecond();
  static const int kIRemainSecondFieldNumber = 7;
  inline ::google::protobuf::uint32 iremainsecond() const;
  inline void set_iremainsecond(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_SHOPSYSTEM_QUERY_SC)
 private:
  inline void set_has_btokenhavefreetimes();
  inline void clear_has_btokenhavefreetimes();
  inline void set_has_bhavetime();
  inline void clear_has_bhavetime();
  inline void set_has_isecond();
  inline void clear_has_isecond();
  inline void set_has_itotalfreetimes();
  inline void clear_has_itotalfreetimes();
  inline void set_has_iremaindfreetimes();
  inline void clear_has_iremaindfreetimes();
  inline void set_has_bgoldcanfree();
  inline void clear_has_bgoldcanfree();
  inline void set_has_iremainsecond();
  inline void clear_has_iremainsecond();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 isecond_;
  bool btokenhavefreetimes_;
  bool bhavetime_;
  bool bgoldcanfree_;
  ::google::protobuf::int32 itotalfreetimes_;
  ::google::protobuf::int32 iremaindfreetimes_;
  ::google::protobuf::uint32 iremainsecond_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_SHOPSYSTEM_QUERY_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_PAYMENT_FIRST_PAY_SC : public ::google::protobuf::Message {
 public:
  CMD_PAYMENT_FIRST_PAY_SC();
  virtual ~CMD_PAYMENT_FIRST_PAY_SC();

  CMD_PAYMENT_FIRST_PAY_SC(const CMD_PAYMENT_FIRST_PAY_SC& from);

  inline CMD_PAYMENT_FIRST_PAY_SC& operator=(const CMD_PAYMENT_FIRST_PAY_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_PAYMENT_FIRST_PAY_SC& default_instance();

  void Swap(CMD_PAYMENT_FIRST_PAY_SC* other);

  // implements Message ----------------------------------------------

  CMD_PAYMENT_FIRST_PAY_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_PAYMENT_FIRST_PAY_SC& from);
  void MergeFrom(const CMD_PAYMENT_FIRST_PAY_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.FightAwardResult resoult = 1;
  inline bool has_resoult() const;
  inline void clear_resoult();
  static const int kResoultFieldNumber = 1;
  inline const ::GSProto::FightAwardResult& resoult() const;
  inline ::GSProto::FightAwardResult* mutable_resoult();
  inline ::GSProto::FightAwardResult* release_resoult();
  inline void set_allocated_resoult(::GSProto::FightAwardResult* resoult);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_PAYMENT_FIRST_PAY_SC)
 private:
  inline void set_has_resoult();
  inline void clear_has_resoult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::FightAwardResult* resoult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_PAYMENT_FIRST_PAY_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_OPERATESYSTEM_QUERY_CHECKIN_SC : public ::google::protobuf::Message {
 public:
  CMD_OPERATESYSTEM_QUERY_CHECKIN_SC();
  virtual ~CMD_OPERATESYSTEM_QUERY_CHECKIN_SC();

  CMD_OPERATESYSTEM_QUERY_CHECKIN_SC(const CMD_OPERATESYSTEM_QUERY_CHECKIN_SC& from);

  inline CMD_OPERATESYSTEM_QUERY_CHECKIN_SC& operator=(const CMD_OPERATESYSTEM_QUERY_CHECKIN_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_OPERATESYSTEM_QUERY_CHECKIN_SC& default_instance();

  void Swap(CMD_OPERATESYSTEM_QUERY_CHECKIN_SC* other);

  // implements Message ----------------------------------------------

  CMD_OPERATESYSTEM_QUERY_CHECKIN_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_OPERATESYSTEM_QUERY_CHECKIN_SC& from);
  void MergeFrom(const CMD_OPERATESYSTEM_QUERY_CHECKIN_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iHaveCheckInCount = 1;
  inline bool has_ihavecheckincount() const;
  inline void clear_ihavecheckincount();
  static const int kIHaveCheckInCountFieldNumber = 1;
  inline ::google::protobuf::int32 ihavecheckincount() const;
  inline void set_ihavecheckincount(::google::protobuf::int32 value);

  // optional bool bLastCanClick = 2;
  inline bool has_blastcanclick() const;
  inline void clear_blastcanclick();
  static const int kBLastCanClickFieldNumber = 2;
  inline bool blastcanclick() const;
  inline void set_blastcanclick(bool value);

  // optional int32 iHaveClickTimes = 3;
  inline bool has_ihaveclicktimes() const;
  inline void clear_ihaveclicktimes();
  static const int kIHaveClickTimesFieldNumber = 3;
  inline ::google::protobuf::int32 ihaveclicktimes() const;
  inline void set_ihaveclicktimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_OPERATESYSTEM_QUERY_CHECKIN_SC)
 private:
  inline void set_has_ihavecheckincount();
  inline void clear_has_ihavecheckincount();
  inline void set_has_blastcanclick();
  inline void clear_has_blastcanclick();
  inline void set_has_ihaveclicktimes();
  inline void clear_has_ihaveclicktimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ihavecheckincount_;
  bool blastcanclick_;
  ::google::protobuf::int32 ihaveclicktimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_OPERATESYSTEM_QUERY_CHECKIN_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_OPERATESYSTEM_CHECKIN_CS : public ::google::protobuf::Message {
 public:
  CMD_OPERATESYSTEM_CHECKIN_CS();
  virtual ~CMD_OPERATESYSTEM_CHECKIN_CS();

  CMD_OPERATESYSTEM_CHECKIN_CS(const CMD_OPERATESYSTEM_CHECKIN_CS& from);

  inline CMD_OPERATESYSTEM_CHECKIN_CS& operator=(const CMD_OPERATESYSTEM_CHECKIN_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_OPERATESYSTEM_CHECKIN_CS& default_instance();

  void Swap(CMD_OPERATESYSTEM_CHECKIN_CS* other);

  // implements Message ----------------------------------------------

  CMD_OPERATESYSTEM_CHECKIN_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_OPERATESYSTEM_CHECKIN_CS& from);
  void MergeFrom(const CMD_OPERATESYSTEM_CHECKIN_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iWillCheckInID = 1;
  inline bool has_iwillcheckinid() const;
  inline void clear_iwillcheckinid();
  static const int kIWillCheckInIDFieldNumber = 1;
  inline ::google::protobuf::int32 iwillcheckinid() const;
  inline void set_iwillcheckinid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_OPERATESYSTEM_CHECKIN_CS)
 private:
  inline void set_has_iwillcheckinid();
  inline void clear_has_iwillcheckinid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iwillcheckinid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_OPERATESYSTEM_CHECKIN_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_OPERATESYSTEM_CHECKIN_SC : public ::google::protobuf::Message {
 public:
  CMD_OPERATESYSTEM_CHECKIN_SC();
  virtual ~CMD_OPERATESYSTEM_CHECKIN_SC();

  CMD_OPERATESYSTEM_CHECKIN_SC(const CMD_OPERATESYSTEM_CHECKIN_SC& from);

  inline CMD_OPERATESYSTEM_CHECKIN_SC& operator=(const CMD_OPERATESYSTEM_CHECKIN_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_OPERATESYSTEM_CHECKIN_SC& default_instance();

  void Swap(CMD_OPERATESYSTEM_CHECKIN_SC* other);

  // implements Message ----------------------------------------------

  CMD_OPERATESYSTEM_CHECKIN_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_OPERATESYSTEM_CHECKIN_SC& from);
  void MergeFrom(const CMD_OPERATESYSTEM_CHECKIN_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.PropItem szAwardPropList = 1;
  inline int szawardproplist_size() const;
  inline void clear_szawardproplist();
  static const int kSzAwardPropListFieldNumber = 1;
  inline const ::GSProto::PropItem& szawardproplist(int index) const;
  inline ::GSProto::PropItem* mutable_szawardproplist(int index);
  inline ::GSProto::PropItem* add_szawardproplist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
      szawardproplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
      mutable_szawardproplist();

  // repeated .GSProto.FightAwardItem szAwardItemList = 2;
  inline int szawarditemlist_size() const;
  inline void clear_szawarditemlist();
  static const int kSzAwardItemListFieldNumber = 2;
  inline const ::GSProto::FightAwardItem& szawarditemlist(int index) const;
  inline ::GSProto::FightAwardItem* mutable_szawarditemlist(int index);
  inline ::GSProto::FightAwardItem* add_szawarditemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightAwardItem >&
      szawarditemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightAwardItem >*
      mutable_szawarditemlist();

  // repeated .GSProto.DreamRewardHero szAwardHeroList = 3;
  inline int szawardherolist_size() const;
  inline void clear_szawardherolist();
  static const int kSzAwardHeroListFieldNumber = 3;
  inline const ::GSProto::DreamRewardHero& szawardherolist(int index) const;
  inline ::GSProto::DreamRewardHero* mutable_szawardherolist(int index);
  inline ::GSProto::DreamRewardHero* add_szawardherolist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::DreamRewardHero >&
      szawardherolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::DreamRewardHero >*
      mutable_szawardherolist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_OPERATESYSTEM_CHECKIN_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem > szawardproplist_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::FightAwardItem > szawarditemlist_;
  ::google::protobuf::RepeatedPtrField< ::GSProto::DreamRewardHero > szawardherolist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_OPERATESYSTEM_CHECKIN_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_PAYMENT_QUERY_SC : public ::google::protobuf::Message {
 public:
  CMD_PAYMENT_QUERY_SC();
  virtual ~CMD_PAYMENT_QUERY_SC();

  CMD_PAYMENT_QUERY_SC(const CMD_PAYMENT_QUERY_SC& from);

  inline CMD_PAYMENT_QUERY_SC& operator=(const CMD_PAYMENT_QUERY_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_PAYMENT_QUERY_SC& default_instance();

  void Swap(CMD_PAYMENT_QUERY_SC* other);

  // implements Message ----------------------------------------------

  CMD_PAYMENT_QUERY_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_PAYMENT_QUERY_SC& from);
  void MergeFrom(const CMD_PAYMENT_QUERY_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 iId = 1;
  inline int iid_size() const;
  inline void clear_iid();
  static const int kIIdFieldNumber = 1;
  inline ::google::protobuf::int32 iid(int index) const;
  inline void set_iid(int index, ::google::protobuf::int32 value);
  inline void add_iid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      iid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_iid();

  // required int32 iMonthCardRemaind = 2;
  inline bool has_imonthcardremaind() const;
  inline void clear_imonthcardremaind();
  static const int kIMonthCardRemaindFieldNumber = 2;
  inline ::google::protobuf::int32 imonthcardremaind() const;
  inline void set_imonthcardremaind(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_PAYMENT_QUERY_SC)
 private:
  inline void set_has_imonthcardremaind();
  inline void clear_has_imonthcardremaind();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > iid_;
  ::google::protobuf::int32 imonthcardremaind_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_PAYMENT_QUERY_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_PAYMENT_FIRST_QUERY_SC : public ::google::protobuf::Message {
 public:
  CMD_PAYMENT_FIRST_QUERY_SC();
  virtual ~CMD_PAYMENT_FIRST_QUERY_SC();

  CMD_PAYMENT_FIRST_QUERY_SC(const CMD_PAYMENT_FIRST_QUERY_SC& from);

  inline CMD_PAYMENT_FIRST_QUERY_SC& operator=(const CMD_PAYMENT_FIRST_QUERY_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_PAYMENT_FIRST_QUERY_SC& default_instance();

  void Swap(CMD_PAYMENT_FIRST_QUERY_SC* other);

  // implements Message ----------------------------------------------

  CMD_PAYMENT_FIRST_QUERY_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_PAYMENT_FIRST_QUERY_SC& from);
  void MergeFrom(const CMD_PAYMENT_FIRST_QUERY_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.FightAwardResult resoult = 1;
  inline bool has_resoult() const;
  inline void clear_resoult();
  static const int kResoultFieldNumber = 1;
  inline const ::GSProto::FightAwardResult& resoult() const;
  inline ::GSProto::FightAwardResult* mutable_resoult();
  inline ::GSProto::FightAwardResult* release_resoult();
  inline void set_allocated_resoult(::GSProto::FightAwardResult* resoult);

  // required bool bCanGet = 2;
  inline bool has_bcanget() const;
  inline void clear_bcanget();
  static const int kBCanGetFieldNumber = 2;
  inline bool bcanget() const;
  inline void set_bcanget(bool value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_PAYMENT_FIRST_QUERY_SC)
 private:
  inline void set_has_resoult();
  inline void clear_has_resoult();
  inline void set_has_bcanget();
  inline void clear_has_bcanget();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::FightAwardResult* resoult_;
  bool bcanget_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_PAYMENT_FIRST_QUERY_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC : public ::google::protobuf::Message {
 public:
  CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC();
  virtual ~CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC();

  CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC(const CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC& from);

  inline CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC& operator=(const CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC& default_instance();

  void Swap(CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC* other);

  // implements Message ----------------------------------------------

  CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC& from);
  void MergeFrom(const CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iNoticeType = 1;
  inline bool has_inoticetype() const;
  inline void clear_inoticetype();
  static const int kINoticeTypeFieldNumber = 1;
  inline ::google::protobuf::int32 inoticetype() const;
  inline void set_inoticetype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC)
 private:
  inline void set_has_inoticetype();
  inline void clear_has_inoticetype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 inoticetype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC* default_instance_;
};
// -------------------------------------------------------------------

class ProtectDetail : public ::google::protobuf::Message {
 public:
  ProtectDetail();
  virtual ~ProtectDetail();

  ProtectDetail(const ProtectDetail& from);

  inline ProtectDetail& operator=(const ProtectDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtectDetail& default_instance();

  void Swap(ProtectDetail* other);

  // implements Message ----------------------------------------------

  ProtectDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtectDetail& from);
  void MergeFrom(const ProtectDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iProtectId = 1;
  inline bool has_iprotectid() const;
  inline void clear_iprotectid();
  static const int kIProtectIdFieldNumber = 1;
  inline ::google::protobuf::int32 iprotectid() const;
  inline void set_iprotectid(::google::protobuf::int32 value);

  // optional int32 iRemaindSecond = 3;
  inline bool has_iremaindsecond() const;
  inline void clear_iremaindsecond();
  static const int kIRemaindSecondFieldNumber = 3;
  inline ::google::protobuf::int32 iremaindsecond() const;
  inline void set_iremaindsecond(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.ProtectDetail)
 private:
  inline void set_has_iprotectid();
  inline void clear_has_iprotectid();
  inline void set_has_iremaindsecond();
  inline void clear_has_iremaindsecond();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iprotectid_;
  ::google::protobuf::int32 iremaindsecond_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static ProtectDetail* default_instance_;
};
// -------------------------------------------------------------------

class CMD_MANORSYSTEM_QUERY_PROTECT_SC : public ::google::protobuf::Message {
 public:
  CMD_MANORSYSTEM_QUERY_PROTECT_SC();
  virtual ~CMD_MANORSYSTEM_QUERY_PROTECT_SC();

  CMD_MANORSYSTEM_QUERY_PROTECT_SC(const CMD_MANORSYSTEM_QUERY_PROTECT_SC& from);

  inline CMD_MANORSYSTEM_QUERY_PROTECT_SC& operator=(const CMD_MANORSYSTEM_QUERY_PROTECT_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_MANORSYSTEM_QUERY_PROTECT_SC& default_instance();

  void Swap(CMD_MANORSYSTEM_QUERY_PROTECT_SC* other);

  // implements Message ----------------------------------------------

  CMD_MANORSYSTEM_QUERY_PROTECT_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_MANORSYSTEM_QUERY_PROTECT_SC& from);
  void MergeFrom(const CMD_MANORSYSTEM_QUERY_PROTECT_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GSProto.ProtectDetail szProtectDetail = 1;
  inline int szprotectdetail_size() const;
  inline void clear_szprotectdetail();
  static const int kSzProtectDetailFieldNumber = 1;
  inline const ::GSProto::ProtectDetail& szprotectdetail(int index) const;
  inline ::GSProto::ProtectDetail* mutable_szprotectdetail(int index);
  inline ::GSProto::ProtectDetail* add_szprotectdetail();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ProtectDetail >&
      szprotectdetail() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::ProtectDetail >*
      mutable_szprotectdetail();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_MANORSYSTEM_QUERY_PROTECT_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::ProtectDetail > szprotectdetail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_MANORSYSTEM_QUERY_PROTECT_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_MANORSYTEM_BUY_PROTECT_CS : public ::google::protobuf::Message {
 public:
  CMD_MANORSYTEM_BUY_PROTECT_CS();
  virtual ~CMD_MANORSYTEM_BUY_PROTECT_CS();

  CMD_MANORSYTEM_BUY_PROTECT_CS(const CMD_MANORSYTEM_BUY_PROTECT_CS& from);

  inline CMD_MANORSYTEM_BUY_PROTECT_CS& operator=(const CMD_MANORSYTEM_BUY_PROTECT_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_MANORSYTEM_BUY_PROTECT_CS& default_instance();

  void Swap(CMD_MANORSYTEM_BUY_PROTECT_CS* other);

  // implements Message ----------------------------------------------

  CMD_MANORSYTEM_BUY_PROTECT_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_MANORSYTEM_BUY_PROTECT_CS& from);
  void MergeFrom(const CMD_MANORSYTEM_BUY_PROTECT_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iProtectId = 1;
  inline bool has_iprotectid() const;
  inline void clear_iprotectid();
  static const int kIProtectIdFieldNumber = 1;
  inline ::google::protobuf::int32 iprotectid() const;
  inline void set_iprotectid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_MANORSYTEM_BUY_PROTECT_CS)
 private:
  inline void set_has_iprotectid();
  inline void clear_has_iprotectid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iprotectid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_MANORSYTEM_BUY_PROTECT_CS* default_instance_;
};
// -------------------------------------------------------------------

class GrowupUnitDetail : public ::google::protobuf::Message {
 public:
  GrowupUnitDetail();
  virtual ~GrowupUnitDetail();

  GrowupUnitDetail(const GrowupUnitDetail& from);

  inline GrowupUnitDetail& operator=(const GrowupUnitDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GrowupUnitDetail& default_instance();

  void Swap(GrowupUnitDetail* other);

  // implements Message ----------------------------------------------

  GrowupUnitDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GrowupUnitDetail& from);
  void MergeFrom(const GrowupUnitDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iId = 1;
  inline bool has_iid() const;
  inline void clear_iid();
  static const int kIIdFieldNumber = 1;
  inline ::google::protobuf::int32 iid() const;
  inline void set_iid(::google::protobuf::int32 value);

  // required int32 iGoalLevel = 2;
  inline bool has_igoallevel() const;
  inline void clear_igoallevel();
  static const int kIGoalLevelFieldNumber = 2;
  inline ::google::protobuf::int32 igoallevel() const;
  inline void set_igoallevel(::google::protobuf::int32 value);

  // required int32 iAward = 3;
  inline bool has_iaward() const;
  inline void clear_iaward();
  static const int kIAwardFieldNumber = 3;
  inline ::google::protobuf::int32 iaward() const;
  inline void set_iaward(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.GrowupUnitDetail)
 private:
  inline void set_has_iid();
  inline void clear_has_iid();
  inline void set_has_igoallevel();
  inline void clear_has_igoallevel();
  inline void set_has_iaward();
  inline void clear_has_iaward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iid_;
  ::google::protobuf::int32 igoallevel_;
  ::google::protobuf::int32 iaward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static GrowupUnitDetail* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_GROWUP_DETAIL_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_GROWUP_DETAIL_SC();
  virtual ~CMD_QUERY_GROWUP_DETAIL_SC();

  CMD_QUERY_GROWUP_DETAIL_SC(const CMD_QUERY_GROWUP_DETAIL_SC& from);

  inline CMD_QUERY_GROWUP_DETAIL_SC& operator=(const CMD_QUERY_GROWUP_DETAIL_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_GROWUP_DETAIL_SC& default_instance();

  void Swap(CMD_QUERY_GROWUP_DETAIL_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_GROWUP_DETAIL_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_GROWUP_DETAIL_SC& from);
  void MergeFrom(const CMD_QUERY_GROWUP_DETAIL_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool bIsBuy = 1;
  inline bool has_bisbuy() const;
  inline void clear_bisbuy();
  static const int kBIsBuyFieldNumber = 1;
  inline bool bisbuy() const;
  inline void set_bisbuy(bool value);

  // repeated .GSProto.GrowupUnitDetail szGrowUpDetail = 2;
  inline int szgrowupdetail_size() const;
  inline void clear_szgrowupdetail();
  static const int kSzGrowUpDetailFieldNumber = 2;
  inline const ::GSProto::GrowupUnitDetail& szgrowupdetail(int index) const;
  inline ::GSProto::GrowupUnitDetail* mutable_szgrowupdetail(int index);
  inline ::GSProto::GrowupUnitDetail* add_szgrowupdetail();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::GrowupUnitDetail >&
      szgrowupdetail() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::GrowupUnitDetail >*
      mutable_szgrowupdetail();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_GROWUP_DETAIL_SC)
 private:
  inline void set_has_bisbuy();
  inline void clear_has_bisbuy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::GrowupUnitDetail > szgrowupdetail_;
  bool bisbuy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_GROWUP_DETAIL_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GET_GROWUP_REWARD_CS : public ::google::protobuf::Message {
 public:
  CMD_GET_GROWUP_REWARD_CS();
  virtual ~CMD_GET_GROWUP_REWARD_CS();

  CMD_GET_GROWUP_REWARD_CS(const CMD_GET_GROWUP_REWARD_CS& from);

  inline CMD_GET_GROWUP_REWARD_CS& operator=(const CMD_GET_GROWUP_REWARD_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GET_GROWUP_REWARD_CS& default_instance();

  void Swap(CMD_GET_GROWUP_REWARD_CS* other);

  // implements Message ----------------------------------------------

  CMD_GET_GROWUP_REWARD_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GET_GROWUP_REWARD_CS& from);
  void MergeFrom(const CMD_GET_GROWUP_REWARD_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iId = 1;
  inline bool has_iid() const;
  inline void clear_iid();
  static const int kIIdFieldNumber = 1;
  inline ::google::protobuf::int32 iid() const;
  inline void set_iid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GET_GROWUP_REWARD_CS)
 private:
  inline void set_has_iid();
  inline void clear_has_iid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GET_GROWUP_REWARD_CS* default_instance_;
};
// -------------------------------------------------------------------

class AccountUnit : public ::google::protobuf::Message {
 public:
  AccountUnit();
  virtual ~AccountUnit();

  AccountUnit(const AccountUnit& from);

  inline AccountUnit& operator=(const AccountUnit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountUnit& default_instance();

  void Swap(AccountUnit* other);

  // implements Message ----------------------------------------------

  AccountUnit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccountUnit& from);
  void MergeFrom(const AccountUnit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .GSProto.FightAwardResult award = 1;
  inline bool has_award() const;
  inline void clear_award();
  static const int kAwardFieldNumber = 1;
  inline const ::GSProto::FightAwardResult& award() const;
  inline ::GSProto::FightAwardResult* mutable_award();
  inline ::GSProto::FightAwardResult* release_award();
  inline void set_allocated_award(::GSProto::FightAwardResult* award);

  // required int32 iGoal = 2;
  inline bool has_igoal() const;
  inline void clear_igoal();
  static const int kIGoalFieldNumber = 2;
  inline ::google::protobuf::int32 igoal() const;
  inline void set_igoal(::google::protobuf::int32 value);

  // required int32 iId = 3;
  inline bool has_iid() const;
  inline void clear_iid();
  static const int kIIdFieldNumber = 3;
  inline ::google::protobuf::int32 iid() const;
  inline void set_iid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.AccountUnit)
 private:
  inline void set_has_award();
  inline void clear_has_award();
  inline void set_has_igoal();
  inline void clear_has_igoal();
  inline void set_has_iid();
  inline void clear_has_iid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::FightAwardResult* award_;
  ::google::protobuf::int32 igoal_;
  ::google::protobuf::int32 iid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static AccountUnit* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC();
  virtual ~CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC();

  CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC(const CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC& from);

  inline CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC& operator=(const CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC& default_instance();

  void Swap(CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC& from);
  void MergeFrom(const CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iActorAccPayment = 1;
  inline bool has_iactoraccpayment() const;
  inline void clear_iactoraccpayment();
  static const int kIActorAccPaymentFieldNumber = 1;
  inline ::google::protobuf::int32 iactoraccpayment() const;
  inline void set_iactoraccpayment(::google::protobuf::int32 value);

  // repeated .GSProto.AccountUnit szAccountList = 2;
  inline int szaccountlist_size() const;
  inline void clear_szaccountlist();
  static const int kSzAccountListFieldNumber = 2;
  inline const ::GSProto::AccountUnit& szaccountlist(int index) const;
  inline ::GSProto::AccountUnit* mutable_szaccountlist(int index);
  inline ::GSProto::AccountUnit* add_szaccountlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::AccountUnit >&
      szaccountlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::AccountUnit >*
      mutable_szaccountlist();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC)
 private:
  inline void set_has_iactoraccpayment();
  inline void clear_has_iactoraccpayment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::AccountUnit > szaccountlist_;
  ::google::protobuf::int32 iactoraccpayment_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_DAY_PAYMENT_DETAIL_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_DAY_PAYMENT_DETAIL_SC();
  virtual ~CMD_QUERY_DAY_PAYMENT_DETAIL_SC();

  CMD_QUERY_DAY_PAYMENT_DETAIL_SC(const CMD_QUERY_DAY_PAYMENT_DETAIL_SC& from);

  inline CMD_QUERY_DAY_PAYMENT_DETAIL_SC& operator=(const CMD_QUERY_DAY_PAYMENT_DETAIL_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_DAY_PAYMENT_DETAIL_SC& default_instance();

  void Swap(CMD_QUERY_DAY_PAYMENT_DETAIL_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_DAY_PAYMENT_DETAIL_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_DAY_PAYMENT_DETAIL_SC& from);
  void MergeFrom(const CMD_QUERY_DAY_PAYMENT_DETAIL_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 paied = 1;
  inline bool has_paied() const;
  inline void clear_paied();
  static const int kPaiedFieldNumber = 1;
  inline ::google::protobuf::int32 paied() const;
  inline void set_paied(::google::protobuf::int32 value);

  // repeated .GSProto.AccountUnit rewardList = 2;
  inline int rewardlist_size() const;
  inline void clear_rewardlist();
  static const int kRewardListFieldNumber = 2;
  inline const ::GSProto::AccountUnit& rewardlist(int index) const;
  inline ::GSProto::AccountUnit* mutable_rewardlist(int index);
  inline ::GSProto::AccountUnit* add_rewardlist();
  inline const ::google::protobuf::RepeatedPtrField< ::GSProto::AccountUnit >&
      rewardlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::GSProto::AccountUnit >*
      mutable_rewardlist();

  // repeated int32 fetched = 3;
  inline int fetched_size() const;
  inline void clear_fetched();
  static const int kFetchedFieldNumber = 3;
  inline ::google::protobuf::int32 fetched(int index) const;
  inline void set_fetched(int index, ::google::protobuf::int32 value);
  inline void add_fetched(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      fetched() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_fetched();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_DAY_PAYMENT_DETAIL_SC)
 private:
  inline void set_has_paied();
  inline void clear_has_paied();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GSProto::AccountUnit > rewardlist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > fetched_;
  ::google::protobuf::int32 paied_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_DAY_PAYMENT_DETAIL_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GET_DAY_PAYMENT_REWARD_CS : public ::google::protobuf::Message {
 public:
  CMD_GET_DAY_PAYMENT_REWARD_CS();
  virtual ~CMD_GET_DAY_PAYMENT_REWARD_CS();

  CMD_GET_DAY_PAYMENT_REWARD_CS(const CMD_GET_DAY_PAYMENT_REWARD_CS& from);

  inline CMD_GET_DAY_PAYMENT_REWARD_CS& operator=(const CMD_GET_DAY_PAYMENT_REWARD_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GET_DAY_PAYMENT_REWARD_CS& default_instance();

  void Swap(CMD_GET_DAY_PAYMENT_REWARD_CS* other);

  // implements Message ----------------------------------------------

  CMD_GET_DAY_PAYMENT_REWARD_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GET_DAY_PAYMENT_REWARD_CS& from);
  void MergeFrom(const CMD_GET_DAY_PAYMENT_REWARD_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 rewardId = 1;
  inline bool has_rewardid() const;
  inline void clear_rewardid();
  static const int kRewardIdFieldNumber = 1;
  inline ::google::protobuf::int32 rewardid() const;
  inline void set_rewardid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GET_DAY_PAYMENT_REWARD_CS)
 private:
  inline void set_has_rewardid();
  inline void clear_has_rewardid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 rewardid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GET_DAY_PAYMENT_REWARD_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GET_DAY_PAYMENT_REWARD_SC : public ::google::protobuf::Message {
 public:
  CMD_GET_DAY_PAYMENT_REWARD_SC();
  virtual ~CMD_GET_DAY_PAYMENT_REWARD_SC();

  CMD_GET_DAY_PAYMENT_REWARD_SC(const CMD_GET_DAY_PAYMENT_REWARD_SC& from);

  inline CMD_GET_DAY_PAYMENT_REWARD_SC& operator=(const CMD_GET_DAY_PAYMENT_REWARD_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GET_DAY_PAYMENT_REWARD_SC& default_instance();

  void Swap(CMD_GET_DAY_PAYMENT_REWARD_SC* other);

  // implements Message ----------------------------------------------

  CMD_GET_DAY_PAYMENT_REWARD_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GET_DAY_PAYMENT_REWARD_SC& from);
  void MergeFrom(const CMD_GET_DAY_PAYMENT_REWARD_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.FightAwardResult reward = 1;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::GSProto::FightAwardResult& reward() const;
  inline ::GSProto::FightAwardResult* mutable_reward();
  inline ::GSProto::FightAwardResult* release_reward();
  inline void set_allocated_reward(::GSProto::FightAwardResult* reward);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GET_DAY_PAYMENT_REWARD_SC)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::FightAwardResult* reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GET_DAY_PAYMENT_REWARD_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GET_ACCOUNT_PAYMENT_REWARD_CS : public ::google::protobuf::Message {
 public:
  CMD_GET_ACCOUNT_PAYMENT_REWARD_CS();
  virtual ~CMD_GET_ACCOUNT_PAYMENT_REWARD_CS();

  CMD_GET_ACCOUNT_PAYMENT_REWARD_CS(const CMD_GET_ACCOUNT_PAYMENT_REWARD_CS& from);

  inline CMD_GET_ACCOUNT_PAYMENT_REWARD_CS& operator=(const CMD_GET_ACCOUNT_PAYMENT_REWARD_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GET_ACCOUNT_PAYMENT_REWARD_CS& default_instance();

  void Swap(CMD_GET_ACCOUNT_PAYMENT_REWARD_CS* other);

  // implements Message ----------------------------------------------

  CMD_GET_ACCOUNT_PAYMENT_REWARD_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GET_ACCOUNT_PAYMENT_REWARD_CS& from);
  void MergeFrom(const CMD_GET_ACCOUNT_PAYMENT_REWARD_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iId = 1;
  inline bool has_iid() const;
  inline void clear_iid();
  static const int kIIdFieldNumber = 1;
  inline ::google::protobuf::int32 iid() const;
  inline void set_iid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GET_ACCOUNT_PAYMENT_REWARD_CS)
 private:
  inline void set_has_iid();
  inline void clear_has_iid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GET_ACCOUNT_PAYMENT_REWARD_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GET_ACCOUNT_PAYMENT_REWARD_SC : public ::google::protobuf::Message {
 public:
  CMD_GET_ACCOUNT_PAYMENT_REWARD_SC();
  virtual ~CMD_GET_ACCOUNT_PAYMENT_REWARD_SC();

  CMD_GET_ACCOUNT_PAYMENT_REWARD_SC(const CMD_GET_ACCOUNT_PAYMENT_REWARD_SC& from);

  inline CMD_GET_ACCOUNT_PAYMENT_REWARD_SC& operator=(const CMD_GET_ACCOUNT_PAYMENT_REWARD_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GET_ACCOUNT_PAYMENT_REWARD_SC& default_instance();

  void Swap(CMD_GET_ACCOUNT_PAYMENT_REWARD_SC* other);

  // implements Message ----------------------------------------------

  CMD_GET_ACCOUNT_PAYMENT_REWARD_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GET_ACCOUNT_PAYMENT_REWARD_SC& from);
  void MergeFrom(const CMD_GET_ACCOUNT_PAYMENT_REWARD_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.FightAwardResult reward = 1;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::GSProto::FightAwardResult& reward() const;
  inline ::GSProto::FightAwardResult* mutable_reward();
  inline ::GSProto::FightAwardResult* release_reward();
  inline void set_allocated_reward(::GSProto::FightAwardResult* reward);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GET_ACCOUNT_PAYMENT_REWARD_SC)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::FightAwardResult* reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GET_ACCOUNT_PAYMENT_REWARD_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_OPERATE_ACTIVE_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_OPERATE_ACTIVE_SC();
  virtual ~CMD_QUERY_OPERATE_ACTIVE_SC();

  CMD_QUERY_OPERATE_ACTIVE_SC(const CMD_QUERY_OPERATE_ACTIVE_SC& from);

  inline CMD_QUERY_OPERATE_ACTIVE_SC& operator=(const CMD_QUERY_OPERATE_ACTIVE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_OPERATE_ACTIVE_SC& default_instance();

  void Swap(CMD_QUERY_OPERATE_ACTIVE_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_OPERATE_ACTIVE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_OPERATE_ACTIVE_SC& from);
  void MergeFrom(const CMD_QUERY_OPERATE_ACTIVE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 szOpenActive = 1;
  inline int szopenactive_size() const;
  inline void clear_szopenactive();
  static const int kSzOpenActiveFieldNumber = 1;
  inline ::google::protobuf::int32 szopenactive(int index) const;
  inline void set_szopenactive(int index, ::google::protobuf::int32 value);
  inline void add_szopenactive(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      szopenactive() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_szopenactive();

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_OPERATE_ACTIVE_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > szopenactive_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_OPERATE_ACTIVE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_OPERATE_TELPHONE_STREAM_CS : public ::google::protobuf::Message {
 public:
  CMD_OPERATE_TELPHONE_STREAM_CS();
  virtual ~CMD_OPERATE_TELPHONE_STREAM_CS();

  CMD_OPERATE_TELPHONE_STREAM_CS(const CMD_OPERATE_TELPHONE_STREAM_CS& from);

  inline CMD_OPERATE_TELPHONE_STREAM_CS& operator=(const CMD_OPERATE_TELPHONE_STREAM_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_OPERATE_TELPHONE_STREAM_CS& default_instance();

  void Swap(CMD_OPERATE_TELPHONE_STREAM_CS* other);

  // implements Message ----------------------------------------------

  CMD_OPERATE_TELPHONE_STREAM_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_OPERATE_TELPHONE_STREAM_CS& from);
  void MergeFrom(const CMD_OPERATE_TELPHONE_STREAM_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strTelPhoneNum = 1;
  inline bool has_strtelphonenum() const;
  inline void clear_strtelphonenum();
  static const int kStrTelPhoneNumFieldNumber = 1;
  inline const ::std::string& strtelphonenum() const;
  inline void set_strtelphonenum(const ::std::string& value);
  inline void set_strtelphonenum(const char* value);
  inline void set_strtelphonenum(const char* value, size_t size);
  inline ::std::string* mutable_strtelphonenum();
  inline ::std::string* release_strtelphonenum();
  inline void set_allocated_strtelphonenum(::std::string* strtelphonenum);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_OPERATE_TELPHONE_STREAM_CS)
 private:
  inline void set_has_strtelphonenum();
  inline void clear_has_strtelphonenum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strtelphonenum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_OPERATE_TELPHONE_STREAM_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_QUERY_ACCOUNT_LOGIN_IN_SC : public ::google::protobuf::Message {
 public:
  CMD_QUERY_ACCOUNT_LOGIN_IN_SC();
  virtual ~CMD_QUERY_ACCOUNT_LOGIN_IN_SC();

  CMD_QUERY_ACCOUNT_LOGIN_IN_SC(const CMD_QUERY_ACCOUNT_LOGIN_IN_SC& from);

  inline CMD_QUERY_ACCOUNT_LOGIN_IN_SC& operator=(const CMD_QUERY_ACCOUNT_LOGIN_IN_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_QUERY_ACCOUNT_LOGIN_IN_SC& default_instance();

  void Swap(CMD_QUERY_ACCOUNT_LOGIN_IN_SC* other);

  // implements Message ----------------------------------------------

  CMD_QUERY_ACCOUNT_LOGIN_IN_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_QUERY_ACCOUNT_LOGIN_IN_SC& from);
  void MergeFrom(const CMD_QUERY_ACCOUNT_LOGIN_IN_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 szAccount = 1;
  inline int szaccount_size() const;
  inline void clear_szaccount();
  static const int kSzAccountFieldNumber = 1;
  inline ::google::protobuf::int32 szaccount(int index) const;
  inline void set_szaccount(int index, ::google::protobuf::int32 value);
  inline void add_szaccount(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      szaccount() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_szaccount();

  // required int32 iAccLoginCount = 2;
  inline bool has_iacclogincount() const;
  inline void clear_iacclogincount();
  static const int kIAccLoginCountFieldNumber = 2;
  inline ::google::protobuf::int32 iacclogincount() const;
  inline void set_iacclogincount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_QUERY_ACCOUNT_LOGIN_IN_SC)
 private:
  inline void set_has_iacclogincount();
  inline void clear_has_iacclogincount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > szaccount_;
  ::google::protobuf::int32 iacclogincount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_QUERY_ACCOUNT_LOGIN_IN_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GET_ACCOUNT_REWARD_CS : public ::google::protobuf::Message {
 public:
  CMD_GET_ACCOUNT_REWARD_CS();
  virtual ~CMD_GET_ACCOUNT_REWARD_CS();

  CMD_GET_ACCOUNT_REWARD_CS(const CMD_GET_ACCOUNT_REWARD_CS& from);

  inline CMD_GET_ACCOUNT_REWARD_CS& operator=(const CMD_GET_ACCOUNT_REWARD_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GET_ACCOUNT_REWARD_CS& default_instance();

  void Swap(CMD_GET_ACCOUNT_REWARD_CS* other);

  // implements Message ----------------------------------------------

  CMD_GET_ACCOUNT_REWARD_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GET_ACCOUNT_REWARD_CS& from);
  void MergeFrom(const CMD_GET_ACCOUNT_REWARD_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iAccountTimes = 1;
  inline bool has_iaccounttimes() const;
  inline void clear_iaccounttimes();
  static const int kIAccountTimesFieldNumber = 1;
  inline ::google::protobuf::int32 iaccounttimes() const;
  inline void set_iaccounttimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GET_ACCOUNT_REWARD_CS)
 private:
  inline void set_has_iaccounttimes();
  inline void clear_has_iaccounttimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iaccounttimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GET_ACCOUNT_REWARD_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_GET_ACCOUNT_REWARD_SC : public ::google::protobuf::Message {
 public:
  CMD_GET_ACCOUNT_REWARD_SC();
  virtual ~CMD_GET_ACCOUNT_REWARD_SC();

  CMD_GET_ACCOUNT_REWARD_SC(const CMD_GET_ACCOUNT_REWARD_SC& from);

  inline CMD_GET_ACCOUNT_REWARD_SC& operator=(const CMD_GET_ACCOUNT_REWARD_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_GET_ACCOUNT_REWARD_SC& default_instance();

  void Swap(CMD_GET_ACCOUNT_REWARD_SC* other);

  // implements Message ----------------------------------------------

  CMD_GET_ACCOUNT_REWARD_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_GET_ACCOUNT_REWARD_SC& from);
  void MergeFrom(const CMD_GET_ACCOUNT_REWARD_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .GSProto.FightAwardResult reward = 1;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline const ::GSProto::FightAwardResult& reward() const;
  inline ::GSProto::FightAwardResult* mutable_reward();
  inline ::GSProto::FightAwardResult* release_reward();
  inline void set_allocated_reward(::GSProto::FightAwardResult* reward);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_GET_ACCOUNT_REWARD_SC)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GSProto::FightAwardResult* reward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_GET_ACCOUNT_REWARD_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_VIVO_ALOGIN_CS : public ::google::protobuf::Message {
 public:
  CMD_VIVO_ALOGIN_CS();
  virtual ~CMD_VIVO_ALOGIN_CS();

  CMD_VIVO_ALOGIN_CS(const CMD_VIVO_ALOGIN_CS& from);

  inline CMD_VIVO_ALOGIN_CS& operator=(const CMD_VIVO_ALOGIN_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_VIVO_ALOGIN_CS& default_instance();

  void Swap(CMD_VIVO_ALOGIN_CS* other);

  // implements Message ----------------------------------------------

  CMD_VIVO_ALOGIN_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_VIVO_ALOGIN_CS& from);
  void MergeFrom(const CMD_VIVO_ALOGIN_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string strToken = 1;
  inline bool has_strtoken() const;
  inline void clear_strtoken();
  static const int kStrTokenFieldNumber = 1;
  inline const ::std::string& strtoken() const;
  inline void set_strtoken(const ::std::string& value);
  inline void set_strtoken(const char* value);
  inline void set_strtoken(const char* value, size_t size);
  inline ::std::string* mutable_strtoken();
  inline ::std::string* release_strtoken();
  inline void set_allocated_strtoken(::std::string* strtoken);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_VIVO_ALOGIN_CS)
 private:
  inline void set_has_strtoken();
  inline void clear_has_strtoken();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strtoken_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_VIVO_ALOGIN_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_VIVO_ALOGIN_SC : public ::google::protobuf::Message {
 public:
  CMD_VIVO_ALOGIN_SC();
  virtual ~CMD_VIVO_ALOGIN_SC();

  CMD_VIVO_ALOGIN_SC(const CMD_VIVO_ALOGIN_SC& from);

  inline CMD_VIVO_ALOGIN_SC& operator=(const CMD_VIVO_ALOGIN_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_VIVO_ALOGIN_SC& default_instance();

  void Swap(CMD_VIVO_ALOGIN_SC* other);

  // implements Message ----------------------------------------------

  CMD_VIVO_ALOGIN_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_VIVO_ALOGIN_SC& from);
  void MergeFrom(const CMD_VIVO_ALOGIN_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string struid = 1;
  inline bool has_struid() const;
  inline void clear_struid();
  static const int kStruidFieldNumber = 1;
  inline const ::std::string& struid() const;
  inline void set_struid(const ::std::string& value);
  inline void set_struid(const char* value);
  inline void set_struid(const char* value, size_t size);
  inline ::std::string* mutable_struid();
  inline ::std::string* release_struid();
  inline void set_allocated_struid(::std::string* struid);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_VIVO_ALOGIN_SC)
 private:
  inline void set_has_struid();
  inline void clear_has_struid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* struid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_VIVO_ALOGIN_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_VIVO_BUY_GOOD_CS : public ::google::protobuf::Message {
 public:
  CMD_VIVO_BUY_GOOD_CS();
  virtual ~CMD_VIVO_BUY_GOOD_CS();

  CMD_VIVO_BUY_GOOD_CS(const CMD_VIVO_BUY_GOOD_CS& from);

  inline CMD_VIVO_BUY_GOOD_CS& operator=(const CMD_VIVO_BUY_GOOD_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_VIVO_BUY_GOOD_CS& default_instance();

  void Swap(CMD_VIVO_BUY_GOOD_CS* other);

  // implements Message ----------------------------------------------

  CMD_VIVO_BUY_GOOD_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_VIVO_BUY_GOOD_CS& from);
  void MergeFrom(const CMD_VIVO_BUY_GOOD_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iPrice = 1;
  inline bool has_iprice() const;
  inline void clear_iprice();
  static const int kIPriceFieldNumber = 1;
  inline ::google::protobuf::int32 iprice() const;
  inline void set_iprice(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_VIVO_BUY_GOOD_CS)
 private:
  inline void set_has_iprice();
  inline void clear_has_iprice();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 iprice_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_VIVO_BUY_GOOD_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_VIVO_BUY_GOOD_SC : public ::google::protobuf::Message {
 public:
  CMD_VIVO_BUY_GOOD_SC();
  virtual ~CMD_VIVO_BUY_GOOD_SC();

  CMD_VIVO_BUY_GOOD_SC(const CMD_VIVO_BUY_GOOD_SC& from);

  inline CMD_VIVO_BUY_GOOD_SC& operator=(const CMD_VIVO_BUY_GOOD_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_VIVO_BUY_GOOD_SC& default_instance();

  void Swap(CMD_VIVO_BUY_GOOD_SC* other);

  // implements Message ----------------------------------------------

  CMD_VIVO_BUY_GOOD_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_VIVO_BUY_GOOD_SC& from);
  void MergeFrom(const CMD_VIVO_BUY_GOOD_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iPrice = 1;
  inline bool has_iprice() const;
  inline void clear_iprice();
  static const int kIPriceFieldNumber = 1;
  inline ::google::protobuf::int32 iprice() const;
  inline void set_iprice(::google::protobuf::int32 value);

  // required string orderNumber = 2;
  inline bool has_ordernumber() const;
  inline void clear_ordernumber();
  static const int kOrderNumberFieldNumber = 2;
  inline const ::std::string& ordernumber() const;
  inline void set_ordernumber(const ::std::string& value);
  inline void set_ordernumber(const char* value);
  inline void set_ordernumber(const char* value, size_t size);
  inline ::std::string* mutable_ordernumber();
  inline ::std::string* release_ordernumber();
  inline void set_allocated_ordernumber(::std::string* ordernumber);

  // required string accessKey = 3;
  inline bool has_accesskey() const;
  inline void clear_accesskey();
  static const int kAccessKeyFieldNumber = 3;
  inline const ::std::string& accesskey() const;
  inline void set_accesskey(const ::std::string& value);
  inline void set_accesskey(const char* value);
  inline void set_accesskey(const char* value, size_t size);
  inline ::std::string* mutable_accesskey();
  inline ::std::string* release_accesskey();
  inline void set_allocated_accesskey(::std::string* accesskey);

  // required string appId = 4;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppIdFieldNumber = 4;
  inline const ::std::string& appid() const;
  inline void set_appid(const ::std::string& value);
  inline void set_appid(const char* value);
  inline void set_appid(const char* value, size_t size);
  inline ::std::string* mutable_appid();
  inline ::std::string* release_appid();
  inline void set_allocated_appid(::std::string* appid);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_VIVO_BUY_GOOD_SC)
 private:
  inline void set_has_iprice();
  inline void clear_has_iprice();
  inline void set_has_ordernumber();
  inline void clear_has_ordernumber();
  inline void set_has_accesskey();
  inline void clear_has_accesskey();
  inline void set_has_appid();
  inline void clear_has_appid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ordernumber_;
  ::std::string* accesskey_;
  ::std::string* appid_;
  ::google::protobuf::int32 iprice_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_VIVO_BUY_GOOD_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_IOS_BUY_GOODS_CS : public ::google::protobuf::Message {
 public:
  CMD_IOS_BUY_GOODS_CS();
  virtual ~CMD_IOS_BUY_GOODS_CS();

  CMD_IOS_BUY_GOODS_CS(const CMD_IOS_BUY_GOODS_CS& from);

  inline CMD_IOS_BUY_GOODS_CS& operator=(const CMD_IOS_BUY_GOODS_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_IOS_BUY_GOODS_CS& default_instance();

  void Swap(CMD_IOS_BUY_GOODS_CS* other);

  // implements Message ----------------------------------------------

  CMD_IOS_BUY_GOODS_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_IOS_BUY_GOODS_CS& from);
  void MergeFrom(const CMD_IOS_BUY_GOODS_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iPrice = 1;
  inline bool has_iprice() const;
  inline void clear_iprice();
  static const int kIPriceFieldNumber = 1;
  inline ::google::protobuf::int32 iprice() const;
  inline void set_iprice(::google::protobuf::int32 value);

  // required string receipt = 2;
  inline bool has_receipt() const;
  inline void clear_receipt();
  static const int kReceiptFieldNumber = 2;
  inline const ::std::string& receipt() const;
  inline void set_receipt(const ::std::string& value);
  inline void set_receipt(const char* value);
  inline void set_receipt(const char* value, size_t size);
  inline ::std::string* mutable_receipt();
  inline ::std::string* release_receipt();
  inline void set_allocated_receipt(::std::string* receipt);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_IOS_BUY_GOODS_CS)
 private:
  inline void set_has_iprice();
  inline void clear_has_iprice();
  inline void set_has_receipt();
  inline void clear_has_receipt();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* receipt_;
  ::google::protobuf::int32 iprice_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_IOS_BUY_GOODS_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_IOS_BUY_GOODS_SC : public ::google::protobuf::Message {
 public:
  CMD_IOS_BUY_GOODS_SC();
  virtual ~CMD_IOS_BUY_GOODS_SC();

  CMD_IOS_BUY_GOODS_SC(const CMD_IOS_BUY_GOODS_SC& from);

  inline CMD_IOS_BUY_GOODS_SC& operator=(const CMD_IOS_BUY_GOODS_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_IOS_BUY_GOODS_SC& default_instance();

  void Swap(CMD_IOS_BUY_GOODS_SC* other);

  // implements Message ----------------------------------------------

  CMD_IOS_BUY_GOODS_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_IOS_BUY_GOODS_SC& from);
  void MergeFrom(const CMD_IOS_BUY_GOODS_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iPrice = 1;
  inline bool has_iprice() const;
  inline void clear_iprice();
  static const int kIPriceFieldNumber = 1;
  inline ::google::protobuf::int32 iprice() const;
  inline void set_iprice(::google::protobuf::int32 value);

  // required string receipt = 2;
  inline bool has_receipt() const;
  inline void clear_receipt();
  static const int kReceiptFieldNumber = 2;
  inline const ::std::string& receipt() const;
  inline void set_receipt(const ::std::string& value);
  inline void set_receipt(const char* value);
  inline void set_receipt(const char* value, size_t size);
  inline ::std::string* mutable_receipt();
  inline ::std::string* release_receipt();
  inline void set_allocated_receipt(::std::string* receipt);

  // required int32 errorCode = 3;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorCodeFieldNumber = 3;
  inline ::google::protobuf::int32 errorcode() const;
  inline void set_errorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GSProto.CMD_IOS_BUY_GOODS_SC)
 private:
  inline void set_has_iprice();
  inline void clear_has_iprice();
  inline void set_has_receipt();
  inline void clear_has_receipt();
  inline void set_has_errorcode();
  inline void clear_has_errorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* receipt_;
  ::google::protobuf::int32 iprice_;
  ::google::protobuf::int32 errorcode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameServer_2eproto();
  friend void protobuf_AssignDesc_GameServer_2eproto();
  friend void protobuf_ShutdownFile_GameServer_2eproto();

  void InitAsDefaultInstance();
  static CMD_IOS_BUY_GOODS_SC* default_instance_;
};
// ===================================================================


// ===================================================================

// SCMessage

// required int32 iCmd = 1;
inline bool SCMessage::has_icmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SCMessage::set_has_icmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SCMessage::clear_has_icmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SCMessage::clear_icmd() {
  icmd_ = 0;
  clear_has_icmd();
}
inline ::google::protobuf::int32 SCMessage::icmd() const {
  return icmd_;
}
inline void SCMessage::set_icmd(::google::protobuf::int32 value) {
  set_has_icmd();
  icmd_ = value;
}

// optional bytes strMsgBody = 2;
inline bool SCMessage::has_strmsgbody() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SCMessage::set_has_strmsgbody() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SCMessage::clear_has_strmsgbody() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SCMessage::clear_strmsgbody() {
  if (strmsgbody_ != &::google::protobuf::internal::kEmptyString) {
    strmsgbody_->clear();
  }
  clear_has_strmsgbody();
}
inline const ::std::string& SCMessage::strmsgbody() const {
  return *strmsgbody_;
}
inline void SCMessage::set_strmsgbody(const ::std::string& value) {
  set_has_strmsgbody();
  if (strmsgbody_ == &::google::protobuf::internal::kEmptyString) {
    strmsgbody_ = new ::std::string;
  }
  strmsgbody_->assign(value);
}
inline void SCMessage::set_strmsgbody(const char* value) {
  set_has_strmsgbody();
  if (strmsgbody_ == &::google::protobuf::internal::kEmptyString) {
    strmsgbody_ = new ::std::string;
  }
  strmsgbody_->assign(value);
}
inline void SCMessage::set_strmsgbody(const void* value, size_t size) {
  set_has_strmsgbody();
  if (strmsgbody_ == &::google::protobuf::internal::kEmptyString) {
    strmsgbody_ = new ::std::string;
  }
  strmsgbody_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SCMessage::mutable_strmsgbody() {
  set_has_strmsgbody();
  if (strmsgbody_ == &::google::protobuf::internal::kEmptyString) {
    strmsgbody_ = new ::std::string;
  }
  return strmsgbody_;
}
inline ::std::string* SCMessage::release_strmsgbody() {
  clear_has_strmsgbody();
  if (strmsgbody_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmsgbody_;
    strmsgbody_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SCMessage::set_allocated_strmsgbody(::std::string* strmsgbody) {
  if (strmsgbody_ != &::google::protobuf::internal::kEmptyString) {
    delete strmsgbody_;
  }
  if (strmsgbody) {
    set_has_strmsgbody();
    strmsgbody_ = strmsgbody;
  } else {
    clear_has_strmsgbody();
    strmsgbody_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CSMessage

// required int32 iCmd = 1;
inline bool CSMessage::has_icmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMessage::set_has_icmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMessage::clear_has_icmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMessage::clear_icmd() {
  icmd_ = 0;
  clear_has_icmd();
}
inline ::google::protobuf::int32 CSMessage::icmd() const {
  return icmd_;
}
inline void CSMessage::set_icmd(::google::protobuf::int32 value) {
  set_has_icmd();
  icmd_ = value;
}

// optional bytes strMsgBody = 2;
inline bool CSMessage::has_strmsgbody() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMessage::set_has_strmsgbody() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMessage::clear_has_strmsgbody() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMessage::clear_strmsgbody() {
  if (strmsgbody_ != &::google::protobuf::internal::kEmptyString) {
    strmsgbody_->clear();
  }
  clear_has_strmsgbody();
}
inline const ::std::string& CSMessage::strmsgbody() const {
  return *strmsgbody_;
}
inline void CSMessage::set_strmsgbody(const ::std::string& value) {
  set_has_strmsgbody();
  if (strmsgbody_ == &::google::protobuf::internal::kEmptyString) {
    strmsgbody_ = new ::std::string;
  }
  strmsgbody_->assign(value);
}
inline void CSMessage::set_strmsgbody(const char* value) {
  set_has_strmsgbody();
  if (strmsgbody_ == &::google::protobuf::internal::kEmptyString) {
    strmsgbody_ = new ::std::string;
  }
  strmsgbody_->assign(value);
}
inline void CSMessage::set_strmsgbody(const void* value, size_t size) {
  set_has_strmsgbody();
  if (strmsgbody_ == &::google::protobuf::internal::kEmptyString) {
    strmsgbody_ = new ::std::string;
  }
  strmsgbody_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CSMessage::mutable_strmsgbody() {
  set_has_strmsgbody();
  if (strmsgbody_ == &::google::protobuf::internal::kEmptyString) {
    strmsgbody_ = new ::std::string;
  }
  return strmsgbody_;
}
inline ::std::string* CSMessage::release_strmsgbody() {
  clear_has_strmsgbody();
  if (strmsgbody_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmsgbody_;
    strmsgbody_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CSMessage::set_allocated_strmsgbody(::std::string* strmsgbody) {
  if (strmsgbody_ != &::google::protobuf::internal::kEmptyString) {
    delete strmsgbody_;
  }
  if (strmsgbody) {
    set_has_strmsgbody();
    strmsgbody_ = strmsgbody;
  } else {
    clear_has_strmsgbody();
    strmsgbody_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Cmd_Sc_Error

// required string strErrorMsg = 1;
inline bool Cmd_Sc_Error::has_strerrormsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_Error::set_has_strerrormsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_Error::clear_has_strerrormsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_Error::clear_strerrormsg() {
  if (strerrormsg_ != &::google::protobuf::internal::kEmptyString) {
    strerrormsg_->clear();
  }
  clear_has_strerrormsg();
}
inline const ::std::string& Cmd_Sc_Error::strerrormsg() const {
  return *strerrormsg_;
}
inline void Cmd_Sc_Error::set_strerrormsg(const ::std::string& value) {
  set_has_strerrormsg();
  if (strerrormsg_ == &::google::protobuf::internal::kEmptyString) {
    strerrormsg_ = new ::std::string;
  }
  strerrormsg_->assign(value);
}
inline void Cmd_Sc_Error::set_strerrormsg(const char* value) {
  set_has_strerrormsg();
  if (strerrormsg_ == &::google::protobuf::internal::kEmptyString) {
    strerrormsg_ = new ::std::string;
  }
  strerrormsg_->assign(value);
}
inline void Cmd_Sc_Error::set_strerrormsg(const char* value, size_t size) {
  set_has_strerrormsg();
  if (strerrormsg_ == &::google::protobuf::internal::kEmptyString) {
    strerrormsg_ = new ::std::string;
  }
  strerrormsg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Cmd_Sc_Error::mutable_strerrormsg() {
  set_has_strerrormsg();
  if (strerrormsg_ == &::google::protobuf::internal::kEmptyString) {
    strerrormsg_ = new ::std::string;
  }
  return strerrormsg_;
}
inline ::std::string* Cmd_Sc_Error::release_strerrormsg() {
  clear_has_strerrormsg();
  if (strerrormsg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strerrormsg_;
    strerrormsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Cmd_Sc_Error::set_allocated_strerrormsg(::std::string* strerrormsg) {
  if (strerrormsg_ != &::google::protobuf::internal::kEmptyString) {
    delete strerrormsg_;
  }
  if (strerrormsg) {
    set_has_strerrormsg();
    strerrormsg_ = strerrormsg;
  } else {
    clear_has_strerrormsg();
    strerrormsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 iType = 2;
inline bool Cmd_Sc_Error::has_itype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Sc_Error::set_has_itype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Sc_Error::clear_has_itype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Sc_Error::clear_itype() {
  itype_ = 0;
  clear_has_itype();
}
inline ::google::protobuf::int32 Cmd_Sc_Error::itype() const {
  return itype_;
}
inline void Cmd_Sc_Error::set_itype(::google::protobuf::int32 value) {
  set_has_itype();
  itype_ = value;
}

// -------------------------------------------------------------------

// Cmd_Cs_Alogin

// required int32 iIsVersionCheck = 1;
inline bool Cmd_Cs_Alogin::has_iisversioncheck() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_Alogin::set_has_iisversioncheck() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_Alogin::clear_has_iisversioncheck() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_Alogin::clear_iisversioncheck() {
  iisversioncheck_ = 0;
  clear_has_iisversioncheck();
}
inline ::google::protobuf::int32 Cmd_Cs_Alogin::iisversioncheck() const {
  return iisversioncheck_;
}
inline void Cmd_Cs_Alogin::set_iisversioncheck(::google::protobuf::int32 value) {
  set_has_iisversioncheck();
  iisversioncheck_ = value;
}

// required int32 iVersionType = 2;
inline bool Cmd_Cs_Alogin::has_iversiontype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Cs_Alogin::set_has_iversiontype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Cs_Alogin::clear_has_iversiontype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Cs_Alogin::clear_iversiontype() {
  iversiontype_ = 0;
  clear_has_iversiontype();
}
inline ::google::protobuf::int32 Cmd_Cs_Alogin::iversiontype() const {
  return iversiontype_;
}
inline void Cmd_Cs_Alogin::set_iversiontype(::google::protobuf::int32 value) {
  set_has_iversiontype();
  iversiontype_ = value;
}

// required int32 iVersionMain = 3;
inline bool Cmd_Cs_Alogin::has_iversionmain() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Cmd_Cs_Alogin::set_has_iversionmain() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Cmd_Cs_Alogin::clear_has_iversionmain() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Cmd_Cs_Alogin::clear_iversionmain() {
  iversionmain_ = 0;
  clear_has_iversionmain();
}
inline ::google::protobuf::int32 Cmd_Cs_Alogin::iversionmain() const {
  return iversionmain_;
}
inline void Cmd_Cs_Alogin::set_iversionmain(::google::protobuf::int32 value) {
  set_has_iversionmain();
  iversionmain_ = value;
}

// required int32 iVersionFeature = 4;
inline bool Cmd_Cs_Alogin::has_iversionfeature() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Cmd_Cs_Alogin::set_has_iversionfeature() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Cmd_Cs_Alogin::clear_has_iversionfeature() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Cmd_Cs_Alogin::clear_iversionfeature() {
  iversionfeature_ = 0;
  clear_has_iversionfeature();
}
inline ::google::protobuf::int32 Cmd_Cs_Alogin::iversionfeature() const {
  return iversionfeature_;
}
inline void Cmd_Cs_Alogin::set_iversionfeature(::google::protobuf::int32 value) {
  set_has_iversionfeature();
  iversionfeature_ = value;
}

// required int32 iVersionBuild = 5;
inline bool Cmd_Cs_Alogin::has_iversionbuild() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Cmd_Cs_Alogin::set_has_iversionbuild() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Cmd_Cs_Alogin::clear_has_iversionbuild() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Cmd_Cs_Alogin::clear_iversionbuild() {
  iversionbuild_ = 0;
  clear_has_iversionbuild();
}
inline ::google::protobuf::int32 Cmd_Cs_Alogin::iversionbuild() const {
  return iversionbuild_;
}
inline void Cmd_Cs_Alogin::set_iversionbuild(::google::protobuf::int32 value) {
  set_has_iversionbuild();
  iversionbuild_ = value;
}

// required string strChannelFlag = 6;
inline bool Cmd_Cs_Alogin::has_strchannelflag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Cmd_Cs_Alogin::set_has_strchannelflag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Cmd_Cs_Alogin::clear_has_strchannelflag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Cmd_Cs_Alogin::clear_strchannelflag() {
  if (strchannelflag_ != &::google::protobuf::internal::kEmptyString) {
    strchannelflag_->clear();
  }
  clear_has_strchannelflag();
}
inline const ::std::string& Cmd_Cs_Alogin::strchannelflag() const {
  return *strchannelflag_;
}
inline void Cmd_Cs_Alogin::set_strchannelflag(const ::std::string& value) {
  set_has_strchannelflag();
  if (strchannelflag_ == &::google::protobuf::internal::kEmptyString) {
    strchannelflag_ = new ::std::string;
  }
  strchannelflag_->assign(value);
}
inline void Cmd_Cs_Alogin::set_strchannelflag(const char* value) {
  set_has_strchannelflag();
  if (strchannelflag_ == &::google::protobuf::internal::kEmptyString) {
    strchannelflag_ = new ::std::string;
  }
  strchannelflag_->assign(value);
}
inline void Cmd_Cs_Alogin::set_strchannelflag(const char* value, size_t size) {
  set_has_strchannelflag();
  if (strchannelflag_ == &::google::protobuf::internal::kEmptyString) {
    strchannelflag_ = new ::std::string;
  }
  strchannelflag_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Cmd_Cs_Alogin::mutable_strchannelflag() {
  set_has_strchannelflag();
  if (strchannelflag_ == &::google::protobuf::internal::kEmptyString) {
    strchannelflag_ = new ::std::string;
  }
  return strchannelflag_;
}
inline ::std::string* Cmd_Cs_Alogin::release_strchannelflag() {
  clear_has_strchannelflag();
  if (strchannelflag_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strchannelflag_;
    strchannelflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Cmd_Cs_Alogin::set_allocated_strchannelflag(::std::string* strchannelflag) {
  if (strchannelflag_ != &::google::protobuf::internal::kEmptyString) {
    delete strchannelflag_;
  }
  if (strchannelflag) {
    set_has_strchannelflag();
    strchannelflag_ = strchannelflag;
  } else {
    clear_has_strchannelflag();
    strchannelflag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strChannel = 7;
inline bool Cmd_Cs_Alogin::has_strchannel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Cmd_Cs_Alogin::set_has_strchannel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Cmd_Cs_Alogin::clear_has_strchannel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Cmd_Cs_Alogin::clear_strchannel() {
  if (strchannel_ != &::google::protobuf::internal::kEmptyString) {
    strchannel_->clear();
  }
  clear_has_strchannel();
}
inline const ::std::string& Cmd_Cs_Alogin::strchannel() const {
  return *strchannel_;
}
inline void Cmd_Cs_Alogin::set_strchannel(const ::std::string& value) {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  strchannel_->assign(value);
}
inline void Cmd_Cs_Alogin::set_strchannel(const char* value) {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  strchannel_->assign(value);
}
inline void Cmd_Cs_Alogin::set_strchannel(const char* value, size_t size) {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  strchannel_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Cmd_Cs_Alogin::mutable_strchannel() {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  return strchannel_;
}
inline ::std::string* Cmd_Cs_Alogin::release_strchannel() {
  clear_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strchannel_;
    strchannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Cmd_Cs_Alogin::set_allocated_strchannel(::std::string* strchannel) {
  if (strchannel_ != &::google::protobuf::internal::kEmptyString) {
    delete strchannel_;
  }
  if (strchannel) {
    set_has_strchannel();
    strchannel_ = strchannel;
  } else {
    clear_has_strchannel();
    strchannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strAccessKey = 8;
inline bool Cmd_Cs_Alogin::has_straccesskey() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Cmd_Cs_Alogin::set_has_straccesskey() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Cmd_Cs_Alogin::clear_has_straccesskey() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Cmd_Cs_Alogin::clear_straccesskey() {
  if (straccesskey_ != &::google::protobuf::internal::kEmptyString) {
    straccesskey_->clear();
  }
  clear_has_straccesskey();
}
inline const ::std::string& Cmd_Cs_Alogin::straccesskey() const {
  return *straccesskey_;
}
inline void Cmd_Cs_Alogin::set_straccesskey(const ::std::string& value) {
  set_has_straccesskey();
  if (straccesskey_ == &::google::protobuf::internal::kEmptyString) {
    straccesskey_ = new ::std::string;
  }
  straccesskey_->assign(value);
}
inline void Cmd_Cs_Alogin::set_straccesskey(const char* value) {
  set_has_straccesskey();
  if (straccesskey_ == &::google::protobuf::internal::kEmptyString) {
    straccesskey_ = new ::std::string;
  }
  straccesskey_->assign(value);
}
inline void Cmd_Cs_Alogin::set_straccesskey(const char* value, size_t size) {
  set_has_straccesskey();
  if (straccesskey_ == &::google::protobuf::internal::kEmptyString) {
    straccesskey_ = new ::std::string;
  }
  straccesskey_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Cmd_Cs_Alogin::mutable_straccesskey() {
  set_has_straccesskey();
  if (straccesskey_ == &::google::protobuf::internal::kEmptyString) {
    straccesskey_ = new ::std::string;
  }
  return straccesskey_;
}
inline ::std::string* Cmd_Cs_Alogin::release_straccesskey() {
  clear_has_straccesskey();
  if (straccesskey_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = straccesskey_;
    straccesskey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Cmd_Cs_Alogin::set_allocated_straccesskey(::std::string* straccesskey) {
  if (straccesskey_ != &::google::protobuf::internal::kEmptyString) {
    delete straccesskey_;
  }
  if (straccesskey) {
    set_has_straccesskey();
    straccesskey_ = straccesskey;
  } else {
    clear_has_straccesskey();
    straccesskey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strPayToken = 9;
inline bool Cmd_Cs_Alogin::has_strpaytoken() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Cmd_Cs_Alogin::set_has_strpaytoken() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Cmd_Cs_Alogin::clear_has_strpaytoken() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Cmd_Cs_Alogin::clear_strpaytoken() {
  if (strpaytoken_ != &::google::protobuf::internal::kEmptyString) {
    strpaytoken_->clear();
  }
  clear_has_strpaytoken();
}
inline const ::std::string& Cmd_Cs_Alogin::strpaytoken() const {
  return *strpaytoken_;
}
inline void Cmd_Cs_Alogin::set_strpaytoken(const ::std::string& value) {
  set_has_strpaytoken();
  if (strpaytoken_ == &::google::protobuf::internal::kEmptyString) {
    strpaytoken_ = new ::std::string;
  }
  strpaytoken_->assign(value);
}
inline void Cmd_Cs_Alogin::set_strpaytoken(const char* value) {
  set_has_strpaytoken();
  if (strpaytoken_ == &::google::protobuf::internal::kEmptyString) {
    strpaytoken_ = new ::std::string;
  }
  strpaytoken_->assign(value);
}
inline void Cmd_Cs_Alogin::set_strpaytoken(const char* value, size_t size) {
  set_has_strpaytoken();
  if (strpaytoken_ == &::google::protobuf::internal::kEmptyString) {
    strpaytoken_ = new ::std::string;
  }
  strpaytoken_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Cmd_Cs_Alogin::mutable_strpaytoken() {
  set_has_strpaytoken();
  if (strpaytoken_ == &::google::protobuf::internal::kEmptyString) {
    strpaytoken_ = new ::std::string;
  }
  return strpaytoken_;
}
inline ::std::string* Cmd_Cs_Alogin::release_strpaytoken() {
  clear_has_strpaytoken();
  if (strpaytoken_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strpaytoken_;
    strpaytoken_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Cmd_Cs_Alogin::set_allocated_strpaytoken(::std::string* strpaytoken) {
  if (strpaytoken_ != &::google::protobuf::internal::kEmptyString) {
    delete strpaytoken_;
  }
  if (strpaytoken) {
    set_has_strpaytoken();
    strpaytoken_ = strpaytoken;
  } else {
    clear_has_strpaytoken();
    strpaytoken_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strPf = 10;
inline bool Cmd_Cs_Alogin::has_strpf() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Cmd_Cs_Alogin::set_has_strpf() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Cmd_Cs_Alogin::clear_has_strpf() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Cmd_Cs_Alogin::clear_strpf() {
  if (strpf_ != &::google::protobuf::internal::kEmptyString) {
    strpf_->clear();
  }
  clear_has_strpf();
}
inline const ::std::string& Cmd_Cs_Alogin::strpf() const {
  return *strpf_;
}
inline void Cmd_Cs_Alogin::set_strpf(const ::std::string& value) {
  set_has_strpf();
  if (strpf_ == &::google::protobuf::internal::kEmptyString) {
    strpf_ = new ::std::string;
  }
  strpf_->assign(value);
}
inline void Cmd_Cs_Alogin::set_strpf(const char* value) {
  set_has_strpf();
  if (strpf_ == &::google::protobuf::internal::kEmptyString) {
    strpf_ = new ::std::string;
  }
  strpf_->assign(value);
}
inline void Cmd_Cs_Alogin::set_strpf(const char* value, size_t size) {
  set_has_strpf();
  if (strpf_ == &::google::protobuf::internal::kEmptyString) {
    strpf_ = new ::std::string;
  }
  strpf_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Cmd_Cs_Alogin::mutable_strpf() {
  set_has_strpf();
  if (strpf_ == &::google::protobuf::internal::kEmptyString) {
    strpf_ = new ::std::string;
  }
  return strpf_;
}
inline ::std::string* Cmd_Cs_Alogin::release_strpf() {
  clear_has_strpf();
  if (strpf_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strpf_;
    strpf_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Cmd_Cs_Alogin::set_allocated_strpf(::std::string* strpf) {
  if (strpf_ != &::google::protobuf::internal::kEmptyString) {
    delete strpf_;
  }
  if (strpf) {
    set_has_strpf();
    strpf_ = strpf;
  } else {
    clear_has_strpf();
    strpf_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strPfKey = 11;
inline bool Cmd_Cs_Alogin::has_strpfkey() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Cmd_Cs_Alogin::set_has_strpfkey() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Cmd_Cs_Alogin::clear_has_strpfkey() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Cmd_Cs_Alogin::clear_strpfkey() {
  if (strpfkey_ != &::google::protobuf::internal::kEmptyString) {
    strpfkey_->clear();
  }
  clear_has_strpfkey();
}
inline const ::std::string& Cmd_Cs_Alogin::strpfkey() const {
  return *strpfkey_;
}
inline void Cmd_Cs_Alogin::set_strpfkey(const ::std::string& value) {
  set_has_strpfkey();
  if (strpfkey_ == &::google::protobuf::internal::kEmptyString) {
    strpfkey_ = new ::std::string;
  }
  strpfkey_->assign(value);
}
inline void Cmd_Cs_Alogin::set_strpfkey(const char* value) {
  set_has_strpfkey();
  if (strpfkey_ == &::google::protobuf::internal::kEmptyString) {
    strpfkey_ = new ::std::string;
  }
  strpfkey_->assign(value);
}
inline void Cmd_Cs_Alogin::set_strpfkey(const char* value, size_t size) {
  set_has_strpfkey();
  if (strpfkey_ == &::google::protobuf::internal::kEmptyString) {
    strpfkey_ = new ::std::string;
  }
  strpfkey_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Cmd_Cs_Alogin::mutable_strpfkey() {
  set_has_strpfkey();
  if (strpfkey_ == &::google::protobuf::internal::kEmptyString) {
    strpfkey_ = new ::std::string;
  }
  return strpfkey_;
}
inline ::std::string* Cmd_Cs_Alogin::release_strpfkey() {
  clear_has_strpfkey();
  if (strpfkey_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strpfkey_;
    strpfkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Cmd_Cs_Alogin::set_allocated_strpfkey(::std::string* strpfkey) {
  if (strpfkey_ != &::google::protobuf::internal::kEmptyString) {
    delete strpfkey_;
  }
  if (strpfkey) {
    set_has_strpfkey();
    strpfkey_ = strpfkey;
  } else {
    clear_has_strpfkey();
    strpfkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strChannelId = 12;
inline bool Cmd_Cs_Alogin::has_strchannelid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Cmd_Cs_Alogin::set_has_strchannelid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Cmd_Cs_Alogin::clear_has_strchannelid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Cmd_Cs_Alogin::clear_strchannelid() {
  if (strchannelid_ != &::google::protobuf::internal::kEmptyString) {
    strchannelid_->clear();
  }
  clear_has_strchannelid();
}
inline const ::std::string& Cmd_Cs_Alogin::strchannelid() const {
  return *strchannelid_;
}
inline void Cmd_Cs_Alogin::set_strchannelid(const ::std::string& value) {
  set_has_strchannelid();
  if (strchannelid_ == &::google::protobuf::internal::kEmptyString) {
    strchannelid_ = new ::std::string;
  }
  strchannelid_->assign(value);
}
inline void Cmd_Cs_Alogin::set_strchannelid(const char* value) {
  set_has_strchannelid();
  if (strchannelid_ == &::google::protobuf::internal::kEmptyString) {
    strchannelid_ = new ::std::string;
  }
  strchannelid_->assign(value);
}
inline void Cmd_Cs_Alogin::set_strchannelid(const char* value, size_t size) {
  set_has_strchannelid();
  if (strchannelid_ == &::google::protobuf::internal::kEmptyString) {
    strchannelid_ = new ::std::string;
  }
  strchannelid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Cmd_Cs_Alogin::mutable_strchannelid() {
  set_has_strchannelid();
  if (strchannelid_ == &::google::protobuf::internal::kEmptyString) {
    strchannelid_ = new ::std::string;
  }
  return strchannelid_;
}
inline ::std::string* Cmd_Cs_Alogin::release_strchannelid() {
  clear_has_strchannelid();
  if (strchannelid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strchannelid_;
    strchannelid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Cmd_Cs_Alogin::set_allocated_strchannelid(::std::string* strchannelid) {
  if (strchannelid_ != &::google::protobuf::internal::kEmptyString) {
    delete strchannelid_;
  }
  if (strchannelid) {
    set_has_strchannelid();
    strchannelid_ = strchannelid;
  } else {
    clear_has_strchannelid();
    strchannelid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strUserId = 13;
inline bool Cmd_Cs_Alogin::has_struserid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Cmd_Cs_Alogin::set_has_struserid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Cmd_Cs_Alogin::clear_has_struserid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Cmd_Cs_Alogin::clear_struserid() {
  if (struserid_ != &::google::protobuf::internal::kEmptyString) {
    struserid_->clear();
  }
  clear_has_struserid();
}
inline const ::std::string& Cmd_Cs_Alogin::struserid() const {
  return *struserid_;
}
inline void Cmd_Cs_Alogin::set_struserid(const ::std::string& value) {
  set_has_struserid();
  if (struserid_ == &::google::protobuf::internal::kEmptyString) {
    struserid_ = new ::std::string;
  }
  struserid_->assign(value);
}
inline void Cmd_Cs_Alogin::set_struserid(const char* value) {
  set_has_struserid();
  if (struserid_ == &::google::protobuf::internal::kEmptyString) {
    struserid_ = new ::std::string;
  }
  struserid_->assign(value);
}
inline void Cmd_Cs_Alogin::set_struserid(const char* value, size_t size) {
  set_has_struserid();
  if (struserid_ == &::google::protobuf::internal::kEmptyString) {
    struserid_ = new ::std::string;
  }
  struserid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Cmd_Cs_Alogin::mutable_struserid() {
  set_has_struserid();
  if (struserid_ == &::google::protobuf::internal::kEmptyString) {
    struserid_ = new ::std::string;
  }
  return struserid_;
}
inline ::std::string* Cmd_Cs_Alogin::release_struserid() {
  clear_has_struserid();
  if (struserid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = struserid_;
    struserid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Cmd_Cs_Alogin::set_allocated_struserid(::std::string* struserid) {
  if (struserid_ != &::google::protobuf::internal::kEmptyString) {
    delete struserid_;
  }
  if (struserid) {
    set_has_struserid();
    struserid_ = struserid;
  } else {
    clear_has_struserid();
    struserid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strToken = 14;
inline bool Cmd_Cs_Alogin::has_strtoken() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Cmd_Cs_Alogin::set_has_strtoken() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Cmd_Cs_Alogin::clear_has_strtoken() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Cmd_Cs_Alogin::clear_strtoken() {
  if (strtoken_ != &::google::protobuf::internal::kEmptyString) {
    strtoken_->clear();
  }
  clear_has_strtoken();
}
inline const ::std::string& Cmd_Cs_Alogin::strtoken() const {
  return *strtoken_;
}
inline void Cmd_Cs_Alogin::set_strtoken(const ::std::string& value) {
  set_has_strtoken();
  if (strtoken_ == &::google::protobuf::internal::kEmptyString) {
    strtoken_ = new ::std::string;
  }
  strtoken_->assign(value);
}
inline void Cmd_Cs_Alogin::set_strtoken(const char* value) {
  set_has_strtoken();
  if (strtoken_ == &::google::protobuf::internal::kEmptyString) {
    strtoken_ = new ::std::string;
  }
  strtoken_->assign(value);
}
inline void Cmd_Cs_Alogin::set_strtoken(const char* value, size_t size) {
  set_has_strtoken();
  if (strtoken_ == &::google::protobuf::internal::kEmptyString) {
    strtoken_ = new ::std::string;
  }
  strtoken_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Cmd_Cs_Alogin::mutable_strtoken() {
  set_has_strtoken();
  if (strtoken_ == &::google::protobuf::internal::kEmptyString) {
    strtoken_ = new ::std::string;
  }
  return strtoken_;
}
inline ::std::string* Cmd_Cs_Alogin::release_strtoken() {
  clear_has_strtoken();
  if (strtoken_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strtoken_;
    strtoken_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Cmd_Cs_Alogin::set_allocated_strtoken(::std::string* strtoken) {
  if (strtoken_ != &::google::protobuf::internal::kEmptyString) {
    delete strtoken_;
  }
  if (strtoken) {
    set_has_strtoken();
    strtoken_ = strtoken;
  } else {
    clear_has_strtoken();
    strtoken_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strProductCode = 15;
inline bool Cmd_Cs_Alogin::has_strproductcode() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Cmd_Cs_Alogin::set_has_strproductcode() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Cmd_Cs_Alogin::clear_has_strproductcode() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Cmd_Cs_Alogin::clear_strproductcode() {
  if (strproductcode_ != &::google::protobuf::internal::kEmptyString) {
    strproductcode_->clear();
  }
  clear_has_strproductcode();
}
inline const ::std::string& Cmd_Cs_Alogin::strproductcode() const {
  return *strproductcode_;
}
inline void Cmd_Cs_Alogin::set_strproductcode(const ::std::string& value) {
  set_has_strproductcode();
  if (strproductcode_ == &::google::protobuf::internal::kEmptyString) {
    strproductcode_ = new ::std::string;
  }
  strproductcode_->assign(value);
}
inline void Cmd_Cs_Alogin::set_strproductcode(const char* value) {
  set_has_strproductcode();
  if (strproductcode_ == &::google::protobuf::internal::kEmptyString) {
    strproductcode_ = new ::std::string;
  }
  strproductcode_->assign(value);
}
inline void Cmd_Cs_Alogin::set_strproductcode(const char* value, size_t size) {
  set_has_strproductcode();
  if (strproductcode_ == &::google::protobuf::internal::kEmptyString) {
    strproductcode_ = new ::std::string;
  }
  strproductcode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Cmd_Cs_Alogin::mutable_strproductcode() {
  set_has_strproductcode();
  if (strproductcode_ == &::google::protobuf::internal::kEmptyString) {
    strproductcode_ = new ::std::string;
  }
  return strproductcode_;
}
inline ::std::string* Cmd_Cs_Alogin::release_strproductcode() {
  clear_has_strproductcode();
  if (strproductcode_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strproductcode_;
    strproductcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Cmd_Cs_Alogin::set_allocated_strproductcode(::std::string* strproductcode) {
  if (strproductcode_ != &::google::protobuf::internal::kEmptyString) {
    delete strproductcode_;
  }
  if (strproductcode) {
    set_has_strproductcode();
    strproductcode_ = strproductcode;
  } else {
    clear_has_strproductcode();
    strproductcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strChannelLabel = 16;
inline bool Cmd_Cs_Alogin::has_strchannellabel() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Cmd_Cs_Alogin::set_has_strchannellabel() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Cmd_Cs_Alogin::clear_has_strchannellabel() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Cmd_Cs_Alogin::clear_strchannellabel() {
  if (strchannellabel_ != &::google::protobuf::internal::kEmptyString) {
    strchannellabel_->clear();
  }
  clear_has_strchannellabel();
}
inline const ::std::string& Cmd_Cs_Alogin::strchannellabel() const {
  return *strchannellabel_;
}
inline void Cmd_Cs_Alogin::set_strchannellabel(const ::std::string& value) {
  set_has_strchannellabel();
  if (strchannellabel_ == &::google::protobuf::internal::kEmptyString) {
    strchannellabel_ = new ::std::string;
  }
  strchannellabel_->assign(value);
}
inline void Cmd_Cs_Alogin::set_strchannellabel(const char* value) {
  set_has_strchannellabel();
  if (strchannellabel_ == &::google::protobuf::internal::kEmptyString) {
    strchannellabel_ = new ::std::string;
  }
  strchannellabel_->assign(value);
}
inline void Cmd_Cs_Alogin::set_strchannellabel(const char* value, size_t size) {
  set_has_strchannellabel();
  if (strchannellabel_ == &::google::protobuf::internal::kEmptyString) {
    strchannellabel_ = new ::std::string;
  }
  strchannellabel_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Cmd_Cs_Alogin::mutable_strchannellabel() {
  set_has_strchannellabel();
  if (strchannellabel_ == &::google::protobuf::internal::kEmptyString) {
    strchannellabel_ = new ::std::string;
  }
  return strchannellabel_;
}
inline ::std::string* Cmd_Cs_Alogin::release_strchannellabel() {
  clear_has_strchannellabel();
  if (strchannellabel_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strchannellabel_;
    strchannellabel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Cmd_Cs_Alogin::set_allocated_strchannellabel(::std::string* strchannellabel) {
  if (strchannellabel_ != &::google::protobuf::internal::kEmptyString) {
    delete strchannellabel_;
  }
  if (strchannellabel) {
    set_has_strchannellabel();
    strchannellabel_ = strchannellabel;
  } else {
    clear_has_strchannellabel();
    strchannellabel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_REQUEST_REFRESHGOLD_CS

// required string strChannel = 1;
inline bool CMD_REQUEST_REFRESHGOLD_CS::has_strchannel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_has_strchannel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_REQUEST_REFRESHGOLD_CS::clear_has_strchannel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_REQUEST_REFRESHGOLD_CS::clear_strchannel() {
  if (strchannel_ != &::google::protobuf::internal::kEmptyString) {
    strchannel_->clear();
  }
  clear_has_strchannel();
}
inline const ::std::string& CMD_REQUEST_REFRESHGOLD_CS::strchannel() const {
  return *strchannel_;
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_strchannel(const ::std::string& value) {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  strchannel_->assign(value);
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_strchannel(const char* value) {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  strchannel_->assign(value);
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_strchannel(const char* value, size_t size) {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  strchannel_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_REQUEST_REFRESHGOLD_CS::mutable_strchannel() {
  set_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    strchannel_ = new ::std::string;
  }
  return strchannel_;
}
inline ::std::string* CMD_REQUEST_REFRESHGOLD_CS::release_strchannel() {
  clear_has_strchannel();
  if (strchannel_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strchannel_;
    strchannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_allocated_strchannel(::std::string* strchannel) {
  if (strchannel_ != &::google::protobuf::internal::kEmptyString) {
    delete strchannel_;
  }
  if (strchannel) {
    set_has_strchannel();
    strchannel_ = strchannel;
  } else {
    clear_has_strchannel();
    strchannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strAccessKey = 2;
inline bool CMD_REQUEST_REFRESHGOLD_CS::has_straccesskey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_has_straccesskey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_REQUEST_REFRESHGOLD_CS::clear_has_straccesskey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_REQUEST_REFRESHGOLD_CS::clear_straccesskey() {
  if (straccesskey_ != &::google::protobuf::internal::kEmptyString) {
    straccesskey_->clear();
  }
  clear_has_straccesskey();
}
inline const ::std::string& CMD_REQUEST_REFRESHGOLD_CS::straccesskey() const {
  return *straccesskey_;
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_straccesskey(const ::std::string& value) {
  set_has_straccesskey();
  if (straccesskey_ == &::google::protobuf::internal::kEmptyString) {
    straccesskey_ = new ::std::string;
  }
  straccesskey_->assign(value);
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_straccesskey(const char* value) {
  set_has_straccesskey();
  if (straccesskey_ == &::google::protobuf::internal::kEmptyString) {
    straccesskey_ = new ::std::string;
  }
  straccesskey_->assign(value);
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_straccesskey(const char* value, size_t size) {
  set_has_straccesskey();
  if (straccesskey_ == &::google::protobuf::internal::kEmptyString) {
    straccesskey_ = new ::std::string;
  }
  straccesskey_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_REQUEST_REFRESHGOLD_CS::mutable_straccesskey() {
  set_has_straccesskey();
  if (straccesskey_ == &::google::protobuf::internal::kEmptyString) {
    straccesskey_ = new ::std::string;
  }
  return straccesskey_;
}
inline ::std::string* CMD_REQUEST_REFRESHGOLD_CS::release_straccesskey() {
  clear_has_straccesskey();
  if (straccesskey_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = straccesskey_;
    straccesskey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_allocated_straccesskey(::std::string* straccesskey) {
  if (straccesskey_ != &::google::protobuf::internal::kEmptyString) {
    delete straccesskey_;
  }
  if (straccesskey) {
    set_has_straccesskey();
    straccesskey_ = straccesskey;
  } else {
    clear_has_straccesskey();
    straccesskey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strPayToken = 3;
inline bool CMD_REQUEST_REFRESHGOLD_CS::has_strpaytoken() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_has_strpaytoken() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_REQUEST_REFRESHGOLD_CS::clear_has_strpaytoken() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_REQUEST_REFRESHGOLD_CS::clear_strpaytoken() {
  if (strpaytoken_ != &::google::protobuf::internal::kEmptyString) {
    strpaytoken_->clear();
  }
  clear_has_strpaytoken();
}
inline const ::std::string& CMD_REQUEST_REFRESHGOLD_CS::strpaytoken() const {
  return *strpaytoken_;
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_strpaytoken(const ::std::string& value) {
  set_has_strpaytoken();
  if (strpaytoken_ == &::google::protobuf::internal::kEmptyString) {
    strpaytoken_ = new ::std::string;
  }
  strpaytoken_->assign(value);
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_strpaytoken(const char* value) {
  set_has_strpaytoken();
  if (strpaytoken_ == &::google::protobuf::internal::kEmptyString) {
    strpaytoken_ = new ::std::string;
  }
  strpaytoken_->assign(value);
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_strpaytoken(const char* value, size_t size) {
  set_has_strpaytoken();
  if (strpaytoken_ == &::google::protobuf::internal::kEmptyString) {
    strpaytoken_ = new ::std::string;
  }
  strpaytoken_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_REQUEST_REFRESHGOLD_CS::mutable_strpaytoken() {
  set_has_strpaytoken();
  if (strpaytoken_ == &::google::protobuf::internal::kEmptyString) {
    strpaytoken_ = new ::std::string;
  }
  return strpaytoken_;
}
inline ::std::string* CMD_REQUEST_REFRESHGOLD_CS::release_strpaytoken() {
  clear_has_strpaytoken();
  if (strpaytoken_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strpaytoken_;
    strpaytoken_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_allocated_strpaytoken(::std::string* strpaytoken) {
  if (strpaytoken_ != &::google::protobuf::internal::kEmptyString) {
    delete strpaytoken_;
  }
  if (strpaytoken) {
    set_has_strpaytoken();
    strpaytoken_ = strpaytoken;
  } else {
    clear_has_strpaytoken();
    strpaytoken_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strPf = 4;
inline bool CMD_REQUEST_REFRESHGOLD_CS::has_strpf() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_has_strpf() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_REQUEST_REFRESHGOLD_CS::clear_has_strpf() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_REQUEST_REFRESHGOLD_CS::clear_strpf() {
  if (strpf_ != &::google::protobuf::internal::kEmptyString) {
    strpf_->clear();
  }
  clear_has_strpf();
}
inline const ::std::string& CMD_REQUEST_REFRESHGOLD_CS::strpf() const {
  return *strpf_;
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_strpf(const ::std::string& value) {
  set_has_strpf();
  if (strpf_ == &::google::protobuf::internal::kEmptyString) {
    strpf_ = new ::std::string;
  }
  strpf_->assign(value);
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_strpf(const char* value) {
  set_has_strpf();
  if (strpf_ == &::google::protobuf::internal::kEmptyString) {
    strpf_ = new ::std::string;
  }
  strpf_->assign(value);
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_strpf(const char* value, size_t size) {
  set_has_strpf();
  if (strpf_ == &::google::protobuf::internal::kEmptyString) {
    strpf_ = new ::std::string;
  }
  strpf_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_REQUEST_REFRESHGOLD_CS::mutable_strpf() {
  set_has_strpf();
  if (strpf_ == &::google::protobuf::internal::kEmptyString) {
    strpf_ = new ::std::string;
  }
  return strpf_;
}
inline ::std::string* CMD_REQUEST_REFRESHGOLD_CS::release_strpf() {
  clear_has_strpf();
  if (strpf_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strpf_;
    strpf_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_allocated_strpf(::std::string* strpf) {
  if (strpf_ != &::google::protobuf::internal::kEmptyString) {
    delete strpf_;
  }
  if (strpf) {
    set_has_strpf();
    strpf_ = strpf;
  } else {
    clear_has_strpf();
    strpf_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strPfKey = 5;
inline bool CMD_REQUEST_REFRESHGOLD_CS::has_strpfkey() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_has_strpfkey() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_REQUEST_REFRESHGOLD_CS::clear_has_strpfkey() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_REQUEST_REFRESHGOLD_CS::clear_strpfkey() {
  if (strpfkey_ != &::google::protobuf::internal::kEmptyString) {
    strpfkey_->clear();
  }
  clear_has_strpfkey();
}
inline const ::std::string& CMD_REQUEST_REFRESHGOLD_CS::strpfkey() const {
  return *strpfkey_;
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_strpfkey(const ::std::string& value) {
  set_has_strpfkey();
  if (strpfkey_ == &::google::protobuf::internal::kEmptyString) {
    strpfkey_ = new ::std::string;
  }
  strpfkey_->assign(value);
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_strpfkey(const char* value) {
  set_has_strpfkey();
  if (strpfkey_ == &::google::protobuf::internal::kEmptyString) {
    strpfkey_ = new ::std::string;
  }
  strpfkey_->assign(value);
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_strpfkey(const char* value, size_t size) {
  set_has_strpfkey();
  if (strpfkey_ == &::google::protobuf::internal::kEmptyString) {
    strpfkey_ = new ::std::string;
  }
  strpfkey_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_REQUEST_REFRESHGOLD_CS::mutable_strpfkey() {
  set_has_strpfkey();
  if (strpfkey_ == &::google::protobuf::internal::kEmptyString) {
    strpfkey_ = new ::std::string;
  }
  return strpfkey_;
}
inline ::std::string* CMD_REQUEST_REFRESHGOLD_CS::release_strpfkey() {
  clear_has_strpfkey();
  if (strpfkey_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strpfkey_;
    strpfkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_REQUEST_REFRESHGOLD_CS::set_allocated_strpfkey(::std::string* strpfkey) {
  if (strpfkey_ != &::google::protobuf::internal::kEmptyString) {
    delete strpfkey_;
  }
  if (strpfkey) {
    set_has_strpfkey();
    strpfkey_ = strpfkey;
  } else {
    clear_has_strpfkey();
    strpfkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Cmd_Sc_Alogin

// required int32 iResult = 1;
inline bool Cmd_Sc_Alogin::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_Alogin::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_Alogin::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_Alogin::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Cmd_Sc_Alogin::iresult() const {
  return iresult_;
}
inline void Cmd_Sc_Alogin::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// required string strMd5 = 2;
inline bool Cmd_Sc_Alogin::has_strmd5() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Sc_Alogin::set_has_strmd5() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Sc_Alogin::clear_has_strmd5() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Sc_Alogin::clear_strmd5() {
  if (strmd5_ != &::google::protobuf::internal::kEmptyString) {
    strmd5_->clear();
  }
  clear_has_strmd5();
}
inline const ::std::string& Cmd_Sc_Alogin::strmd5() const {
  return *strmd5_;
}
inline void Cmd_Sc_Alogin::set_strmd5(const ::std::string& value) {
  set_has_strmd5();
  if (strmd5_ == &::google::protobuf::internal::kEmptyString) {
    strmd5_ = new ::std::string;
  }
  strmd5_->assign(value);
}
inline void Cmd_Sc_Alogin::set_strmd5(const char* value) {
  set_has_strmd5();
  if (strmd5_ == &::google::protobuf::internal::kEmptyString) {
    strmd5_ = new ::std::string;
  }
  strmd5_->assign(value);
}
inline void Cmd_Sc_Alogin::set_strmd5(const char* value, size_t size) {
  set_has_strmd5();
  if (strmd5_ == &::google::protobuf::internal::kEmptyString) {
    strmd5_ = new ::std::string;
  }
  strmd5_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Cmd_Sc_Alogin::mutable_strmd5() {
  set_has_strmd5();
  if (strmd5_ == &::google::protobuf::internal::kEmptyString) {
    strmd5_ = new ::std::string;
  }
  return strmd5_;
}
inline ::std::string* Cmd_Sc_Alogin::release_strmd5() {
  clear_has_strmd5();
  if (strmd5_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmd5_;
    strmd5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Cmd_Sc_Alogin::set_allocated_strmd5(::std::string* strmd5) {
  if (strmd5_ != &::google::protobuf::internal::kEmptyString) {
    delete strmd5_;
  }
  if (strmd5) {
    set_has_strmd5();
    strmd5_ = strmd5;
  } else {
    clear_has_strmd5();
    strmd5_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string strUrl = 3;
inline bool Cmd_Sc_Alogin::has_strurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Cmd_Sc_Alogin::set_has_strurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Cmd_Sc_Alogin::clear_has_strurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Cmd_Sc_Alogin::clear_strurl() {
  if (strurl_ != &::google::protobuf::internal::kEmptyString) {
    strurl_->clear();
  }
  clear_has_strurl();
}
inline const ::std::string& Cmd_Sc_Alogin::strurl() const {
  return *strurl_;
}
inline void Cmd_Sc_Alogin::set_strurl(const ::std::string& value) {
  set_has_strurl();
  if (strurl_ == &::google::protobuf::internal::kEmptyString) {
    strurl_ = new ::std::string;
  }
  strurl_->assign(value);
}
inline void Cmd_Sc_Alogin::set_strurl(const char* value) {
  set_has_strurl();
  if (strurl_ == &::google::protobuf::internal::kEmptyString) {
    strurl_ = new ::std::string;
  }
  strurl_->assign(value);
}
inline void Cmd_Sc_Alogin::set_strurl(const char* value, size_t size) {
  set_has_strurl();
  if (strurl_ == &::google::protobuf::internal::kEmptyString) {
    strurl_ = new ::std::string;
  }
  strurl_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Cmd_Sc_Alogin::mutable_strurl() {
  set_has_strurl();
  if (strurl_ == &::google::protobuf::internal::kEmptyString) {
    strurl_ = new ::std::string;
  }
  return strurl_;
}
inline ::std::string* Cmd_Sc_Alogin::release_strurl() {
  clear_has_strurl();
  if (strurl_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strurl_;
    strurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Cmd_Sc_Alogin::set_allocated_strurl(::std::string* strurl) {
  if (strurl_ != &::google::protobuf::internal::kEmptyString) {
    delete strurl_;
  }
  if (strurl) {
    set_has_strurl();
    strurl_ = strurl;
  } else {
    clear_has_strurl();
    strurl_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Cmd_Sc_GetRole

// required int32 iResult = 1;
inline bool Cmd_Sc_GetRole::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_GetRole::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_GetRole::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_GetRole::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Cmd_Sc_GetRole::iresult() const {
  return iresult_;
}
inline void Cmd_Sc_GetRole::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// optional .GSProto.RoleBase roleBaseData = 2;
inline bool Cmd_Sc_GetRole::has_rolebasedata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Sc_GetRole::set_has_rolebasedata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Sc_GetRole::clear_has_rolebasedata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Sc_GetRole::clear_rolebasedata() {
  if (rolebasedata_ != NULL) rolebasedata_->::GSProto::RoleBase::Clear();
  clear_has_rolebasedata();
}
inline const ::GSProto::RoleBase& Cmd_Sc_GetRole::rolebasedata() const {
  return rolebasedata_ != NULL ? *rolebasedata_ : *default_instance_->rolebasedata_;
}
inline ::GSProto::RoleBase* Cmd_Sc_GetRole::mutable_rolebasedata() {
  set_has_rolebasedata();
  if (rolebasedata_ == NULL) rolebasedata_ = new ::GSProto::RoleBase;
  return rolebasedata_;
}
inline ::GSProto::RoleBase* Cmd_Sc_GetRole::release_rolebasedata() {
  clear_has_rolebasedata();
  ::GSProto::RoleBase* temp = rolebasedata_;
  rolebasedata_ = NULL;
  return temp;
}
inline void Cmd_Sc_GetRole::set_allocated_rolebasedata(::GSProto::RoleBase* rolebasedata) {
  delete rolebasedata_;
  rolebasedata_ = rolebasedata;
  if (rolebasedata) {
    set_has_rolebasedata();
  } else {
    clear_has_rolebasedata();
  }
}

// -------------------------------------------------------------------

// RoleBase

// required uint32 dwObjectID = 1;
inline bool RoleBase::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleBase::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleBase::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleBase::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 RoleBase::dwobjectid() const {
  return dwobjectid_;
}
inline void RoleBase::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// required int32 iLevel = 2;
inline bool RoleBase::has_ilevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleBase::set_has_ilevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleBase::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleBase::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 RoleBase::ilevel() const {
  return ilevel_;
}
inline void RoleBase::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// required int32 iExp = 3;
inline bool RoleBase::has_iexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleBase::set_has_iexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleBase::clear_has_iexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleBase::clear_iexp() {
  iexp_ = 0;
  clear_has_iexp();
}
inline ::google::protobuf::int32 RoleBase::iexp() const {
  return iexp_;
}
inline void RoleBase::set_iexp(::google::protobuf::int32 value) {
  set_has_iexp();
  iexp_ = value;
}

// required string strName = 4;
inline bool RoleBase::has_strname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleBase::set_has_strname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleBase::clear_has_strname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleBase::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& RoleBase::strname() const {
  return *strname_;
}
inline void RoleBase::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void RoleBase::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void RoleBase::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoleBase::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* RoleBase::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoleBase::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iPhystrength = 5;
inline bool RoleBase::has_iphystrength() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleBase::set_has_iphystrength() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleBase::clear_has_iphystrength() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleBase::clear_iphystrength() {
  iphystrength_ = 0;
  clear_has_iphystrength();
}
inline ::google::protobuf::int32 RoleBase::iphystrength() const {
  return iphystrength_;
}
inline void RoleBase::set_iphystrength(::google::protobuf::int32 value) {
  set_has_iphystrength();
  iphystrength_ = value;
}

// required int32 iSilver = 6;
inline bool RoleBase::has_isilver() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleBase::set_has_isilver() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleBase::clear_has_isilver() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleBase::clear_isilver() {
  isilver_ = 0;
  clear_has_isilver();
}
inline ::google::protobuf::int32 RoleBase::isilver() const {
  return isilver_;
}
inline void RoleBase::set_isilver(::google::protobuf::int32 value) {
  set_has_isilver();
  isilver_ = value;
}

// required int32 iGold = 7;
inline bool RoleBase::has_igold() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoleBase::set_has_igold() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoleBase::clear_has_igold() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoleBase::clear_igold() {
  igold_ = 0;
  clear_has_igold();
}
inline ::google::protobuf::int32 RoleBase::igold() const {
  return igold_;
}
inline void RoleBase::set_igold(::google::protobuf::int32 value) {
  set_has_igold();
  igold_ = value;
}

// optional int32 iHeroConvertCount = 8;
inline bool RoleBase::has_iheroconvertcount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoleBase::set_has_iheroconvertcount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoleBase::clear_has_iheroconvertcount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoleBase::clear_iheroconvertcount() {
  iheroconvertcount_ = 0;
  clear_has_iheroconvertcount();
}
inline ::google::protobuf::int32 RoleBase::iheroconvertcount() const {
  return iheroconvertcount_;
}
inline void RoleBase::set_iheroconvertcount(::google::protobuf::int32 value) {
  set_has_iheroconvertcount();
  iheroconvertcount_ = value;
}

// repeated .GSProto.PropItem szPropList = 9;
inline int RoleBase::szproplist_size() const {
  return szproplist_.size();
}
inline void RoleBase::clear_szproplist() {
  szproplist_.Clear();
}
inline const ::GSProto::PropItem& RoleBase::szproplist(int index) const {
  return szproplist_.Get(index);
}
inline ::GSProto::PropItem* RoleBase::mutable_szproplist(int index) {
  return szproplist_.Mutable(index);
}
inline ::GSProto::PropItem* RoleBase::add_szproplist() {
  return szproplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
RoleBase::szproplist() const {
  return szproplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
RoleBase::mutable_szproplist() {
  return &szproplist_;
}

// optional int32 iLevelUpExp = 10;
inline bool RoleBase::has_ilevelupexp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RoleBase::set_has_ilevelupexp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RoleBase::clear_has_ilevelupexp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RoleBase::clear_ilevelupexp() {
  ilevelupexp_ = 0;
  clear_has_ilevelupexp();
}
inline ::google::protobuf::int32 RoleBase::ilevelupexp() const {
  return ilevelupexp_;
}
inline void RoleBase::set_ilevelupexp(::google::protobuf::int32 value) {
  set_has_ilevelupexp();
  ilevelupexp_ = value;
}

// optional int32 iVipLevel = 11;
inline bool RoleBase::has_iviplevel() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RoleBase::set_has_iviplevel() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RoleBase::clear_has_iviplevel() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RoleBase::clear_iviplevel() {
  iviplevel_ = 0;
  clear_has_iviplevel();
}
inline ::google::protobuf::int32 RoleBase::iviplevel() const {
  return iviplevel_;
}
inline void RoleBase::set_iviplevel(::google::protobuf::int32 value) {
  set_has_iviplevel();
  iviplevel_ = value;
}

// optional int32 iVipExp = 12;
inline bool RoleBase::has_ivipexp() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RoleBase::set_has_ivipexp() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RoleBase::clear_has_ivipexp() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RoleBase::clear_ivipexp() {
  ivipexp_ = 0;
  clear_has_ivipexp();
}
inline ::google::protobuf::int32 RoleBase::ivipexp() const {
  return ivipexp_;
}
inline void RoleBase::set_ivipexp(::google::protobuf::int32 value) {
  set_has_ivipexp();
  ivipexp_ = value;
}

// optional int32 iVipLevelUpExp = 13;
inline bool RoleBase::has_iviplevelupexp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RoleBase::set_has_iviplevelupexp() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RoleBase::clear_has_iviplevelupexp() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RoleBase::clear_iviplevelupexp() {
  iviplevelupexp_ = 0;
  clear_has_iviplevelupexp();
}
inline ::google::protobuf::int32 RoleBase::iviplevelupexp() const {
  return iviplevelupexp_;
}
inline void RoleBase::set_iviplevelupexp(::google::protobuf::int32 value) {
  set_has_iviplevelupexp();
  iviplevelupexp_ = value;
}

// optional .GSProto.enHeadType iHeadType = 14;
inline bool RoleBase::has_iheadtype() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RoleBase::set_has_iheadtype() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RoleBase::clear_has_iheadtype() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RoleBase::clear_iheadtype() {
  iheadtype_ = 0;
  clear_has_iheadtype();
}
inline ::GSProto::enHeadType RoleBase::iheadtype() const {
  return static_cast< ::GSProto::enHeadType >(iheadtype_);
}
inline void RoleBase::set_iheadtype(::GSProto::enHeadType value) {
  assert(::GSProto::enHeadType_IsValid(value));
  set_has_iheadtype();
  iheadtype_ = value;
}

// optional int32 iHeadId = 15;
inline bool RoleBase::has_iheadid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void RoleBase::set_has_iheadid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void RoleBase::clear_has_iheadid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void RoleBase::clear_iheadid() {
  iheadid_ = 0;
  clear_has_iheadid();
}
inline ::google::protobuf::int32 RoleBase::iheadid() const {
  return iheadid_;
}
inline void RoleBase::set_iheadid(::google::protobuf::int32 value) {
  set_has_iheadid();
  iheadid_ = value;
}

// optional string strLegionName = 16;
inline bool RoleBase::has_strlegionname() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void RoleBase::set_has_strlegionname() {
  _has_bits_[0] |= 0x00008000u;
}
inline void RoleBase::clear_has_strlegionname() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void RoleBase::clear_strlegionname() {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    strlegionname_->clear();
  }
  clear_has_strlegionname();
}
inline const ::std::string& RoleBase::strlegionname() const {
  return *strlegionname_;
}
inline void RoleBase::set_strlegionname(const ::std::string& value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void RoleBase::set_strlegionname(const char* value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void RoleBase::set_strlegionname(const char* value, size_t size) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoleBase::mutable_strlegionname() {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  return strlegionname_;
}
inline ::std::string* RoleBase::release_strlegionname() {
  clear_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strlegionname_;
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoleBase::set_allocated_strlegionname(::std::string* strlegionname) {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strlegionname_;
  }
  if (strlegionname) {
    set_has_strlegionname();
    strlegionname_ = strlegionname;
  } else {
    clear_has_strlegionname();
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool bShowFirstPayBtn = 17;
inline bool RoleBase::has_bshowfirstpaybtn() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void RoleBase::set_has_bshowfirstpaybtn() {
  _has_bits_[0] |= 0x00010000u;
}
inline void RoleBase::clear_has_bshowfirstpaybtn() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void RoleBase::clear_bshowfirstpaybtn() {
  bshowfirstpaybtn_ = false;
  clear_has_bshowfirstpaybtn();
}
inline bool RoleBase::bshowfirstpaybtn() const {
  return bshowfirstpaybtn_;
}
inline void RoleBase::set_bshowfirstpaybtn(bool value) {
  set_has_bshowfirstpaybtn();
  bshowfirstpaybtn_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_HeroList

// repeated .GSProto.HeroBaseData szHeroList = 1;
inline int Cmd_Sc_HeroList::szherolist_size() const {
  return szherolist_.size();
}
inline void Cmd_Sc_HeroList::clear_szherolist() {
  szherolist_.Clear();
}
inline const ::GSProto::HeroBaseData& Cmd_Sc_HeroList::szherolist(int index) const {
  return szherolist_.Get(index);
}
inline ::GSProto::HeroBaseData* Cmd_Sc_HeroList::mutable_szherolist(int index) {
  return szherolist_.Mutable(index);
}
inline ::GSProto::HeroBaseData* Cmd_Sc_HeroList::add_szherolist() {
  return szherolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HeroBaseData >&
Cmd_Sc_HeroList::szherolist() const {
  return szherolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::HeroBaseData >*
Cmd_Sc_HeroList::mutable_szherolist() {
  return &szherolist_;
}

// -------------------------------------------------------------------

// Cmd_Sc_HeroUpdate

// required .GSProto.HeroBaseData heroData = 1;
inline bool Cmd_Sc_HeroUpdate::has_herodata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_HeroUpdate::set_has_herodata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_HeroUpdate::clear_has_herodata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_HeroUpdate::clear_herodata() {
  if (herodata_ != NULL) herodata_->::GSProto::HeroBaseData::Clear();
  clear_has_herodata();
}
inline const ::GSProto::HeroBaseData& Cmd_Sc_HeroUpdate::herodata() const {
  return herodata_ != NULL ? *herodata_ : *default_instance_->herodata_;
}
inline ::GSProto::HeroBaseData* Cmd_Sc_HeroUpdate::mutable_herodata() {
  set_has_herodata();
  if (herodata_ == NULL) herodata_ = new ::GSProto::HeroBaseData;
  return herodata_;
}
inline ::GSProto::HeroBaseData* Cmd_Sc_HeroUpdate::release_herodata() {
  clear_has_herodata();
  ::GSProto::HeroBaseData* temp = herodata_;
  herodata_ = NULL;
  return temp;
}
inline void Cmd_Sc_HeroUpdate::set_allocated_herodata(::GSProto::HeroBaseData* herodata) {
  delete herodata_;
  herodata_ = herodata;
  if (herodata) {
    set_has_herodata();
  } else {
    clear_has_herodata();
  }
}

// -------------------------------------------------------------------

// Cmd_Sc_HeroDel

// required uint32 dwObjectID = 1;
inline bool Cmd_Sc_HeroDel::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_HeroDel::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_HeroDel::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_HeroDel::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 Cmd_Sc_HeroDel::dwobjectid() const {
  return dwobjectid_;
}
inline void Cmd_Sc_HeroDel::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// -------------------------------------------------------------------

// Cmd_Cs_GetHeroDesc

// required uint32 dwObjectID = 1;
inline bool Cmd_Cs_GetHeroDesc::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_GetHeroDesc::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_GetHeroDesc::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_GetHeroDesc::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 Cmd_Cs_GetHeroDesc::dwobjectid() const {
  return dwobjectid_;
}
inline void Cmd_Cs_GetHeroDesc::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// -------------------------------------------------------------------

// SkillInfo

// required int32 iSkillID = 1;
inline bool SkillInfo::has_iskillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillInfo::set_has_iskillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillInfo::clear_has_iskillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillInfo::clear_iskillid() {
  iskillid_ = 0;
  clear_has_iskillid();
}
inline ::google::protobuf::int32 SkillInfo::iskillid() const {
  return iskillid_;
}
inline void SkillInfo::set_iskillid(::google::protobuf::int32 value) {
  set_has_iskillid();
  iskillid_ = value;
}

// required bool bActive = 2;
inline bool SkillInfo::has_bactive() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillInfo::set_has_bactive() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillInfo::clear_has_bactive() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillInfo::clear_bactive() {
  bactive_ = false;
  clear_has_bactive();
}
inline bool SkillInfo::bactive() const {
  return bactive_;
}
inline void SkillInfo::set_bactive(bool value) {
  set_has_bactive();
  bactive_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_GetHeroDesc

// required uint32 dwObjectID = 1;
inline bool Cmd_Sc_GetHeroDesc::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_GetHeroDesc::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_GetHeroDesc::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_GetHeroDesc::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 Cmd_Sc_GetHeroDesc::dwobjectid() const {
  return dwobjectid_;
}
inline void Cmd_Sc_GetHeroDesc::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// repeated .GSProto.PropItem szPropList = 2;
inline int Cmd_Sc_GetHeroDesc::szproplist_size() const {
  return szproplist_.size();
}
inline void Cmd_Sc_GetHeroDesc::clear_szproplist() {
  szproplist_.Clear();
}
inline const ::GSProto::PropItem& Cmd_Sc_GetHeroDesc::szproplist(int index) const {
  return szproplist_.Get(index);
}
inline ::GSProto::PropItem* Cmd_Sc_GetHeroDesc::mutable_szproplist(int index) {
  return szproplist_.Mutable(index);
}
inline ::GSProto::PropItem* Cmd_Sc_GetHeroDesc::add_szproplist() {
  return szproplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
Cmd_Sc_GetHeroDesc::szproplist() const {
  return szproplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
Cmd_Sc_GetHeroDesc::mutable_szproplist() {
  return &szproplist_;
}

// repeated .GSProto.SkillInfo szSkillList = 3;
inline int Cmd_Sc_GetHeroDesc::szskilllist_size() const {
  return szskilllist_.size();
}
inline void Cmd_Sc_GetHeroDesc::clear_szskilllist() {
  szskilllist_.Clear();
}
inline const ::GSProto::SkillInfo& Cmd_Sc_GetHeroDesc::szskilllist(int index) const {
  return szskilllist_.Get(index);
}
inline ::GSProto::SkillInfo* Cmd_Sc_GetHeroDesc::mutable_szskilllist(int index) {
  return szskilllist_.Mutable(index);
}
inline ::GSProto::SkillInfo* Cmd_Sc_GetHeroDesc::add_szskilllist() {
  return szskilllist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::SkillInfo >&
Cmd_Sc_GetHeroDesc::szskilllist() const {
  return szskilllist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::SkillInfo >*
Cmd_Sc_GetHeroDesc::mutable_szskilllist() {
  return &szskilllist_;
}

// optional int32 iAttGrow = 4;
inline bool Cmd_Sc_GetHeroDesc::has_iattgrow() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Cmd_Sc_GetHeroDesc::set_has_iattgrow() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Cmd_Sc_GetHeroDesc::clear_has_iattgrow() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Cmd_Sc_GetHeroDesc::clear_iattgrow() {
  iattgrow_ = 0;
  clear_has_iattgrow();
}
inline ::google::protobuf::int32 Cmd_Sc_GetHeroDesc::iattgrow() const {
  return iattgrow_;
}
inline void Cmd_Sc_GetHeroDesc::set_iattgrow(::google::protobuf::int32 value) {
  set_has_iattgrow();
  iattgrow_ = value;
}

// optional int32 iMaxHPGrow = 5;
inline bool Cmd_Sc_GetHeroDesc::has_imaxhpgrow() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Cmd_Sc_GetHeroDesc::set_has_imaxhpgrow() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Cmd_Sc_GetHeroDesc::clear_has_imaxhpgrow() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Cmd_Sc_GetHeroDesc::clear_imaxhpgrow() {
  imaxhpgrow_ = 0;
  clear_has_imaxhpgrow();
}
inline ::google::protobuf::int32 Cmd_Sc_GetHeroDesc::imaxhpgrow() const {
  return imaxhpgrow_;
}
inline void Cmd_Sc_GetHeroDesc::set_imaxhpgrow(::google::protobuf::int32 value) {
  set_has_imaxhpgrow();
  imaxhpgrow_ = value;
}

// repeated .GSProto.PropItem szPropAddValueList = 6;
inline int Cmd_Sc_GetHeroDesc::szpropaddvaluelist_size() const {
  return szpropaddvaluelist_.size();
}
inline void Cmd_Sc_GetHeroDesc::clear_szpropaddvaluelist() {
  szpropaddvaluelist_.Clear();
}
inline const ::GSProto::PropItem& Cmd_Sc_GetHeroDesc::szpropaddvaluelist(int index) const {
  return szpropaddvaluelist_.Get(index);
}
inline ::GSProto::PropItem* Cmd_Sc_GetHeroDesc::mutable_szpropaddvaluelist(int index) {
  return szpropaddvaluelist_.Mutable(index);
}
inline ::GSProto::PropItem* Cmd_Sc_GetHeroDesc::add_szpropaddvaluelist() {
  return szpropaddvaluelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
Cmd_Sc_GetHeroDesc::szpropaddvaluelist() const {
  return szpropaddvaluelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
Cmd_Sc_GetHeroDesc::mutable_szpropaddvaluelist() {
  return &szpropaddvaluelist_;
}

// optional int32 iDefGrow = 7;
inline bool Cmd_Sc_GetHeroDesc::has_idefgrow() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Cmd_Sc_GetHeroDesc::set_has_idefgrow() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Cmd_Sc_GetHeroDesc::clear_has_idefgrow() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Cmd_Sc_GetHeroDesc::clear_idefgrow() {
  idefgrow_ = 0;
  clear_has_idefgrow();
}
inline ::google::protobuf::int32 Cmd_Sc_GetHeroDesc::idefgrow() const {
  return idefgrow_;
}
inline void Cmd_Sc_GetHeroDesc::set_idefgrow(::google::protobuf::int32 value) {
  set_has_idefgrow();
  idefgrow_ = value;
}

// -------------------------------------------------------------------

// HeroTallent

// required int32 iTallentID = 1;
inline bool HeroTallent::has_itallentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroTallent::set_has_itallentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroTallent::clear_has_itallentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroTallent::clear_itallentid() {
  itallentid_ = 0;
  clear_has_itallentid();
}
inline ::google::protobuf::int32 HeroTallent::itallentid() const {
  return itallentid_;
}
inline void HeroTallent::set_itallentid(::google::protobuf::int32 value) {
  set_has_itallentid();
  itallentid_ = value;
}

// optional int32 iLevel = 2;
inline bool HeroTallent::has_ilevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroTallent::set_has_ilevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroTallent::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroTallent::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 HeroTallent::ilevel() const {
  return ilevel_;
}
inline void HeroTallent::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// optional bool bCanUpgrade = 3;
inline bool HeroTallent::has_bcanupgrade() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroTallent::set_has_bcanupgrade() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroTallent::clear_has_bcanupgrade() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroTallent::clear_bcanupgrade() {
  bcanupgrade_ = false;
  clear_has_bcanupgrade();
}
inline bool HeroTallent::bcanupgrade() const {
  return bcanupgrade_;
}
inline void HeroTallent::set_bcanupgrade(bool value) {
  set_has_bcanupgrade();
  bcanupgrade_ = value;
}

// -------------------------------------------------------------------

// HeroFavoriteDesc

// required int32 iItemID = 1;
inline bool HeroFavoriteDesc::has_iitemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroFavoriteDesc::set_has_iitemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroFavoriteDesc::clear_has_iitemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroFavoriteDesc::clear_iitemid() {
  iitemid_ = 0;
  clear_has_iitemid();
}
inline ::google::protobuf::int32 HeroFavoriteDesc::iitemid() const {
  return iitemid_;
}
inline void HeroFavoriteDesc::set_iitemid(::google::protobuf::int32 value) {
  set_has_iitemid();
  iitemid_ = value;
}

// required int32 iPos = 2;
inline bool HeroFavoriteDesc::has_ipos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroFavoriteDesc::set_has_ipos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroFavoriteDesc::clear_has_ipos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroFavoriteDesc::clear_ipos() {
  ipos_ = 0;
  clear_has_ipos();
}
inline ::google::protobuf::int32 HeroFavoriteDesc::ipos() const {
  return ipos_;
}
inline void HeroFavoriteDesc::set_ipos(::google::protobuf::int32 value) {
  set_has_ipos();
  ipos_ = value;
}

// -------------------------------------------------------------------

// HeroBaseData

// required uint32 dwObjectID = 1;
inline bool HeroBaseData::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroBaseData::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroBaseData::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroBaseData::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 HeroBaseData::dwobjectid() const {
  return dwobjectid_;
}
inline void HeroBaseData::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// required int32 iHeroID = 2;
inline bool HeroBaseData::has_iheroid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroBaseData::set_has_iheroid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroBaseData::clear_has_iheroid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroBaseData::clear_iheroid() {
  iheroid_ = 0;
  clear_has_iheroid();
}
inline ::google::protobuf::int32 HeroBaseData::iheroid() const {
  return iheroid_;
}
inline void HeroBaseData::set_iheroid(::google::protobuf::int32 value) {
  set_has_iheroid();
  iheroid_ = value;
}

// required int32 iLevel = 3;
inline bool HeroBaseData::has_ilevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroBaseData::set_has_ilevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroBaseData::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroBaseData::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 HeroBaseData::ilevel() const {
  return ilevel_;
}
inline void HeroBaseData::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// required int32 iLevelStep = 4;
inline bool HeroBaseData::has_ilevelstep() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeroBaseData::set_has_ilevelstep() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeroBaseData::clear_has_ilevelstep() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeroBaseData::clear_ilevelstep() {
  ilevelstep_ = 0;
  clear_has_ilevelstep();
}
inline ::google::protobuf::int32 HeroBaseData::ilevelstep() const {
  return ilevelstep_;
}
inline void HeroBaseData::set_ilevelstep(::google::protobuf::int32 value) {
  set_has_ilevelstep();
  ilevelstep_ = value;
}

// required int32 iFightValue = 5;
inline bool HeroBaseData::has_ifightvalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HeroBaseData::set_has_ifightvalue() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HeroBaseData::clear_has_ifightvalue() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HeroBaseData::clear_ifightvalue() {
  ifightvalue_ = 0;
  clear_has_ifightvalue();
}
inline ::google::protobuf::int32 HeroBaseData::ifightvalue() const {
  return ifightvalue_;
}
inline void HeroBaseData::set_ifightvalue(::google::protobuf::int32 value) {
  set_has_ifightvalue();
  ifightvalue_ = value;
}

// optional int32 iMaxHP = 6;
inline bool HeroBaseData::has_imaxhp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HeroBaseData::set_has_imaxhp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HeroBaseData::clear_has_imaxhp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HeroBaseData::clear_imaxhp() {
  imaxhp_ = 0;
  clear_has_imaxhp();
}
inline ::google::protobuf::int32 HeroBaseData::imaxhp() const {
  return imaxhp_;
}
inline void HeroBaseData::set_imaxhp(::google::protobuf::int32 value) {
  set_has_imaxhp();
  imaxhp_ = value;
}

// optional int32 iAtt = 7;
inline bool HeroBaseData::has_iatt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HeroBaseData::set_has_iatt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HeroBaseData::clear_has_iatt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HeroBaseData::clear_iatt() {
  iatt_ = 0;
  clear_has_iatt();
}
inline ::google::protobuf::int32 HeroBaseData::iatt() const {
  return iatt_;
}
inline void HeroBaseData::set_iatt(::google::protobuf::int32 value) {
  set_has_iatt();
  iatt_ = value;
}

// repeated .GSProto.PropItem szPropList = 8;
inline int HeroBaseData::szproplist_size() const {
  return szproplist_.size();
}
inline void HeroBaseData::clear_szproplist() {
  szproplist_.Clear();
}
inline const ::GSProto::PropItem& HeroBaseData::szproplist(int index) const {
  return szproplist_.Get(index);
}
inline ::GSProto::PropItem* HeroBaseData::mutable_szproplist(int index) {
  return szproplist_.Mutable(index);
}
inline ::GSProto::PropItem* HeroBaseData::add_szproplist() {
  return szproplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
HeroBaseData::szproplist() const {
  return szproplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
HeroBaseData::mutable_szproplist() {
  return &szproplist_;
}

// repeated .GSProto.HeroTallent szTallentList = 9;
inline int HeroBaseData::sztallentlist_size() const {
  return sztallentlist_.size();
}
inline void HeroBaseData::clear_sztallentlist() {
  sztallentlist_.Clear();
}
inline const ::GSProto::HeroTallent& HeroBaseData::sztallentlist(int index) const {
  return sztallentlist_.Get(index);
}
inline ::GSProto::HeroTallent* HeroBaseData::mutable_sztallentlist(int index) {
  return sztallentlist_.Mutable(index);
}
inline ::GSProto::HeroTallent* HeroBaseData::add_sztallentlist() {
  return sztallentlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HeroTallent >&
HeroBaseData::sztallentlist() const {
  return sztallentlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::HeroTallent >*
HeroBaseData::mutable_sztallentlist() {
  return &sztallentlist_;
}

// repeated .GSProto.HeroFavoriteDesc szFavoriteList = 10;
inline int HeroBaseData::szfavoritelist_size() const {
  return szfavoritelist_.size();
}
inline void HeroBaseData::clear_szfavoritelist() {
  szfavoritelist_.Clear();
}
inline const ::GSProto::HeroFavoriteDesc& HeroBaseData::szfavoritelist(int index) const {
  return szfavoritelist_.Get(index);
}
inline ::GSProto::HeroFavoriteDesc* HeroBaseData::mutable_szfavoritelist(int index) {
  return szfavoritelist_.Mutable(index);
}
inline ::GSProto::HeroFavoriteDesc* HeroBaseData::add_szfavoritelist() {
  return szfavoritelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HeroFavoriteDesc >&
HeroBaseData::szfavoritelist() const {
  return szfavoritelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::HeroFavoriteDesc >*
HeroBaseData::mutable_szfavoritelist() {
  return &szfavoritelist_;
}

// optional int32 iQuality = 11;
inline bool HeroBaseData::has_iquality() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void HeroBaseData::set_has_iquality() {
  _has_bits_[0] |= 0x00000400u;
}
inline void HeroBaseData::clear_has_iquality() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void HeroBaseData::clear_iquality() {
  iquality_ = 0;
  clear_has_iquality();
}
inline ::google::protobuf::int32 HeroBaseData::iquality() const {
  return iquality_;
}
inline void HeroBaseData::set_iquality(::google::protobuf::int32 value) {
  set_has_iquality();
  iquality_ = value;
}

// optional int32 ipos = 12;
inline bool HeroBaseData::has_ipos() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void HeroBaseData::set_has_ipos() {
  _has_bits_[0] |= 0x00000800u;
}
inline void HeroBaseData::clear_has_ipos() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void HeroBaseData::clear_ipos() {
  ipos_ = 0;
  clear_has_ipos();
}
inline ::google::protobuf::int32 HeroBaseData::ipos() const {
  return ipos_;
}
inline void HeroBaseData::set_ipos(::google::protobuf::int32 value) {
  set_has_ipos();
  ipos_ = value;
}

// -------------------------------------------------------------------

// Cmd_Cs_NewRole

// required string strRoleName = 1;
inline bool Cmd_Cs_NewRole::has_strrolename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_NewRole::set_has_strrolename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_NewRole::clear_has_strrolename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_NewRole::clear_strrolename() {
  if (strrolename_ != &::google::protobuf::internal::kEmptyString) {
    strrolename_->clear();
  }
  clear_has_strrolename();
}
inline const ::std::string& Cmd_Cs_NewRole::strrolename() const {
  return *strrolename_;
}
inline void Cmd_Cs_NewRole::set_strrolename(const ::std::string& value) {
  set_has_strrolename();
  if (strrolename_ == &::google::protobuf::internal::kEmptyString) {
    strrolename_ = new ::std::string;
  }
  strrolename_->assign(value);
}
inline void Cmd_Cs_NewRole::set_strrolename(const char* value) {
  set_has_strrolename();
  if (strrolename_ == &::google::protobuf::internal::kEmptyString) {
    strrolename_ = new ::std::string;
  }
  strrolename_->assign(value);
}
inline void Cmd_Cs_NewRole::set_strrolename(const char* value, size_t size) {
  set_has_strrolename();
  if (strrolename_ == &::google::protobuf::internal::kEmptyString) {
    strrolename_ = new ::std::string;
  }
  strrolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Cmd_Cs_NewRole::mutable_strrolename() {
  set_has_strrolename();
  if (strrolename_ == &::google::protobuf::internal::kEmptyString) {
    strrolename_ = new ::std::string;
  }
  return strrolename_;
}
inline ::std::string* Cmd_Cs_NewRole::release_strrolename() {
  clear_has_strrolename();
  if (strrolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strrolename_;
    strrolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Cmd_Cs_NewRole::set_allocated_strrolename(::std::string* strrolename) {
  if (strrolename_ != &::google::protobuf::internal::kEmptyString) {
    delete strrolename_;
  }
  if (strrolename) {
    set_has_strrolename();
    strrolename_ = strrolename;
  } else {
    clear_has_strrolename();
    strrolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 iselectheroid = 2;
inline bool Cmd_Cs_NewRole::has_iselectheroid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Cs_NewRole::set_has_iselectheroid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Cs_NewRole::clear_has_iselectheroid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Cs_NewRole::clear_iselectheroid() {
  iselectheroid_ = 0;
  clear_has_iselectheroid();
}
inline ::google::protobuf::int32 Cmd_Cs_NewRole::iselectheroid() const {
  return iselectheroid_;
}
inline void Cmd_Cs_NewRole::set_iselectheroid(::google::protobuf::int32 value) {
  set_has_iselectheroid();
  iselectheroid_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_NewRole

// required int32 iResult = 1;
inline bool Cmd_Sc_NewRole::has_iresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_NewRole::set_has_iresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_NewRole::clear_has_iresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_NewRole::clear_iresult() {
  iresult_ = 0;
  clear_has_iresult();
}
inline ::google::protobuf::int32 Cmd_Sc_NewRole::iresult() const {
  return iresult_;
}
inline void Cmd_Sc_NewRole::set_iresult(::google::protobuf::int32 value) {
  set_has_iresult();
  iresult_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_Kickoff

// required int32 iReason = 1;
inline bool Cmd_Sc_Kickoff::has_ireason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_Kickoff::set_has_ireason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_Kickoff::clear_has_ireason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_Kickoff::clear_ireason() {
  ireason_ = 0;
  clear_has_ireason();
}
inline ::google::protobuf::int32 Cmd_Sc_Kickoff::ireason() const {
  return ireason_;
}
inline void Cmd_Sc_Kickoff::set_ireason(::google::protobuf::int32 value) {
  set_has_ireason();
  ireason_ = value;
}

// -------------------------------------------------------------------

// Cmd_Cs_CheckActorName

// required string strAcorName = 1;
inline bool Cmd_Cs_CheckActorName::has_stracorname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_CheckActorName::set_has_stracorname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_CheckActorName::clear_has_stracorname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_CheckActorName::clear_stracorname() {
  if (stracorname_ != &::google::protobuf::internal::kEmptyString) {
    stracorname_->clear();
  }
  clear_has_stracorname();
}
inline const ::std::string& Cmd_Cs_CheckActorName::stracorname() const {
  return *stracorname_;
}
inline void Cmd_Cs_CheckActorName::set_stracorname(const ::std::string& value) {
  set_has_stracorname();
  if (stracorname_ == &::google::protobuf::internal::kEmptyString) {
    stracorname_ = new ::std::string;
  }
  stracorname_->assign(value);
}
inline void Cmd_Cs_CheckActorName::set_stracorname(const char* value) {
  set_has_stracorname();
  if (stracorname_ == &::google::protobuf::internal::kEmptyString) {
    stracorname_ = new ::std::string;
  }
  stracorname_->assign(value);
}
inline void Cmd_Cs_CheckActorName::set_stracorname(const char* value, size_t size) {
  set_has_stracorname();
  if (stracorname_ == &::google::protobuf::internal::kEmptyString) {
    stracorname_ = new ::std::string;
  }
  stracorname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Cmd_Cs_CheckActorName::mutable_stracorname() {
  set_has_stracorname();
  if (stracorname_ == &::google::protobuf::internal::kEmptyString) {
    stracorname_ = new ::std::string;
  }
  return stracorname_;
}
inline ::std::string* Cmd_Cs_CheckActorName::release_stracorname() {
  clear_has_stracorname();
  if (stracorname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stracorname_;
    stracorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Cmd_Cs_CheckActorName::set_allocated_stracorname(::std::string* stracorname) {
  if (stracorname_ != &::google::protobuf::internal::kEmptyString) {
    delete stracorname_;
  }
  if (stracorname) {
    set_has_stracorname();
    stracorname_ = stracorname;
  } else {
    clear_has_stracorname();
    stracorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Cmd_Sc_CheckActorName

// required int32 iIsOk = 1;
inline bool Cmd_Sc_CheckActorName::has_iisok() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_CheckActorName::set_has_iisok() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_CheckActorName::clear_has_iisok() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_CheckActorName::clear_iisok() {
  iisok_ = 0;
  clear_has_iisok();
}
inline ::google::protobuf::int32 Cmd_Sc_CheckActorName::iisok() const {
  return iisok_;
}
inline void Cmd_Sc_CheckActorName::set_iisok(::google::protobuf::int32 value) {
  set_has_iisok();
  iisok_ = value;
}

// -------------------------------------------------------------------

// FormationItemData

// required uint32 dwObjectID = 1;
inline bool FormationItemData::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FormationItemData::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FormationItemData::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FormationItemData::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 FormationItemData::dwobjectid() const {
  return dwobjectid_;
}
inline void FormationItemData::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// required int32 iPos = 2;
inline bool FormationItemData::has_ipos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FormationItemData::set_has_ipos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FormationItemData::clear_has_ipos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FormationItemData::clear_ipos() {
  ipos_ = 0;
  clear_has_ipos();
}
inline ::google::protobuf::int32 FormationItemData::ipos() const {
  return ipos_;
}
inline void FormationItemData::set_ipos(::google::protobuf::int32 value) {
  set_has_ipos();
  ipos_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_FormationData

// repeated .GSProto.FormationItemData szFormationList = 1;
inline int Cmd_Sc_FormationData::szformationlist_size() const {
  return szformationlist_.size();
}
inline void Cmd_Sc_FormationData::clear_szformationlist() {
  szformationlist_.Clear();
}
inline const ::GSProto::FormationItemData& Cmd_Sc_FormationData::szformationlist(int index) const {
  return szformationlist_.Get(index);
}
inline ::GSProto::FormationItemData* Cmd_Sc_FormationData::mutable_szformationlist(int index) {
  return szformationlist_.Mutable(index);
}
inline ::GSProto::FormationItemData* Cmd_Sc_FormationData::add_szformationlist() {
  return szformationlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FormationItemData >&
Cmd_Sc_FormationData::szformationlist() const {
  return szformationlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FormationItemData >*
Cmd_Sc_FormationData::mutable_szformationlist() {
  return &szformationlist_;
}

// required int32 iMemberLimit = 2;
inline bool Cmd_Sc_FormationData::has_imemberlimit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Sc_FormationData::set_has_imemberlimit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Sc_FormationData::clear_has_imemberlimit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Sc_FormationData::clear_imemberlimit() {
  imemberlimit_ = 0;
  clear_has_imemberlimit();
}
inline ::google::protobuf::int32 Cmd_Sc_FormationData::imemberlimit() const {
  return imemberlimit_;
}
inline void Cmd_Sc_FormationData::set_imemberlimit(::google::protobuf::int32 value) {
  set_has_imemberlimit();
  imemberlimit_ = value;
}

// required int32 iFightValue = 3;
inline bool Cmd_Sc_FormationData::has_ifightvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Cmd_Sc_FormationData::set_has_ifightvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Cmd_Sc_FormationData::clear_has_ifightvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Cmd_Sc_FormationData::clear_ifightvalue() {
  ifightvalue_ = 0;
  clear_has_ifightvalue();
}
inline ::google::protobuf::int32 Cmd_Sc_FormationData::ifightvalue() const {
  return ifightvalue_;
}
inline void Cmd_Sc_FormationData::set_ifightvalue(::google::protobuf::int32 value) {
  set_has_ifightvalue();
  ifightvalue_ = value;
}

// -------------------------------------------------------------------

// Cmd_Cs_FormationChg

// repeated .GSProto.FormationItemData szFormationList = 1;
inline int Cmd_Cs_FormationChg::szformationlist_size() const {
  return szformationlist_.size();
}
inline void Cmd_Cs_FormationChg::clear_szformationlist() {
  szformationlist_.Clear();
}
inline const ::GSProto::FormationItemData& Cmd_Cs_FormationChg::szformationlist(int index) const {
  return szformationlist_.Get(index);
}
inline ::GSProto::FormationItemData* Cmd_Cs_FormationChg::mutable_szformationlist(int index) {
  return szformationlist_.Mutable(index);
}
inline ::GSProto::FormationItemData* Cmd_Cs_FormationChg::add_szformationlist() {
  return szformationlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FormationItemData >&
Cmd_Cs_FormationChg::szformationlist() const {
  return szformationlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FormationItemData >*
Cmd_Cs_FormationChg::mutable_szformationlist() {
  return &szformationlist_;
}

// -------------------------------------------------------------------

// Cmd_Cs_GmMsg

// required string strCmd = 1;
inline bool Cmd_Cs_GmMsg::has_strcmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_GmMsg::set_has_strcmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_GmMsg::clear_has_strcmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_GmMsg::clear_strcmd() {
  if (strcmd_ != &::google::protobuf::internal::kEmptyString) {
    strcmd_->clear();
  }
  clear_has_strcmd();
}
inline const ::std::string& Cmd_Cs_GmMsg::strcmd() const {
  return *strcmd_;
}
inline void Cmd_Cs_GmMsg::set_strcmd(const ::std::string& value) {
  set_has_strcmd();
  if (strcmd_ == &::google::protobuf::internal::kEmptyString) {
    strcmd_ = new ::std::string;
  }
  strcmd_->assign(value);
}
inline void Cmd_Cs_GmMsg::set_strcmd(const char* value) {
  set_has_strcmd();
  if (strcmd_ == &::google::protobuf::internal::kEmptyString) {
    strcmd_ = new ::std::string;
  }
  strcmd_->assign(value);
}
inline void Cmd_Cs_GmMsg::set_strcmd(const char* value, size_t size) {
  set_has_strcmd();
  if (strcmd_ == &::google::protobuf::internal::kEmptyString) {
    strcmd_ = new ::std::string;
  }
  strcmd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Cmd_Cs_GmMsg::mutable_strcmd() {
  set_has_strcmd();
  if (strcmd_ == &::google::protobuf::internal::kEmptyString) {
    strcmd_ = new ::std::string;
  }
  return strcmd_;
}
inline ::std::string* Cmd_Cs_GmMsg::release_strcmd() {
  clear_has_strcmd();
  if (strcmd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strcmd_;
    strcmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Cmd_Cs_GmMsg::set_allocated_strcmd(::std::string* strcmd) {
  if (strcmd_ != &::google::protobuf::internal::kEmptyString) {
    delete strcmd_;
  }
  if (strcmd) {
    set_has_strcmd();
    strcmd_ = strcmd;
  } else {
    clear_has_strcmd();
    strcmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// FightHero

// required int32 iBaseID = 1;
inline bool FightHero::has_ibaseid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightHero::set_has_ibaseid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightHero::clear_has_ibaseid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightHero::clear_ibaseid() {
  ibaseid_ = 0;
  clear_has_ibaseid();
}
inline ::google::protobuf::int32 FightHero::ibaseid() const {
  return ibaseid_;
}
inline void FightHero::set_ibaseid(::google::protobuf::int32 value) {
  set_has_ibaseid();
  ibaseid_ = value;
}

// required int32 iLevel = 2;
inline bool FightHero::has_ilevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightHero::set_has_ilevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightHero::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightHero::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 FightHero::ilevel() const {
  return ilevel_;
}
inline void FightHero::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// required int32 iLevelStep = 3;
inline bool FightHero::has_ilevelstep() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightHero::set_has_ilevelstep() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightHero::clear_has_ilevelstep() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightHero::clear_ilevelstep() {
  ilevelstep_ = 0;
  clear_has_ilevelstep();
}
inline ::google::protobuf::int32 FightHero::ilevelstep() const {
  return ilevelstep_;
}
inline void FightHero::set_ilevelstep(::google::protobuf::int32 value) {
  set_has_ilevelstep();
  ilevelstep_ = value;
}

// required int32 iMaxHP = 4;
inline bool FightHero::has_imaxhp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FightHero::set_has_imaxhp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FightHero::clear_has_imaxhp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FightHero::clear_imaxhp() {
  imaxhp_ = 0;
  clear_has_imaxhp();
}
inline ::google::protobuf::int32 FightHero::imaxhp() const {
  return imaxhp_;
}
inline void FightHero::set_imaxhp(::google::protobuf::int32 value) {
  set_has_imaxhp();
  imaxhp_ = value;
}

// required int32 iInitAnger = 5;
inline bool FightHero::has_iinitanger() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FightHero::set_has_iinitanger() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FightHero::clear_has_iinitanger() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FightHero::clear_iinitanger() {
  iinitanger_ = 0;
  clear_has_iinitanger();
}
inline ::google::protobuf::int32 FightHero::iinitanger() const {
  return iinitanger_;
}
inline void FightHero::set_iinitanger(::google::protobuf::int32 value) {
  set_has_iinitanger();
  iinitanger_ = value;
}

// optional int32 iHP = 6;
inline bool FightHero::has_ihp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FightHero::set_has_ihp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FightHero::clear_has_ihp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FightHero::clear_ihp() {
  ihp_ = 0;
  clear_has_ihp();
}
inline ::google::protobuf::int32 FightHero::ihp() const {
  return ihp_;
}
inline void FightHero::set_ihp(::google::protobuf::int32 value) {
  set_has_ihp();
  ihp_ = value;
}

// optional int32 iQuality = 7;
inline bool FightHero::has_iquality() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FightHero::set_has_iquality() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FightHero::clear_has_iquality() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FightHero::clear_iquality() {
  iquality_ = 0;
  clear_has_iquality();
}
inline ::google::protobuf::int32 FightHero::iquality() const {
  return iquality_;
}
inline void FightHero::set_iquality(::google::protobuf::int32 value) {
  set_has_iquality();
  iquality_ = value;
}

// -------------------------------------------------------------------

// FightMonster

// required int32 iBaseID = 1;
inline bool FightMonster::has_ibaseid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightMonster::set_has_ibaseid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightMonster::clear_has_ibaseid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightMonster::clear_ibaseid() {
  ibaseid_ = 0;
  clear_has_ibaseid();
}
inline ::google::protobuf::int32 FightMonster::ibaseid() const {
  return ibaseid_;
}
inline void FightMonster::set_ibaseid(::google::protobuf::int32 value) {
  set_has_ibaseid();
  ibaseid_ = value;
}

// required int32 iLevel = 2;
inline bool FightMonster::has_ilevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightMonster::set_has_ilevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightMonster::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightMonster::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 FightMonster::ilevel() const {
  return ilevel_;
}
inline void FightMonster::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// required int32 iLevelStep = 3;
inline bool FightMonster::has_ilevelstep() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightMonster::set_has_ilevelstep() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightMonster::clear_has_ilevelstep() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightMonster::clear_ilevelstep() {
  ilevelstep_ = 0;
  clear_has_ilevelstep();
}
inline ::google::protobuf::int32 FightMonster::ilevelstep() const {
  return ilevelstep_;
}
inline void FightMonster::set_ilevelstep(::google::protobuf::int32 value) {
  set_has_ilevelstep();
  ilevelstep_ = value;
}

// required int32 iMaxHP = 4;
inline bool FightMonster::has_imaxhp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FightMonster::set_has_imaxhp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FightMonster::clear_has_imaxhp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FightMonster::clear_imaxhp() {
  imaxhp_ = 0;
  clear_has_imaxhp();
}
inline ::google::protobuf::int32 FightMonster::imaxhp() const {
  return imaxhp_;
}
inline void FightMonster::set_imaxhp(::google::protobuf::int32 value) {
  set_has_imaxhp();
  imaxhp_ = value;
}

// required int32 iInitAnger = 5;
inline bool FightMonster::has_iinitanger() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FightMonster::set_has_iinitanger() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FightMonster::clear_has_iinitanger() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FightMonster::clear_iinitanger() {
  iinitanger_ = 0;
  clear_has_iinitanger();
}
inline ::google::protobuf::int32 FightMonster::iinitanger() const {
  return iinitanger_;
}
inline void FightMonster::set_iinitanger(::google::protobuf::int32 value) {
  set_has_iinitanger();
  iinitanger_ = value;
}

// optional int32 iHP = 6;
inline bool FightMonster::has_ihp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FightMonster::set_has_ihp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FightMonster::clear_has_ihp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FightMonster::clear_ihp() {
  ihp_ = 0;
  clear_has_ihp();
}
inline ::google::protobuf::int32 FightMonster::ihp() const {
  return ihp_;
}
inline void FightMonster::set_ihp(::google::protobuf::int32 value) {
  set_has_ihp();
  ihp_ = value;
}

// -------------------------------------------------------------------

// FightGodAnimal

// required int32 iBaseID = 1;
inline bool FightGodAnimal::has_ibaseid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightGodAnimal::set_has_ibaseid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightGodAnimal::clear_has_ibaseid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightGodAnimal::clear_ibaseid() {
  ibaseid_ = 0;
  clear_has_ibaseid();
}
inline ::google::protobuf::int32 FightGodAnimal::ibaseid() const {
  return ibaseid_;
}
inline void FightGodAnimal::set_ibaseid(::google::protobuf::int32 value) {
  set_has_ibaseid();
  ibaseid_ = value;
}

// required int32 iLevel = 2;
inline bool FightGodAnimal::has_ilevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightGodAnimal::set_has_ilevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightGodAnimal::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightGodAnimal::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 FightGodAnimal::ilevel() const {
  return ilevel_;
}
inline void FightGodAnimal::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// required int32 iLevelStep = 3;
inline bool FightGodAnimal::has_ilevelstep() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightGodAnimal::set_has_ilevelstep() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightGodAnimal::clear_has_ilevelstep() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightGodAnimal::clear_ilevelstep() {
  ilevelstep_ = 0;
  clear_has_ilevelstep();
}
inline ::google::protobuf::int32 FightGodAnimal::ilevelstep() const {
  return ilevelstep_;
}
inline void FightGodAnimal::set_ilevelstep(::google::protobuf::int32 value) {
  set_has_ilevelstep();
  ilevelstep_ = value;
}

// required int32 iMaxHP = 4;
inline bool FightGodAnimal::has_imaxhp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FightGodAnimal::set_has_imaxhp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FightGodAnimal::clear_has_imaxhp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FightGodAnimal::clear_imaxhp() {
  imaxhp_ = 0;
  clear_has_imaxhp();
}
inline ::google::protobuf::int32 FightGodAnimal::imaxhp() const {
  return imaxhp_;
}
inline void FightGodAnimal::set_imaxhp(::google::protobuf::int32 value) {
  set_has_imaxhp();
  imaxhp_ = value;
}

// required int32 iInitAnger = 5;
inline bool FightGodAnimal::has_iinitanger() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FightGodAnimal::set_has_iinitanger() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FightGodAnimal::clear_has_iinitanger() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FightGodAnimal::clear_iinitanger() {
  iinitanger_ = 0;
  clear_has_iinitanger();
}
inline ::google::protobuf::int32 FightGodAnimal::iinitanger() const {
  return iinitanger_;
}
inline void FightGodAnimal::set_iinitanger(::google::protobuf::int32 value) {
  set_has_iinitanger();
  iinitanger_ = value;
}

// -------------------------------------------------------------------

// FightObj

// required int32 iObjectType = 1;
inline bool FightObj::has_iobjecttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightObj::set_has_iobjecttype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightObj::clear_has_iobjecttype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightObj::clear_iobjecttype() {
  iobjecttype_ = 0;
  clear_has_iobjecttype();
}
inline ::google::protobuf::int32 FightObj::iobjecttype() const {
  return iobjecttype_;
}
inline void FightObj::set_iobjecttype(::google::protobuf::int32 value) {
  set_has_iobjecttype();
  iobjecttype_ = value;
}

// required int32 iPos = 2;
inline bool FightObj::has_ipos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightObj::set_has_ipos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightObj::clear_has_ipos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightObj::clear_ipos() {
  ipos_ = 0;
  clear_has_ipos();
}
inline ::google::protobuf::int32 FightObj::ipos() const {
  return ipos_;
}
inline void FightObj::set_ipos(::google::protobuf::int32 value) {
  set_has_ipos();
  ipos_ = value;
}

// optional .GSProto.FightHero hero = 3;
inline bool FightObj::has_hero() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightObj::set_has_hero() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightObj::clear_has_hero() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightObj::clear_hero() {
  if (hero_ != NULL) hero_->::GSProto::FightHero::Clear();
  clear_has_hero();
}
inline const ::GSProto::FightHero& FightObj::hero() const {
  return hero_ != NULL ? *hero_ : *default_instance_->hero_;
}
inline ::GSProto::FightHero* FightObj::mutable_hero() {
  set_has_hero();
  if (hero_ == NULL) hero_ = new ::GSProto::FightHero;
  return hero_;
}
inline ::GSProto::FightHero* FightObj::release_hero() {
  clear_has_hero();
  ::GSProto::FightHero* temp = hero_;
  hero_ = NULL;
  return temp;
}
inline void FightObj::set_allocated_hero(::GSProto::FightHero* hero) {
  delete hero_;
  hero_ = hero;
  if (hero) {
    set_has_hero();
  } else {
    clear_has_hero();
  }
}

// optional .GSProto.FightMonster monster = 4;
inline bool FightObj::has_monster() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FightObj::set_has_monster() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FightObj::clear_has_monster() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FightObj::clear_monster() {
  if (monster_ != NULL) monster_->::GSProto::FightMonster::Clear();
  clear_has_monster();
}
inline const ::GSProto::FightMonster& FightObj::monster() const {
  return monster_ != NULL ? *monster_ : *default_instance_->monster_;
}
inline ::GSProto::FightMonster* FightObj::mutable_monster() {
  set_has_monster();
  if (monster_ == NULL) monster_ = new ::GSProto::FightMonster;
  return monster_;
}
inline ::GSProto::FightMonster* FightObj::release_monster() {
  clear_has_monster();
  ::GSProto::FightMonster* temp = monster_;
  monster_ = NULL;
  return temp;
}
inline void FightObj::set_allocated_monster(::GSProto::FightMonster* monster) {
  delete monster_;
  monster_ = monster;
  if (monster) {
    set_has_monster();
  } else {
    clear_has_monster();
  }
}

// optional int32 iFinHP = 5;
inline bool FightObj::has_ifinhp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FightObj::set_has_ifinhp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FightObj::clear_has_ifinhp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FightObj::clear_ifinhp() {
  ifinhp_ = 0;
  clear_has_ifinhp();
}
inline ::google::protobuf::int32 FightObj::ifinhp() const {
  return ifinhp_;
}
inline void FightObj::set_ifinhp(::google::protobuf::int32 value) {
  set_has_ifinhp();
  ifinhp_ = value;
}

// optional .GSProto.FightGodAnimal godAnimal = 6;
inline bool FightObj::has_godanimal() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FightObj::set_has_godanimal() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FightObj::clear_has_godanimal() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FightObj::clear_godanimal() {
  if (godanimal_ != NULL) godanimal_->::GSProto::FightGodAnimal::Clear();
  clear_has_godanimal();
}
inline const ::GSProto::FightGodAnimal& FightObj::godanimal() const {
  return godanimal_ != NULL ? *godanimal_ : *default_instance_->godanimal_;
}
inline ::GSProto::FightGodAnimal* FightObj::mutable_godanimal() {
  set_has_godanimal();
  if (godanimal_ == NULL) godanimal_ = new ::GSProto::FightGodAnimal;
  return godanimal_;
}
inline ::GSProto::FightGodAnimal* FightObj::release_godanimal() {
  clear_has_godanimal();
  ::GSProto::FightGodAnimal* temp = godanimal_;
  godanimal_ = NULL;
  return temp;
}
inline void FightObj::set_allocated_godanimal(::GSProto::FightGodAnimal* godanimal) {
  delete godanimal_;
  godanimal_ = godanimal;
  if (godanimal) {
    set_has_godanimal();
  } else {
    clear_has_godanimal();
  }
}

// -------------------------------------------------------------------

// ReplaceMemberAction

// required bool bAttackerReplace = 1;
inline bool ReplaceMemberAction::has_battackerreplace() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplaceMemberAction::set_has_battackerreplace() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplaceMemberAction::clear_has_battackerreplace() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplaceMemberAction::clear_battackerreplace() {
  battackerreplace_ = false;
  clear_has_battackerreplace();
}
inline bool ReplaceMemberAction::battackerreplace() const {
  return battackerreplace_;
}
inline void ReplaceMemberAction::set_battackerreplace(bool value) {
  set_has_battackerreplace();
  battackerreplace_ = value;
}

// repeated .GSProto.FightObj szNewFightObject = 2;
inline int ReplaceMemberAction::sznewfightobject_size() const {
  return sznewfightobject_.size();
}
inline void ReplaceMemberAction::clear_sznewfightobject() {
  sznewfightobject_.Clear();
}
inline const ::GSProto::FightObj& ReplaceMemberAction::sznewfightobject(int index) const {
  return sznewfightobject_.Get(index);
}
inline ::GSProto::FightObj* ReplaceMemberAction::mutable_sznewfightobject(int index) {
  return sznewfightobject_.Mutable(index);
}
inline ::GSProto::FightObj* ReplaceMemberAction::add_sznewfightobject() {
  return sznewfightobject_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightObj >&
ReplaceMemberAction::sznewfightobject() const {
  return sznewfightobject_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightObj >*
ReplaceMemberAction::mutable_sznewfightobject() {
  return &sznewfightobject_;
}

// optional bool bFinalFight = 3;
inline bool ReplaceMemberAction::has_bfinalfight() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReplaceMemberAction::set_has_bfinalfight() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReplaceMemberAction::clear_has_bfinalfight() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReplaceMemberAction::clear_bfinalfight() {
  bfinalfight_ = false;
  clear_has_bfinalfight();
}
inline bool ReplaceMemberAction::bfinalfight() const {
  return bfinalfight_;
}
inline void ReplaceMemberAction::set_bfinalfight(bool value) {
  set_has_bfinalfight();
  bfinalfight_ = value;
}

// -------------------------------------------------------------------

// FightSkillAction

// required int32 iAttackerPos = 1;
inline bool FightSkillAction::has_iattackerpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightSkillAction::set_has_iattackerpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightSkillAction::clear_has_iattackerpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightSkillAction::clear_iattackerpos() {
  iattackerpos_ = 0;
  clear_has_iattackerpos();
}
inline ::google::protobuf::int32 FightSkillAction::iattackerpos() const {
  return iattackerpos_;
}
inline void FightSkillAction::set_iattackerpos(::google::protobuf::int32 value) {
  set_has_iattackerpos();
  iattackerpos_ = value;
}

// required int32 iSkillID = 2;
inline bool FightSkillAction::has_iskillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightSkillAction::set_has_iskillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightSkillAction::clear_has_iskillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightSkillAction::clear_iskillid() {
  iskillid_ = 0;
  clear_has_iskillid();
}
inline ::google::protobuf::int32 FightSkillAction::iskillid() const {
  return iskillid_;
}
inline void FightSkillAction::set_iskillid(::google::protobuf::int32 value) {
  set_has_iskillid();
  iskillid_ = value;
}

// required int32 iAngerAfterSkill = 3;
inline bool FightSkillAction::has_iangerafterskill() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightSkillAction::set_has_iangerafterskill() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightSkillAction::clear_has_iangerafterskill() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightSkillAction::clear_iangerafterskill() {
  iangerafterskill_ = 0;
  clear_has_iangerafterskill();
}
inline ::google::protobuf::int32 FightSkillAction::iangerafterskill() const {
  return iangerafterskill_;
}
inline void FightSkillAction::set_iangerafterskill(::google::protobuf::int32 value) {
  set_has_iangerafterskill();
  iangerafterskill_ = value;
}

// optional int32 iAGodAnimalAnger = 5;
inline bool FightSkillAction::has_iagodanimalanger() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FightSkillAction::set_has_iagodanimalanger() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FightSkillAction::clear_has_iagodanimalanger() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FightSkillAction::clear_iagodanimalanger() {
  iagodanimalanger_ = 0;
  clear_has_iagodanimalanger();
}
inline ::google::protobuf::int32 FightSkillAction::iagodanimalanger() const {
  return iagodanimalanger_;
}
inline void FightSkillAction::set_iagodanimalanger(::google::protobuf::int32 value) {
  set_has_iagodanimalanger();
  iagodanimalanger_ = value;
}

// optional int32 iTGodAnimalAnger = 6;
inline bool FightSkillAction::has_itgodanimalanger() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FightSkillAction::set_has_itgodanimalanger() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FightSkillAction::clear_has_itgodanimalanger() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FightSkillAction::clear_itgodanimalanger() {
  itgodanimalanger_ = 0;
  clear_has_itgodanimalanger();
}
inline ::google::protobuf::int32 FightSkillAction::itgodanimalanger() const {
  return itgodanimalanger_;
}
inline void FightSkillAction::set_itgodanimalanger(::google::protobuf::int32 value) {
  set_has_itgodanimalanger();
  itgodanimalanger_ = value;
}

// optional bool bIsStageSkill = 7;
inline bool FightSkillAction::has_bisstageskill() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FightSkillAction::set_has_bisstageskill() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FightSkillAction::clear_has_bisstageskill() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FightSkillAction::clear_bisstageskill() {
  bisstageskill_ = false;
  clear_has_bisstageskill();
}
inline bool FightSkillAction::bisstageskill() const {
  return bisstageskill_;
}
inline void FightSkillAction::set_bisstageskill(bool value) {
  set_has_bisstageskill();
  bisstageskill_ = value;
}

// -------------------------------------------------------------------

// FightResulSet

// repeated .GSProto.FightResult szResult = 1;
inline int FightResulSet::szresult_size() const {
  return szresult_.size();
}
inline void FightResulSet::clear_szresult() {
  szresult_.Clear();
}
inline const ::GSProto::FightResult& FightResulSet::szresult(int index) const {
  return szresult_.Get(index);
}
inline ::GSProto::FightResult* FightResulSet::mutable_szresult(int index) {
  return szresult_.Mutable(index);
}
inline ::GSProto::FightResult* FightResulSet::add_szresult() {
  return szresult_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightResult >&
FightResulSet::szresult() const {
  return szresult_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightResult >*
FightResulSet::mutable_szresult() {
  return &szresult_;
}

// optional bool bContinueSkill = 2;
inline bool FightResulSet::has_bcontinueskill() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightResulSet::set_has_bcontinueskill() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightResulSet::clear_has_bcontinueskill() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightResulSet::clear_bcontinueskill() {
  bcontinueskill_ = false;
  clear_has_bcontinueskill();
}
inline bool FightResulSet::bcontinueskill() const {
  return bcontinueskill_;
}
inline void FightResulSet::set_bcontinueskill(bool value) {
  set_has_bcontinueskill();
  bcontinueskill_ = value;
}

// optional bool bContinueKill = 3;
inline bool FightResulSet::has_bcontinuekill() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightResulSet::set_has_bcontinuekill() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightResulSet::clear_has_bcontinuekill() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightResulSet::clear_bcontinuekill() {
  bcontinuekill_ = false;
  clear_has_bcontinuekill();
}
inline bool FightResulSet::bcontinuekill() const {
  return bcontinuekill_;
}
inline void FightResulSet::set_bcontinuekill(bool value) {
  set_has_bcontinuekill();
  bcontinuekill_ = value;
}

// -------------------------------------------------------------------

// FightResult

// required int32 iResultType = 1;
inline bool FightResult::has_iresulttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightResult::set_has_iresulttype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightResult::clear_has_iresulttype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightResult::clear_iresulttype() {
  iresulttype_ = 0;
  clear_has_iresulttype();
}
inline ::google::protobuf::int32 FightResult::iresulttype() const {
  return iresulttype_;
}
inline void FightResult::set_iresulttype(::google::protobuf::int32 value) {
  set_has_iresulttype();
  iresulttype_ = value;
}

// optional .GSProto.FightSkillDamageResult damageResult = 2;
inline bool FightResult::has_damageresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightResult::set_has_damageresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightResult::clear_has_damageresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightResult::clear_damageresult() {
  if (damageresult_ != NULL) damageresult_->::GSProto::FightSkillDamageResult::Clear();
  clear_has_damageresult();
}
inline const ::GSProto::FightSkillDamageResult& FightResult::damageresult() const {
  return damageresult_ != NULL ? *damageresult_ : *default_instance_->damageresult_;
}
inline ::GSProto::FightSkillDamageResult* FightResult::mutable_damageresult() {
  set_has_damageresult();
  if (damageresult_ == NULL) damageresult_ = new ::GSProto::FightSkillDamageResult;
  return damageresult_;
}
inline ::GSProto::FightSkillDamageResult* FightResult::release_damageresult() {
  clear_has_damageresult();
  ::GSProto::FightSkillDamageResult* temp = damageresult_;
  damageresult_ = NULL;
  return temp;
}
inline void FightResult::set_allocated_damageresult(::GSProto::FightSkillDamageResult* damageresult) {
  delete damageresult_;
  damageresult_ = damageresult;
  if (damageresult) {
    set_has_damageresult();
  } else {
    clear_has_damageresult();
  }
}

// optional .GSProto.FightBackDamageResult backResult = 3;
inline bool FightResult::has_backresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightResult::set_has_backresult() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightResult::clear_has_backresult() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightResult::clear_backresult() {
  if (backresult_ != NULL) backresult_->::GSProto::FightBackDamageResult::Clear();
  clear_has_backresult();
}
inline const ::GSProto::FightBackDamageResult& FightResult::backresult() const {
  return backresult_ != NULL ? *backresult_ : *default_instance_->backresult_;
}
inline ::GSProto::FightBackDamageResult* FightResult::mutable_backresult() {
  set_has_backresult();
  if (backresult_ == NULL) backresult_ = new ::GSProto::FightBackDamageResult;
  return backresult_;
}
inline ::GSProto::FightBackDamageResult* FightResult::release_backresult() {
  clear_has_backresult();
  ::GSProto::FightBackDamageResult* temp = backresult_;
  backresult_ = NULL;
  return temp;
}
inline void FightResult::set_allocated_backresult(::GSProto::FightBackDamageResult* backresult) {
  delete backresult_;
  backresult_ = backresult;
  if (backresult) {
    set_has_backresult();
  } else {
    clear_has_backresult();
  }
}

// optional .GSProto.FightPropChgResult propChgResult = 4;
inline bool FightResult::has_propchgresult() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FightResult::set_has_propchgresult() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FightResult::clear_has_propchgresult() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FightResult::clear_propchgresult() {
  if (propchgresult_ != NULL) propchgresult_->::GSProto::FightPropChgResult::Clear();
  clear_has_propchgresult();
}
inline const ::GSProto::FightPropChgResult& FightResult::propchgresult() const {
  return propchgresult_ != NULL ? *propchgresult_ : *default_instance_->propchgresult_;
}
inline ::GSProto::FightPropChgResult* FightResult::mutable_propchgresult() {
  set_has_propchgresult();
  if (propchgresult_ == NULL) propchgresult_ = new ::GSProto::FightPropChgResult;
  return propchgresult_;
}
inline ::GSProto::FightPropChgResult* FightResult::release_propchgresult() {
  clear_has_propchgresult();
  ::GSProto::FightPropChgResult* temp = propchgresult_;
  propchgresult_ = NULL;
  return temp;
}
inline void FightResult::set_allocated_propchgresult(::GSProto::FightPropChgResult* propchgresult) {
  delete propchgresult_;
  propchgresult_ = propchgresult;
  if (propchgresult) {
    set_has_propchgresult();
  } else {
    clear_has_propchgresult();
  }
}

// optional .GSProto.FightAddBuffResult addBuffResult = 5;
inline bool FightResult::has_addbuffresult() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FightResult::set_has_addbuffresult() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FightResult::clear_has_addbuffresult() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FightResult::clear_addbuffresult() {
  if (addbuffresult_ != NULL) addbuffresult_->::GSProto::FightAddBuffResult::Clear();
  clear_has_addbuffresult();
}
inline const ::GSProto::FightAddBuffResult& FightResult::addbuffresult() const {
  return addbuffresult_ != NULL ? *addbuffresult_ : *default_instance_->addbuffresult_;
}
inline ::GSProto::FightAddBuffResult* FightResult::mutable_addbuffresult() {
  set_has_addbuffresult();
  if (addbuffresult_ == NULL) addbuffresult_ = new ::GSProto::FightAddBuffResult;
  return addbuffresult_;
}
inline ::GSProto::FightAddBuffResult* FightResult::release_addbuffresult() {
  clear_has_addbuffresult();
  ::GSProto::FightAddBuffResult* temp = addbuffresult_;
  addbuffresult_ = NULL;
  return temp;
}
inline void FightResult::set_allocated_addbuffresult(::GSProto::FightAddBuffResult* addbuffresult) {
  delete addbuffresult_;
  addbuffresult_ = addbuffresult;
  if (addbuffresult) {
    set_has_addbuffresult();
  } else {
    clear_has_addbuffresult();
  }
}

// optional .GSProto.FightDelBuffResult delBuffResult = 6;
inline bool FightResult::has_delbuffresult() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FightResult::set_has_delbuffresult() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FightResult::clear_has_delbuffresult() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FightResult::clear_delbuffresult() {
  if (delbuffresult_ != NULL) delbuffresult_->::GSProto::FightDelBuffResult::Clear();
  clear_has_delbuffresult();
}
inline const ::GSProto::FightDelBuffResult& FightResult::delbuffresult() const {
  return delbuffresult_ != NULL ? *delbuffresult_ : *default_instance_->delbuffresult_;
}
inline ::GSProto::FightDelBuffResult* FightResult::mutable_delbuffresult() {
  set_has_delbuffresult();
  if (delbuffresult_ == NULL) delbuffresult_ = new ::GSProto::FightDelBuffResult;
  return delbuffresult_;
}
inline ::GSProto::FightDelBuffResult* FightResult::release_delbuffresult() {
  clear_has_delbuffresult();
  ::GSProto::FightDelBuffResult* temp = delbuffresult_;
  delbuffresult_ = NULL;
  return temp;
}
inline void FightResult::set_allocated_delbuffresult(::GSProto::FightDelBuffResult* delbuffresult) {
  delete delbuffresult_;
  delbuffresult_ = delbuffresult;
  if (delbuffresult) {
    set_has_delbuffresult();
  } else {
    clear_has_delbuffresult();
  }
}

// optional .GSProto.ReliveResult reliveResult = 7;
inline bool FightResult::has_reliveresult() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FightResult::set_has_reliveresult() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FightResult::clear_has_reliveresult() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FightResult::clear_reliveresult() {
  if (reliveresult_ != NULL) reliveresult_->::GSProto::ReliveResult::Clear();
  clear_has_reliveresult();
}
inline const ::GSProto::ReliveResult& FightResult::reliveresult() const {
  return reliveresult_ != NULL ? *reliveresult_ : *default_instance_->reliveresult_;
}
inline ::GSProto::ReliveResult* FightResult::mutable_reliveresult() {
  set_has_reliveresult();
  if (reliveresult_ == NULL) reliveresult_ = new ::GSProto::ReliveResult;
  return reliveresult_;
}
inline ::GSProto::ReliveResult* FightResult::release_reliveresult() {
  clear_has_reliveresult();
  ::GSProto::ReliveResult* temp = reliveresult_;
  reliveresult_ = NULL;
  return temp;
}
inline void FightResult::set_allocated_reliveresult(::GSProto::ReliveResult* reliveresult) {
  delete reliveresult_;
  reliveresult_ = reliveresult;
  if (reliveresult) {
    set_has_reliveresult();
  } else {
    clear_has_reliveresult();
  }
}

// optional .GSProto.FightCreateItemResult createItemResult = 8;
inline bool FightResult::has_createitemresult() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FightResult::set_has_createitemresult() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FightResult::clear_has_createitemresult() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FightResult::clear_createitemresult() {
  if (createitemresult_ != NULL) createitemresult_->::GSProto::FightCreateItemResult::Clear();
  clear_has_createitemresult();
}
inline const ::GSProto::FightCreateItemResult& FightResult::createitemresult() const {
  return createitemresult_ != NULL ? *createitemresult_ : *default_instance_->createitemresult_;
}
inline ::GSProto::FightCreateItemResult* FightResult::mutable_createitemresult() {
  set_has_createitemresult();
  if (createitemresult_ == NULL) createitemresult_ = new ::GSProto::FightCreateItemResult;
  return createitemresult_;
}
inline ::GSProto::FightCreateItemResult* FightResult::release_createitemresult() {
  clear_has_createitemresult();
  ::GSProto::FightCreateItemResult* temp = createitemresult_;
  createitemresult_ = NULL;
  return temp;
}
inline void FightResult::set_allocated_createitemresult(::GSProto::FightCreateItemResult* createitemresult) {
  delete createitemresult_;
  createitemresult_ = createitemresult;
  if (createitemresult) {
    set_has_createitemresult();
  } else {
    clear_has_createitemresult();
  }
}

// optional .GSProto.FightUseActorSkillResult useActorSkillResult = 9;
inline bool FightResult::has_useactorskillresult() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FightResult::set_has_useactorskillresult() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FightResult::clear_has_useactorskillresult() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FightResult::clear_useactorskillresult() {
  if (useactorskillresult_ != NULL) useactorskillresult_->::GSProto::FightUseActorSkillResult::Clear();
  clear_has_useactorskillresult();
}
inline const ::GSProto::FightUseActorSkillResult& FightResult::useactorskillresult() const {
  return useactorskillresult_ != NULL ? *useactorskillresult_ : *default_instance_->useactorskillresult_;
}
inline ::GSProto::FightUseActorSkillResult* FightResult::mutable_useactorskillresult() {
  set_has_useactorskillresult();
  if (useactorskillresult_ == NULL) useactorskillresult_ = new ::GSProto::FightUseActorSkillResult;
  return useactorskillresult_;
}
inline ::GSProto::FightUseActorSkillResult* FightResult::release_useactorskillresult() {
  clear_has_useactorskillresult();
  ::GSProto::FightUseActorSkillResult* temp = useactorskillresult_;
  useactorskillresult_ = NULL;
  return temp;
}
inline void FightResult::set_allocated_useactorskillresult(::GSProto::FightUseActorSkillResult* useactorskillresult) {
  delete useactorskillresult_;
  useactorskillresult_ = useactorskillresult;
  if (useactorskillresult) {
    set_has_useactorskillresult();
  } else {
    clear_has_useactorskillresult();
  }
}

// optional .GSProto.FightSyncHPResult syncHPResult = 10;
inline bool FightResult::has_synchpresult() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FightResult::set_has_synchpresult() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FightResult::clear_has_synchpresult() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FightResult::clear_synchpresult() {
  if (synchpresult_ != NULL) synchpresult_->::GSProto::FightSyncHPResult::Clear();
  clear_has_synchpresult();
}
inline const ::GSProto::FightSyncHPResult& FightResult::synchpresult() const {
  return synchpresult_ != NULL ? *synchpresult_ : *default_instance_->synchpresult_;
}
inline ::GSProto::FightSyncHPResult* FightResult::mutable_synchpresult() {
  set_has_synchpresult();
  if (synchpresult_ == NULL) synchpresult_ = new ::GSProto::FightSyncHPResult;
  return synchpresult_;
}
inline ::GSProto::FightSyncHPResult* FightResult::release_synchpresult() {
  clear_has_synchpresult();
  ::GSProto::FightSyncHPResult* temp = synchpresult_;
  synchpresult_ = NULL;
  return temp;
}
inline void FightResult::set_allocated_synchpresult(::GSProto::FightSyncHPResult* synchpresult) {
  delete synchpresult_;
  synchpresult_ = synchpresult;
  if (synchpresult) {
    set_has_synchpresult();
  } else {
    clear_has_synchpresult();
  }
}

// optional .GSProto.FightZiBaoResult zibaoResult = 11;
inline bool FightResult::has_zibaoresult() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void FightResult::set_has_zibaoresult() {
  _has_bits_[0] |= 0x00000400u;
}
inline void FightResult::clear_has_zibaoresult() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void FightResult::clear_zibaoresult() {
  if (zibaoresult_ != NULL) zibaoresult_->::GSProto::FightZiBaoResult::Clear();
  clear_has_zibaoresult();
}
inline const ::GSProto::FightZiBaoResult& FightResult::zibaoresult() const {
  return zibaoresult_ != NULL ? *zibaoresult_ : *default_instance_->zibaoresult_;
}
inline ::GSProto::FightZiBaoResult* FightResult::mutable_zibaoresult() {
  set_has_zibaoresult();
  if (zibaoresult_ == NULL) zibaoresult_ = new ::GSProto::FightZiBaoResult;
  return zibaoresult_;
}
inline ::GSProto::FightZiBaoResult* FightResult::release_zibaoresult() {
  clear_has_zibaoresult();
  ::GSProto::FightZiBaoResult* temp = zibaoresult_;
  zibaoresult_ = NULL;
  return temp;
}
inline void FightResult::set_allocated_zibaoresult(::GSProto::FightZiBaoResult* zibaoresult) {
  delete zibaoresult_;
  zibaoresult_ = zibaoresult;
  if (zibaoresult) {
    set_has_zibaoresult();
  } else {
    clear_has_zibaoresult();
  }
}

// -------------------------------------------------------------------

// FightZiBaoResult

// required int32 iPos = 1;
inline bool FightZiBaoResult::has_ipos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightZiBaoResult::set_has_ipos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightZiBaoResult::clear_has_ipos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightZiBaoResult::clear_ipos() {
  ipos_ = 0;
  clear_has_ipos();
}
inline ::google::protobuf::int32 FightZiBaoResult::ipos() const {
  return ipos_;
}
inline void FightZiBaoResult::set_ipos(::google::protobuf::int32 value) {
  set_has_ipos();
  ipos_ = value;
}

// -------------------------------------------------------------------

// FightSyncHPResult

// required int32 iTargetPos = 1;
inline bool FightSyncHPResult::has_itargetpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightSyncHPResult::set_has_itargetpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightSyncHPResult::clear_has_itargetpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightSyncHPResult::clear_itargetpos() {
  itargetpos_ = 0;
  clear_has_itargetpos();
}
inline ::google::protobuf::int32 FightSyncHPResult::itargetpos() const {
  return itargetpos_;
}
inline void FightSyncHPResult::set_itargetpos(::google::protobuf::int32 value) {
  set_has_itargetpos();
  itargetpos_ = value;
}

// required int32 iHP = 2;
inline bool FightSyncHPResult::has_ihp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightSyncHPResult::set_has_ihp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightSyncHPResult::clear_has_ihp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightSyncHPResult::clear_ihp() {
  ihp_ = 0;
  clear_has_ihp();
}
inline ::google::protobuf::int32 FightSyncHPResult::ihp() const {
  return ihp_;
}
inline void FightSyncHPResult::set_ihp(::google::protobuf::int32 value) {
  set_has_ihp();
  ihp_ = value;
}

// optional int32 iAnger = 3;
inline bool FightSyncHPResult::has_ianger() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightSyncHPResult::set_has_ianger() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightSyncHPResult::clear_has_ianger() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightSyncHPResult::clear_ianger() {
  ianger_ = 0;
  clear_has_ianger();
}
inline ::google::protobuf::int32 FightSyncHPResult::ianger() const {
  return ianger_;
}
inline void FightSyncHPResult::set_ianger(::google::protobuf::int32 value) {
  set_has_ianger();
  ianger_ = value;
}

// -------------------------------------------------------------------

// FightCreateItemResult

// required int32 iResultItemCount = 1;
inline bool FightCreateItemResult::has_iresultitemcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightCreateItemResult::set_has_iresultitemcount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightCreateItemResult::clear_has_iresultitemcount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightCreateItemResult::clear_iresultitemcount() {
  iresultitemcount_ = 0;
  clear_has_iresultitemcount();
}
inline ::google::protobuf::int32 FightCreateItemResult::iresultitemcount() const {
  return iresultitemcount_;
}
inline void FightCreateItemResult::set_iresultitemcount(::google::protobuf::int32 value) {
  set_has_iresultitemcount();
  iresultitemcount_ = value;
}

// optional int32 iTargetPos = 2;
inline bool FightCreateItemResult::has_itargetpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightCreateItemResult::set_has_itargetpos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightCreateItemResult::clear_has_itargetpos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightCreateItemResult::clear_itargetpos() {
  itargetpos_ = 0;
  clear_has_itargetpos();
}
inline ::google::protobuf::int32 FightCreateItemResult::itargetpos() const {
  return itargetpos_;
}
inline void FightCreateItemResult::set_itargetpos(::google::protobuf::int32 value) {
  set_has_itargetpos();
  itargetpos_ = value;
}

// optional int32 iCreateItemCount = 3;
inline bool FightCreateItemResult::has_icreateitemcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightCreateItemResult::set_has_icreateitemcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightCreateItemResult::clear_has_icreateitemcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightCreateItemResult::clear_icreateitemcount() {
  icreateitemcount_ = 0;
  clear_has_icreateitemcount();
}
inline ::google::protobuf::int32 FightCreateItemResult::icreateitemcount() const {
  return icreateitemcount_;
}
inline void FightCreateItemResult::set_icreateitemcount(::google::protobuf::int32 value) {
  set_has_icreateitemcount();
  icreateitemcount_ = value;
}

// -------------------------------------------------------------------

// FightUseActorSkillResult

// required int32 iResultItemCount = 1;
inline bool FightUseActorSkillResult::has_iresultitemcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightUseActorSkillResult::set_has_iresultitemcount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightUseActorSkillResult::clear_has_iresultitemcount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightUseActorSkillResult::clear_iresultitemcount() {
  iresultitemcount_ = 0;
  clear_has_iresultitemcount();
}
inline ::google::protobuf::int32 FightUseActorSkillResult::iresultitemcount() const {
  return iresultitemcount_;
}
inline void FightUseActorSkillResult::set_iresultitemcount(::google::protobuf::int32 value) {
  set_has_iresultitemcount();
  iresultitemcount_ = value;
}

// -------------------------------------------------------------------

// FightAddBuffResult

// required int32 iTargetPos = 1;
inline bool FightAddBuffResult::has_itargetpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightAddBuffResult::set_has_itargetpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightAddBuffResult::clear_has_itargetpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightAddBuffResult::clear_itargetpos() {
  itargetpos_ = 0;
  clear_has_itargetpos();
}
inline ::google::protobuf::int32 FightAddBuffResult::itargetpos() const {
  return itargetpos_;
}
inline void FightAddBuffResult::set_itargetpos(::google::protobuf::int32 value) {
  set_has_itargetpos();
  itargetpos_ = value;
}

// required int32 iBuffID = 2;
inline bool FightAddBuffResult::has_ibuffid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightAddBuffResult::set_has_ibuffid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightAddBuffResult::clear_has_ibuffid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightAddBuffResult::clear_ibuffid() {
  ibuffid_ = 0;
  clear_has_ibuffid();
}
inline ::google::protobuf::int32 FightAddBuffResult::ibuffid() const {
  return ibuffid_;
}
inline void FightAddBuffResult::set_ibuffid(::google::protobuf::int32 value) {
  set_has_ibuffid();
  ibuffid_ = value;
}

// -------------------------------------------------------------------

// FightDelBuffResult

// required int32 iTargetPos = 1;
inline bool FightDelBuffResult::has_itargetpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightDelBuffResult::set_has_itargetpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightDelBuffResult::clear_has_itargetpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightDelBuffResult::clear_itargetpos() {
  itargetpos_ = 0;
  clear_has_itargetpos();
}
inline ::google::protobuf::int32 FightDelBuffResult::itargetpos() const {
  return itargetpos_;
}
inline void FightDelBuffResult::set_itargetpos(::google::protobuf::int32 value) {
  set_has_itargetpos();
  itargetpos_ = value;
}

// required int32 iBuffID = 2;
inline bool FightDelBuffResult::has_ibuffid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightDelBuffResult::set_has_ibuffid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightDelBuffResult::clear_has_ibuffid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightDelBuffResult::clear_ibuffid() {
  ibuffid_ = 0;
  clear_has_ibuffid();
}
inline ::google::protobuf::int32 FightDelBuffResult::ibuffid() const {
  return ibuffid_;
}
inline void FightDelBuffResult::set_ibuffid(::google::protobuf::int32 value) {
  set_has_ibuffid();
  ibuffid_ = value;
}

// -------------------------------------------------------------------

// ReliveResult

// required int32 iTargetPos = 1;
inline bool ReliveResult::has_itargetpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReliveResult::set_has_itargetpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReliveResult::clear_has_itargetpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReliveResult::clear_itargetpos() {
  itargetpos_ = 0;
  clear_has_itargetpos();
}
inline ::google::protobuf::int32 ReliveResult::itargetpos() const {
  return itargetpos_;
}
inline void ReliveResult::set_itargetpos(::google::protobuf::int32 value) {
  set_has_itargetpos();
  itargetpos_ = value;
}

// required int32 iLifeAtt = 2;
inline bool ReliveResult::has_ilifeatt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReliveResult::set_has_ilifeatt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReliveResult::clear_has_ilifeatt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReliveResult::clear_ilifeatt() {
  ilifeatt_ = 0;
  clear_has_ilifeatt();
}
inline ::google::protobuf::int32 ReliveResult::ilifeatt() const {
  return ilifeatt_;
}
inline void ReliveResult::set_ilifeatt(::google::protobuf::int32 value) {
  set_has_ilifeatt();
  ilifeatt_ = value;
}

// required int32 iChgValue = 3;
inline bool ReliveResult::has_ichgvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReliveResult::set_has_ichgvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReliveResult::clear_has_ichgvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReliveResult::clear_ichgvalue() {
  ichgvalue_ = 0;
  clear_has_ichgvalue();
}
inline ::google::protobuf::int32 ReliveResult::ichgvalue() const {
  return ichgvalue_;
}
inline void ReliveResult::set_ichgvalue(::google::protobuf::int32 value) {
  set_has_ichgvalue();
  ichgvalue_ = value;
}

// optional int32 iResultValue = 4;
inline bool ReliveResult::has_iresultvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReliveResult::set_has_iresultvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReliveResult::clear_has_iresultvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReliveResult::clear_iresultvalue() {
  iresultvalue_ = 0;
  clear_has_iresultvalue();
}
inline ::google::protobuf::int32 ReliveResult::iresultvalue() const {
  return iresultvalue_;
}
inline void ReliveResult::set_iresultvalue(::google::protobuf::int32 value) {
  set_has_iresultvalue();
  iresultvalue_ = value;
}

// -------------------------------------------------------------------

// FightPropChgResult

// required int32 iTargetPos = 1;
inline bool FightPropChgResult::has_itargetpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightPropChgResult::set_has_itargetpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightPropChgResult::clear_has_itargetpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightPropChgResult::clear_itargetpos() {
  itargetpos_ = 0;
  clear_has_itargetpos();
}
inline ::google::protobuf::int32 FightPropChgResult::itargetpos() const {
  return itargetpos_;
}
inline void FightPropChgResult::set_itargetpos(::google::protobuf::int32 value) {
  set_has_itargetpos();
  itargetpos_ = value;
}

// required int32 iLifeAtt = 2;
inline bool FightPropChgResult::has_ilifeatt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightPropChgResult::set_has_ilifeatt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightPropChgResult::clear_has_ilifeatt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightPropChgResult::clear_ilifeatt() {
  ilifeatt_ = 0;
  clear_has_ilifeatt();
}
inline ::google::protobuf::int32 FightPropChgResult::ilifeatt() const {
  return ilifeatt_;
}
inline void FightPropChgResult::set_ilifeatt(::google::protobuf::int32 value) {
  set_has_ilifeatt();
  ilifeatt_ = value;
}

// required int32 iChgValue = 3;
inline bool FightPropChgResult::has_ichgvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightPropChgResult::set_has_ichgvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightPropChgResult::clear_has_ichgvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightPropChgResult::clear_ichgvalue() {
  ichgvalue_ = 0;
  clear_has_ichgvalue();
}
inline ::google::protobuf::int32 FightPropChgResult::ichgvalue() const {
  return ichgvalue_;
}
inline void FightPropChgResult::set_ichgvalue(::google::protobuf::int32 value) {
  set_has_ichgvalue();
  ichgvalue_ = value;
}

// optional int32 iResultValue = 4;
inline bool FightPropChgResult::has_iresultvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FightPropChgResult::set_has_iresultvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FightPropChgResult::clear_has_iresultvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FightPropChgResult::clear_iresultvalue() {
  iresultvalue_ = 0;
  clear_has_iresultvalue();
}
inline ::google::protobuf::int32 FightPropChgResult::iresultvalue() const {
  return iresultvalue_;
}
inline void FightPropChgResult::set_iresultvalue(::google::protobuf::int32 value) {
  set_has_iresultvalue();
  iresultvalue_ = value;
}

// -------------------------------------------------------------------

// FightSkillDamageResult

// required int32 iTargetPos = 1;
inline bool FightSkillDamageResult::has_itargetpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightSkillDamageResult::set_has_itargetpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightSkillDamageResult::clear_has_itargetpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightSkillDamageResult::clear_itargetpos() {
  itargetpos_ = 0;
  clear_has_itargetpos();
}
inline ::google::protobuf::int32 FightSkillDamageResult::itargetpos() const {
  return itargetpos_;
}
inline void FightSkillDamageResult::set_itargetpos(::google::protobuf::int32 value) {
  set_has_itargetpos();
  itargetpos_ = value;
}

// required int32 iHitResult = 2;
inline bool FightSkillDamageResult::has_ihitresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightSkillDamageResult::set_has_ihitresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightSkillDamageResult::clear_has_ihitresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightSkillDamageResult::clear_ihitresult() {
  ihitresult_ = 0;
  clear_has_ihitresult();
}
inline ::google::protobuf::int32 FightSkillDamageResult::ihitresult() const {
  return ihitresult_;
}
inline void FightSkillDamageResult::set_ihitresult(::google::protobuf::int32 value) {
  set_has_ihitresult();
  ihitresult_ = value;
}

// required int32 iDamageHP = 3;
inline bool FightSkillDamageResult::has_idamagehp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightSkillDamageResult::set_has_idamagehp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightSkillDamageResult::clear_has_idamagehp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightSkillDamageResult::clear_idamagehp() {
  idamagehp_ = 0;
  clear_has_idamagehp();
}
inline ::google::protobuf::int32 FightSkillDamageResult::idamagehp() const {
  return idamagehp_;
}
inline void FightSkillDamageResult::set_idamagehp(::google::protobuf::int32 value) {
  set_has_idamagehp();
  idamagehp_ = value;
}

// required int32 iResultHP = 4;
inline bool FightSkillDamageResult::has_iresulthp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FightSkillDamageResult::set_has_iresulthp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FightSkillDamageResult::clear_has_iresulthp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FightSkillDamageResult::clear_iresulthp() {
  iresulthp_ = 0;
  clear_has_iresulthp();
}
inline ::google::protobuf::int32 FightSkillDamageResult::iresulthp() const {
  return iresulthp_;
}
inline void FightSkillDamageResult::set_iresulthp(::google::protobuf::int32 value) {
  set_has_iresulthp();
  iresulthp_ = value;
}

// required int32 iResultAnger = 5;
inline bool FightSkillDamageResult::has_iresultanger() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FightSkillDamageResult::set_has_iresultanger() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FightSkillDamageResult::clear_has_iresultanger() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FightSkillDamageResult::clear_iresultanger() {
  iresultanger_ = 0;
  clear_has_iresultanger();
}
inline ::google::protobuf::int32 FightSkillDamageResult::iresultanger() const {
  return iresultanger_;
}
inline void FightSkillDamageResult::set_iresultanger(::google::protobuf::int32 value) {
  set_has_iresultanger();
  iresultanger_ = value;
}

// -------------------------------------------------------------------

// FightBackDamageResult

// required int32 iAttackPos = 1;
inline bool FightBackDamageResult::has_iattackpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightBackDamageResult::set_has_iattackpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightBackDamageResult::clear_has_iattackpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightBackDamageResult::clear_iattackpos() {
  iattackpos_ = 0;
  clear_has_iattackpos();
}
inline ::google::protobuf::int32 FightBackDamageResult::iattackpos() const {
  return iattackpos_;
}
inline void FightBackDamageResult::set_iattackpos(::google::protobuf::int32 value) {
  set_has_iattackpos();
  iattackpos_ = value;
}

// required int32 iDamageHP = 2;
inline bool FightBackDamageResult::has_idamagehp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightBackDamageResult::set_has_idamagehp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightBackDamageResult::clear_has_idamagehp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightBackDamageResult::clear_idamagehp() {
  idamagehp_ = 0;
  clear_has_idamagehp();
}
inline ::google::protobuf::int32 FightBackDamageResult::idamagehp() const {
  return idamagehp_;
}
inline void FightBackDamageResult::set_idamagehp(::google::protobuf::int32 value) {
  set_has_idamagehp();
  idamagehp_ = value;
}

// required int32 iTargetResultHP = 3;
inline bool FightBackDamageResult::has_itargetresulthp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightBackDamageResult::set_has_itargetresulthp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightBackDamageResult::clear_has_itargetresulthp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightBackDamageResult::clear_itargetresulthp() {
  itargetresulthp_ = 0;
  clear_has_itargetresulthp();
}
inline ::google::protobuf::int32 FightBackDamageResult::itargetresulthp() const {
  return itargetresulthp_;
}
inline void FightBackDamageResult::set_itargetresulthp(::google::protobuf::int32 value) {
  set_has_itargetresulthp();
  itargetresulthp_ = value;
}

// required int32 iBackSkillID = 4;
inline bool FightBackDamageResult::has_ibackskillid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FightBackDamageResult::set_has_ibackskillid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FightBackDamageResult::clear_has_ibackskillid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FightBackDamageResult::clear_ibackskillid() {
  ibackskillid_ = 0;
  clear_has_ibackskillid();
}
inline ::google::protobuf::int32 FightBackDamageResult::ibackskillid() const {
  return ibackskillid_;
}
inline void FightBackDamageResult::set_ibackskillid(::google::protobuf::int32 value) {
  set_has_ibackskillid();
  ibackskillid_ = value;
}

// -------------------------------------------------------------------

// FightAction

// required int32 iActionType = 1;
inline bool FightAction::has_iactiontype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightAction::set_has_iactiontype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightAction::clear_has_iactiontype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightAction::clear_iactiontype() {
  iactiontype_ = 0;
  clear_has_iactiontype();
}
inline ::google::protobuf::int32 FightAction::iactiontype() const {
  return iactiontype_;
}
inline void FightAction::set_iactiontype(::google::protobuf::int32 value) {
  set_has_iactiontype();
  iactiontype_ = value;
}

// optional .GSProto.FightSkillAction skillAction = 2;
inline bool FightAction::has_skillaction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightAction::set_has_skillaction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightAction::clear_has_skillaction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightAction::clear_skillaction() {
  if (skillaction_ != NULL) skillaction_->::GSProto::FightSkillAction::Clear();
  clear_has_skillaction();
}
inline const ::GSProto::FightSkillAction& FightAction::skillaction() const {
  return skillaction_ != NULL ? *skillaction_ : *default_instance_->skillaction_;
}
inline ::GSProto::FightSkillAction* FightAction::mutable_skillaction() {
  set_has_skillaction();
  if (skillaction_ == NULL) skillaction_ = new ::GSProto::FightSkillAction;
  return skillaction_;
}
inline ::GSProto::FightSkillAction* FightAction::release_skillaction() {
  clear_has_skillaction();
  ::GSProto::FightSkillAction* temp = skillaction_;
  skillaction_ = NULL;
  return temp;
}
inline void FightAction::set_allocated_skillaction(::GSProto::FightSkillAction* skillaction) {
  delete skillaction_;
  skillaction_ = skillaction;
  if (skillaction) {
    set_has_skillaction();
  } else {
    clear_has_skillaction();
  }
}

// optional .GSProto.FightDelBuffAction delBuffAction = 3;
inline bool FightAction::has_delbuffaction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightAction::set_has_delbuffaction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightAction::clear_has_delbuffaction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightAction::clear_delbuffaction() {
  if (delbuffaction_ != NULL) delbuffaction_->::GSProto::FightDelBuffAction::Clear();
  clear_has_delbuffaction();
}
inline const ::GSProto::FightDelBuffAction& FightAction::delbuffaction() const {
  return delbuffaction_ != NULL ? *delbuffaction_ : *default_instance_->delbuffaction_;
}
inline ::GSProto::FightDelBuffAction* FightAction::mutable_delbuffaction() {
  set_has_delbuffaction();
  if (delbuffaction_ == NULL) delbuffaction_ = new ::GSProto::FightDelBuffAction;
  return delbuffaction_;
}
inline ::GSProto::FightDelBuffAction* FightAction::release_delbuffaction() {
  clear_has_delbuffaction();
  ::GSProto::FightDelBuffAction* temp = delbuffaction_;
  delbuffaction_ = NULL;
  return temp;
}
inline void FightAction::set_allocated_delbuffaction(::GSProto::FightDelBuffAction* delbuffaction) {
  delete delbuffaction_;
  delbuffaction_ = delbuffaction;
  if (delbuffaction) {
    set_has_delbuffaction();
  } else {
    clear_has_delbuffaction();
  }
}

// optional .GSProto.ReplaceMemberAction replaceMemberAction = 4;
inline bool FightAction::has_replacememberaction() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FightAction::set_has_replacememberaction() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FightAction::clear_has_replacememberaction() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FightAction::clear_replacememberaction() {
  if (replacememberaction_ != NULL) replacememberaction_->::GSProto::ReplaceMemberAction::Clear();
  clear_has_replacememberaction();
}
inline const ::GSProto::ReplaceMemberAction& FightAction::replacememberaction() const {
  return replacememberaction_ != NULL ? *replacememberaction_ : *default_instance_->replacememberaction_;
}
inline ::GSProto::ReplaceMemberAction* FightAction::mutable_replacememberaction() {
  set_has_replacememberaction();
  if (replacememberaction_ == NULL) replacememberaction_ = new ::GSProto::ReplaceMemberAction;
  return replacememberaction_;
}
inline ::GSProto::ReplaceMemberAction* FightAction::release_replacememberaction() {
  clear_has_replacememberaction();
  ::GSProto::ReplaceMemberAction* temp = replacememberaction_;
  replacememberaction_ = NULL;
  return temp;
}
inline void FightAction::set_allocated_replacememberaction(::GSProto::ReplaceMemberAction* replacememberaction) {
  delete replacememberaction_;
  replacememberaction_ = replacememberaction;
  if (replacememberaction) {
    set_has_replacememberaction();
  } else {
    clear_has_replacememberaction();
  }
}

// repeated .GSProto.FightResulSet szResultSet = 5;
inline int FightAction::szresultset_size() const {
  return szresultset_.size();
}
inline void FightAction::clear_szresultset() {
  szresultset_.Clear();
}
inline const ::GSProto::FightResulSet& FightAction::szresultset(int index) const {
  return szresultset_.Get(index);
}
inline ::GSProto::FightResulSet* FightAction::mutable_szresultset(int index) {
  return szresultset_.Mutable(index);
}
inline ::GSProto::FightResulSet* FightAction::add_szresultset() {
  return szresultset_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightResulSet >&
FightAction::szresultset() const {
  return szresultset_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightResulSet >*
FightAction::mutable_szresultset() {
  return &szresultset_;
}

// optional int32 iActionIndex = 6;
inline bool FightAction::has_iactionindex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FightAction::set_has_iactionindex() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FightAction::clear_has_iactionindex() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FightAction::clear_iactionindex() {
  iactionindex_ = 0;
  clear_has_iactionindex();
}
inline ::google::protobuf::int32 FightAction::iactionindex() const {
  return iactionindex_;
}
inline void FightAction::set_iactionindex(::google::protobuf::int32 value) {
  set_has_iactionindex();
  iactionindex_ = value;
}

// optional .GSProto.DialogAction dlgAction = 7;
inline bool FightAction::has_dlgaction() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FightAction::set_has_dlgaction() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FightAction::clear_has_dlgaction() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FightAction::clear_dlgaction() {
  if (dlgaction_ != NULL) dlgaction_->::GSProto::DialogAction::Clear();
  clear_has_dlgaction();
}
inline const ::GSProto::DialogAction& FightAction::dlgaction() const {
  return dlgaction_ != NULL ? *dlgaction_ : *default_instance_->dlgaction_;
}
inline ::GSProto::DialogAction* FightAction::mutable_dlgaction() {
  set_has_dlgaction();
  if (dlgaction_ == NULL) dlgaction_ = new ::GSProto::DialogAction;
  return dlgaction_;
}
inline ::GSProto::DialogAction* FightAction::release_dlgaction() {
  clear_has_dlgaction();
  ::GSProto::DialogAction* temp = dlgaction_;
  dlgaction_ = NULL;
  return temp;
}
inline void FightAction::set_allocated_dlgaction(::GSProto::DialogAction* dlgaction) {
  delete dlgaction_;
  dlgaction_ = dlgaction;
  if (dlgaction) {
    set_has_dlgaction();
  } else {
    clear_has_dlgaction();
  }
}

// -------------------------------------------------------------------

// DialogAction

// required int32 iDlgID = 1;
inline bool DialogAction::has_idlgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DialogAction::set_has_idlgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DialogAction::clear_has_idlgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DialogAction::clear_idlgid() {
  idlgid_ = 0;
  clear_has_idlgid();
}
inline ::google::protobuf::int32 DialogAction::idlgid() const {
  return idlgid_;
}
inline void DialogAction::set_idlgid(::google::protobuf::int32 value) {
  set_has_idlgid();
  idlgid_ = value;
}

// -------------------------------------------------------------------

// FightDelBuffAction

// required int32 iTargetPos = 1;
inline bool FightDelBuffAction::has_itargetpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightDelBuffAction::set_has_itargetpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightDelBuffAction::clear_has_itargetpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightDelBuffAction::clear_itargetpos() {
  itargetpos_ = 0;
  clear_has_itargetpos();
}
inline ::google::protobuf::int32 FightDelBuffAction::itargetpos() const {
  return itargetpos_;
}
inline void FightDelBuffAction::set_itargetpos(::google::protobuf::int32 value) {
  set_has_itargetpos();
  itargetpos_ = value;
}

// required int32 iBuffID = 2;
inline bool FightDelBuffAction::has_ibuffid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightDelBuffAction::set_has_ibuffid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightDelBuffAction::clear_has_ibuffid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightDelBuffAction::clear_ibuffid() {
  ibuffid_ = 0;
  clear_has_ibuffid();
}
inline ::google::protobuf::int32 FightDelBuffAction::ibuffid() const {
  return ibuffid_;
}
inline void FightDelBuffAction::set_ibuffid(::google::protobuf::int32 value) {
  set_has_ibuffid();
  ibuffid_ = value;
}

// -------------------------------------------------------------------

// FightHead

// required int32 iHeadID = 1;
inline bool FightHead::has_iheadid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightHead::set_has_iheadid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightHead::clear_has_iheadid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightHead::clear_iheadid() {
  iheadid_ = 0;
  clear_has_iheadid();
}
inline ::google::protobuf::int32 FightHead::iheadid() const {
  return iheadid_;
}
inline void FightHead::set_iheadid(::google::protobuf::int32 value) {
  set_has_iheadid();
  iheadid_ = value;
}

// required string strActorName = 2;
inline bool FightHead::has_stractorname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightHead::set_has_stractorname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightHead::clear_has_stractorname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightHead::clear_stractorname() {
  if (stractorname_ != &::google::protobuf::internal::kEmptyString) {
    stractorname_->clear();
  }
  clear_has_stractorname();
}
inline const ::std::string& FightHead::stractorname() const {
  return *stractorname_;
}
inline void FightHead::set_stractorname(const ::std::string& value) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(value);
}
inline void FightHead::set_stractorname(const char* value) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(value);
}
inline void FightHead::set_stractorname(const char* value, size_t size) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FightHead::mutable_stractorname() {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  return stractorname_;
}
inline ::std::string* FightHead::release_stractorname() {
  clear_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stractorname_;
    stractorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FightHead::set_allocated_stractorname(::std::string* stractorname) {
  if (stractorname_ != &::google::protobuf::internal::kEmptyString) {
    delete stractorname_;
  }
  if (stractorname) {
    set_has_stractorname();
    stractorname_ = stractorname;
  } else {
    clear_has_stractorname();
    stractorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 iLevel = 3;
inline bool FightHead::has_ilevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightHead::set_has_ilevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightHead::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightHead::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 FightHead::ilevel() const {
  return ilevel_;
}
inline void FightHead::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// -------------------------------------------------------------------

// FightDataAll

// repeated .GSProto.FightObj szFightObject = 1;
inline int FightDataAll::szfightobject_size() const {
  return szfightobject_.size();
}
inline void FightDataAll::clear_szfightobject() {
  szfightobject_.Clear();
}
inline const ::GSProto::FightObj& FightDataAll::szfightobject(int index) const {
  return szfightobject_.Get(index);
}
inline ::GSProto::FightObj* FightDataAll::mutable_szfightobject(int index) {
  return szfightobject_.Mutable(index);
}
inline ::GSProto::FightObj* FightDataAll::add_szfightobject() {
  return szfightobject_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightObj >&
FightDataAll::szfightobject() const {
  return szfightobject_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightObj >*
FightDataAll::mutable_szfightobject() {
  return &szfightobject_;
}

// repeated .GSProto.FightAction szFightAction = 2;
inline int FightDataAll::szfightaction_size() const {
  return szfightaction_.size();
}
inline void FightDataAll::clear_szfightaction() {
  szfightaction_.Clear();
}
inline const ::GSProto::FightAction& FightDataAll::szfightaction(int index) const {
  return szfightaction_.Get(index);
}
inline ::GSProto::FightAction* FightDataAll::mutable_szfightaction(int index) {
  return szfightaction_.Mutable(index);
}
inline ::GSProto::FightAction* FightDataAll::add_szfightaction() {
  return szfightaction_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightAction >&
FightDataAll::szfightaction() const {
  return szfightaction_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightAction >*
FightDataAll::mutable_szfightaction() {
  return &szfightaction_;
}

// optional int32 iFightType = 3;
inline bool FightDataAll::has_ifighttype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightDataAll::set_has_ifighttype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightDataAll::clear_has_ifighttype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightDataAll::clear_ifighttype() {
  ifighttype_ = 0;
  clear_has_ifighttype();
}
inline ::google::protobuf::int32 FightDataAll::ifighttype() const {
  return ifighttype_;
}
inline void FightDataAll::set_ifighttype(::google::protobuf::int32 value) {
  set_has_ifighttype();
  ifighttype_ = value;
}

// optional int32 iSceneID = 4;
inline bool FightDataAll::has_isceneid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FightDataAll::set_has_isceneid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FightDataAll::clear_has_isceneid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FightDataAll::clear_isceneid() {
  isceneid_ = 0;
  clear_has_isceneid();
}
inline ::google::protobuf::int32 FightDataAll::isceneid() const {
  return isceneid_;
}
inline void FightDataAll::set_isceneid(::google::protobuf::int32 value) {
  set_has_isceneid();
  isceneid_ = value;
}

// required int32 iIsAttackerWin = 5;
inline bool FightDataAll::has_iisattackerwin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FightDataAll::set_has_iisattackerwin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FightDataAll::clear_has_iisattackerwin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FightDataAll::clear_iisattackerwin() {
  iisattackerwin_ = 0;
  clear_has_iisattackerwin();
}
inline ::google::protobuf::int32 FightDataAll::iisattackerwin() const {
  return iisattackerwin_;
}
inline void FightDataAll::set_iisattackerwin(::google::protobuf::int32 value) {
  set_has_iisattackerwin();
  iisattackerwin_ = value;
}

// optional int32 iCurItemCount = 6;
inline bool FightDataAll::has_icuritemcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FightDataAll::set_has_icuritemcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FightDataAll::clear_has_icuritemcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FightDataAll::clear_icuritemcount() {
  icuritemcount_ = 0;
  clear_has_icuritemcount();
}
inline ::google::protobuf::int32 FightDataAll::icuritemcount() const {
  return icuritemcount_;
}
inline void FightDataAll::set_icuritemcount(::google::protobuf::int32 value) {
  set_has_icuritemcount();
  icuritemcount_ = value;
}

// optional bool bOnlyOneFight = 7;
inline bool FightDataAll::has_bonlyonefight() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FightDataAll::set_has_bonlyonefight() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FightDataAll::clear_has_bonlyonefight() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FightDataAll::clear_bonlyonefight() {
  bonlyonefight_ = false;
  clear_has_bonlyonefight();
}
inline bool FightDataAll::bonlyonefight() const {
  return bonlyonefight_;
}
inline void FightDataAll::set_bonlyonefight(bool value) {
  set_has_bonlyonefight();
  bonlyonefight_ = value;
}

// optional int32 iInitItemCount = 8;
inline bool FightDataAll::has_iinititemcount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FightDataAll::set_has_iinititemcount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FightDataAll::clear_has_iinititemcount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FightDataAll::clear_iinititemcount() {
  iinititemcount_ = 0;
  clear_has_iinititemcount();
}
inline ::google::protobuf::int32 FightDataAll::iinititemcount() const {
  return iinititemcount_;
}
inline void FightDataAll::set_iinititemcount(::google::protobuf::int32 value) {
  set_has_iinititemcount();
  iinititemcount_ = value;
}

// optional .GSProto.FightHead leftHead = 9;
inline bool FightDataAll::has_lefthead() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FightDataAll::set_has_lefthead() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FightDataAll::clear_has_lefthead() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FightDataAll::clear_lefthead() {
  if (lefthead_ != NULL) lefthead_->::GSProto::FightHead::Clear();
  clear_has_lefthead();
}
inline const ::GSProto::FightHead& FightDataAll::lefthead() const {
  return lefthead_ != NULL ? *lefthead_ : *default_instance_->lefthead_;
}
inline ::GSProto::FightHead* FightDataAll::mutable_lefthead() {
  set_has_lefthead();
  if (lefthead_ == NULL) lefthead_ = new ::GSProto::FightHead;
  return lefthead_;
}
inline ::GSProto::FightHead* FightDataAll::release_lefthead() {
  clear_has_lefthead();
  ::GSProto::FightHead* temp = lefthead_;
  lefthead_ = NULL;
  return temp;
}
inline void FightDataAll::set_allocated_lefthead(::GSProto::FightHead* lefthead) {
  delete lefthead_;
  lefthead_ = lefthead;
  if (lefthead) {
    set_has_lefthead();
  } else {
    clear_has_lefthead();
  }
}

// optional .GSProto.FightHead rightHead = 10;
inline bool FightDataAll::has_righthead() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FightDataAll::set_has_righthead() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FightDataAll::clear_has_righthead() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FightDataAll::clear_righthead() {
  if (righthead_ != NULL) righthead_->::GSProto::FightHead::Clear();
  clear_has_righthead();
}
inline const ::GSProto::FightHead& FightDataAll::righthead() const {
  return righthead_ != NULL ? *righthead_ : *default_instance_->righthead_;
}
inline ::GSProto::FightHead* FightDataAll::mutable_righthead() {
  set_has_righthead();
  if (righthead_ == NULL) righthead_ = new ::GSProto::FightHead;
  return righthead_;
}
inline ::GSProto::FightHead* FightDataAll::release_righthead() {
  clear_has_righthead();
  ::GSProto::FightHead* temp = righthead_;
  righthead_ = NULL;
  return temp;
}
inline void FightDataAll::set_allocated_righthead(::GSProto::FightHead* righthead) {
  delete righthead_;
  righthead_ = righthead;
  if (righthead) {
    set_has_righthead();
  } else {
    clear_has_righthead();
  }
}

// -------------------------------------------------------------------

// Cmd_Sc_FightMember

// repeated .GSProto.FightObj szFightObject = 1;
inline int Cmd_Sc_FightMember::szfightobject_size() const {
  return szfightobject_.size();
}
inline void Cmd_Sc_FightMember::clear_szfightobject() {
  szfightobject_.Clear();
}
inline const ::GSProto::FightObj& Cmd_Sc_FightMember::szfightobject(int index) const {
  return szfightobject_.Get(index);
}
inline ::GSProto::FightObj* Cmd_Sc_FightMember::mutable_szfightobject(int index) {
  return szfightobject_.Mutable(index);
}
inline ::GSProto::FightObj* Cmd_Sc_FightMember::add_szfightobject() {
  return szfightobject_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightObj >&
Cmd_Sc_FightMember::szfightobject() const {
  return szfightobject_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightObj >*
Cmd_Sc_FightMember::mutable_szfightobject() {
  return &szfightobject_;
}

// optional int32 iFightType = 2;
inline bool Cmd_Sc_FightMember::has_ifighttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Sc_FightMember::set_has_ifighttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Sc_FightMember::clear_has_ifighttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Sc_FightMember::clear_ifighttype() {
  ifighttype_ = 0;
  clear_has_ifighttype();
}
inline ::google::protobuf::int32 Cmd_Sc_FightMember::ifighttype() const {
  return ifighttype_;
}
inline void Cmd_Sc_FightMember::set_ifighttype(::google::protobuf::int32 value) {
  set_has_ifighttype();
  ifighttype_ = value;
}

// optional int32 iSceneID = 3;
inline bool Cmd_Sc_FightMember::has_isceneid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Cmd_Sc_FightMember::set_has_isceneid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Cmd_Sc_FightMember::clear_has_isceneid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Cmd_Sc_FightMember::clear_isceneid() {
  isceneid_ = 0;
  clear_has_isceneid();
}
inline ::google::protobuf::int32 Cmd_Sc_FightMember::isceneid() const {
  return isceneid_;
}
inline void Cmd_Sc_FightMember::set_isceneid(::google::protobuf::int32 value) {
  set_has_isceneid();
  isceneid_ = value;
}

// required int32 iIsAttackerWin = 4;
inline bool Cmd_Sc_FightMember::has_iisattackerwin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Cmd_Sc_FightMember::set_has_iisattackerwin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Cmd_Sc_FightMember::clear_has_iisattackerwin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Cmd_Sc_FightMember::clear_iisattackerwin() {
  iisattackerwin_ = 0;
  clear_has_iisattackerwin();
}
inline ::google::protobuf::int32 Cmd_Sc_FightMember::iisattackerwin() const {
  return iisattackerwin_;
}
inline void Cmd_Sc_FightMember::set_iisattackerwin(::google::protobuf::int32 value) {
  set_has_iisattackerwin();
  iisattackerwin_ = value;
}

// optional bool bCanUseActorSkill = 5;
inline bool Cmd_Sc_FightMember::has_bcanuseactorskill() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Cmd_Sc_FightMember::set_has_bcanuseactorskill() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Cmd_Sc_FightMember::clear_has_bcanuseactorskill() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Cmd_Sc_FightMember::clear_bcanuseactorskill() {
  bcanuseactorskill_ = false;
  clear_has_bcanuseactorskill();
}
inline bool Cmd_Sc_FightMember::bcanuseactorskill() const {
  return bcanuseactorskill_;
}
inline void Cmd_Sc_FightMember::set_bcanuseactorskill(bool value) {
  set_has_bcanuseactorskill();
  bcanuseactorskill_ = value;
}

// optional int32 iItemCount = 6;
inline bool Cmd_Sc_FightMember::has_iitemcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Cmd_Sc_FightMember::set_has_iitemcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Cmd_Sc_FightMember::clear_has_iitemcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Cmd_Sc_FightMember::clear_iitemcount() {
  iitemcount_ = 0;
  clear_has_iitemcount();
}
inline ::google::protobuf::int32 Cmd_Sc_FightMember::iitemcount() const {
  return iitemcount_;
}
inline void Cmd_Sc_FightMember::set_iitemcount(::google::protobuf::int32 value) {
  set_has_iitemcount();
  iitemcount_ = value;
}

// optional bool bCanSkipBattle = 7;
inline bool Cmd_Sc_FightMember::has_bcanskipbattle() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Cmd_Sc_FightMember::set_has_bcanskipbattle() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Cmd_Sc_FightMember::clear_has_bcanskipbattle() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Cmd_Sc_FightMember::clear_bcanskipbattle() {
  bcanskipbattle_ = false;
  clear_has_bcanskipbattle();
}
inline bool Cmd_Sc_FightMember::bcanskipbattle() const {
  return bcanskipbattle_;
}
inline void Cmd_Sc_FightMember::set_bcanskipbattle(bool value) {
  set_has_bcanskipbattle();
  bcanskipbattle_ = value;
}

// optional bool bFinalFight = 8;
inline bool Cmd_Sc_FightMember::has_bfinalfight() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Cmd_Sc_FightMember::set_has_bfinalfight() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Cmd_Sc_FightMember::clear_has_bfinalfight() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Cmd_Sc_FightMember::clear_bfinalfight() {
  bfinalfight_ = false;
  clear_has_bfinalfight();
}
inline bool Cmd_Sc_FightMember::bfinalfight() const {
  return bfinalfight_;
}
inline void Cmd_Sc_FightMember::set_bfinalfight(bool value) {
  set_has_bfinalfight();
  bfinalfight_ = value;
}

// optional .GSProto.FightHead leftHead = 9;
inline bool Cmd_Sc_FightMember::has_lefthead() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Cmd_Sc_FightMember::set_has_lefthead() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Cmd_Sc_FightMember::clear_has_lefthead() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Cmd_Sc_FightMember::clear_lefthead() {
  if (lefthead_ != NULL) lefthead_->::GSProto::FightHead::Clear();
  clear_has_lefthead();
}
inline const ::GSProto::FightHead& Cmd_Sc_FightMember::lefthead() const {
  return lefthead_ != NULL ? *lefthead_ : *default_instance_->lefthead_;
}
inline ::GSProto::FightHead* Cmd_Sc_FightMember::mutable_lefthead() {
  set_has_lefthead();
  if (lefthead_ == NULL) lefthead_ = new ::GSProto::FightHead;
  return lefthead_;
}
inline ::GSProto::FightHead* Cmd_Sc_FightMember::release_lefthead() {
  clear_has_lefthead();
  ::GSProto::FightHead* temp = lefthead_;
  lefthead_ = NULL;
  return temp;
}
inline void Cmd_Sc_FightMember::set_allocated_lefthead(::GSProto::FightHead* lefthead) {
  delete lefthead_;
  lefthead_ = lefthead;
  if (lefthead) {
    set_has_lefthead();
  } else {
    clear_has_lefthead();
  }
}

// optional .GSProto.FightHead rightHead = 10;
inline bool Cmd_Sc_FightMember::has_righthead() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Cmd_Sc_FightMember::set_has_righthead() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Cmd_Sc_FightMember::clear_has_righthead() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Cmd_Sc_FightMember::clear_righthead() {
  if (righthead_ != NULL) righthead_->::GSProto::FightHead::Clear();
  clear_has_righthead();
}
inline const ::GSProto::FightHead& Cmd_Sc_FightMember::righthead() const {
  return righthead_ != NULL ? *righthead_ : *default_instance_->righthead_;
}
inline ::GSProto::FightHead* Cmd_Sc_FightMember::mutable_righthead() {
  set_has_righthead();
  if (righthead_ == NULL) righthead_ = new ::GSProto::FightHead;
  return righthead_;
}
inline ::GSProto::FightHead* Cmd_Sc_FightMember::release_righthead() {
  clear_has_righthead();
  ::GSProto::FightHead* temp = righthead_;
  righthead_ = NULL;
  return temp;
}
inline void Cmd_Sc_FightMember::set_allocated_righthead(::GSProto::FightHead* righthead) {
  delete righthead_;
  righthead_ = righthead;
  if (righthead) {
    set_has_righthead();
  } else {
    clear_has_righthead();
  }
}

// -------------------------------------------------------------------

// Cmd_Sc_FightAction

// required .GSProto.FightAction singleAction = 1;
inline bool Cmd_Sc_FightAction::has_singleaction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_FightAction::set_has_singleaction() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_FightAction::clear_has_singleaction() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_FightAction::clear_singleaction() {
  if (singleaction_ != NULL) singleaction_->::GSProto::FightAction::Clear();
  clear_has_singleaction();
}
inline const ::GSProto::FightAction& Cmd_Sc_FightAction::singleaction() const {
  return singleaction_ != NULL ? *singleaction_ : *default_instance_->singleaction_;
}
inline ::GSProto::FightAction* Cmd_Sc_FightAction::mutable_singleaction() {
  set_has_singleaction();
  if (singleaction_ == NULL) singleaction_ = new ::GSProto::FightAction;
  return singleaction_;
}
inline ::GSProto::FightAction* Cmd_Sc_FightAction::release_singleaction() {
  clear_has_singleaction();
  ::GSProto::FightAction* temp = singleaction_;
  singleaction_ = NULL;
  return temp;
}
inline void Cmd_Sc_FightAction::set_allocated_singleaction(::GSProto::FightAction* singleaction) {
  delete singleaction_;
  singleaction_ = singleaction;
  if (singleaction) {
    set_has_singleaction();
  } else {
    clear_has_singleaction();
  }
}

// -------------------------------------------------------------------

// ItemInfo

// required uint32 dwObjectID = 1;
inline bool ItemInfo::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemInfo::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemInfo::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemInfo::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 ItemInfo::dwobjectid() const {
  return dwobjectid_;
}
inline void ItemInfo::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// required int32 iItemID = 2;
inline bool ItemInfo::has_iitemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemInfo::set_has_iitemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemInfo::clear_has_iitemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemInfo::clear_iitemid() {
  iitemid_ = 0;
  clear_has_iitemid();
}
inline ::google::protobuf::int32 ItemInfo::iitemid() const {
  return iitemid_;
}
inline void ItemInfo::set_iitemid(::google::protobuf::int32 value) {
  set_has_iitemid();
  iitemid_ = value;
}

// required int32 iItemCount = 3;
inline bool ItemInfo::has_iitemcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemInfo::set_has_iitemcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemInfo::clear_has_iitemcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemInfo::clear_iitemcount() {
  iitemcount_ = 0;
  clear_has_iitemcount();
}
inline ::google::protobuf::int32 ItemInfo::iitemcount() const {
  return iitemcount_;
}
inline void ItemInfo::set_iitemcount(::google::protobuf::int32 value) {
  set_has_iitemcount();
  iitemcount_ = value;
}

// optional int32 iCombineNeedCount = 4;
inline bool ItemInfo::has_icombineneedcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemInfo::set_has_icombineneedcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemInfo::clear_has_icombineneedcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemInfo::clear_icombineneedcount() {
  icombineneedcount_ = 0;
  clear_has_icombineneedcount();
}
inline ::google::protobuf::int32 ItemInfo::icombineneedcount() const {
  return icombineneedcount_;
}
inline void ItemInfo::set_icombineneedcount(::google::protobuf::int32 value) {
  set_has_icombineneedcount();
  icombineneedcount_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_BagData

// repeated .GSProto.ItemInfo szItemData = 1;
inline int Cmd_Sc_BagData::szitemdata_size() const {
  return szitemdata_.size();
}
inline void Cmd_Sc_BagData::clear_szitemdata() {
  szitemdata_.Clear();
}
inline const ::GSProto::ItemInfo& Cmd_Sc_BagData::szitemdata(int index) const {
  return szitemdata_.Get(index);
}
inline ::GSProto::ItemInfo* Cmd_Sc_BagData::mutable_szitemdata(int index) {
  return szitemdata_.Mutable(index);
}
inline ::GSProto::ItemInfo* Cmd_Sc_BagData::add_szitemdata() {
  return szitemdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ItemInfo >&
Cmd_Sc_BagData::szitemdata() const {
  return szitemdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::ItemInfo >*
Cmd_Sc_BagData::mutable_szitemdata() {
  return &szitemdata_;
}

// repeated .GSProto.ItemInfo szMaterialData = 2;
inline int Cmd_Sc_BagData::szmaterialdata_size() const {
  return szmaterialdata_.size();
}
inline void Cmd_Sc_BagData::clear_szmaterialdata() {
  szmaterialdata_.Clear();
}
inline const ::GSProto::ItemInfo& Cmd_Sc_BagData::szmaterialdata(int index) const {
  return szmaterialdata_.Get(index);
}
inline ::GSProto::ItemInfo* Cmd_Sc_BagData::mutable_szmaterialdata(int index) {
  return szmaterialdata_.Mutable(index);
}
inline ::GSProto::ItemInfo* Cmd_Sc_BagData::add_szmaterialdata() {
  return szmaterialdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ItemInfo >&
Cmd_Sc_BagData::szmaterialdata() const {
  return szmaterialdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::ItemInfo >*
Cmd_Sc_BagData::mutable_szmaterialdata() {
  return &szmaterialdata_;
}

// -------------------------------------------------------------------

// BagChgInfo

// required int32 iChgType = 1;
inline bool BagChgInfo::has_ichgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BagChgInfo::set_has_ichgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BagChgInfo::clear_has_ichgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BagChgInfo::clear_ichgtype() {
  ichgtype_ = 0;
  clear_has_ichgtype();
}
inline ::google::protobuf::int32 BagChgInfo::ichgtype() const {
  return ichgtype_;
}
inline void BagChgInfo::set_ichgtype(::google::protobuf::int32 value) {
  set_has_ichgtype();
  ichgtype_ = value;
}

// optional .GSProto.ItemInfo itemDetail = 2;
inline bool BagChgInfo::has_itemdetail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BagChgInfo::set_has_itemdetail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BagChgInfo::clear_has_itemdetail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BagChgInfo::clear_itemdetail() {
  if (itemdetail_ != NULL) itemdetail_->::GSProto::ItemInfo::Clear();
  clear_has_itemdetail();
}
inline const ::GSProto::ItemInfo& BagChgInfo::itemdetail() const {
  return itemdetail_ != NULL ? *itemdetail_ : *default_instance_->itemdetail_;
}
inline ::GSProto::ItemInfo* BagChgInfo::mutable_itemdetail() {
  set_has_itemdetail();
  if (itemdetail_ == NULL) itemdetail_ = new ::GSProto::ItemInfo;
  return itemdetail_;
}
inline ::GSProto::ItemInfo* BagChgInfo::release_itemdetail() {
  clear_has_itemdetail();
  ::GSProto::ItemInfo* temp = itemdetail_;
  itemdetail_ = NULL;
  return temp;
}
inline void BagChgInfo::set_allocated_itemdetail(::GSProto::ItemInfo* itemdetail) {
  delete itemdetail_;
  itemdetail_ = itemdetail;
  if (itemdetail) {
    set_has_itemdetail();
  } else {
    clear_has_itemdetail();
  }
}

// optional uint32 delObjectID = 3;
inline bool BagChgInfo::has_delobjectid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BagChgInfo::set_has_delobjectid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BagChgInfo::clear_has_delobjectid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BagChgInfo::clear_delobjectid() {
  delobjectid_ = 0u;
  clear_has_delobjectid();
}
inline ::google::protobuf::uint32 BagChgInfo::delobjectid() const {
  return delobjectid_;
}
inline void BagChgInfo::set_delobjectid(::google::protobuf::uint32 value) {
  set_has_delobjectid();
  delobjectid_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_BagChg

// repeated .GSProto.BagChgInfo szBagChgList = 1;
inline int Cmd_Sc_BagChg::szbagchglist_size() const {
  return szbagchglist_.size();
}
inline void Cmd_Sc_BagChg::clear_szbagchglist() {
  szbagchglist_.Clear();
}
inline const ::GSProto::BagChgInfo& Cmd_Sc_BagChg::szbagchglist(int index) const {
  return szbagchglist_.Get(index);
}
inline ::GSProto::BagChgInfo* Cmd_Sc_BagChg::mutable_szbagchglist(int index) {
  return szbagchglist_.Mutable(index);
}
inline ::GSProto::BagChgInfo* Cmd_Sc_BagChg::add_szbagchglist() {
  return szbagchglist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::BagChgInfo >&
Cmd_Sc_BagChg::szbagchglist() const {
  return szbagchglist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::BagChgInfo >*
Cmd_Sc_BagChg::mutable_szbagchglist() {
  return &szbagchglist_;
}

// required int32 iBagType = 2;
inline bool Cmd_Sc_BagChg::has_ibagtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Sc_BagChg::set_has_ibagtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Sc_BagChg::clear_has_ibagtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Sc_BagChg::clear_ibagtype() {
  ibagtype_ = 0;
  clear_has_ibagtype();
}
inline ::google::protobuf::int32 Cmd_Sc_BagChg::ibagtype() const {
  return ibagtype_;
}
inline void Cmd_Sc_BagChg::set_ibagtype(::google::protobuf::int32 value) {
  set_has_ibagtype();
  ibagtype_ = value;
}

// -------------------------------------------------------------------

// DungeonSection

// required int32 iSectionID = 1;
inline bool DungeonSection::has_isectionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DungeonSection::set_has_isectionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DungeonSection::clear_has_isectionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DungeonSection::clear_isectionid() {
  isectionid_ = 0;
  clear_has_isectionid();
}
inline ::google::protobuf::int32 DungeonSection::isectionid() const {
  return isectionid_;
}
inline void DungeonSection::set_isectionid(::google::protobuf::int32 value) {
  set_has_isectionid();
  isectionid_ = value;
}

// required int32 iIsPerfectPass = 2;
inline bool DungeonSection::has_iisperfectpass() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DungeonSection::set_has_iisperfectpass() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DungeonSection::clear_has_iisperfectpass() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DungeonSection::clear_iisperfectpass() {
  iisperfectpass_ = 0;
  clear_has_iisperfectpass();
}
inline ::google::protobuf::int32 DungeonSection::iisperfectpass() const {
  return iisperfectpass_;
}
inline void DungeonSection::set_iisperfectpass(::google::protobuf::int32 value) {
  set_has_iisperfectpass();
  iisperfectpass_ = value;
}

// repeated int32 szPerfectIDList = 3;
inline int DungeonSection::szperfectidlist_size() const {
  return szperfectidlist_.size();
}
inline void DungeonSection::clear_szperfectidlist() {
  szperfectidlist_.Clear();
}
inline ::google::protobuf::int32 DungeonSection::szperfectidlist(int index) const {
  return szperfectidlist_.Get(index);
}
inline void DungeonSection::set_szperfectidlist(int index, ::google::protobuf::int32 value) {
  szperfectidlist_.Set(index, value);
}
inline void DungeonSection::add_szperfectidlist(::google::protobuf::int32 value) {
  szperfectidlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DungeonSection::szperfectidlist() const {
  return szperfectidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DungeonSection::mutable_szperfectidlist() {
  return &szperfectidlist_;
}

// required bool bGeted = 4;
inline bool DungeonSection::has_bgeted() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DungeonSection::set_has_bgeted() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DungeonSection::clear_has_bgeted() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DungeonSection::clear_bgeted() {
  bgeted_ = false;
  clear_has_bgeted();
}
inline bool DungeonSection::bgeted() const {
  return bgeted_;
}
inline void DungeonSection::set_bgeted(bool value) {
  set_has_bgeted();
  bgeted_ = value;
}

// optional int32 iStar = 5;
inline bool DungeonSection::has_istar() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DungeonSection::set_has_istar() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DungeonSection::clear_has_istar() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DungeonSection::clear_istar() {
  istar_ = 0;
  clear_has_istar();
}
inline ::google::protobuf::int32 DungeonSection::istar() const {
  return istar_;
}
inline void DungeonSection::set_istar(::google::protobuf::int32 value) {
  set_has_istar();
  istar_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_DungeonSectionList

// repeated .GSProto.DungeonSection szDungeonSection = 1;
inline int Cmd_Sc_DungeonSectionList::szdungeonsection_size() const {
  return szdungeonsection_.size();
}
inline void Cmd_Sc_DungeonSectionList::clear_szdungeonsection() {
  szdungeonsection_.Clear();
}
inline const ::GSProto::DungeonSection& Cmd_Sc_DungeonSectionList::szdungeonsection(int index) const {
  return szdungeonsection_.Get(index);
}
inline ::GSProto::DungeonSection* Cmd_Sc_DungeonSectionList::mutable_szdungeonsection(int index) {
  return szdungeonsection_.Mutable(index);
}
inline ::GSProto::DungeonSection* Cmd_Sc_DungeonSectionList::add_szdungeonsection() {
  return szdungeonsection_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::DungeonSection >&
Cmd_Sc_DungeonSectionList::szdungeonsection() const {
  return szdungeonsection_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::DungeonSection >*
Cmd_Sc_DungeonSectionList::mutable_szdungeonsection() {
  return &szdungeonsection_;
}

// -------------------------------------------------------------------

// DungeonSceneDetail

// required int32 iSceneID = 1;
inline bool DungeonSceneDetail::has_isceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DungeonSceneDetail::set_has_isceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DungeonSceneDetail::clear_has_isceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DungeonSceneDetail::clear_isceneid() {
  isceneid_ = 0;
  clear_has_isceneid();
}
inline ::google::protobuf::int32 DungeonSceneDetail::isceneid() const {
  return isceneid_;
}
inline void DungeonSceneDetail::set_isceneid(::google::protobuf::int32 value) {
  set_has_isceneid();
  isceneid_ = value;
}

// required int32 iStarLevel = 2;
inline bool DungeonSceneDetail::has_istarlevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DungeonSceneDetail::set_has_istarlevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DungeonSceneDetail::clear_has_istarlevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DungeonSceneDetail::clear_istarlevel() {
  istarlevel_ = 0;
  clear_has_istarlevel();
}
inline ::google::protobuf::int32 DungeonSceneDetail::istarlevel() const {
  return istarlevel_;
}
inline void DungeonSceneDetail::set_istarlevel(::google::protobuf::int32 value) {
  set_has_istarlevel();
  istarlevel_ = value;
}

// optional bool bNewOpen = 3;
inline bool DungeonSceneDetail::has_bnewopen() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DungeonSceneDetail::set_has_bnewopen() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DungeonSceneDetail::clear_has_bnewopen() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DungeonSceneDetail::clear_bnewopen() {
  bnewopen_ = false;
  clear_has_bnewopen();
}
inline bool DungeonSceneDetail::bnewopen() const {
  return bnewopen_;
}
inline void DungeonSceneDetail::set_bnewopen(bool value) {
  set_has_bnewopen();
  bnewopen_ = value;
}

// optional bool bHasPassLimit = 4;
inline bool DungeonSceneDetail::has_bhaspasslimit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DungeonSceneDetail::set_has_bhaspasslimit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DungeonSceneDetail::clear_has_bhaspasslimit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DungeonSceneDetail::clear_bhaspasslimit() {
  bhaspasslimit_ = false;
  clear_has_bhaspasslimit();
}
inline bool DungeonSceneDetail::bhaspasslimit() const {
  return bhaspasslimit_;
}
inline void DungeonSceneDetail::set_bhaspasslimit(bool value) {
  set_has_bhaspasslimit();
  bhaspasslimit_ = value;
}

// optional int32 iLeftCount = 5;
inline bool DungeonSceneDetail::has_ileftcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DungeonSceneDetail::set_has_ileftcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DungeonSceneDetail::clear_has_ileftcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DungeonSceneDetail::clear_ileftcount() {
  ileftcount_ = 0;
  clear_has_ileftcount();
}
inline ::google::protobuf::int32 DungeonSceneDetail::ileftcount() const {
  return ileftcount_;
}
inline void DungeonSceneDetail::set_ileftcount(::google::protobuf::int32 value) {
  set_has_ileftcount();
  ileftcount_ = value;
}

// optional int32 iTotalCount = 6;
inline bool DungeonSceneDetail::has_itotalcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DungeonSceneDetail::set_has_itotalcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DungeonSceneDetail::clear_has_itotalcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DungeonSceneDetail::clear_itotalcount() {
  itotalcount_ = 0;
  clear_has_itotalcount();
}
inline ::google::protobuf::int32 DungeonSceneDetail::itotalcount() const {
  return itotalcount_;
}
inline void DungeonSceneDetail::set_itotalcount(::google::protobuf::int32 value) {
  set_has_itotalcount();
  itotalcount_ = value;
}

// optional bool bIsOpend = 12;
inline bool DungeonSceneDetail::has_bisopend() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DungeonSceneDetail::set_has_bisopend() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DungeonSceneDetail::clear_has_bisopend() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DungeonSceneDetail::clear_bisopend() {
  bisopend_ = false;
  clear_has_bisopend();
}
inline bool DungeonSceneDetail::bisopend() const {
  return bisopend_;
}
inline void DungeonSceneDetail::set_bisopend(bool value) {
  set_has_bisopend();
  bisopend_ = value;
}

// -------------------------------------------------------------------

// Cmd_Cs_QueryDSectionDetail

// required int32 iSectionID = 1;
inline bool Cmd_Cs_QueryDSectionDetail::has_isectionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_QueryDSectionDetail::set_has_isectionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_QueryDSectionDetail::clear_has_isectionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_QueryDSectionDetail::clear_isectionid() {
  isectionid_ = 0;
  clear_has_isectionid();
}
inline ::google::protobuf::int32 Cmd_Cs_QueryDSectionDetail::isectionid() const {
  return isectionid_;
}
inline void Cmd_Cs_QueryDSectionDetail::set_isectionid(::google::protobuf::int32 value) {
  set_has_isectionid();
  isectionid_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_QueryDSectionDetail

// repeated .GSProto.DungeonSceneDetail szDungeonScene = 1;
inline int Cmd_Sc_QueryDSectionDetail::szdungeonscene_size() const {
  return szdungeonscene_.size();
}
inline void Cmd_Sc_QueryDSectionDetail::clear_szdungeonscene() {
  szdungeonscene_.Clear();
}
inline const ::GSProto::DungeonSceneDetail& Cmd_Sc_QueryDSectionDetail::szdungeonscene(int index) const {
  return szdungeonscene_.Get(index);
}
inline ::GSProto::DungeonSceneDetail* Cmd_Sc_QueryDSectionDetail::mutable_szdungeonscene(int index) {
  return szdungeonscene_.Mutable(index);
}
inline ::GSProto::DungeonSceneDetail* Cmd_Sc_QueryDSectionDetail::add_szdungeonscene() {
  return szdungeonscene_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::DungeonSceneDetail >&
Cmd_Sc_QueryDSectionDetail::szdungeonscene() const {
  return szdungeonscene_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::DungeonSceneDetail >*
Cmd_Sc_QueryDSectionDetail::mutable_szdungeonscene() {
  return &szdungeonscene_;
}

// required int32 iSectionSize = 2;
inline bool Cmd_Sc_QueryDSectionDetail::has_isectionsize() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Sc_QueryDSectionDetail::set_has_isectionsize() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Sc_QueryDSectionDetail::clear_has_isectionsize() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Sc_QueryDSectionDetail::clear_isectionsize() {
  isectionsize_ = 0;
  clear_has_isectionsize();
}
inline ::google::protobuf::int32 Cmd_Sc_QueryDSectionDetail::isectionsize() const {
  return isectionsize_;
}
inline void Cmd_Sc_QueryDSectionDetail::set_isectionsize(::google::protobuf::int32 value) {
  set_has_isectionsize();
  isectionsize_ = value;
}

// optional int32 iCostPhystrength = 3;
inline bool Cmd_Sc_QueryDSectionDetail::has_icostphystrength() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Cmd_Sc_QueryDSectionDetail::set_has_icostphystrength() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Cmd_Sc_QueryDSectionDetail::clear_has_icostphystrength() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Cmd_Sc_QueryDSectionDetail::clear_icostphystrength() {
  icostphystrength_ = 0;
  clear_has_icostphystrength();
}
inline ::google::protobuf::int32 Cmd_Sc_QueryDSectionDetail::icostphystrength() const {
  return icostphystrength_;
}
inline void Cmd_Sc_QueryDSectionDetail::set_icostphystrength(::google::protobuf::int32 value) {
  set_has_icostphystrength();
  icostphystrength_ = value;
}

// optional bool bSaoDangHaveLimit = 4;
inline bool Cmd_Sc_QueryDSectionDetail::has_bsaodanghavelimit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Cmd_Sc_QueryDSectionDetail::set_has_bsaodanghavelimit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Cmd_Sc_QueryDSectionDetail::clear_has_bsaodanghavelimit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Cmd_Sc_QueryDSectionDetail::clear_bsaodanghavelimit() {
  bsaodanghavelimit_ = false;
  clear_has_bsaodanghavelimit();
}
inline bool Cmd_Sc_QueryDSectionDetail::bsaodanghavelimit() const {
  return bsaodanghavelimit_;
}
inline void Cmd_Sc_QueryDSectionDetail::set_bsaodanghavelimit(bool value) {
  set_has_bsaodanghavelimit();
  bsaodanghavelimit_ = value;
}

// optional bool bShowSaoDangCD = 5;
inline bool Cmd_Sc_QueryDSectionDetail::has_bshowsaodangcd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Cmd_Sc_QueryDSectionDetail::set_has_bshowsaodangcd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Cmd_Sc_QueryDSectionDetail::clear_has_bshowsaodangcd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Cmd_Sc_QueryDSectionDetail::clear_bshowsaodangcd() {
  bshowsaodangcd_ = false;
  clear_has_bshowsaodangcd();
}
inline bool Cmd_Sc_QueryDSectionDetail::bshowsaodangcd() const {
  return bshowsaodangcd_;
}
inline void Cmd_Sc_QueryDSectionDetail::set_bshowsaodangcd(bool value) {
  set_has_bshowsaodangcd();
  bshowsaodangcd_ = value;
}

// optional int32 iSaoDangCDSecond = 6;
inline bool Cmd_Sc_QueryDSectionDetail::has_isaodangcdsecond() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Cmd_Sc_QueryDSectionDetail::set_has_isaodangcdsecond() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Cmd_Sc_QueryDSectionDetail::clear_has_isaodangcdsecond() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Cmd_Sc_QueryDSectionDetail::clear_isaodangcdsecond() {
  isaodangcdsecond_ = 0;
  clear_has_isaodangcdsecond();
}
inline ::google::protobuf::int32 Cmd_Sc_QueryDSectionDetail::isaodangcdsecond() const {
  return isaodangcdsecond_;
}
inline void Cmd_Sc_QueryDSectionDetail::set_isaodangcdsecond(::google::protobuf::int32 value) {
  set_has_isaodangcdsecond();
  isaodangcdsecond_ = value;
}

// optional int32 iLeftSaoDangCount = 7;
inline bool Cmd_Sc_QueryDSectionDetail::has_ileftsaodangcount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Cmd_Sc_QueryDSectionDetail::set_has_ileftsaodangcount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Cmd_Sc_QueryDSectionDetail::clear_has_ileftsaodangcount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Cmd_Sc_QueryDSectionDetail::clear_ileftsaodangcount() {
  ileftsaodangcount_ = 0;
  clear_has_ileftsaodangcount();
}
inline ::google::protobuf::int32 Cmd_Sc_QueryDSectionDetail::ileftsaodangcount() const {
  return ileftsaodangcount_;
}
inline void Cmd_Sc_QueryDSectionDetail::set_ileftsaodangcount(::google::protobuf::int32 value) {
  set_has_ileftsaodangcount();
  ileftsaodangcount_ = value;
}

// optional int32 iSaoDangLimitCount = 8;
inline bool Cmd_Sc_QueryDSectionDetail::has_isaodanglimitcount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Cmd_Sc_QueryDSectionDetail::set_has_isaodanglimitcount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Cmd_Sc_QueryDSectionDetail::clear_has_isaodanglimitcount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Cmd_Sc_QueryDSectionDetail::clear_isaodanglimitcount() {
  isaodanglimitcount_ = 0;
  clear_has_isaodanglimitcount();
}
inline ::google::protobuf::int32 Cmd_Sc_QueryDSectionDetail::isaodanglimitcount() const {
  return isaodanglimitcount_;
}
inline void Cmd_Sc_QueryDSectionDetail::set_isaodanglimitcount(::google::protobuf::int32 value) {
  set_has_isaodanglimitcount();
  isaodanglimitcount_ = value;
}

// optional int32 iSectionID = 9;
inline bool Cmd_Sc_QueryDSectionDetail::has_isectionid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Cmd_Sc_QueryDSectionDetail::set_has_isectionid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Cmd_Sc_QueryDSectionDetail::clear_has_isectionid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Cmd_Sc_QueryDSectionDetail::clear_isectionid() {
  isectionid_ = 0;
  clear_has_isectionid();
}
inline ::google::protobuf::int32 Cmd_Sc_QueryDSectionDetail::isectionid() const {
  return isectionid_;
}
inline void Cmd_Sc_QueryDSectionDetail::set_isectionid(::google::protobuf::int32 value) {
  set_has_isectionid();
  isectionid_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_SectionUpdate

// required .GSProto.DungeonSection updateInfo = 1;
inline bool Cmd_Sc_SectionUpdate::has_updateinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_SectionUpdate::set_has_updateinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_SectionUpdate::clear_has_updateinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_SectionUpdate::clear_updateinfo() {
  if (updateinfo_ != NULL) updateinfo_->::GSProto::DungeonSection::Clear();
  clear_has_updateinfo();
}
inline const ::GSProto::DungeonSection& Cmd_Sc_SectionUpdate::updateinfo() const {
  return updateinfo_ != NULL ? *updateinfo_ : *default_instance_->updateinfo_;
}
inline ::GSProto::DungeonSection* Cmd_Sc_SectionUpdate::mutable_updateinfo() {
  set_has_updateinfo();
  if (updateinfo_ == NULL) updateinfo_ = new ::GSProto::DungeonSection;
  return updateinfo_;
}
inline ::GSProto::DungeonSection* Cmd_Sc_SectionUpdate::release_updateinfo() {
  clear_has_updateinfo();
  ::GSProto::DungeonSection* temp = updateinfo_;
  updateinfo_ = NULL;
  return temp;
}
inline void Cmd_Sc_SectionUpdate::set_allocated_updateinfo(::GSProto::DungeonSection* updateinfo) {
  delete updateinfo_;
  updateinfo_ = updateinfo;
  if (updateinfo) {
    set_has_updateinfo();
  } else {
    clear_has_updateinfo();
  }
}

// -------------------------------------------------------------------

// FightAwardItem

// required int32 iItemID = 1;
inline bool FightAwardItem::has_iitemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightAwardItem::set_has_iitemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightAwardItem::clear_has_iitemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightAwardItem::clear_iitemid() {
  iitemid_ = 0;
  clear_has_iitemid();
}
inline ::google::protobuf::int32 FightAwardItem::iitemid() const {
  return iitemid_;
}
inline void FightAwardItem::set_iitemid(::google::protobuf::int32 value) {
  set_has_iitemid();
  iitemid_ = value;
}

// required int32 iCount = 2;
inline bool FightAwardItem::has_icount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightAwardItem::set_has_icount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightAwardItem::clear_has_icount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightAwardItem::clear_icount() {
  icount_ = 0;
  clear_has_icount();
}
inline ::google::protobuf::int32 FightAwardItem::icount() const {
  return icount_;
}
inline void FightAwardItem::set_icount(::google::protobuf::int32 value) {
  set_has_icount();
  icount_ = value;
}

// optional .GSProto.PropItem dynamicEquipProp = 3;
inline bool FightAwardItem::has_dynamicequipprop() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightAwardItem::set_has_dynamicequipprop() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightAwardItem::clear_has_dynamicequipprop() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightAwardItem::clear_dynamicequipprop() {
  if (dynamicequipprop_ != NULL) dynamicequipprop_->::GSProto::PropItem::Clear();
  clear_has_dynamicequipprop();
}
inline const ::GSProto::PropItem& FightAwardItem::dynamicequipprop() const {
  return dynamicequipprop_ != NULL ? *dynamicequipprop_ : *default_instance_->dynamicequipprop_;
}
inline ::GSProto::PropItem* FightAwardItem::mutable_dynamicequipprop() {
  set_has_dynamicequipprop();
  if (dynamicequipprop_ == NULL) dynamicequipprop_ = new ::GSProto::PropItem;
  return dynamicequipprop_;
}
inline ::GSProto::PropItem* FightAwardItem::release_dynamicequipprop() {
  clear_has_dynamicequipprop();
  ::GSProto::PropItem* temp = dynamicequipprop_;
  dynamicequipprop_ = NULL;
  return temp;
}
inline void FightAwardItem::set_allocated_dynamicequipprop(::GSProto::PropItem* dynamicequipprop) {
  delete dynamicequipprop_;
  dynamicequipprop_ = dynamicequipprop;
  if (dynamicequipprop) {
    set_has_dynamicequipprop();
  } else {
    clear_has_dynamicequipprop();
  }
}

// -------------------------------------------------------------------

// AwardPay

// required int32 money = 1;
inline bool AwardPay::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AwardPay::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AwardPay::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AwardPay::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 AwardPay::money() const {
  return money_;
}
inline void AwardPay::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
}

// required int32 count = 2;
inline bool AwardPay::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AwardPay::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AwardPay::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AwardPay::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 AwardPay::count() const {
  return count_;
}
inline void AwardPay::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// PropItem

// required int32 iLifeAttID = 1;
inline bool PropItem::has_ilifeattid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PropItem::set_has_ilifeattid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PropItem::clear_has_ilifeattid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PropItem::clear_ilifeattid() {
  ilifeattid_ = 0;
  clear_has_ilifeattid();
}
inline ::google::protobuf::int32 PropItem::ilifeattid() const {
  return ilifeattid_;
}
inline void PropItem::set_ilifeattid(::google::protobuf::int32 value) {
  set_has_ilifeattid();
  ilifeattid_ = value;
}

// required int32 iValue = 2;
inline bool PropItem::has_ivalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PropItem::set_has_ivalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PropItem::clear_has_ivalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PropItem::clear_ivalue() {
  ivalue_ = 0;
  clear_has_ivalue();
}
inline ::google::protobuf::int32 PropItem::ivalue() const {
  return ivalue_;
}
inline void PropItem::set_ivalue(::google::protobuf::int32 value) {
  set_has_ivalue();
  ivalue_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_AttChg

// required uint32 dwObjectID = 1;
inline bool Cmd_Sc_AttChg::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_AttChg::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_AttChg::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_AttChg::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 Cmd_Sc_AttChg::dwobjectid() const {
  return dwobjectid_;
}
inline void Cmd_Sc_AttChg::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// repeated .GSProto.PropItem szChgLifeAtt = 2;
inline int Cmd_Sc_AttChg::szchglifeatt_size() const {
  return szchglifeatt_.size();
}
inline void Cmd_Sc_AttChg::clear_szchglifeatt() {
  szchglifeatt_.Clear();
}
inline const ::GSProto::PropItem& Cmd_Sc_AttChg::szchglifeatt(int index) const {
  return szchglifeatt_.Get(index);
}
inline ::GSProto::PropItem* Cmd_Sc_AttChg::mutable_szchglifeatt(int index) {
  return szchglifeatt_.Mutable(index);
}
inline ::GSProto::PropItem* Cmd_Sc_AttChg::add_szchglifeatt() {
  return szchglifeatt_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
Cmd_Sc_AttChg::szchglifeatt() const {
  return szchglifeatt_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
Cmd_Sc_AttChg::mutable_szchglifeatt() {
  return &szchglifeatt_;
}

// -------------------------------------------------------------------

// FightAwardHero

// required int32 iHeroID = 1;
inline bool FightAwardHero::has_iheroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightAwardHero::set_has_iheroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightAwardHero::clear_has_iheroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightAwardHero::clear_iheroid() {
  iheroid_ = 0;
  clear_has_iheroid();
}
inline ::google::protobuf::int32 FightAwardHero::iheroid() const {
  return iheroid_;
}
inline void FightAwardHero::set_iheroid(::google::protobuf::int32 value) {
  set_has_iheroid();
  iheroid_ = value;
}

// required int32 iLevelStep = 2;
inline bool FightAwardHero::has_ilevelstep() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightAwardHero::set_has_ilevelstep() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightAwardHero::clear_has_ilevelstep() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightAwardHero::clear_ilevelstep() {
  ilevelstep_ = 0;
  clear_has_ilevelstep();
}
inline ::google::protobuf::int32 FightAwardHero::ilevelstep() const {
  return ilevelstep_;
}
inline void FightAwardHero::set_ilevelstep(::google::protobuf::int32 value) {
  set_has_ilevelstep();
  ilevelstep_ = value;
}

// required int32 iCount = 3;
inline bool FightAwardHero::has_icount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightAwardHero::set_has_icount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightAwardHero::clear_has_icount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightAwardHero::clear_icount() {
  icount_ = 0;
  clear_has_icount();
}
inline ::google::protobuf::int32 FightAwardHero::icount() const {
  return icount_;
}
inline void FightAwardHero::set_icount(::google::protobuf::int32 value) {
  set_has_icount();
  icount_ = value;
}

// optional int32 iQuality = 4;
inline bool FightAwardHero::has_iquality() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FightAwardHero::set_has_iquality() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FightAwardHero::clear_has_iquality() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FightAwardHero::clear_iquality() {
  iquality_ = 0;
  clear_has_iquality();
}
inline ::google::protobuf::int32 FightAwardHero::iquality() const {
  return iquality_;
}
inline void FightAwardHero::set_iquality(::google::protobuf::int32 value) {
  set_has_iquality();
  iquality_ = value;
}

// required bool bHaveChgSoul = 5;
inline bool FightAwardHero::has_bhavechgsoul() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FightAwardHero::set_has_bhavechgsoul() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FightAwardHero::clear_has_bhavechgsoul() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FightAwardHero::clear_bhavechgsoul() {
  bhavechgsoul_ = false;
  clear_has_bhavechgsoul();
}
inline bool FightAwardHero::bhavechgsoul() const {
  return bhavechgsoul_;
}
inline void FightAwardHero::set_bhavechgsoul(bool value) {
  set_has_bhavechgsoul();
  bhavechgsoul_ = value;
}

// optional int32 iSoulId = 6;
inline bool FightAwardHero::has_isoulid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FightAwardHero::set_has_isoulid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FightAwardHero::clear_has_isoulid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FightAwardHero::clear_isoulid() {
  isoulid_ = 0;
  clear_has_isoulid();
}
inline ::google::protobuf::int32 FightAwardHero::isoulid() const {
  return isoulid_;
}
inline void FightAwardHero::set_isoulid(::google::protobuf::int32 value) {
  set_has_isoulid();
  isoulid_ = value;
}

// -------------------------------------------------------------------

// FightAwardResult

// repeated .GSProto.PropItem szAwardPropList = 1;
inline int FightAwardResult::szawardproplist_size() const {
  return szawardproplist_.size();
}
inline void FightAwardResult::clear_szawardproplist() {
  szawardproplist_.Clear();
}
inline const ::GSProto::PropItem& FightAwardResult::szawardproplist(int index) const {
  return szawardproplist_.Get(index);
}
inline ::GSProto::PropItem* FightAwardResult::mutable_szawardproplist(int index) {
  return szawardproplist_.Mutable(index);
}
inline ::GSProto::PropItem* FightAwardResult::add_szawardproplist() {
  return szawardproplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
FightAwardResult::szawardproplist() const {
  return szawardproplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
FightAwardResult::mutable_szawardproplist() {
  return &szawardproplist_;
}

// repeated .GSProto.FightAwardItem szAwardItemList = 2;
inline int FightAwardResult::szawarditemlist_size() const {
  return szawarditemlist_.size();
}
inline void FightAwardResult::clear_szawarditemlist() {
  szawarditemlist_.Clear();
}
inline const ::GSProto::FightAwardItem& FightAwardResult::szawarditemlist(int index) const {
  return szawarditemlist_.Get(index);
}
inline ::GSProto::FightAwardItem* FightAwardResult::mutable_szawarditemlist(int index) {
  return szawarditemlist_.Mutable(index);
}
inline ::GSProto::FightAwardItem* FightAwardResult::add_szawarditemlist() {
  return szawarditemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightAwardItem >&
FightAwardResult::szawarditemlist() const {
  return szawarditemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightAwardItem >*
FightAwardResult::mutable_szawarditemlist() {
  return &szawarditemlist_;
}

// repeated .GSProto.FightAwardHero szAwardHeroList = 3;
inline int FightAwardResult::szawardherolist_size() const {
  return szawardherolist_.size();
}
inline void FightAwardResult::clear_szawardherolist() {
  szawardherolist_.Clear();
}
inline const ::GSProto::FightAwardHero& FightAwardResult::szawardherolist(int index) const {
  return szawardherolist_.Get(index);
}
inline ::GSProto::FightAwardHero* FightAwardResult::mutable_szawardherolist(int index) {
  return szawardherolist_.Mutable(index);
}
inline ::GSProto::FightAwardHero* FightAwardResult::add_szawardherolist() {
  return szawardherolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightAwardHero >&
FightAwardResult::szawardherolist() const {
  return szawardherolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightAwardHero >*
FightAwardResult::mutable_szawardherolist() {
  return &szawardherolist_;
}

// repeated .GSProto.AwardPay szAwardPayList = 4;
inline int FightAwardResult::szawardpaylist_size() const {
  return szawardpaylist_.size();
}
inline void FightAwardResult::clear_szawardpaylist() {
  szawardpaylist_.Clear();
}
inline const ::GSProto::AwardPay& FightAwardResult::szawardpaylist(int index) const {
  return szawardpaylist_.Get(index);
}
inline ::GSProto::AwardPay* FightAwardResult::mutable_szawardpaylist(int index) {
  return szawardpaylist_.Mutable(index);
}
inline ::GSProto::AwardPay* FightAwardResult::add_szawardpaylist() {
  return szawardpaylist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::AwardPay >&
FightAwardResult::szawardpaylist() const {
  return szawardpaylist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::AwardPay >*
FightAwardResult::mutable_szawardpaylist() {
  return &szawardpaylist_;
}

// -------------------------------------------------------------------

// HeroExpAwardDetail

// required uint32 dwHeroObjectID = 1;
inline bool HeroExpAwardDetail::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroExpAwardDetail::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroExpAwardDetail::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroExpAwardDetail::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 HeroExpAwardDetail::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void HeroExpAwardDetail::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// required bool bLevelUp = 2;
inline bool HeroExpAwardDetail::has_blevelup() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroExpAwardDetail::set_has_blevelup() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroExpAwardDetail::clear_has_blevelup() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroExpAwardDetail::clear_blevelup() {
  blevelup_ = false;
  clear_has_blevelup();
}
inline bool HeroExpAwardDetail::blevelup() const {
  return blevelup_;
}
inline void HeroExpAwardDetail::set_blevelup(bool value) {
  set_has_blevelup();
  blevelup_ = value;
}

// required int32 iHeroExpPercent = 3;
inline bool HeroExpAwardDetail::has_iheroexppercent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroExpAwardDetail::set_has_iheroexppercent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroExpAwardDetail::clear_has_iheroexppercent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroExpAwardDetail::clear_iheroexppercent() {
  iheroexppercent_ = 0;
  clear_has_iheroexppercent();
}
inline ::google::protobuf::int32 HeroExpAwardDetail::iheroexppercent() const {
  return iheroexppercent_;
}
inline void HeroExpAwardDetail::set_iheroexppercent(::google::protobuf::int32 value) {
  set_has_iheroexppercent();
  iheroexppercent_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_CommFightResult

// required int32 iSceneID = 1;
inline bool Cmd_Sc_CommFightResult::has_isceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_CommFightResult::set_has_isceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_CommFightResult::clear_has_isceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_CommFightResult::clear_isceneid() {
  isceneid_ = 0;
  clear_has_isceneid();
}
inline ::google::protobuf::int32 Cmd_Sc_CommFightResult::isceneid() const {
  return isceneid_;
}
inline void Cmd_Sc_CommFightResult::set_isceneid(::google::protobuf::int32 value) {
  set_has_isceneid();
  isceneid_ = value;
}

// required int32 iIsSuccess = 2;
inline bool Cmd_Sc_CommFightResult::has_iissuccess() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Sc_CommFightResult::set_has_iissuccess() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Sc_CommFightResult::clear_has_iissuccess() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Sc_CommFightResult::clear_iissuccess() {
  iissuccess_ = 0;
  clear_has_iissuccess();
}
inline ::google::protobuf::int32 Cmd_Sc_CommFightResult::iissuccess() const {
  return iissuccess_;
}
inline void Cmd_Sc_CommFightResult::set_iissuccess(::google::protobuf::int32 value) {
  set_has_iissuccess();
  iissuccess_ = value;
}

// optional int32 iStar = 3;
inline bool Cmd_Sc_CommFightResult::has_istar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Cmd_Sc_CommFightResult::set_has_istar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Cmd_Sc_CommFightResult::clear_has_istar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Cmd_Sc_CommFightResult::clear_istar() {
  istar_ = 0;
  clear_has_istar();
}
inline ::google::protobuf::int32 Cmd_Sc_CommFightResult::istar() const {
  return istar_;
}
inline void Cmd_Sc_CommFightResult::set_istar(::google::protobuf::int32 value) {
  set_has_istar();
  istar_ = value;
}

// optional .GSProto.FightAwardResult awardResult = 4;
inline bool Cmd_Sc_CommFightResult::has_awardresult() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Cmd_Sc_CommFightResult::set_has_awardresult() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Cmd_Sc_CommFightResult::clear_has_awardresult() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Cmd_Sc_CommFightResult::clear_awardresult() {
  if (awardresult_ != NULL) awardresult_->::GSProto::FightAwardResult::Clear();
  clear_has_awardresult();
}
inline const ::GSProto::FightAwardResult& Cmd_Sc_CommFightResult::awardresult() const {
  return awardresult_ != NULL ? *awardresult_ : *default_instance_->awardresult_;
}
inline ::GSProto::FightAwardResult* Cmd_Sc_CommFightResult::mutable_awardresult() {
  set_has_awardresult();
  if (awardresult_ == NULL) awardresult_ = new ::GSProto::FightAwardResult;
  return awardresult_;
}
inline ::GSProto::FightAwardResult* Cmd_Sc_CommFightResult::release_awardresult() {
  clear_has_awardresult();
  ::GSProto::FightAwardResult* temp = awardresult_;
  awardresult_ = NULL;
  return temp;
}
inline void Cmd_Sc_CommFightResult::set_allocated_awardresult(::GSProto::FightAwardResult* awardresult) {
  delete awardresult_;
  awardresult_ = awardresult;
  if (awardresult) {
    set_has_awardresult();
  } else {
    clear_has_awardresult();
  }
}

// optional bool bReserve = 5;
inline bool Cmd_Sc_CommFightResult::has_breserve() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Cmd_Sc_CommFightResult::set_has_breserve() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Cmd_Sc_CommFightResult::clear_has_breserve() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Cmd_Sc_CommFightResult::clear_breserve() {
  breserve_ = false;
  clear_has_breserve();
}
inline bool Cmd_Sc_CommFightResult::breserve() const {
  return breserve_;
}
inline void Cmd_Sc_CommFightResult::set_breserve(bool value) {
  set_has_breserve();
  breserve_ = value;
}

// repeated .GSProto.HeroExpAwardDetail szHeroAward = 6;
inline int Cmd_Sc_CommFightResult::szheroaward_size() const {
  return szheroaward_.size();
}
inline void Cmd_Sc_CommFightResult::clear_szheroaward() {
  szheroaward_.Clear();
}
inline const ::GSProto::HeroExpAwardDetail& Cmd_Sc_CommFightResult::szheroaward(int index) const {
  return szheroaward_.Get(index);
}
inline ::GSProto::HeroExpAwardDetail* Cmd_Sc_CommFightResult::mutable_szheroaward(int index) {
  return szheroaward_.Mutable(index);
}
inline ::GSProto::HeroExpAwardDetail* Cmd_Sc_CommFightResult::add_szheroaward() {
  return szheroaward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HeroExpAwardDetail >&
Cmd_Sc_CommFightResult::szheroaward() const {
  return szheroaward_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::HeroExpAwardDetail >*
Cmd_Sc_CommFightResult::mutable_szheroaward() {
  return &szheroaward_;
}

// optional int32 iHeroGetExp = 7;
inline bool Cmd_Sc_CommFightResult::has_iherogetexp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Cmd_Sc_CommFightResult::set_has_iherogetexp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Cmd_Sc_CommFightResult::clear_has_iherogetexp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Cmd_Sc_CommFightResult::clear_iherogetexp() {
  iherogetexp_ = 0;
  clear_has_iherogetexp();
}
inline ::google::protobuf::int32 Cmd_Sc_CommFightResult::iherogetexp() const {
  return iherogetexp_;
}
inline void Cmd_Sc_CommFightResult::set_iherogetexp(::google::protobuf::int32 value) {
  set_has_iherogetexp();
  iherogetexp_ = value;
}

// optional bool bCanFP = 8;
inline bool Cmd_Sc_CommFightResult::has_bcanfp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Cmd_Sc_CommFightResult::set_has_bcanfp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Cmd_Sc_CommFightResult::clear_has_bcanfp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Cmd_Sc_CommFightResult::clear_bcanfp() {
  bcanfp_ = false;
  clear_has_bcanfp();
}
inline bool Cmd_Sc_CommFightResult::bcanfp() const {
  return bcanfp_;
}
inline void Cmd_Sc_CommFightResult::set_bcanfp(bool value) {
  set_has_bcanfp();
  bcanfp_ = value;
}

// optional int32 iCostGold = 9;
inline bool Cmd_Sc_CommFightResult::has_icostgold() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Cmd_Sc_CommFightResult::set_has_icostgold() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Cmd_Sc_CommFightResult::clear_has_icostgold() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Cmd_Sc_CommFightResult::clear_icostgold() {
  icostgold_ = 0;
  clear_has_icostgold();
}
inline ::google::protobuf::int32 Cmd_Sc_CommFightResult::icostgold() const {
  return icostgold_;
}
inline void Cmd_Sc_CommFightResult::set_icostgold(::google::protobuf::int32 value) {
  set_has_icostgold();
  icostgold_ = value;
}

// optional int32 iExtraExp = 10;
inline bool Cmd_Sc_CommFightResult::has_iextraexp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Cmd_Sc_CommFightResult::set_has_iextraexp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Cmd_Sc_CommFightResult::clear_has_iextraexp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Cmd_Sc_CommFightResult::clear_iextraexp() {
  iextraexp_ = 0;
  clear_has_iextraexp();
}
inline ::google::protobuf::int32 Cmd_Sc_CommFightResult::iextraexp() const {
  return iextraexp_;
}
inline void Cmd_Sc_CommFightResult::set_iextraexp(::google::protobuf::int32 value) {
  set_has_iextraexp();
  iextraexp_ = value;
}

// -------------------------------------------------------------------

// CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC

// repeated int32 szEquipIDList = 1;
inline int CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC::szequipidlist_size() const {
  return szequipidlist_.size();
}
inline void CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC::clear_szequipidlist() {
  szequipidlist_.Clear();
}
inline ::google::protobuf::int32 CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC::szequipidlist(int index) const {
  return szequipidlist_.Get(index);
}
inline void CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC::set_szequipidlist(int index, ::google::protobuf::int32 value) {
  szequipidlist_.Set(index, value);
}
inline void CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC::add_szequipidlist(::google::protobuf::int32 value) {
  szequipidlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC::szequipidlist() const {
  return szequipidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CMD_EQUIPDUNGEON_QUERY_EQUIPINFO_SC::mutable_szequipidlist() {
  return &szequipidlist_;
}

// -------------------------------------------------------------------

// CMD_EQUIPDUNGEON_FP_CS

// required int32 iPos = 1;
inline bool CMD_EQUIPDUNGEON_FP_CS::has_ipos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIPDUNGEON_FP_CS::set_has_ipos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIPDUNGEON_FP_CS::clear_has_ipos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIPDUNGEON_FP_CS::clear_ipos() {
  ipos_ = 0;
  clear_has_ipos();
}
inline ::google::protobuf::int32 CMD_EQUIPDUNGEON_FP_CS::ipos() const {
  return ipos_;
}
inline void CMD_EQUIPDUNGEON_FP_CS::set_ipos(::google::protobuf::int32 value) {
  set_has_ipos();
  ipos_ = value;
}

// -------------------------------------------------------------------

// CMD_EQUIPDUNGEON_FP_SC

// required int32 iPos = 1;
inline bool CMD_EQUIPDUNGEON_FP_SC::has_ipos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIPDUNGEON_FP_SC::set_has_ipos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIPDUNGEON_FP_SC::clear_has_ipos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIPDUNGEON_FP_SC::clear_ipos() {
  ipos_ = 0;
  clear_has_ipos();
}
inline ::google::protobuf::int32 CMD_EQUIPDUNGEON_FP_SC::ipos() const {
  return ipos_;
}
inline void CMD_EQUIPDUNGEON_FP_SC::set_ipos(::google::protobuf::int32 value) {
  set_has_ipos();
  ipos_ = value;
}

// required .GSProto.EquipInfo equipInfo = 2;
inline bool CMD_EQUIPDUNGEON_FP_SC::has_equipinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_EQUIPDUNGEON_FP_SC::set_has_equipinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_EQUIPDUNGEON_FP_SC::clear_has_equipinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_EQUIPDUNGEON_FP_SC::clear_equipinfo() {
  if (equipinfo_ != NULL) equipinfo_->::GSProto::EquipInfo::Clear();
  clear_has_equipinfo();
}
inline const ::GSProto::EquipInfo& CMD_EQUIPDUNGEON_FP_SC::equipinfo() const {
  return equipinfo_ != NULL ? *equipinfo_ : *default_instance_->equipinfo_;
}
inline ::GSProto::EquipInfo* CMD_EQUIPDUNGEON_FP_SC::mutable_equipinfo() {
  set_has_equipinfo();
  if (equipinfo_ == NULL) equipinfo_ = new ::GSProto::EquipInfo;
  return equipinfo_;
}
inline ::GSProto::EquipInfo* CMD_EQUIPDUNGEON_FP_SC::release_equipinfo() {
  clear_has_equipinfo();
  ::GSProto::EquipInfo* temp = equipinfo_;
  equipinfo_ = NULL;
  return temp;
}
inline void CMD_EQUIPDUNGEON_FP_SC::set_allocated_equipinfo(::GSProto::EquipInfo* equipinfo) {
  delete equipinfo_;
  equipinfo_ = equipinfo;
  if (equipinfo) {
    set_has_equipinfo();
  } else {
    clear_has_equipinfo();
  }
}

// required int32 iNextCostGold = 3;
inline bool CMD_EQUIPDUNGEON_FP_SC::has_inextcostgold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_EQUIPDUNGEON_FP_SC::set_has_inextcostgold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_EQUIPDUNGEON_FP_SC::clear_has_inextcostgold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_EQUIPDUNGEON_FP_SC::clear_inextcostgold() {
  inextcostgold_ = 0;
  clear_has_inextcostgold();
}
inline ::google::protobuf::int32 CMD_EQUIPDUNGEON_FP_SC::inextcostgold() const {
  return inextcostgold_;
}
inline void CMD_EQUIPDUNGEON_FP_SC::set_inextcostgold(::google::protobuf::int32 value) {
  set_has_inextcostgold();
  inextcostgold_ = value;
}

// -------------------------------------------------------------------

// Cmd_Cs_DungeonFight

// required int32 iSceneID = 1;
inline bool Cmd_Cs_DungeonFight::has_isceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_DungeonFight::set_has_isceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_DungeonFight::clear_has_isceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_DungeonFight::clear_isceneid() {
  isceneid_ = 0;
  clear_has_isceneid();
}
inline ::google::protobuf::int32 Cmd_Cs_DungeonFight::isceneid() const {
  return isceneid_;
}
inline void Cmd_Cs_DungeonFight::set_isceneid(::google::protobuf::int32 value) {
  set_has_isceneid();
  isceneid_ = value;
}

// -------------------------------------------------------------------

// Cmd_Cs_GetSectionAward

// required int32 iSectionID = 1;
inline bool Cmd_Cs_GetSectionAward::has_isectionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_GetSectionAward::set_has_isectionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_GetSectionAward::clear_has_isectionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_GetSectionAward::clear_isectionid() {
  isectionid_ = 0;
  clear_has_isectionid();
}
inline ::google::protobuf::int32 Cmd_Cs_GetSectionAward::isectionid() const {
  return isectionid_;
}
inline void Cmd_Cs_GetSectionAward::set_isectionid(::google::protobuf::int32 value) {
  set_has_isectionid();
  isectionid_ = value;
}

// -------------------------------------------------------------------

// CMD_GET_SECTION_AWARD_SC

// required int32 iIsOK = 1;
inline bool CMD_GET_SECTION_AWARD_SC::has_iisok() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GET_SECTION_AWARD_SC::set_has_iisok() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GET_SECTION_AWARD_SC::clear_has_iisok() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GET_SECTION_AWARD_SC::clear_iisok() {
  iisok_ = 0;
  clear_has_iisok();
}
inline ::google::protobuf::int32 CMD_GET_SECTION_AWARD_SC::iisok() const {
  return iisok_;
}
inline void CMD_GET_SECTION_AWARD_SC::set_iisok(::google::protobuf::int32 value) {
  set_has_iisok();
  iisok_ = value;
}

// required int32 iSectionID = 2;
inline bool CMD_GET_SECTION_AWARD_SC::has_isectionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_GET_SECTION_AWARD_SC::set_has_isectionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_GET_SECTION_AWARD_SC::clear_has_isectionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_GET_SECTION_AWARD_SC::clear_isectionid() {
  isectionid_ = 0;
  clear_has_isectionid();
}
inline ::google::protobuf::int32 CMD_GET_SECTION_AWARD_SC::isectionid() const {
  return isectionid_;
}
inline void CMD_GET_SECTION_AWARD_SC::set_isectionid(::google::protobuf::int32 value) {
  set_has_isectionid();
  isectionid_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_ActorLevelUp

// required int32 iLevel = 1;
inline bool Cmd_Sc_ActorLevelUp::has_ilevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_ActorLevelUp::set_has_ilevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_ActorLevelUp::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_ActorLevelUp::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 Cmd_Sc_ActorLevelUp::ilevel() const {
  return ilevel_;
}
inline void Cmd_Sc_ActorLevelUp::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// required int32 iExp = 2;
inline bool Cmd_Sc_ActorLevelUp::has_iexp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Sc_ActorLevelUp::set_has_iexp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Sc_ActorLevelUp::clear_has_iexp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Sc_ActorLevelUp::clear_iexp() {
  iexp_ = 0;
  clear_has_iexp();
}
inline ::google::protobuf::int32 Cmd_Sc_ActorLevelUp::iexp() const {
  return iexp_;
}
inline void Cmd_Sc_ActorLevelUp::set_iexp(::google::protobuf::int32 value) {
  set_has_iexp();
  iexp_ = value;
}

// required int32 iLevelUpExp = 3;
inline bool Cmd_Sc_ActorLevelUp::has_ilevelupexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Cmd_Sc_ActorLevelUp::set_has_ilevelupexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Cmd_Sc_ActorLevelUp::clear_has_ilevelupexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Cmd_Sc_ActorLevelUp::clear_ilevelupexp() {
  ilevelupexp_ = 0;
  clear_has_ilevelupexp();
}
inline ::google::protobuf::int32 Cmd_Sc_ActorLevelUp::ilevelupexp() const {
  return ilevelupexp_;
}
inline void Cmd_Sc_ActorLevelUp::set_ilevelupexp(::google::protobuf::int32 value) {
  set_has_ilevelupexp();
  ilevelupexp_ = value;
}

// optional int32 iPreLevel = 4;
inline bool Cmd_Sc_ActorLevelUp::has_iprelevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Cmd_Sc_ActorLevelUp::set_has_iprelevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Cmd_Sc_ActorLevelUp::clear_has_iprelevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Cmd_Sc_ActorLevelUp::clear_iprelevel() {
  iprelevel_ = 0;
  clear_has_iprelevel();
}
inline ::google::protobuf::int32 Cmd_Sc_ActorLevelUp::iprelevel() const {
  return iprelevel_;
}
inline void Cmd_Sc_ActorLevelUp::set_iprelevel(::google::protobuf::int32 value) {
  set_has_iprelevel();
  iprelevel_ = value;
}

// optional int32 iPrePhyStrength = 5;
inline bool Cmd_Sc_ActorLevelUp::has_iprephystrength() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Cmd_Sc_ActorLevelUp::set_has_iprephystrength() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Cmd_Sc_ActorLevelUp::clear_has_iprephystrength() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Cmd_Sc_ActorLevelUp::clear_iprephystrength() {
  iprephystrength_ = 0;
  clear_has_iprephystrength();
}
inline ::google::protobuf::int32 Cmd_Sc_ActorLevelUp::iprephystrength() const {
  return iprephystrength_;
}
inline void Cmd_Sc_ActorLevelUp::set_iprephystrength(::google::protobuf::int32 value) {
  set_has_iprephystrength();
  iprephystrength_ = value;
}

// optional int32 iCurPhyStrength = 6;
inline bool Cmd_Sc_ActorLevelUp::has_icurphystrength() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Cmd_Sc_ActorLevelUp::set_has_icurphystrength() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Cmd_Sc_ActorLevelUp::clear_has_icurphystrength() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Cmd_Sc_ActorLevelUp::clear_icurphystrength() {
  icurphystrength_ = 0;
  clear_has_icurphystrength();
}
inline ::google::protobuf::int32 Cmd_Sc_ActorLevelUp::icurphystrength() const {
  return icurphystrength_;
}
inline void Cmd_Sc_ActorLevelUp::set_icurphystrength(::google::protobuf::int32 value) {
  set_has_icurphystrength();
  icurphystrength_ = value;
}

// optional int32 iPreFormationHeroLimit = 7;
inline bool Cmd_Sc_ActorLevelUp::has_ipreformationherolimit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Cmd_Sc_ActorLevelUp::set_has_ipreformationherolimit() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Cmd_Sc_ActorLevelUp::clear_has_ipreformationherolimit() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Cmd_Sc_ActorLevelUp::clear_ipreformationherolimit() {
  ipreformationherolimit_ = 0;
  clear_has_ipreformationherolimit();
}
inline ::google::protobuf::int32 Cmd_Sc_ActorLevelUp::ipreformationherolimit() const {
  return ipreformationherolimit_;
}
inline void Cmd_Sc_ActorLevelUp::set_ipreformationherolimit(::google::protobuf::int32 value) {
  set_has_ipreformationherolimit();
  ipreformationherolimit_ = value;
}

// optional int32 iCurFormationHeroLimit = 8;
inline bool Cmd_Sc_ActorLevelUp::has_icurformationherolimit() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Cmd_Sc_ActorLevelUp::set_has_icurformationherolimit() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Cmd_Sc_ActorLevelUp::clear_has_icurformationherolimit() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Cmd_Sc_ActorLevelUp::clear_icurformationherolimit() {
  icurformationherolimit_ = 0;
  clear_has_icurformationherolimit();
}
inline ::google::protobuf::int32 Cmd_Sc_ActorLevelUp::icurformationherolimit() const {
  return icurformationherolimit_;
}
inline void Cmd_Sc_ActorLevelUp::set_icurformationherolimit(::google::protobuf::int32 value) {
  set_has_icurformationherolimit();
  icurformationherolimit_ = value;
}

// -------------------------------------------------------------------

// CMD_ACTOR_VIPLEVELUP_SC

// required int32 iVipLevel = 1;
inline bool CMD_ACTOR_VIPLEVELUP_SC::has_iviplevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_ACTOR_VIPLEVELUP_SC::set_has_iviplevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_ACTOR_VIPLEVELUP_SC::clear_has_iviplevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_ACTOR_VIPLEVELUP_SC::clear_iviplevel() {
  iviplevel_ = 0;
  clear_has_iviplevel();
}
inline ::google::protobuf::int32 CMD_ACTOR_VIPLEVELUP_SC::iviplevel() const {
  return iviplevel_;
}
inline void CMD_ACTOR_VIPLEVELUP_SC::set_iviplevel(::google::protobuf::int32 value) {
  set_has_iviplevel();
  iviplevel_ = value;
}

// required int32 iVipExp = 2;
inline bool CMD_ACTOR_VIPLEVELUP_SC::has_ivipexp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_ACTOR_VIPLEVELUP_SC::set_has_ivipexp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_ACTOR_VIPLEVELUP_SC::clear_has_ivipexp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_ACTOR_VIPLEVELUP_SC::clear_ivipexp() {
  ivipexp_ = 0;
  clear_has_ivipexp();
}
inline ::google::protobuf::int32 CMD_ACTOR_VIPLEVELUP_SC::ivipexp() const {
  return ivipexp_;
}
inline void CMD_ACTOR_VIPLEVELUP_SC::set_ivipexp(::google::protobuf::int32 value) {
  set_has_ivipexp();
  ivipexp_ = value;
}

// required int32 iVipLevelUpExp = 3;
inline bool CMD_ACTOR_VIPLEVELUP_SC::has_iviplevelupexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_ACTOR_VIPLEVELUP_SC::set_has_iviplevelupexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_ACTOR_VIPLEVELUP_SC::clear_has_iviplevelupexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_ACTOR_VIPLEVELUP_SC::clear_iviplevelupexp() {
  iviplevelupexp_ = 0;
  clear_has_iviplevelupexp();
}
inline ::google::protobuf::int32 CMD_ACTOR_VIPLEVELUP_SC::iviplevelupexp() const {
  return iviplevelupexp_;
}
inline void CMD_ACTOR_VIPLEVELUP_SC::set_iviplevelupexp(::google::protobuf::int32 value) {
  set_has_iviplevelupexp();
  iviplevelupexp_ = value;
}

// optional int32 iVipPreLevel = 4;
inline bool CMD_ACTOR_VIPLEVELUP_SC::has_ivipprelevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_ACTOR_VIPLEVELUP_SC::set_has_ivipprelevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_ACTOR_VIPLEVELUP_SC::clear_has_ivipprelevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_ACTOR_VIPLEVELUP_SC::clear_ivipprelevel() {
  ivipprelevel_ = 0;
  clear_has_ivipprelevel();
}
inline ::google::protobuf::int32 CMD_ACTOR_VIPLEVELUP_SC::ivipprelevel() const {
  return ivipprelevel_;
}
inline void CMD_ACTOR_VIPLEVELUP_SC::set_ivipprelevel(::google::protobuf::int32 value) {
  set_has_ivipprelevel();
  ivipprelevel_ = value;
}

// -------------------------------------------------------------------

// FightSoulItem

// required uint32 dwObjectID = 1;
inline bool FightSoulItem::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightSoulItem::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightSoulItem::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightSoulItem::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 FightSoulItem::dwobjectid() const {
  return dwobjectid_;
}
inline void FightSoulItem::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// required int32 iBaseID = 2;
inline bool FightSoulItem::has_ibaseid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightSoulItem::set_has_ibaseid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightSoulItem::clear_has_ibaseid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightSoulItem::clear_ibaseid() {
  ibaseid_ = 0;
  clear_has_ibaseid();
}
inline ::google::protobuf::int32 FightSoulItem::ibaseid() const {
  return ibaseid_;
}
inline void FightSoulItem::set_ibaseid(::google::protobuf::int32 value) {
  set_has_ibaseid();
  ibaseid_ = value;
}

// required int32 iExp = 3;
inline bool FightSoulItem::has_iexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightSoulItem::set_has_iexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightSoulItem::clear_has_iexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightSoulItem::clear_iexp() {
  iexp_ = 0;
  clear_has_iexp();
}
inline ::google::protobuf::int32 FightSoulItem::iexp() const {
  return iexp_;
}
inline void FightSoulItem::set_iexp(::google::protobuf::int32 value) {
  set_has_iexp();
  iexp_ = value;
}

// required int32 iPos = 4;
inline bool FightSoulItem::has_ipos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FightSoulItem::set_has_ipos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FightSoulItem::clear_has_ipos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FightSoulItem::clear_ipos() {
  ipos_ = 0;
  clear_has_ipos();
}
inline ::google::protobuf::int32 FightSoulItem::ipos() const {
  return ipos_;
}
inline void FightSoulItem::set_ipos(::google::protobuf::int32 value) {
  set_has_ipos();
  ipos_ = value;
}

// required bool bLocked = 5;
inline bool FightSoulItem::has_blocked() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FightSoulItem::set_has_blocked() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FightSoulItem::clear_has_blocked() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FightSoulItem::clear_blocked() {
  blocked_ = false;
  clear_has_blocked();
}
inline bool FightSoulItem::blocked() const {
  return blocked_;
}
inline void FightSoulItem::set_blocked(bool value) {
  set_has_blocked();
  blocked_ = value;
}

// required int32 iLevel = 6;
inline bool FightSoulItem::has_ilevel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FightSoulItem::set_has_ilevel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FightSoulItem::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FightSoulItem::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 FightSoulItem::ilevel() const {
  return ilevel_;
}
inline void FightSoulItem::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// repeated .GSProto.PropItem szPropList = 7;
inline int FightSoulItem::szproplist_size() const {
  return szproplist_.size();
}
inline void FightSoulItem::clear_szproplist() {
  szproplist_.Clear();
}
inline const ::GSProto::PropItem& FightSoulItem::szproplist(int index) const {
  return szproplist_.Get(index);
}
inline ::GSProto::PropItem* FightSoulItem::mutable_szproplist(int index) {
  return szproplist_.Mutable(index);
}
inline ::GSProto::PropItem* FightSoulItem::add_szproplist() {
  return szproplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
FightSoulItem::szproplist() const {
  return szproplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
FightSoulItem::mutable_szproplist() {
  return &szproplist_;
}

// required int32 iNextLvExp = 8;
inline bool FightSoulItem::has_inextlvexp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FightSoulItem::set_has_inextlvexp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FightSoulItem::clear_has_inextlvexp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FightSoulItem::clear_inextlvexp() {
  inextlvexp_ = 0;
  clear_has_inextlvexp();
}
inline ::google::protobuf::int32 FightSoulItem::inextlvexp() const {
  return inextlvexp_;
}
inline void FightSoulItem::set_inextlvexp(::google::protobuf::int32 value) {
  set_has_inextlvexp();
  inextlvexp_ = value;
}

// optional int32 iEatExp = 9;
inline bool FightSoulItem::has_ieatexp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FightSoulItem::set_has_ieatexp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FightSoulItem::clear_has_ieatexp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FightSoulItem::clear_ieatexp() {
  ieatexp_ = 0;
  clear_has_ieatexp();
}
inline ::google::protobuf::int32 FightSoulItem::ieatexp() const {
  return ieatexp_;
}
inline void FightSoulItem::set_ieatexp(::google::protobuf::int32 value) {
  set_has_ieatexp();
  ieatexp_ = value;
}

// -------------------------------------------------------------------

// FightSoulPracticeStatus

// required int32 iGrade = 1;
inline bool FightSoulPracticeStatus::has_igrade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightSoulPracticeStatus::set_has_igrade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightSoulPracticeStatus::clear_has_igrade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightSoulPracticeStatus::clear_igrade() {
  igrade_ = 0;
  clear_has_igrade();
}
inline ::google::protobuf::int32 FightSoulPracticeStatus::igrade() const {
  return igrade_;
}
inline void FightSoulPracticeStatus::set_igrade(::google::protobuf::int32 value) {
  set_has_igrade();
  igrade_ = value;
}

// required int32 iMode = 2;
inline bool FightSoulPracticeStatus::has_imode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightSoulPracticeStatus::set_has_imode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightSoulPracticeStatus::clear_has_imode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightSoulPracticeStatus::clear_imode() {
  imode_ = 0;
  clear_has_imode();
}
inline ::google::protobuf::int32 FightSoulPracticeStatus::imode() const {
  return imode_;
}
inline void FightSoulPracticeStatus::set_imode(::google::protobuf::int32 value) {
  set_has_imode();
  imode_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_FightSoulBag

// repeated .GSProto.FightSoulItem szFightSoulList = 1;
inline int Cmd_Sc_FightSoulBag::szfightsoullist_size() const {
  return szfightsoullist_.size();
}
inline void Cmd_Sc_FightSoulBag::clear_szfightsoullist() {
  szfightsoullist_.Clear();
}
inline const ::GSProto::FightSoulItem& Cmd_Sc_FightSoulBag::szfightsoullist(int index) const {
  return szfightsoullist_.Get(index);
}
inline ::GSProto::FightSoulItem* Cmd_Sc_FightSoulBag::mutable_szfightsoullist(int index) {
  return szfightsoullist_.Mutable(index);
}
inline ::GSProto::FightSoulItem* Cmd_Sc_FightSoulBag::add_szfightsoullist() {
  return szfightsoullist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightSoulItem >&
Cmd_Sc_FightSoulBag::szfightsoullist() const {
  return szfightsoullist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightSoulItem >*
Cmd_Sc_FightSoulBag::mutable_szfightsoullist() {
  return &szfightsoullist_;
}

// required int32 iChipCount = 2;
inline bool Cmd_Sc_FightSoulBag::has_ichipcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Sc_FightSoulBag::set_has_ichipcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Sc_FightSoulBag::clear_has_ichipcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Sc_FightSoulBag::clear_ichipcount() {
  ichipcount_ = 0;
  clear_has_ichipcount();
}
inline ::google::protobuf::int32 Cmd_Sc_FightSoulBag::ichipcount() const {
  return ichipcount_;
}
inline void Cmd_Sc_FightSoulBag::set_ichipcount(::google::protobuf::int32 value) {
  set_has_ichipcount();
  ichipcount_ = value;
}

// required .GSProto.FightSoulPracticeStatus status = 3;
inline bool Cmd_Sc_FightSoulBag::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Cmd_Sc_FightSoulBag::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Cmd_Sc_FightSoulBag::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Cmd_Sc_FightSoulBag::clear_status() {
  if (status_ != NULL) status_->::GSProto::FightSoulPracticeStatus::Clear();
  clear_has_status();
}
inline const ::GSProto::FightSoulPracticeStatus& Cmd_Sc_FightSoulBag::status() const {
  return status_ != NULL ? *status_ : *default_instance_->status_;
}
inline ::GSProto::FightSoulPracticeStatus* Cmd_Sc_FightSoulBag::mutable_status() {
  set_has_status();
  if (status_ == NULL) status_ = new ::GSProto::FightSoulPracticeStatus;
  return status_;
}
inline ::GSProto::FightSoulPracticeStatus* Cmd_Sc_FightSoulBag::release_status() {
  clear_has_status();
  ::GSProto::FightSoulPracticeStatus* temp = status_;
  status_ = NULL;
  return temp;
}
inline void Cmd_Sc_FightSoulBag::set_allocated_status(::GSProto::FightSoulPracticeStatus* status) {
  delete status_;
  status_ = status;
  if (status) {
    set_has_status();
  } else {
    clear_has_status();
  }
}

// -------------------------------------------------------------------

// Cmd_Cs_MoveFightSoul

// required int32 iSrcConType = 1;
inline bool Cmd_Cs_MoveFightSoul::has_isrccontype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_MoveFightSoul::set_has_isrccontype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_MoveFightSoul::clear_has_isrccontype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_MoveFightSoul::clear_isrccontype() {
  isrccontype_ = 0;
  clear_has_isrccontype();
}
inline ::google::protobuf::int32 Cmd_Cs_MoveFightSoul::isrccontype() const {
  return isrccontype_;
}
inline void Cmd_Cs_MoveFightSoul::set_isrccontype(::google::protobuf::int32 value) {
  set_has_isrccontype();
  isrccontype_ = value;
}

// required int32 iDstConType = 2;
inline bool Cmd_Cs_MoveFightSoul::has_idstcontype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Cs_MoveFightSoul::set_has_idstcontype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Cs_MoveFightSoul::clear_has_idstcontype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Cs_MoveFightSoul::clear_idstcontype() {
  idstcontype_ = 0;
  clear_has_idstcontype();
}
inline ::google::protobuf::int32 Cmd_Cs_MoveFightSoul::idstcontype() const {
  return idstcontype_;
}
inline void Cmd_Cs_MoveFightSoul::set_idstcontype(::google::protobuf::int32 value) {
  set_has_idstcontype();
  idstcontype_ = value;
}

// required sint32 iSrcPos = 3;
inline bool Cmd_Cs_MoveFightSoul::has_isrcpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Cmd_Cs_MoveFightSoul::set_has_isrcpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Cmd_Cs_MoveFightSoul::clear_has_isrcpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Cmd_Cs_MoveFightSoul::clear_isrcpos() {
  isrcpos_ = 0;
  clear_has_isrcpos();
}
inline ::google::protobuf::int32 Cmd_Cs_MoveFightSoul::isrcpos() const {
  return isrcpos_;
}
inline void Cmd_Cs_MoveFightSoul::set_isrcpos(::google::protobuf::int32 value) {
  set_has_isrcpos();
  isrcpos_ = value;
}

// required sint32 iDstPos = 4;
inline bool Cmd_Cs_MoveFightSoul::has_idstpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Cmd_Cs_MoveFightSoul::set_has_idstpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Cmd_Cs_MoveFightSoul::clear_has_idstpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Cmd_Cs_MoveFightSoul::clear_idstpos() {
  idstpos_ = 0;
  clear_has_idstpos();
}
inline ::google::protobuf::int32 Cmd_Cs_MoveFightSoul::idstpos() const {
  return idstpos_;
}
inline void Cmd_Cs_MoveFightSoul::set_idstpos(::google::protobuf::int32 value) {
  set_has_idstpos();
  idstpos_ = value;
}

// optional uint32 dwHeroObjectID = 5;
inline bool Cmd_Cs_MoveFightSoul::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Cmd_Cs_MoveFightSoul::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Cmd_Cs_MoveFightSoul::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Cmd_Cs_MoveFightSoul::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 Cmd_Cs_MoveFightSoul::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void Cmd_Cs_MoveFightSoul::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// -------------------------------------------------------------------

// FightSoulChgItem

// required int32 iPos = 1;
inline bool FightSoulChgItem::has_ipos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FightSoulChgItem::set_has_ipos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FightSoulChgItem::clear_has_ipos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FightSoulChgItem::clear_ipos() {
  ipos_ = 0;
  clear_has_ipos();
}
inline ::google::protobuf::int32 FightSoulChgItem::ipos() const {
  return ipos_;
}
inline void FightSoulChgItem::set_ipos(::google::protobuf::int32 value) {
  set_has_ipos();
  ipos_ = value;
}

// required bool bDel = 2;
inline bool FightSoulChgItem::has_bdel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FightSoulChgItem::set_has_bdel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FightSoulChgItem::clear_has_bdel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FightSoulChgItem::clear_bdel() {
  bdel_ = false;
  clear_has_bdel();
}
inline bool FightSoulChgItem::bdel() const {
  return bdel_;
}
inline void FightSoulChgItem::set_bdel(bool value) {
  set_has_bdel();
  bdel_ = value;
}

// optional .GSProto.FightSoulItem fightSoulData = 3;
inline bool FightSoulChgItem::has_fightsouldata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FightSoulChgItem::set_has_fightsouldata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FightSoulChgItem::clear_has_fightsouldata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FightSoulChgItem::clear_fightsouldata() {
  if (fightsouldata_ != NULL) fightsouldata_->::GSProto::FightSoulItem::Clear();
  clear_has_fightsouldata();
}
inline const ::GSProto::FightSoulItem& FightSoulChgItem::fightsouldata() const {
  return fightsouldata_ != NULL ? *fightsouldata_ : *default_instance_->fightsouldata_;
}
inline ::GSProto::FightSoulItem* FightSoulChgItem::mutable_fightsouldata() {
  set_has_fightsouldata();
  if (fightsouldata_ == NULL) fightsouldata_ = new ::GSProto::FightSoulItem;
  return fightsouldata_;
}
inline ::GSProto::FightSoulItem* FightSoulChgItem::release_fightsouldata() {
  clear_has_fightsouldata();
  ::GSProto::FightSoulItem* temp = fightsouldata_;
  fightsouldata_ = NULL;
  return temp;
}
inline void FightSoulChgItem::set_allocated_fightsouldata(::GSProto::FightSoulItem* fightsouldata) {
  delete fightsouldata_;
  fightsouldata_ = fightsouldata;
  if (fightsouldata) {
    set_has_fightsouldata();
  } else {
    clear_has_fightsouldata();
  }
}

// -------------------------------------------------------------------

// Cmd_Sc_ChgFsContainer

// required int32 iObjectType = 1;
inline bool Cmd_Sc_ChgFsContainer::has_iobjecttype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_ChgFsContainer::set_has_iobjecttype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_ChgFsContainer::clear_has_iobjecttype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_ChgFsContainer::clear_iobjecttype() {
  iobjecttype_ = 0;
  clear_has_iobjecttype();
}
inline ::google::protobuf::int32 Cmd_Sc_ChgFsContainer::iobjecttype() const {
  return iobjecttype_;
}
inline void Cmd_Sc_ChgFsContainer::set_iobjecttype(::google::protobuf::int32 value) {
  set_has_iobjecttype();
  iobjecttype_ = value;
}

// required uint32 dwObjectID = 2;
inline bool Cmd_Sc_ChgFsContainer::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Sc_ChgFsContainer::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Sc_ChgFsContainer::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Sc_ChgFsContainer::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 Cmd_Sc_ChgFsContainer::dwobjectid() const {
  return dwobjectid_;
}
inline void Cmd_Sc_ChgFsContainer::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// required int32 iContainerType = 3;
inline bool Cmd_Sc_ChgFsContainer::has_icontainertype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Cmd_Sc_ChgFsContainer::set_has_icontainertype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Cmd_Sc_ChgFsContainer::clear_has_icontainertype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Cmd_Sc_ChgFsContainer::clear_icontainertype() {
  icontainertype_ = 0;
  clear_has_icontainertype();
}
inline ::google::protobuf::int32 Cmd_Sc_ChgFsContainer::icontainertype() const {
  return icontainertype_;
}
inline void Cmd_Sc_ChgFsContainer::set_icontainertype(::google::protobuf::int32 value) {
  set_has_icontainertype();
  icontainertype_ = value;
}

// repeated .GSProto.FightSoulChgItem szChgList = 4;
inline int Cmd_Sc_ChgFsContainer::szchglist_size() const {
  return szchglist_.size();
}
inline void Cmd_Sc_ChgFsContainer::clear_szchglist() {
  szchglist_.Clear();
}
inline const ::GSProto::FightSoulChgItem& Cmd_Sc_ChgFsContainer::szchglist(int index) const {
  return szchglist_.Get(index);
}
inline ::GSProto::FightSoulChgItem* Cmd_Sc_ChgFsContainer::mutable_szchglist(int index) {
  return szchglist_.Mutable(index);
}
inline ::GSProto::FightSoulChgItem* Cmd_Sc_ChgFsContainer::add_szchglist() {
  return szchglist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightSoulChgItem >&
Cmd_Sc_ChgFsContainer::szchglist() const {
  return szchglist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightSoulChgItem >*
Cmd_Sc_ChgFsContainer::mutable_szchglist() {
  return &szchglist_;
}

// -------------------------------------------------------------------

// Cmd_Sc_FightSoulPractice

// required .GSProto.FightSoulPracticeStatus status = 1;
inline bool Cmd_Sc_FightSoulPractice::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_FightSoulPractice::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_FightSoulPractice::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_FightSoulPractice::clear_status() {
  if (status_ != NULL) status_->::GSProto::FightSoulPracticeStatus::Clear();
  clear_has_status();
}
inline const ::GSProto::FightSoulPracticeStatus& Cmd_Sc_FightSoulPractice::status() const {
  return status_ != NULL ? *status_ : *default_instance_->status_;
}
inline ::GSProto::FightSoulPracticeStatus* Cmd_Sc_FightSoulPractice::mutable_status() {
  set_has_status();
  if (status_ == NULL) status_ = new ::GSProto::FightSoulPracticeStatus;
  return status_;
}
inline ::GSProto::FightSoulPracticeStatus* Cmd_Sc_FightSoulPractice::release_status() {
  clear_has_status();
  ::GSProto::FightSoulPracticeStatus* temp = status_;
  status_ = NULL;
  return temp;
}
inline void Cmd_Sc_FightSoulPractice::set_allocated_status(::GSProto::FightSoulPracticeStatus* status) {
  delete status_;
  status_ = status;
  if (status) {
    set_has_status();
  } else {
    clear_has_status();
  }
}

// -------------------------------------------------------------------

// Cmd_Cs_FightSoulLock

// required int32 iConType = 1;
inline bool Cmd_Cs_FightSoulLock::has_icontype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_FightSoulLock::set_has_icontype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_FightSoulLock::clear_has_icontype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_FightSoulLock::clear_icontype() {
  icontype_ = 0;
  clear_has_icontype();
}
inline ::google::protobuf::int32 Cmd_Cs_FightSoulLock::icontype() const {
  return icontype_;
}
inline void Cmd_Cs_FightSoulLock::set_icontype(::google::protobuf::int32 value) {
  set_has_icontype();
  icontype_ = value;
}

// required int32 iPos = 2;
inline bool Cmd_Cs_FightSoulLock::has_ipos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Cs_FightSoulLock::set_has_ipos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Cs_FightSoulLock::clear_has_ipos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Cs_FightSoulLock::clear_ipos() {
  ipos_ = 0;
  clear_has_ipos();
}
inline ::google::protobuf::int32 Cmd_Cs_FightSoulLock::ipos() const {
  return ipos_;
}
inline void Cmd_Cs_FightSoulLock::set_ipos(::google::protobuf::int32 value) {
  set_has_ipos();
  ipos_ = value;
}

// optional uint32 dwHeroObjectID = 3;
inline bool Cmd_Cs_FightSoulLock::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Cmd_Cs_FightSoulLock::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Cmd_Cs_FightSoulLock::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Cmd_Cs_FightSoulLock::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 Cmd_Cs_FightSoulLock::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void Cmd_Cs_FightSoulLock::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// required bool bLock = 4;
inline bool Cmd_Cs_FightSoulLock::has_block() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Cmd_Cs_FightSoulLock::set_has_block() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Cmd_Cs_FightSoulLock::clear_has_block() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Cmd_Cs_FightSoulLock::clear_block() {
  block_ = false;
  clear_has_block();
}
inline bool Cmd_Cs_FightSoulLock::block() const {
  return block_;
}
inline void Cmd_Cs_FightSoulLock::set_block(bool value) {
  set_has_block();
  block_ = value;
}

// -------------------------------------------------------------------

// CMD_HERO_CONVERT_CS

// required int32 iHeroID = 1;
inline bool CMD_HERO_CONVERT_CS::has_iheroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_HERO_CONVERT_CS::set_has_iheroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_HERO_CONVERT_CS::clear_has_iheroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_HERO_CONVERT_CS::clear_iheroid() {
  iheroid_ = 0;
  clear_has_iheroid();
}
inline ::google::protobuf::int32 CMD_HERO_CONVERT_CS::iheroid() const {
  return iheroid_;
}
inline void CMD_HERO_CONVERT_CS::set_iheroid(::google::protobuf::int32 value) {
  set_has_iheroid();
  iheroid_ = value;
}

// required int32 iCount = 2;
inline bool CMD_HERO_CONVERT_CS::has_icount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_HERO_CONVERT_CS::set_has_icount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_HERO_CONVERT_CS::clear_has_icount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_HERO_CONVERT_CS::clear_icount() {
  icount_ = 0;
  clear_has_icount();
}
inline ::google::protobuf::int32 CMD_HERO_CONVERT_CS::icount() const {
  return icount_;
}
inline void CMD_HERO_CONVERT_CS::set_icount(::google::protobuf::int32 value) {
  set_has_icount();
  icount_ = value;
}

// -------------------------------------------------------------------

// CMD_HERO_CONVERT_SC

// required int32 iNewHeroID = 1;
inline bool CMD_HERO_CONVERT_SC::has_inewheroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_HERO_CONVERT_SC::set_has_inewheroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_HERO_CONVERT_SC::clear_has_inewheroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_HERO_CONVERT_SC::clear_inewheroid() {
  inewheroid_ = 0;
  clear_has_inewheroid();
}
inline ::google::protobuf::int32 CMD_HERO_CONVERT_SC::inewheroid() const {
  return inewheroid_;
}
inline void CMD_HERO_CONVERT_SC::set_inewheroid(::google::protobuf::int32 value) {
  set_has_inewheroid();
  inewheroid_ = value;
}

// -------------------------------------------------------------------

// ConfirmMsg

// required string strLeftText = 1;
inline bool ConfirmMsg::has_strlefttext() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfirmMsg::set_has_strlefttext() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfirmMsg::clear_has_strlefttext() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfirmMsg::clear_strlefttext() {
  if (strlefttext_ != &::google::protobuf::internal::kEmptyString) {
    strlefttext_->clear();
  }
  clear_has_strlefttext();
}
inline const ::std::string& ConfirmMsg::strlefttext() const {
  return *strlefttext_;
}
inline void ConfirmMsg::set_strlefttext(const ::std::string& value) {
  set_has_strlefttext();
  if (strlefttext_ == &::google::protobuf::internal::kEmptyString) {
    strlefttext_ = new ::std::string;
  }
  strlefttext_->assign(value);
}
inline void ConfirmMsg::set_strlefttext(const char* value) {
  set_has_strlefttext();
  if (strlefttext_ == &::google::protobuf::internal::kEmptyString) {
    strlefttext_ = new ::std::string;
  }
  strlefttext_->assign(value);
}
inline void ConfirmMsg::set_strlefttext(const char* value, size_t size) {
  set_has_strlefttext();
  if (strlefttext_ == &::google::protobuf::internal::kEmptyString) {
    strlefttext_ = new ::std::string;
  }
  strlefttext_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ConfirmMsg::mutable_strlefttext() {
  set_has_strlefttext();
  if (strlefttext_ == &::google::protobuf::internal::kEmptyString) {
    strlefttext_ = new ::std::string;
  }
  return strlefttext_;
}
inline ::std::string* ConfirmMsg::release_strlefttext() {
  clear_has_strlefttext();
  if (strlefttext_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strlefttext_;
    strlefttext_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ConfirmMsg::set_allocated_strlefttext(::std::string* strlefttext) {
  if (strlefttext_ != &::google::protobuf::internal::kEmptyString) {
    delete strlefttext_;
  }
  if (strlefttext) {
    set_has_strlefttext();
    strlefttext_ = strlefttext;
  } else {
    clear_has_strlefttext();
    strlefttext_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strLeftCmd = 2;
inline bool ConfirmMsg::has_strleftcmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfirmMsg::set_has_strleftcmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfirmMsg::clear_has_strleftcmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfirmMsg::clear_strleftcmd() {
  if (strleftcmd_ != &::google::protobuf::internal::kEmptyString) {
    strleftcmd_->clear();
  }
  clear_has_strleftcmd();
}
inline const ::std::string& ConfirmMsg::strleftcmd() const {
  return *strleftcmd_;
}
inline void ConfirmMsg::set_strleftcmd(const ::std::string& value) {
  set_has_strleftcmd();
  if (strleftcmd_ == &::google::protobuf::internal::kEmptyString) {
    strleftcmd_ = new ::std::string;
  }
  strleftcmd_->assign(value);
}
inline void ConfirmMsg::set_strleftcmd(const char* value) {
  set_has_strleftcmd();
  if (strleftcmd_ == &::google::protobuf::internal::kEmptyString) {
    strleftcmd_ = new ::std::string;
  }
  strleftcmd_->assign(value);
}
inline void ConfirmMsg::set_strleftcmd(const char* value, size_t size) {
  set_has_strleftcmd();
  if (strleftcmd_ == &::google::protobuf::internal::kEmptyString) {
    strleftcmd_ = new ::std::string;
  }
  strleftcmd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ConfirmMsg::mutable_strleftcmd() {
  set_has_strleftcmd();
  if (strleftcmd_ == &::google::protobuf::internal::kEmptyString) {
    strleftcmd_ = new ::std::string;
  }
  return strleftcmd_;
}
inline ::std::string* ConfirmMsg::release_strleftcmd() {
  clear_has_strleftcmd();
  if (strleftcmd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strleftcmd_;
    strleftcmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ConfirmMsg::set_allocated_strleftcmd(::std::string* strleftcmd) {
  if (strleftcmd_ != &::google::protobuf::internal::kEmptyString) {
    delete strleftcmd_;
  }
  if (strleftcmd) {
    set_has_strleftcmd();
    strleftcmd_ = strleftcmd;
  } else {
    clear_has_strleftcmd();
    strleftcmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strRightText = 3;
inline bool ConfirmMsg::has_strrighttext() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfirmMsg::set_has_strrighttext() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfirmMsg::clear_has_strrighttext() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfirmMsg::clear_strrighttext() {
  if (strrighttext_ != &::google::protobuf::internal::kEmptyString) {
    strrighttext_->clear();
  }
  clear_has_strrighttext();
}
inline const ::std::string& ConfirmMsg::strrighttext() const {
  return *strrighttext_;
}
inline void ConfirmMsg::set_strrighttext(const ::std::string& value) {
  set_has_strrighttext();
  if (strrighttext_ == &::google::protobuf::internal::kEmptyString) {
    strrighttext_ = new ::std::string;
  }
  strrighttext_->assign(value);
}
inline void ConfirmMsg::set_strrighttext(const char* value) {
  set_has_strrighttext();
  if (strrighttext_ == &::google::protobuf::internal::kEmptyString) {
    strrighttext_ = new ::std::string;
  }
  strrighttext_->assign(value);
}
inline void ConfirmMsg::set_strrighttext(const char* value, size_t size) {
  set_has_strrighttext();
  if (strrighttext_ == &::google::protobuf::internal::kEmptyString) {
    strrighttext_ = new ::std::string;
  }
  strrighttext_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ConfirmMsg::mutable_strrighttext() {
  set_has_strrighttext();
  if (strrighttext_ == &::google::protobuf::internal::kEmptyString) {
    strrighttext_ = new ::std::string;
  }
  return strrighttext_;
}
inline ::std::string* ConfirmMsg::release_strrighttext() {
  clear_has_strrighttext();
  if (strrighttext_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strrighttext_;
    strrighttext_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ConfirmMsg::set_allocated_strrighttext(::std::string* strrighttext) {
  if (strrighttext_ != &::google::protobuf::internal::kEmptyString) {
    delete strrighttext_;
  }
  if (strrighttext) {
    set_has_strrighttext();
    strrighttext_ = strrighttext;
  } else {
    clear_has_strrighttext();
    strrighttext_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strRightCmd = 4;
inline bool ConfirmMsg::has_strrightcmd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfirmMsg::set_has_strrightcmd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfirmMsg::clear_has_strrightcmd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfirmMsg::clear_strrightcmd() {
  if (strrightcmd_ != &::google::protobuf::internal::kEmptyString) {
    strrightcmd_->clear();
  }
  clear_has_strrightcmd();
}
inline const ::std::string& ConfirmMsg::strrightcmd() const {
  return *strrightcmd_;
}
inline void ConfirmMsg::set_strrightcmd(const ::std::string& value) {
  set_has_strrightcmd();
  if (strrightcmd_ == &::google::protobuf::internal::kEmptyString) {
    strrightcmd_ = new ::std::string;
  }
  strrightcmd_->assign(value);
}
inline void ConfirmMsg::set_strrightcmd(const char* value) {
  set_has_strrightcmd();
  if (strrightcmd_ == &::google::protobuf::internal::kEmptyString) {
    strrightcmd_ = new ::std::string;
  }
  strrightcmd_->assign(value);
}
inline void ConfirmMsg::set_strrightcmd(const char* value, size_t size) {
  set_has_strrightcmd();
  if (strrightcmd_ == &::google::protobuf::internal::kEmptyString) {
    strrightcmd_ = new ::std::string;
  }
  strrightcmd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ConfirmMsg::mutable_strrightcmd() {
  set_has_strrightcmd();
  if (strrightcmd_ == &::google::protobuf::internal::kEmptyString) {
    strrightcmd_ = new ::std::string;
  }
  return strrightcmd_;
}
inline ::std::string* ConfirmMsg::release_strrightcmd() {
  clear_has_strrightcmd();
  if (strrightcmd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strrightcmd_;
    strrightcmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ConfirmMsg::set_allocated_strrightcmd(::std::string* strrightcmd) {
  if (strrightcmd_ != &::google::protobuf::internal::kEmptyString) {
    delete strrightcmd_;
  }
  if (strrightcmd) {
    set_has_strrightcmd();
    strrightcmd_ = strrightcmd;
  } else {
    clear_has_strrightcmd();
    strrightcmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Cmd_Sc_CommDlg

// required string strMessage = 1;
inline bool Cmd_Sc_CommDlg::has_strmessage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_CommDlg::set_has_strmessage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_CommDlg::clear_has_strmessage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_CommDlg::clear_strmessage() {
  if (strmessage_ != &::google::protobuf::internal::kEmptyString) {
    strmessage_->clear();
  }
  clear_has_strmessage();
}
inline const ::std::string& Cmd_Sc_CommDlg::strmessage() const {
  return *strmessage_;
}
inline void Cmd_Sc_CommDlg::set_strmessage(const ::std::string& value) {
  set_has_strmessage();
  if (strmessage_ == &::google::protobuf::internal::kEmptyString) {
    strmessage_ = new ::std::string;
  }
  strmessage_->assign(value);
}
inline void Cmd_Sc_CommDlg::set_strmessage(const char* value) {
  set_has_strmessage();
  if (strmessage_ == &::google::protobuf::internal::kEmptyString) {
    strmessage_ = new ::std::string;
  }
  strmessage_->assign(value);
}
inline void Cmd_Sc_CommDlg::set_strmessage(const char* value, size_t size) {
  set_has_strmessage();
  if (strmessage_ == &::google::protobuf::internal::kEmptyString) {
    strmessage_ = new ::std::string;
  }
  strmessage_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Cmd_Sc_CommDlg::mutable_strmessage() {
  set_has_strmessage();
  if (strmessage_ == &::google::protobuf::internal::kEmptyString) {
    strmessage_ = new ::std::string;
  }
  return strmessage_;
}
inline ::std::string* Cmd_Sc_CommDlg::release_strmessage() {
  clear_has_strmessage();
  if (strmessage_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmessage_;
    strmessage_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Cmd_Sc_CommDlg::set_allocated_strmessage(::std::string* strmessage) {
  if (strmessage_ != &::google::protobuf::internal::kEmptyString) {
    delete strmessage_;
  }
  if (strmessage) {
    set_has_strmessage();
    strmessage_ = strmessage;
  } else {
    clear_has_strmessage();
    strmessage_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .GSProto.ConfirmMsg confirmData = 2;
inline bool Cmd_Sc_CommDlg::has_confirmdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Sc_CommDlg::set_has_confirmdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Sc_CommDlg::clear_has_confirmdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Sc_CommDlg::clear_confirmdata() {
  if (confirmdata_ != NULL) confirmdata_->::GSProto::ConfirmMsg::Clear();
  clear_has_confirmdata();
}
inline const ::GSProto::ConfirmMsg& Cmd_Sc_CommDlg::confirmdata() const {
  return confirmdata_ != NULL ? *confirmdata_ : *default_instance_->confirmdata_;
}
inline ::GSProto::ConfirmMsg* Cmd_Sc_CommDlg::mutable_confirmdata() {
  set_has_confirmdata();
  if (confirmdata_ == NULL) confirmdata_ = new ::GSProto::ConfirmMsg;
  return confirmdata_;
}
inline ::GSProto::ConfirmMsg* Cmd_Sc_CommDlg::release_confirmdata() {
  clear_has_confirmdata();
  ::GSProto::ConfirmMsg* temp = confirmdata_;
  confirmdata_ = NULL;
  return temp;
}
inline void Cmd_Sc_CommDlg::set_allocated_confirmdata(::GSProto::ConfirmMsg* confirmdata) {
  delete confirmdata_;
  confirmdata_ = confirmdata;
  if (confirmdata) {
    set_has_confirmdata();
  } else {
    clear_has_confirmdata();
  }
}

// -------------------------------------------------------------------

// Cmd_Cs_HyperLink

// required string strHyperLinkCmd = 1;
inline bool Cmd_Cs_HyperLink::has_strhyperlinkcmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_HyperLink::set_has_strhyperlinkcmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_HyperLink::clear_has_strhyperlinkcmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_HyperLink::clear_strhyperlinkcmd() {
  if (strhyperlinkcmd_ != &::google::protobuf::internal::kEmptyString) {
    strhyperlinkcmd_->clear();
  }
  clear_has_strhyperlinkcmd();
}
inline const ::std::string& Cmd_Cs_HyperLink::strhyperlinkcmd() const {
  return *strhyperlinkcmd_;
}
inline void Cmd_Cs_HyperLink::set_strhyperlinkcmd(const ::std::string& value) {
  set_has_strhyperlinkcmd();
  if (strhyperlinkcmd_ == &::google::protobuf::internal::kEmptyString) {
    strhyperlinkcmd_ = new ::std::string;
  }
  strhyperlinkcmd_->assign(value);
}
inline void Cmd_Cs_HyperLink::set_strhyperlinkcmd(const char* value) {
  set_has_strhyperlinkcmd();
  if (strhyperlinkcmd_ == &::google::protobuf::internal::kEmptyString) {
    strhyperlinkcmd_ = new ::std::string;
  }
  strhyperlinkcmd_->assign(value);
}
inline void Cmd_Cs_HyperLink::set_strhyperlinkcmd(const char* value, size_t size) {
  set_has_strhyperlinkcmd();
  if (strhyperlinkcmd_ == &::google::protobuf::internal::kEmptyString) {
    strhyperlinkcmd_ = new ::std::string;
  }
  strhyperlinkcmd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Cmd_Cs_HyperLink::mutable_strhyperlinkcmd() {
  set_has_strhyperlinkcmd();
  if (strhyperlinkcmd_ == &::google::protobuf::internal::kEmptyString) {
    strhyperlinkcmd_ = new ::std::string;
  }
  return strhyperlinkcmd_;
}
inline ::std::string* Cmd_Cs_HyperLink::release_strhyperlinkcmd() {
  clear_has_strhyperlinkcmd();
  if (strhyperlinkcmd_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strhyperlinkcmd_;
    strhyperlinkcmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Cmd_Cs_HyperLink::set_allocated_strhyperlinkcmd(::std::string* strhyperlinkcmd) {
  if (strhyperlinkcmd_ != &::google::protobuf::internal::kEmptyString) {
    delete strhyperlinkcmd_;
  }
  if (strhyperlinkcmd) {
    set_has_strhyperlinkcmd();
    strhyperlinkcmd_ = strhyperlinkcmd;
  } else {
    clear_has_strhyperlinkcmd();
    strhyperlinkcmd_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Cmd_Cs_QueryHeroLevelInfo

// required uint32 dwHeroObjectID = 1;
inline bool Cmd_Cs_QueryHeroLevelInfo::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_QueryHeroLevelInfo::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_QueryHeroLevelInfo::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_QueryHeroLevelInfo::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 Cmd_Cs_QueryHeroLevelInfo::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void Cmd_Cs_QueryHeroLevelInfo::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// -------------------------------------------------------------------

// HeroLevelUpInfo

// required uint32 dwHeroObjectID = 1;
inline bool HeroLevelUpInfo::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroLevelUpInfo::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroLevelUpInfo::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroLevelUpInfo::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 HeroLevelUpInfo::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void HeroLevelUpInfo::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// required int32 iNextMaxHP = 2;
inline bool HeroLevelUpInfo::has_inextmaxhp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroLevelUpInfo::set_has_inextmaxhp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroLevelUpInfo::clear_has_inextmaxhp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroLevelUpInfo::clear_inextmaxhp() {
  inextmaxhp_ = 0;
  clear_has_inextmaxhp();
}
inline ::google::protobuf::int32 HeroLevelUpInfo::inextmaxhp() const {
  return inextmaxhp_;
}
inline void HeroLevelUpInfo::set_inextmaxhp(::google::protobuf::int32 value) {
  set_has_inextmaxhp();
  inextmaxhp_ = value;
}

// required int32 iNextAtt = 3;
inline bool HeroLevelUpInfo::has_inextatt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroLevelUpInfo::set_has_inextatt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroLevelUpInfo::clear_has_inextatt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroLevelUpInfo::clear_inextatt() {
  inextatt_ = 0;
  clear_has_inextatt();
}
inline ::google::protobuf::int32 HeroLevelUpInfo::inextatt() const {
  return inextatt_;
}
inline void HeroLevelUpInfo::set_inextatt(::google::protobuf::int32 value) {
  set_has_inextatt();
  inextatt_ = value;
}

// required int32 iNextLv = 4;
inline bool HeroLevelUpInfo::has_inextlv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeroLevelUpInfo::set_has_inextlv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeroLevelUpInfo::clear_has_inextlv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeroLevelUpInfo::clear_inextlv() {
  inextlv_ = 0;
  clear_has_inextlv();
}
inline ::google::protobuf::int32 HeroLevelUpInfo::inextlv() const {
  return inextlv_;
}
inline void HeroLevelUpInfo::set_inextlv(::google::protobuf::int32 value) {
  set_has_inextlv();
  inextlv_ = value;
}

// required int32 iCurHeroExp = 5;
inline bool HeroLevelUpInfo::has_icurheroexp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HeroLevelUpInfo::set_has_icurheroexp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HeroLevelUpInfo::clear_has_icurheroexp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HeroLevelUpInfo::clear_icurheroexp() {
  icurheroexp_ = 0;
  clear_has_icurheroexp();
}
inline ::google::protobuf::int32 HeroLevelUpInfo::icurheroexp() const {
  return icurheroexp_;
}
inline void HeroLevelUpInfo::set_icurheroexp(::google::protobuf::int32 value) {
  set_has_icurheroexp();
  icurheroexp_ = value;
}

// required int32 iNeedHeroExp = 6;
inline bool HeroLevelUpInfo::has_ineedheroexp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HeroLevelUpInfo::set_has_ineedheroexp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HeroLevelUpInfo::clear_has_ineedheroexp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HeroLevelUpInfo::clear_ineedheroexp() {
  ineedheroexp_ = 0;
  clear_has_ineedheroexp();
}
inline ::google::protobuf::int32 HeroLevelUpInfo::ineedheroexp() const {
  return ineedheroexp_;
}
inline void HeroLevelUpInfo::set_ineedheroexp(::google::protobuf::int32 value) {
  set_has_ineedheroexp();
  ineedheroexp_ = value;
}

// required int32 iActorTkHeroExp = 7;
inline bool HeroLevelUpInfo::has_iactortkheroexp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HeroLevelUpInfo::set_has_iactortkheroexp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HeroLevelUpInfo::clear_has_iactortkheroexp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HeroLevelUpInfo::clear_iactortkheroexp() {
  iactortkheroexp_ = 0;
  clear_has_iactortkheroexp();
}
inline ::google::protobuf::int32 HeroLevelUpInfo::iactortkheroexp() const {
  return iactortkheroexp_;
}
inline void HeroLevelUpInfo::set_iactortkheroexp(::google::protobuf::int32 value) {
  set_has_iactortkheroexp();
  iactortkheroexp_ = value;
}

// optional int32 iNextDef = 8;
inline bool HeroLevelUpInfo::has_inextdef() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HeroLevelUpInfo::set_has_inextdef() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HeroLevelUpInfo::clear_has_inextdef() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HeroLevelUpInfo::clear_inextdef() {
  inextdef_ = 0;
  clear_has_inextdef();
}
inline ::google::protobuf::int32 HeroLevelUpInfo::inextdef() const {
  return inextdef_;
}
inline void HeroLevelUpInfo::set_inextdef(::google::protobuf::int32 value) {
  set_has_inextdef();
  inextdef_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_QueryHeroLevelInfo

// required .GSProto.HeroLevelUpInfo levelInfo = 1;
inline bool Cmd_Sc_QueryHeroLevelInfo::has_levelinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_QueryHeroLevelInfo::set_has_levelinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_QueryHeroLevelInfo::clear_has_levelinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_QueryHeroLevelInfo::clear_levelinfo() {
  if (levelinfo_ != NULL) levelinfo_->::GSProto::HeroLevelUpInfo::Clear();
  clear_has_levelinfo();
}
inline const ::GSProto::HeroLevelUpInfo& Cmd_Sc_QueryHeroLevelInfo::levelinfo() const {
  return levelinfo_ != NULL ? *levelinfo_ : *default_instance_->levelinfo_;
}
inline ::GSProto::HeroLevelUpInfo* Cmd_Sc_QueryHeroLevelInfo::mutable_levelinfo() {
  set_has_levelinfo();
  if (levelinfo_ == NULL) levelinfo_ = new ::GSProto::HeroLevelUpInfo;
  return levelinfo_;
}
inline ::GSProto::HeroLevelUpInfo* Cmd_Sc_QueryHeroLevelInfo::release_levelinfo() {
  clear_has_levelinfo();
  ::GSProto::HeroLevelUpInfo* temp = levelinfo_;
  levelinfo_ = NULL;
  return temp;
}
inline void Cmd_Sc_QueryHeroLevelInfo::set_allocated_levelinfo(::GSProto::HeroLevelUpInfo* levelinfo) {
  delete levelinfo_;
  levelinfo_ = levelinfo;
  if (levelinfo) {
    set_has_levelinfo();
  } else {
    clear_has_levelinfo();
  }
}

// optional .GSProto.NoticeHeroList heroList = 2;
inline bool Cmd_Sc_QueryHeroLevelInfo::has_herolist() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Sc_QueryHeroLevelInfo::set_has_herolist() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Sc_QueryHeroLevelInfo::clear_has_herolist() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Sc_QueryHeroLevelInfo::clear_herolist() {
  if (herolist_ != NULL) herolist_->::GSProto::NoticeHeroList::Clear();
  clear_has_herolist();
}
inline const ::GSProto::NoticeHeroList& Cmd_Sc_QueryHeroLevelInfo::herolist() const {
  return herolist_ != NULL ? *herolist_ : *default_instance_->herolist_;
}
inline ::GSProto::NoticeHeroList* Cmd_Sc_QueryHeroLevelInfo::mutable_herolist() {
  set_has_herolist();
  if (herolist_ == NULL) herolist_ = new ::GSProto::NoticeHeroList;
  return herolist_;
}
inline ::GSProto::NoticeHeroList* Cmd_Sc_QueryHeroLevelInfo::release_herolist() {
  clear_has_herolist();
  ::GSProto::NoticeHeroList* temp = herolist_;
  herolist_ = NULL;
  return temp;
}
inline void Cmd_Sc_QueryHeroLevelInfo::set_allocated_herolist(::GSProto::NoticeHeroList* herolist) {
  delete herolist_;
  herolist_ = herolist;
  if (herolist) {
    set_has_herolist();
  } else {
    clear_has_herolist();
  }
}

// -------------------------------------------------------------------

// Cmd_Cs_HeroLevelUp

// required uint32 dwHeroObjectID = 1;
inline bool Cmd_Cs_HeroLevelUp::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_HeroLevelUp::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_HeroLevelUp::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_HeroLevelUp::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 Cmd_Cs_HeroLevelUp::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void Cmd_Cs_HeroLevelUp::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_HeroLevelUp

// required .GSProto.HeroLevelUpInfo levelInfo = 1;
inline bool Cmd_Sc_HeroLevelUp::has_levelinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_HeroLevelUp::set_has_levelinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_HeroLevelUp::clear_has_levelinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_HeroLevelUp::clear_levelinfo() {
  if (levelinfo_ != NULL) levelinfo_->::GSProto::HeroLevelUpInfo::Clear();
  clear_has_levelinfo();
}
inline const ::GSProto::HeroLevelUpInfo& Cmd_Sc_HeroLevelUp::levelinfo() const {
  return levelinfo_ != NULL ? *levelinfo_ : *default_instance_->levelinfo_;
}
inline ::GSProto::HeroLevelUpInfo* Cmd_Sc_HeroLevelUp::mutable_levelinfo() {
  set_has_levelinfo();
  if (levelinfo_ == NULL) levelinfo_ = new ::GSProto::HeroLevelUpInfo;
  return levelinfo_;
}
inline ::GSProto::HeroLevelUpInfo* Cmd_Sc_HeroLevelUp::release_levelinfo() {
  clear_has_levelinfo();
  ::GSProto::HeroLevelUpInfo* temp = levelinfo_;
  levelinfo_ = NULL;
  return temp;
}
inline void Cmd_Sc_HeroLevelUp::set_allocated_levelinfo(::GSProto::HeroLevelUpInfo* levelinfo) {
  delete levelinfo_;
  levelinfo_ = levelinfo;
  if (levelinfo) {
    set_has_levelinfo();
  } else {
    clear_has_levelinfo();
  }
}

// optional .GSProto.NoticeHeroList heroList = 2;
inline bool Cmd_Sc_HeroLevelUp::has_herolist() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Sc_HeroLevelUp::set_has_herolist() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Sc_HeroLevelUp::clear_has_herolist() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Sc_HeroLevelUp::clear_herolist() {
  if (herolist_ != NULL) herolist_->::GSProto::NoticeHeroList::Clear();
  clear_has_herolist();
}
inline const ::GSProto::NoticeHeroList& Cmd_Sc_HeroLevelUp::herolist() const {
  return herolist_ != NULL ? *herolist_ : *default_instance_->herolist_;
}
inline ::GSProto::NoticeHeroList* Cmd_Sc_HeroLevelUp::mutable_herolist() {
  set_has_herolist();
  if (herolist_ == NULL) herolist_ = new ::GSProto::NoticeHeroList;
  return herolist_;
}
inline ::GSProto::NoticeHeroList* Cmd_Sc_HeroLevelUp::release_herolist() {
  clear_has_herolist();
  ::GSProto::NoticeHeroList* temp = herolist_;
  herolist_ = NULL;
  return temp;
}
inline void Cmd_Sc_HeroLevelUp::set_allocated_herolist(::GSProto::NoticeHeroList* herolist) {
  delete herolist_;
  herolist_ = herolist;
  if (herolist) {
    set_has_herolist();
  } else {
    clear_has_herolist();
  }
}

// -------------------------------------------------------------------

// NoticeHeroList

// repeated uint32 szdwHeroObjectID = 1;
inline int NoticeHeroList::szdwheroobjectid_size() const {
  return szdwheroobjectid_.size();
}
inline void NoticeHeroList::clear_szdwheroobjectid() {
  szdwheroobjectid_.Clear();
}
inline ::google::protobuf::uint32 NoticeHeroList::szdwheroobjectid(int index) const {
  return szdwheroobjectid_.Get(index);
}
inline void NoticeHeroList::set_szdwheroobjectid(int index, ::google::protobuf::uint32 value) {
  szdwheroobjectid_.Set(index, value);
}
inline void NoticeHeroList::add_szdwheroobjectid(::google::protobuf::uint32 value) {
  szdwheroobjectid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
NoticeHeroList::szdwheroobjectid() const {
  return szdwheroobjectid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
NoticeHeroList::mutable_szdwheroobjectid() {
  return &szdwheroobjectid_;
}

// -------------------------------------------------------------------

// Cmd_Cs_ItemUse

// required uint32 dwItemObjectID = 1;
inline bool Cmd_Cs_ItemUse::has_dwitemobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_ItemUse::set_has_dwitemobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_ItemUse::clear_has_dwitemobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_ItemUse::clear_dwitemobjectid() {
  dwitemobjectid_ = 0u;
  clear_has_dwitemobjectid();
}
inline ::google::protobuf::uint32 Cmd_Cs_ItemUse::dwitemobjectid() const {
  return dwitemobjectid_;
}
inline void Cmd_Cs_ItemUse::set_dwitemobjectid(::google::protobuf::uint32 value) {
  set_has_dwitemobjectid();
  dwitemobjectid_ = value;
}

// -------------------------------------------------------------------

// CMD_ITEM_USE_SC

// required .GSProto.FightAwardResult awardresoult = 1;
inline bool CMD_ITEM_USE_SC::has_awardresoult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_ITEM_USE_SC::set_has_awardresoult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_ITEM_USE_SC::clear_has_awardresoult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_ITEM_USE_SC::clear_awardresoult() {
  if (awardresoult_ != NULL) awardresoult_->::GSProto::FightAwardResult::Clear();
  clear_has_awardresoult();
}
inline const ::GSProto::FightAwardResult& CMD_ITEM_USE_SC::awardresoult() const {
  return awardresoult_ != NULL ? *awardresoult_ : *default_instance_->awardresoult_;
}
inline ::GSProto::FightAwardResult* CMD_ITEM_USE_SC::mutable_awardresoult() {
  set_has_awardresoult();
  if (awardresoult_ == NULL) awardresoult_ = new ::GSProto::FightAwardResult;
  return awardresoult_;
}
inline ::GSProto::FightAwardResult* CMD_ITEM_USE_SC::release_awardresoult() {
  clear_has_awardresoult();
  ::GSProto::FightAwardResult* temp = awardresoult_;
  awardresoult_ = NULL;
  return temp;
}
inline void CMD_ITEM_USE_SC::set_allocated_awardresoult(::GSProto::FightAwardResult* awardresoult) {
  delete awardresoult_;
  awardresoult_ = awardresoult;
  if (awardresoult) {
    set_has_awardresoult();
  } else {
    clear_has_awardresoult();
  }
}

// -------------------------------------------------------------------

// Cmd_Cs_QueryHeroFightSoul

// required uint32 dwHeroObjectID = 1;
inline bool Cmd_Cs_QueryHeroFightSoul::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_QueryHeroFightSoul::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_QueryHeroFightSoul::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_QueryHeroFightSoul::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 Cmd_Cs_QueryHeroFightSoul::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void Cmd_Cs_QueryHeroFightSoul::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_QueryHeroFightSoul

// required uint32 dwHeroObjectID = 1;
inline bool Cmd_Sc_QueryHeroFightSoul::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_QueryHeroFightSoul::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_QueryHeroFightSoul::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_QueryHeroFightSoul::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 Cmd_Sc_QueryHeroFightSoul::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void Cmd_Sc_QueryHeroFightSoul::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// repeated .GSProto.FightSoulItem szFightSoulList = 2;
inline int Cmd_Sc_QueryHeroFightSoul::szfightsoullist_size() const {
  return szfightsoullist_.size();
}
inline void Cmd_Sc_QueryHeroFightSoul::clear_szfightsoullist() {
  szfightsoullist_.Clear();
}
inline const ::GSProto::FightSoulItem& Cmd_Sc_QueryHeroFightSoul::szfightsoullist(int index) const {
  return szfightsoullist_.Get(index);
}
inline ::GSProto::FightSoulItem* Cmd_Sc_QueryHeroFightSoul::mutable_szfightsoullist(int index) {
  return szfightsoullist_.Mutable(index);
}
inline ::GSProto::FightSoulItem* Cmd_Sc_QueryHeroFightSoul::add_szfightsoullist() {
  return szfightsoullist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightSoulItem >&
Cmd_Sc_QueryHeroFightSoul::szfightsoullist() const {
  return szfightsoullist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightSoulItem >*
Cmd_Sc_QueryHeroFightSoul::mutable_szfightsoullist() {
  return &szfightsoullist_;
}

// -------------------------------------------------------------------

// Cmd_Cs_QueryHeroTip

// required uint32 dwHeroObjectID = 1;
inline bool Cmd_Cs_QueryHeroTip::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_QueryHeroTip::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_QueryHeroTip::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_QueryHeroTip::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 Cmd_Cs_QueryHeroTip::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void Cmd_Cs_QueryHeroTip::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_QueryHeroTip

// required uint32 dwObjejctID = 1;
inline bool Cmd_Sc_QueryHeroTip::has_dwobjejctid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_QueryHeroTip::set_has_dwobjejctid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_QueryHeroTip::clear_has_dwobjejctid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_QueryHeroTip::clear_dwobjejctid() {
  dwobjejctid_ = 0u;
  clear_has_dwobjejctid();
}
inline ::google::protobuf::uint32 Cmd_Sc_QueryHeroTip::dwobjejctid() const {
  return dwobjejctid_;
}
inline void Cmd_Sc_QueryHeroTip::set_dwobjejctid(::google::protobuf::uint32 value) {
  set_has_dwobjejctid();
  dwobjejctid_ = value;
}

// required int32 iSkillID = 2;
inline bool Cmd_Sc_QueryHeroTip::has_iskillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Sc_QueryHeroTip::set_has_iskillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Sc_QueryHeroTip::clear_has_iskillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Sc_QueryHeroTip::clear_iskillid() {
  iskillid_ = 0;
  clear_has_iskillid();
}
inline ::google::protobuf::int32 Cmd_Sc_QueryHeroTip::iskillid() const {
  return iskillid_;
}
inline void Cmd_Sc_QueryHeroTip::set_iskillid(::google::protobuf::int32 value) {
  set_has_iskillid();
  iskillid_ = value;
}

// -------------------------------------------------------------------

// GoldAnimalDetail

// required uint32 dwObjectID = 1;
inline bool GoldAnimalDetail::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoldAnimalDetail::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoldAnimalDetail::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoldAnimalDetail::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 GoldAnimalDetail::dwobjectid() const {
  return dwobjectid_;
}
inline void GoldAnimalDetail::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// repeated .GSProto.PropItem szPropList = 2;
inline int GoldAnimalDetail::szproplist_size() const {
  return szproplist_.size();
}
inline void GoldAnimalDetail::clear_szproplist() {
  szproplist_.Clear();
}
inline const ::GSProto::PropItem& GoldAnimalDetail::szproplist(int index) const {
  return szproplist_.Get(index);
}
inline ::GSProto::PropItem* GoldAnimalDetail::mutable_szproplist(int index) {
  return szproplist_.Mutable(index);
}
inline ::GSProto::PropItem* GoldAnimalDetail::add_szproplist() {
  return szproplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
GoldAnimalDetail::szproplist() const {
  return szproplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
GoldAnimalDetail::mutable_szproplist() {
  return &szproplist_;
}

// required int32 iCurExp = 3;
inline bool GoldAnimalDetail::has_icurexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GoldAnimalDetail::set_has_icurexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GoldAnimalDetail::clear_has_icurexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GoldAnimalDetail::clear_icurexp() {
  icurexp_ = 0;
  clear_has_icurexp();
}
inline ::google::protobuf::int32 GoldAnimalDetail::icurexp() const {
  return icurexp_;
}
inline void GoldAnimalDetail::set_icurexp(::google::protobuf::int32 value) {
  set_has_icurexp();
  icurexp_ = value;
}

// required int32 iNeedExp = 4;
inline bool GoldAnimalDetail::has_ineedexp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GoldAnimalDetail::set_has_ineedexp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GoldAnimalDetail::clear_has_ineedexp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GoldAnimalDetail::clear_ineedexp() {
  ineedexp_ = 0;
  clear_has_ineedexp();
}
inline ::google::protobuf::int32 GoldAnimalDetail::ineedexp() const {
  return ineedexp_;
}
inline void GoldAnimalDetail::set_ineedexp(::google::protobuf::int32 value) {
  set_has_ineedexp();
  ineedexp_ = value;
}

// optional int32 iActiveSkillID = 5;
inline bool GoldAnimalDetail::has_iactiveskillid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GoldAnimalDetail::set_has_iactiveskillid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GoldAnimalDetail::clear_has_iactiveskillid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GoldAnimalDetail::clear_iactiveskillid() {
  iactiveskillid_ = 0;
  clear_has_iactiveskillid();
}
inline ::google::protobuf::int32 GoldAnimalDetail::iactiveskillid() const {
  return iactiveskillid_;
}
inline void GoldAnimalDetail::set_iactiveskillid(::google::protobuf::int32 value) {
  set_has_iactiveskillid();
  iactiveskillid_ = value;
}

// optional int32 iStageSkillID = 6;
inline bool GoldAnimalDetail::has_istageskillid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GoldAnimalDetail::set_has_istageskillid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GoldAnimalDetail::clear_has_istageskillid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GoldAnimalDetail::clear_istageskillid() {
  istageskillid_ = 0;
  clear_has_istageskillid();
}
inline ::google::protobuf::int32 GoldAnimalDetail::istageskillid() const {
  return istageskillid_;
}
inline void GoldAnimalDetail::set_istageskillid(::google::protobuf::int32 value) {
  set_has_istageskillid();
  istageskillid_ = value;
}

// required int32 iBaseID = 7;
inline bool GoldAnimalDetail::has_ibaseid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GoldAnimalDetail::set_has_ibaseid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GoldAnimalDetail::clear_has_ibaseid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GoldAnimalDetail::clear_ibaseid() {
  ibaseid_ = 0;
  clear_has_ibaseid();
}
inline ::google::protobuf::int32 GoldAnimalDetail::ibaseid() const {
  return ibaseid_;
}
inline void GoldAnimalDetail::set_ibaseid(::google::protobuf::int32 value) {
  set_has_ibaseid();
  ibaseid_ = value;
}

// optional int32 iFightValue = 8;
inline bool GoldAnimalDetail::has_ifightvalue() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GoldAnimalDetail::set_has_ifightvalue() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GoldAnimalDetail::clear_has_ifightvalue() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GoldAnimalDetail::clear_ifightvalue() {
  ifightvalue_ = 0;
  clear_has_ifightvalue();
}
inline ::google::protobuf::int32 GoldAnimalDetail::ifightvalue() const {
  return ifightvalue_;
}
inline void GoldAnimalDetail::set_ifightvalue(::google::protobuf::int32 value) {
  set_has_ifightvalue();
  ifightvalue_ = value;
}

// required int32 iLevel = 9;
inline bool GoldAnimalDetail::has_ilevel() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GoldAnimalDetail::set_has_ilevel() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GoldAnimalDetail::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GoldAnimalDetail::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 GoldAnimalDetail::ilevel() const {
  return ilevel_;
}
inline void GoldAnimalDetail::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// optional int32 iLevelStep = 10;
inline bool GoldAnimalDetail::has_ilevelstep() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GoldAnimalDetail::set_has_ilevelstep() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GoldAnimalDetail::clear_has_ilevelstep() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GoldAnimalDetail::clear_ilevelstep() {
  ilevelstep_ = 0;
  clear_has_ilevelstep();
}
inline ::google::protobuf::int32 GoldAnimalDetail::ilevelstep() const {
  return ilevelstep_;
}
inline void GoldAnimalDetail::set_ilevelstep(::google::protobuf::int32 value) {
  set_has_ilevelstep();
  ilevelstep_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_GoldAnimalTrain

// required uint32 dwObjectID = 1;
inline bool Cmd_Sc_GoldAnimalTrain::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_GoldAnimalTrain::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_GoldAnimalTrain::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_GoldAnimalTrain::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 Cmd_Sc_GoldAnimalTrain::dwobjectid() const {
  return dwobjectid_;
}
inline void Cmd_Sc_GoldAnimalTrain::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// required bool bKnock = 2;
inline bool Cmd_Sc_GoldAnimalTrain::has_bknock() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cmd_Sc_GoldAnimalTrain::set_has_bknock() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cmd_Sc_GoldAnimalTrain::clear_has_bknock() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cmd_Sc_GoldAnimalTrain::clear_bknock() {
  bknock_ = false;
  clear_has_bknock();
}
inline bool Cmd_Sc_GoldAnimalTrain::bknock() const {
  return bknock_;
}
inline void Cmd_Sc_GoldAnimalTrain::set_bknock(bool value) {
  set_has_bknock();
  bknock_ = value;
}

// required int32 iGetExp = 3;
inline bool Cmd_Sc_GoldAnimalTrain::has_igetexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Cmd_Sc_GoldAnimalTrain::set_has_igetexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Cmd_Sc_GoldAnimalTrain::clear_has_igetexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Cmd_Sc_GoldAnimalTrain::clear_igetexp() {
  igetexp_ = 0;
  clear_has_igetexp();
}
inline ::google::protobuf::int32 Cmd_Sc_GoldAnimalTrain::igetexp() const {
  return igetexp_;
}
inline void Cmd_Sc_GoldAnimalTrain::set_igetexp(::google::protobuf::int32 value) {
  set_has_igetexp();
  igetexp_ = value;
}

// required .GSProto.GoldAnimalDetail detail = 4;
inline bool Cmd_Sc_GoldAnimalTrain::has_detail() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Cmd_Sc_GoldAnimalTrain::set_has_detail() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Cmd_Sc_GoldAnimalTrain::clear_has_detail() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Cmd_Sc_GoldAnimalTrain::clear_detail() {
  if (detail_ != NULL) detail_->::GSProto::GoldAnimalDetail::Clear();
  clear_has_detail();
}
inline const ::GSProto::GoldAnimalDetail& Cmd_Sc_GoldAnimalTrain::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::GSProto::GoldAnimalDetail* Cmd_Sc_GoldAnimalTrain::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) detail_ = new ::GSProto::GoldAnimalDetail;
  return detail_;
}
inline ::GSProto::GoldAnimalDetail* Cmd_Sc_GoldAnimalTrain::release_detail() {
  clear_has_detail();
  ::GSProto::GoldAnimalDetail* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void Cmd_Sc_GoldAnimalTrain::set_allocated_detail(::GSProto::GoldAnimalDetail* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
}

// -------------------------------------------------------------------

// Cmd_Cs_GoldAnimalActive

// required uint32 dwObjectID = 1;
inline bool Cmd_Cs_GoldAnimalActive::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_GoldAnimalActive::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_GoldAnimalActive::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_GoldAnimalActive::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 Cmd_Cs_GoldAnimalActive::dwobjectid() const {
  return dwobjectid_;
}
inline void Cmd_Cs_GoldAnimalActive::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// -------------------------------------------------------------------

// Cmd_Sc_GoldAnimalActive

// required uint32 dwObjectID = 1;
inline bool Cmd_Sc_GoldAnimalActive::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Sc_GoldAnimalActive::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Sc_GoldAnimalActive::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Sc_GoldAnimalActive::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 Cmd_Sc_GoldAnimalActive::dwobjectid() const {
  return dwobjectid_;
}
inline void Cmd_Sc_GoldAnimalActive::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// -------------------------------------------------------------------

// GoldAnimalRoleBase

// required uint32 dwObjectID = 1;
inline bool GoldAnimalRoleBase::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoldAnimalRoleBase::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoldAnimalRoleBase::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoldAnimalRoleBase::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 GoldAnimalRoleBase::dwobjectid() const {
  return dwobjectid_;
}
inline void GoldAnimalRoleBase::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// required int32 iBaseID = 2;
inline bool GoldAnimalRoleBase::has_ibaseid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GoldAnimalRoleBase::set_has_ibaseid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GoldAnimalRoleBase::clear_has_ibaseid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GoldAnimalRoleBase::clear_ibaseid() {
  ibaseid_ = 0;
  clear_has_ibaseid();
}
inline ::google::protobuf::int32 GoldAnimalRoleBase::ibaseid() const {
  return ibaseid_;
}
inline void GoldAnimalRoleBase::set_ibaseid(::google::protobuf::int32 value) {
  set_has_ibaseid();
  ibaseid_ = value;
}

// required int32 iLevel = 3;
inline bool GoldAnimalRoleBase::has_ilevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GoldAnimalRoleBase::set_has_ilevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GoldAnimalRoleBase::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GoldAnimalRoleBase::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 GoldAnimalRoleBase::ilevel() const {
  return ilevel_;
}
inline void GoldAnimalRoleBase::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// required int32 iLevelStep = 4;
inline bool GoldAnimalRoleBase::has_ilevelstep() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GoldAnimalRoleBase::set_has_ilevelstep() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GoldAnimalRoleBase::clear_has_ilevelstep() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GoldAnimalRoleBase::clear_ilevelstep() {
  ilevelstep_ = 0;
  clear_has_ilevelstep();
}
inline ::google::protobuf::int32 GoldAnimalRoleBase::ilevelstep() const {
  return ilevelstep_;
}
inline void GoldAnimalRoleBase::set_ilevelstep(::google::protobuf::int32 value) {
  set_has_ilevelstep();
  ilevelstep_ = value;
}

// -------------------------------------------------------------------

// ConsumeItem

// required int32 iItemID = 1;
inline bool ConsumeItem::has_iitemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConsumeItem::set_has_iitemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConsumeItem::clear_has_iitemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConsumeItem::clear_iitemid() {
  iitemid_ = 0;
  clear_has_iitemid();
}
inline ::google::protobuf::int32 ConsumeItem::iitemid() const {
  return iitemid_;
}
inline void ConsumeItem::set_iitemid(::google::protobuf::int32 value) {
  set_has_iitemid();
  iitemid_ = value;
}

// required int32 iNeedCount = 2;
inline bool ConsumeItem::has_ineedcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConsumeItem::set_has_ineedcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConsumeItem::clear_has_ineedcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConsumeItem::clear_ineedcount() {
  ineedcount_ = 0;
  clear_has_ineedcount();
}
inline ::google::protobuf::int32 ConsumeItem::ineedcount() const {
  return ineedcount_;
}
inline void ConsumeItem::set_ineedcount(::google::protobuf::int32 value) {
  set_has_ineedcount();
  ineedcount_ = value;
}

// -------------------------------------------------------------------

// GoldAnimalLevelStepInfo

// repeated .GSProto.PropItem szPropList = 1;
inline int GoldAnimalLevelStepInfo::szproplist_size() const {
  return szproplist_.size();
}
inline void GoldAnimalLevelStepInfo::clear_szproplist() {
  szproplist_.Clear();
}
inline const ::GSProto::PropItem& GoldAnimalLevelStepInfo::szproplist(int index) const {
  return szproplist_.Get(index);
}
inline ::GSProto::PropItem* GoldAnimalLevelStepInfo::mutable_szproplist(int index) {
  return szproplist_.Mutable(index);
}
inline ::GSProto::PropItem* GoldAnimalLevelStepInfo::add_szproplist() {
  return szproplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
GoldAnimalLevelStepInfo::szproplist() const {
  return szproplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
GoldAnimalLevelStepInfo::mutable_szproplist() {
  return &szproplist_;
}

// optional int32 iActiveSkillID = 2;
inline bool GoldAnimalLevelStepInfo::has_iactiveskillid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GoldAnimalLevelStepInfo::set_has_iactiveskillid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GoldAnimalLevelStepInfo::clear_has_iactiveskillid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GoldAnimalLevelStepInfo::clear_iactiveskillid() {
  iactiveskillid_ = 0;
  clear_has_iactiveskillid();
}
inline ::google::protobuf::int32 GoldAnimalLevelStepInfo::iactiveskillid() const {
  return iactiveskillid_;
}
inline void GoldAnimalLevelStepInfo::set_iactiveskillid(::google::protobuf::int32 value) {
  set_has_iactiveskillid();
  iactiveskillid_ = value;
}

// optional int32 iStageSkillID = 3;
inline bool GoldAnimalLevelStepInfo::has_istageskillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GoldAnimalLevelStepInfo::set_has_istageskillid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GoldAnimalLevelStepInfo::clear_has_istageskillid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GoldAnimalLevelStepInfo::clear_istageskillid() {
  istageskillid_ = 0;
  clear_has_istageskillid();
}
inline ::google::protobuf::int32 GoldAnimalLevelStepInfo::istageskillid() const {
  return istageskillid_;
}
inline void GoldAnimalLevelStepInfo::set_istageskillid(::google::protobuf::int32 value) {
  set_has_istageskillid();
  istageskillid_ = value;
}

// required int32 iLevelStep = 4;
inline bool GoldAnimalLevelStepInfo::has_ilevelstep() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GoldAnimalLevelStepInfo::set_has_ilevelstep() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GoldAnimalLevelStepInfo::clear_has_ilevelstep() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GoldAnimalLevelStepInfo::clear_ilevelstep() {
  ilevelstep_ = 0;
  clear_has_ilevelstep();
}
inline ::google::protobuf::int32 GoldAnimalLevelStepInfo::ilevelstep() const {
  return ilevelstep_;
}
inline void GoldAnimalLevelStepInfo::set_ilevelstep(::google::protobuf::int32 value) {
  set_has_ilevelstep();
  ilevelstep_ = value;
}

// required int32 iLevelLimit = 5;
inline bool GoldAnimalLevelStepInfo::has_ilevellimit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GoldAnimalLevelStepInfo::set_has_ilevellimit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GoldAnimalLevelStepInfo::clear_has_ilevellimit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GoldAnimalLevelStepInfo::clear_ilevellimit() {
  ilevellimit_ = 0;
  clear_has_ilevellimit();
}
inline ::google::protobuf::int32 GoldAnimalLevelStepInfo::ilevellimit() const {
  return ilevellimit_;
}
inline void GoldAnimalLevelStepInfo::set_ilevellimit(::google::protobuf::int32 value) {
  set_has_ilevellimit();
  ilevellimit_ = value;
}

// required int32 iFightValue = 6;
inline bool GoldAnimalLevelStepInfo::has_ifightvalue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GoldAnimalLevelStepInfo::set_has_ifightvalue() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GoldAnimalLevelStepInfo::clear_has_ifightvalue() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GoldAnimalLevelStepInfo::clear_ifightvalue() {
  ifightvalue_ = 0;
  clear_has_ifightvalue();
}
inline ::google::protobuf::int32 GoldAnimalLevelStepInfo::ifightvalue() const {
  return ifightvalue_;
}
inline void GoldAnimalLevelStepInfo::set_ifightvalue(::google::protobuf::int32 value) {
  set_has_ifightvalue();
  ifightvalue_ = value;
}

// -------------------------------------------------------------------

// Cmd_Cs_ExeLevelStepUp

// required uint32 dwObjectID = 1;
inline bool Cmd_Cs_ExeLevelStepUp::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_ExeLevelStepUp::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_ExeLevelStepUp::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_ExeLevelStepUp::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 Cmd_Cs_ExeLevelStepUp::dwobjectid() const {
  return dwobjectid_;
}
inline void Cmd_Cs_ExeLevelStepUp::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// -------------------------------------------------------------------

// CMD_HERO_LEVELSTEPUP_CS

// required uint32 dwHostHeroID = 1;
inline bool CMD_HERO_LEVELSTEPUP_CS::has_dwhostheroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_HERO_LEVELSTEPUP_CS::set_has_dwhostheroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_HERO_LEVELSTEPUP_CS::clear_has_dwhostheroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_HERO_LEVELSTEPUP_CS::clear_dwhostheroid() {
  dwhostheroid_ = 0u;
  clear_has_dwhostheroid();
}
inline ::google::protobuf::uint32 CMD_HERO_LEVELSTEPUP_CS::dwhostheroid() const {
  return dwhostheroid_;
}
inline void CMD_HERO_LEVELSTEPUP_CS::set_dwhostheroid(::google::protobuf::uint32 value) {
  set_has_dwhostheroid();
  dwhostheroid_ = value;
}

// -------------------------------------------------------------------

// Cmd_Cs_FightSoulExchange

// required int32 iExchangeID = 1;
inline bool Cmd_Cs_FightSoulExchange::has_iexchangeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cmd_Cs_FightSoulExchange::set_has_iexchangeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cmd_Cs_FightSoulExchange::clear_has_iexchangeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cmd_Cs_FightSoulExchange::clear_iexchangeid() {
  iexchangeid_ = 0;
  clear_has_iexchangeid();
}
inline ::google::protobuf::int32 Cmd_Cs_FightSoulExchange::iexchangeid() const {
  return iexchangeid_;
}
inline void Cmd_Cs_FightSoulExchange::set_iexchangeid(::google::protobuf::int32 value) {
  set_has_iexchangeid();
  iexchangeid_ = value;
}

// -------------------------------------------------------------------

// PBPkRole

// required string strAccount = 1;
inline bool PBPkRole::has_straccount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBPkRole::set_has_straccount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBPkRole::clear_has_straccount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBPkRole::clear_straccount() {
  if (straccount_ != &::google::protobuf::internal::kEmptyString) {
    straccount_->clear();
  }
  clear_has_straccount();
}
inline const ::std::string& PBPkRole::straccount() const {
  return *straccount_;
}
inline void PBPkRole::set_straccount(const ::std::string& value) {
  set_has_straccount();
  if (straccount_ == &::google::protobuf::internal::kEmptyString) {
    straccount_ = new ::std::string;
  }
  straccount_->assign(value);
}
inline void PBPkRole::set_straccount(const char* value) {
  set_has_straccount();
  if (straccount_ == &::google::protobuf::internal::kEmptyString) {
    straccount_ = new ::std::string;
  }
  straccount_->assign(value);
}
inline void PBPkRole::set_straccount(const char* value, size_t size) {
  set_has_straccount();
  if (straccount_ == &::google::protobuf::internal::kEmptyString) {
    straccount_ = new ::std::string;
  }
  straccount_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PBPkRole::mutable_straccount() {
  set_has_straccount();
  if (straccount_ == &::google::protobuf::internal::kEmptyString) {
    straccount_ = new ::std::string;
  }
  return straccount_;
}
inline ::std::string* PBPkRole::release_straccount() {
  clear_has_straccount();
  if (straccount_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = straccount_;
    straccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PBPkRole::set_allocated_straccount(::std::string* straccount) {
  if (straccount_ != &::google::protobuf::internal::kEmptyString) {
    delete straccount_;
  }
  if (straccount) {
    set_has_straccount();
    straccount_ = straccount;
  } else {
    clear_has_straccount();
    straccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iWorldID = 3;
inline bool PBPkRole::has_iworldid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBPkRole::set_has_iworldid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBPkRole::clear_has_iworldid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBPkRole::clear_iworldid() {
  iworldid_ = 0;
  clear_has_iworldid();
}
inline ::google::protobuf::int32 PBPkRole::iworldid() const {
  return iworldid_;
}
inline void PBPkRole::set_iworldid(::google::protobuf::int32 value) {
  set_has_iworldid();
  iworldid_ = value;
}

// -------------------------------------------------------------------

// MaidSelfInfo

// required int32 iLoveCount = 1;
inline bool MaidSelfInfo::has_ilovecount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MaidSelfInfo::set_has_ilovecount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MaidSelfInfo::clear_has_ilovecount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MaidSelfInfo::clear_ilovecount() {
  ilovecount_ = 0;
  clear_has_ilovecount();
}
inline ::google::protobuf::int32 MaidSelfInfo::ilovecount() const {
  return ilovecount_;
}
inline void MaidSelfInfo::set_ilovecount(::google::protobuf::int32 value) {
  set_has_ilovecount();
  ilovecount_ = value;
}

// required int32 iLoveLimitCount = 2;
inline bool MaidSelfInfo::has_ilovelimitcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MaidSelfInfo::set_has_ilovelimitcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MaidSelfInfo::clear_has_ilovelimitcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MaidSelfInfo::clear_ilovelimitcount() {
  ilovelimitcount_ = 0;
  clear_has_ilovelimitcount();
}
inline ::google::protobuf::int32 MaidSelfInfo::ilovelimitcount() const {
  return ilovelimitcount_;
}
inline void MaidSelfInfo::set_ilovelimitcount(::google::protobuf::int32 value) {
  set_has_ilovelimitcount();
  ilovelimitcount_ = value;
}

// required int32 iCDSecond = 3;
inline bool MaidSelfInfo::has_icdsecond() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MaidSelfInfo::set_has_icdsecond() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MaidSelfInfo::clear_has_icdsecond() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MaidSelfInfo::clear_icdsecond() {
  icdsecond_ = 0;
  clear_has_icdsecond();
}
inline ::google::protobuf::int32 MaidSelfInfo::icdsecond() const {
  return icdsecond_;
}
inline void MaidSelfInfo::set_icdsecond(::google::protobuf::int32 value) {
  set_has_icdsecond();
  icdsecond_ = value;
}

// optional int32 iAdvanceLoveCost = 4;
inline bool MaidSelfInfo::has_iadvancelovecost() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MaidSelfInfo::set_has_iadvancelovecost() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MaidSelfInfo::clear_has_iadvancelovecost() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MaidSelfInfo::clear_iadvancelovecost() {
  iadvancelovecost_ = 0;
  clear_has_iadvancelovecost();
}
inline ::google::protobuf::int32 MaidSelfInfo::iadvancelovecost() const {
  return iadvancelovecost_;
}
inline void MaidSelfInfo::set_iadvancelovecost(::google::protobuf::int32 value) {
  set_has_iadvancelovecost();
  iadvancelovecost_ = value;
}

// optional int32 iBaseLoveHeroExp = 5;
inline bool MaidSelfInfo::has_ibaseloveheroexp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MaidSelfInfo::set_has_ibaseloveheroexp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MaidSelfInfo::clear_has_ibaseloveheroexp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MaidSelfInfo::clear_ibaseloveheroexp() {
  ibaseloveheroexp_ = 0;
  clear_has_ibaseloveheroexp();
}
inline ::google::protobuf::int32 MaidSelfInfo::ibaseloveheroexp() const {
  return ibaseloveheroexp_;
}
inline void MaidSelfInfo::set_ibaseloveheroexp(::google::protobuf::int32 value) {
  set_has_ibaseloveheroexp();
  ibaseloveheroexp_ = value;
}

// optional int32 iAdvanceLoveHeroExp = 6;
inline bool MaidSelfInfo::has_iadvanceloveheroexp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MaidSelfInfo::set_has_iadvanceloveheroexp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MaidSelfInfo::clear_has_iadvanceloveheroexp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MaidSelfInfo::clear_iadvanceloveheroexp() {
  iadvanceloveheroexp_ = 0;
  clear_has_iadvanceloveheroexp();
}
inline ::google::protobuf::int32 MaidSelfInfo::iadvanceloveheroexp() const {
  return iadvanceloveheroexp_;
}
inline void MaidSelfInfo::set_iadvanceloveheroexp(::google::protobuf::int32 value) {
  set_has_iadvanceloveheroexp();
  iadvanceloveheroexp_ = value;
}

// -------------------------------------------------------------------

// MaidOtherInfo

// required int32 iPlayState = 1;
inline bool MaidOtherInfo::has_iplaystate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MaidOtherInfo::set_has_iplaystate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MaidOtherInfo::clear_has_iplaystate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MaidOtherInfo::clear_iplaystate() {
  iplaystate_ = 0;
  clear_has_iplaystate();
}
inline ::google::protobuf::int32 MaidOtherInfo::iplaystate() const {
  return iplaystate_;
}
inline void MaidOtherInfo::set_iplaystate(::google::protobuf::int32 value) {
  set_has_iplaystate();
  iplaystate_ = value;
}

// -------------------------------------------------------------------

// PlayerBase

// required .GSProto.PBPkRole roleKey = 1;
inline bool PlayerBase::has_rolekey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerBase::set_has_rolekey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerBase::clear_has_rolekey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerBase::clear_rolekey() {
  if (rolekey_ != NULL) rolekey_->::GSProto::PBPkRole::Clear();
  clear_has_rolekey();
}
inline const ::GSProto::PBPkRole& PlayerBase::rolekey() const {
  return rolekey_ != NULL ? *rolekey_ : *default_instance_->rolekey_;
}
inline ::GSProto::PBPkRole* PlayerBase::mutable_rolekey() {
  set_has_rolekey();
  if (rolekey_ == NULL) rolekey_ = new ::GSProto::PBPkRole;
  return rolekey_;
}
inline ::GSProto::PBPkRole* PlayerBase::release_rolekey() {
  clear_has_rolekey();
  ::GSProto::PBPkRole* temp = rolekey_;
  rolekey_ = NULL;
  return temp;
}
inline void PlayerBase::set_allocated_rolekey(::GSProto::PBPkRole* rolekey) {
  delete rolekey_;
  rolekey_ = rolekey;
  if (rolekey) {
    set_has_rolekey();
  } else {
    clear_has_rolekey();
  }
}

// required string strName = 2;
inline bool PlayerBase::has_strname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerBase::set_has_strname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerBase::clear_has_strname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerBase::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& PlayerBase::strname() const {
  return *strname_;
}
inline void PlayerBase::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void PlayerBase::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void PlayerBase::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerBase::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* PlayerBase::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PlayerBase::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iVisibleHeroID = 3;
inline bool PlayerBase::has_ivisibleheroid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerBase::set_has_ivisibleheroid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerBase::clear_has_ivisibleheroid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerBase::clear_ivisibleheroid() {
  ivisibleheroid_ = 0;
  clear_has_ivisibleheroid();
}
inline ::google::protobuf::int32 PlayerBase::ivisibleheroid() const {
  return ivisibleheroid_;
}
inline void PlayerBase::set_ivisibleheroid(::google::protobuf::int32 value) {
  set_has_ivisibleheroid();
  ivisibleheroid_ = value;
}

// required int32 iLevel = 4;
inline bool PlayerBase::has_ilevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerBase::set_has_ilevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerBase::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerBase::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 PlayerBase::ilevel() const {
  return ilevel_;
}
inline void PlayerBase::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_HEROPROGRESS_CS

// required uint32 dwHeroObjectID = 1;
inline bool CMD_QUERY_HEROPROGRESS_CS::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_HEROPROGRESS_CS::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_HEROPROGRESS_CS::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_HEROPROGRESS_CS::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 CMD_QUERY_HEROPROGRESS_CS::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void CMD_QUERY_HEROPROGRESS_CS::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_HEROPROGRESS_SC

// required uint32 dwHeroObjectID = 1;
inline bool CMD_QUERY_HEROPROGRESS_SC::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_HEROPROGRESS_SC::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_HEROPROGRESS_SC::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_HEROPROGRESS_SC::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 CMD_QUERY_HEROPROGRESS_SC::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void CMD_QUERY_HEROPROGRESS_SC::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// required int32 iCurProgress = 2;
inline bool CMD_QUERY_HEROPROGRESS_SC::has_icurprogress() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_QUERY_HEROPROGRESS_SC::set_has_icurprogress() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_QUERY_HEROPROGRESS_SC::clear_has_icurprogress() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_QUERY_HEROPROGRESS_SC::clear_icurprogress() {
  icurprogress_ = 0;
  clear_has_icurprogress();
}
inline ::google::protobuf::int32 CMD_QUERY_HEROPROGRESS_SC::icurprogress() const {
  return icurprogress_;
}
inline void CMD_QUERY_HEROPROGRESS_SC::set_icurprogress(::google::protobuf::int32 value) {
  set_has_icurprogress();
  icurprogress_ = value;
}

// required int32 iNeedProgress = 3;
inline bool CMD_QUERY_HEROPROGRESS_SC::has_ineedprogress() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_QUERY_HEROPROGRESS_SC::set_has_ineedprogress() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_QUERY_HEROPROGRESS_SC::clear_has_ineedprogress() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_QUERY_HEROPROGRESS_SC::clear_ineedprogress() {
  ineedprogress_ = 0;
  clear_has_ineedprogress();
}
inline ::google::protobuf::int32 CMD_QUERY_HEROPROGRESS_SC::ineedprogress() const {
  return ineedprogress_;
}
inline void CMD_QUERY_HEROPROGRESS_SC::set_ineedprogress(::google::protobuf::int32 value) {
  set_has_ineedprogress();
  ineedprogress_ = value;
}

// optional .GSProto.NoticeHeroList heroList = 4;
inline bool CMD_QUERY_HEROPROGRESS_SC::has_herolist() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_QUERY_HEROPROGRESS_SC::set_has_herolist() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_QUERY_HEROPROGRESS_SC::clear_has_herolist() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_QUERY_HEROPROGRESS_SC::clear_herolist() {
  if (herolist_ != NULL) herolist_->::GSProto::NoticeHeroList::Clear();
  clear_has_herolist();
}
inline const ::GSProto::NoticeHeroList& CMD_QUERY_HEROPROGRESS_SC::herolist() const {
  return herolist_ != NULL ? *herolist_ : *default_instance_->herolist_;
}
inline ::GSProto::NoticeHeroList* CMD_QUERY_HEROPROGRESS_SC::mutable_herolist() {
  set_has_herolist();
  if (herolist_ == NULL) herolist_ = new ::GSProto::NoticeHeroList;
  return herolist_;
}
inline ::GSProto::NoticeHeroList* CMD_QUERY_HEROPROGRESS_SC::release_herolist() {
  clear_has_herolist();
  ::GSProto::NoticeHeroList* temp = herolist_;
  herolist_ = NULL;
  return temp;
}
inline void CMD_QUERY_HEROPROGRESS_SC::set_allocated_herolist(::GSProto::NoticeHeroList* herolist) {
  delete herolist_;
  herolist_ = herolist;
  if (herolist) {
    set_has_herolist();
  } else {
    clear_has_herolist();
  }
}

// -------------------------------------------------------------------

// LegionListItem

// required int32 iRank = 1;
inline bool LegionListItem::has_irank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegionListItem::set_has_irank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegionListItem::clear_has_irank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegionListItem::clear_irank() {
  irank_ = 0;
  clear_has_irank();
}
inline ::google::protobuf::int32 LegionListItem::irank() const {
  return irank_;
}
inline void LegionListItem::set_irank(::google::protobuf::int32 value) {
  set_has_irank();
  irank_ = value;
}

// required string strLegionName = 2;
inline bool LegionListItem::has_strlegionname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionListItem::set_has_strlegionname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionListItem::clear_has_strlegionname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionListItem::clear_strlegionname() {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    strlegionname_->clear();
  }
  clear_has_strlegionname();
}
inline const ::std::string& LegionListItem::strlegionname() const {
  return *strlegionname_;
}
inline void LegionListItem::set_strlegionname(const ::std::string& value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void LegionListItem::set_strlegionname(const char* value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void LegionListItem::set_strlegionname(const char* value, size_t size) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionListItem::mutable_strlegionname() {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  return strlegionname_;
}
inline ::std::string* LegionListItem::release_strlegionname() {
  clear_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strlegionname_;
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionListItem::set_allocated_strlegionname(::std::string* strlegionname) {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strlegionname_;
  }
  if (strlegionname) {
    set_has_strlegionname();
    strlegionname_ = strlegionname;
  } else {
    clear_has_strlegionname();
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strLeaderName = 3;
inline bool LegionListItem::has_strleadername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionListItem::set_has_strleadername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionListItem::clear_has_strleadername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionListItem::clear_strleadername() {
  if (strleadername_ != &::google::protobuf::internal::kEmptyString) {
    strleadername_->clear();
  }
  clear_has_strleadername();
}
inline const ::std::string& LegionListItem::strleadername() const {
  return *strleadername_;
}
inline void LegionListItem::set_strleadername(const ::std::string& value) {
  set_has_strleadername();
  if (strleadername_ == &::google::protobuf::internal::kEmptyString) {
    strleadername_ = new ::std::string;
  }
  strleadername_->assign(value);
}
inline void LegionListItem::set_strleadername(const char* value) {
  set_has_strleadername();
  if (strleadername_ == &::google::protobuf::internal::kEmptyString) {
    strleadername_ = new ::std::string;
  }
  strleadername_->assign(value);
}
inline void LegionListItem::set_strleadername(const char* value, size_t size) {
  set_has_strleadername();
  if (strleadername_ == &::google::protobuf::internal::kEmptyString) {
    strleadername_ = new ::std::string;
  }
  strleadername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionListItem::mutable_strleadername() {
  set_has_strleadername();
  if (strleadername_ == &::google::protobuf::internal::kEmptyString) {
    strleadername_ = new ::std::string;
  }
  return strleadername_;
}
inline ::std::string* LegionListItem::release_strleadername() {
  clear_has_strleadername();
  if (strleadername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strleadername_;
    strleadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionListItem::set_allocated_strleadername(::std::string* strleadername) {
  if (strleadername_ != &::google::protobuf::internal::kEmptyString) {
    delete strleadername_;
  }
  if (strleadername) {
    set_has_strleadername();
    strleadername_ = strleadername;
  } else {
    clear_has_strleadername();
    strleadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 dwLegionObjectID = 4;
inline bool LegionListItem::has_dwlegionobjectid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LegionListItem::set_has_dwlegionobjectid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LegionListItem::clear_has_dwlegionobjectid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LegionListItem::clear_dwlegionobjectid() {
  dwlegionobjectid_ = 0u;
  clear_has_dwlegionobjectid();
}
inline ::google::protobuf::uint32 LegionListItem::dwlegionobjectid() const {
  return dwlegionobjectid_;
}
inline void LegionListItem::set_dwlegionobjectid(::google::protobuf::uint32 value) {
  set_has_dwlegionobjectid();
  dwlegionobjectid_ = value;
}

// required int32 iLevel = 5;
inline bool LegionListItem::has_ilevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LegionListItem::set_has_ilevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LegionListItem::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LegionListItem::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 LegionListItem::ilevel() const {
  return ilevel_;
}
inline void LegionListItem::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// required int32 iMemCount = 6;
inline bool LegionListItem::has_imemcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LegionListItem::set_has_imemcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LegionListItem::clear_has_imemcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LegionListItem::clear_imemcount() {
  imemcount_ = 0;
  clear_has_imemcount();
}
inline ::google::protobuf::int32 LegionListItem::imemcount() const {
  return imemcount_;
}
inline void LegionListItem::set_imemcount(::google::protobuf::int32 value) {
  set_has_imemcount();
  imemcount_ = value;
}

// required int32 iMemLimit = 7;
inline bool LegionListItem::has_imemlimit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LegionListItem::set_has_imemlimit() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LegionListItem::clear_has_imemlimit() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LegionListItem::clear_imemlimit() {
  imemlimit_ = 0;
  clear_has_imemlimit();
}
inline ::google::protobuf::int32 LegionListItem::imemlimit() const {
  return imemlimit_;
}
inline void LegionListItem::set_imemlimit(::google::protobuf::int32 value) {
  set_has_imemlimit();
  imemlimit_ = value;
}

// required bool bApplyed = 8;
inline bool LegionListItem::has_bapplyed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LegionListItem::set_has_bapplyed() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LegionListItem::clear_has_bapplyed() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LegionListItem::clear_bapplyed() {
  bapplyed_ = false;
  clear_has_bapplyed();
}
inline bool LegionListItem::bapplyed() const {
  return bapplyed_;
}
inline void LegionListItem::set_bapplyed(bool value) {
  set_has_bapplyed();
  bapplyed_ = value;
}

// required int32 iLegionIconId = 9;
inline bool LegionListItem::has_ilegioniconid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LegionListItem::set_has_ilegioniconid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LegionListItem::clear_has_ilegioniconid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LegionListItem::clear_ilegioniconid() {
  ilegioniconid_ = 0;
  clear_has_ilegioniconid();
}
inline ::google::protobuf::int32 LegionListItem::ilegioniconid() const {
  return ilegioniconid_;
}
inline void LegionListItem::set_ilegioniconid(::google::protobuf::int32 value) {
  set_has_ilegioniconid();
  ilegioniconid_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_LEGIONLIST_CS

// required int32 iPageIndex = 1;
inline bool CMD_QUERY_LEGIONLIST_CS::has_ipageindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_LEGIONLIST_CS::set_has_ipageindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_LEGIONLIST_CS::clear_has_ipageindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_LEGIONLIST_CS::clear_ipageindex() {
  ipageindex_ = 0;
  clear_has_ipageindex();
}
inline ::google::protobuf::int32 CMD_QUERY_LEGIONLIST_CS::ipageindex() const {
  return ipageindex_;
}
inline void CMD_QUERY_LEGIONLIST_CS::set_ipageindex(::google::protobuf::int32 value) {
  set_has_ipageindex();
  ipageindex_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_LEGIONLIST_SC

// required int32 iTotalPages = 1;
inline bool CMD_QUERY_LEGIONLIST_SC::has_itotalpages() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_LEGIONLIST_SC::set_has_itotalpages() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_LEGIONLIST_SC::clear_has_itotalpages() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_LEGIONLIST_SC::clear_itotalpages() {
  itotalpages_ = 0;
  clear_has_itotalpages();
}
inline ::google::protobuf::int32 CMD_QUERY_LEGIONLIST_SC::itotalpages() const {
  return itotalpages_;
}
inline void CMD_QUERY_LEGIONLIST_SC::set_itotalpages(::google::protobuf::int32 value) {
  set_has_itotalpages();
  itotalpages_ = value;
}

// repeated .GSProto.LegionListItem szLegionList = 2;
inline int CMD_QUERY_LEGIONLIST_SC::szlegionlist_size() const {
  return szlegionlist_.size();
}
inline void CMD_QUERY_LEGIONLIST_SC::clear_szlegionlist() {
  szlegionlist_.Clear();
}
inline const ::GSProto::LegionListItem& CMD_QUERY_LEGIONLIST_SC::szlegionlist(int index) const {
  return szlegionlist_.Get(index);
}
inline ::GSProto::LegionListItem* CMD_QUERY_LEGIONLIST_SC::mutable_szlegionlist(int index) {
  return szlegionlist_.Mutable(index);
}
inline ::GSProto::LegionListItem* CMD_QUERY_LEGIONLIST_SC::add_szlegionlist() {
  return szlegionlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionListItem >&
CMD_QUERY_LEGIONLIST_SC::szlegionlist() const {
  return szlegionlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionListItem >*
CMD_QUERY_LEGIONLIST_SC::mutable_szlegionlist() {
  return &szlegionlist_;
}

// required int32 iPageIndex = 3;
inline bool CMD_QUERY_LEGIONLIST_SC::has_ipageindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_QUERY_LEGIONLIST_SC::set_has_ipageindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_QUERY_LEGIONLIST_SC::clear_has_ipageindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_QUERY_LEGIONLIST_SC::clear_ipageindex() {
  ipageindex_ = 0;
  clear_has_ipageindex();
}
inline ::google::protobuf::int32 CMD_QUERY_LEGIONLIST_SC::ipageindex() const {
  return ipageindex_;
}
inline void CMD_QUERY_LEGIONLIST_SC::set_ipageindex(::google::protobuf::int32 value) {
  set_has_ipageindex();
  ipageindex_ = value;
}

// -------------------------------------------------------------------

// CMD_APPJOIN_LEGION_CS

// required uint32 dwLegionObjectID = 1;
inline bool CMD_APPJOIN_LEGION_CS::has_dwlegionobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_APPJOIN_LEGION_CS::set_has_dwlegionobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_APPJOIN_LEGION_CS::clear_has_dwlegionobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_APPJOIN_LEGION_CS::clear_dwlegionobjectid() {
  dwlegionobjectid_ = 0u;
  clear_has_dwlegionobjectid();
}
inline ::google::protobuf::uint32 CMD_APPJOIN_LEGION_CS::dwlegionobjectid() const {
  return dwlegionobjectid_;
}
inline void CMD_APPJOIN_LEGION_CS::set_dwlegionobjectid(::google::protobuf::uint32 value) {
  set_has_dwlegionobjectid();
  dwlegionobjectid_ = value;
}

// -------------------------------------------------------------------

// CMD_APPJOIN_LEGION_SC

// required uint32 dwLegionObjectID = 1;
inline bool CMD_APPJOIN_LEGION_SC::has_dwlegionobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_APPJOIN_LEGION_SC::set_has_dwlegionobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_APPJOIN_LEGION_SC::clear_has_dwlegionobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_APPJOIN_LEGION_SC::clear_dwlegionobjectid() {
  dwlegionobjectid_ = 0u;
  clear_has_dwlegionobjectid();
}
inline ::google::protobuf::uint32 CMD_APPJOIN_LEGION_SC::dwlegionobjectid() const {
  return dwlegionobjectid_;
}
inline void CMD_APPJOIN_LEGION_SC::set_dwlegionobjectid(::google::protobuf::uint32 value) {
  set_has_dwlegionobjectid();
  dwlegionobjectid_ = value;
}

// -------------------------------------------------------------------

// CMD_CREATE_LEGION_CS

// required string strLegionName = 1;
inline bool CMD_CREATE_LEGION_CS::has_strlegionname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_CREATE_LEGION_CS::set_has_strlegionname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_CREATE_LEGION_CS::clear_has_strlegionname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_CREATE_LEGION_CS::clear_strlegionname() {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    strlegionname_->clear();
  }
  clear_has_strlegionname();
}
inline const ::std::string& CMD_CREATE_LEGION_CS::strlegionname() const {
  return *strlegionname_;
}
inline void CMD_CREATE_LEGION_CS::set_strlegionname(const ::std::string& value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void CMD_CREATE_LEGION_CS::set_strlegionname(const char* value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void CMD_CREATE_LEGION_CS::set_strlegionname(const char* value, size_t size) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_CREATE_LEGION_CS::mutable_strlegionname() {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  return strlegionname_;
}
inline ::std::string* CMD_CREATE_LEGION_CS::release_strlegionname() {
  clear_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strlegionname_;
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_CREATE_LEGION_CS::set_allocated_strlegionname(::std::string* strlegionname) {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strlegionname_;
  }
  if (strlegionname) {
    set_has_strlegionname();
    strlegionname_ = strlegionname;
  } else {
    clear_has_strlegionname();
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iLegionIconId = 2;
inline bool CMD_CREATE_LEGION_CS::has_ilegioniconid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_CREATE_LEGION_CS::set_has_ilegioniconid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_CREATE_LEGION_CS::clear_has_ilegioniconid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_CREATE_LEGION_CS::clear_ilegioniconid() {
  ilegioniconid_ = 0;
  clear_has_ilegioniconid();
}
inline ::google::protobuf::int32 CMD_CREATE_LEGION_CS::ilegioniconid() const {
  return ilegioniconid_;
}
inline void CMD_CREATE_LEGION_CS::set_ilegioniconid(::google::protobuf::int32 value) {
  set_has_ilegioniconid();
  ilegioniconid_ = value;
}

// -------------------------------------------------------------------

// LegionBaseInfo

// required uint32 dwLegionObjectID = 1;
inline bool LegionBaseInfo::has_dwlegionobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegionBaseInfo::set_has_dwlegionobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegionBaseInfo::clear_has_dwlegionobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegionBaseInfo::clear_dwlegionobjectid() {
  dwlegionobjectid_ = 0u;
  clear_has_dwlegionobjectid();
}
inline ::google::protobuf::uint32 LegionBaseInfo::dwlegionobjectid() const {
  return dwlegionobjectid_;
}
inline void LegionBaseInfo::set_dwlegionobjectid(::google::protobuf::uint32 value) {
  set_has_dwlegionobjectid();
  dwlegionobjectid_ = value;
}

// required string strLegionName = 2;
inline bool LegionBaseInfo::has_strlegionname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionBaseInfo::set_has_strlegionname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionBaseInfo::clear_has_strlegionname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionBaseInfo::clear_strlegionname() {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    strlegionname_->clear();
  }
  clear_has_strlegionname();
}
inline const ::std::string& LegionBaseInfo::strlegionname() const {
  return *strlegionname_;
}
inline void LegionBaseInfo::set_strlegionname(const ::std::string& value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void LegionBaseInfo::set_strlegionname(const char* value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void LegionBaseInfo::set_strlegionname(const char* value, size_t size) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionBaseInfo::mutable_strlegionname() {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  return strlegionname_;
}
inline ::std::string* LegionBaseInfo::release_strlegionname() {
  clear_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strlegionname_;
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionBaseInfo::set_allocated_strlegionname(::std::string* strlegionname) {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strlegionname_;
  }
  if (strlegionname) {
    set_has_strlegionname();
    strlegionname_ = strlegionname;
  } else {
    clear_has_strlegionname();
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strLeaderName = 3;
inline bool LegionBaseInfo::has_strleadername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionBaseInfo::set_has_strleadername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionBaseInfo::clear_has_strleadername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionBaseInfo::clear_strleadername() {
  if (strleadername_ != &::google::protobuf::internal::kEmptyString) {
    strleadername_->clear();
  }
  clear_has_strleadername();
}
inline const ::std::string& LegionBaseInfo::strleadername() const {
  return *strleadername_;
}
inline void LegionBaseInfo::set_strleadername(const ::std::string& value) {
  set_has_strleadername();
  if (strleadername_ == &::google::protobuf::internal::kEmptyString) {
    strleadername_ = new ::std::string;
  }
  strleadername_->assign(value);
}
inline void LegionBaseInfo::set_strleadername(const char* value) {
  set_has_strleadername();
  if (strleadername_ == &::google::protobuf::internal::kEmptyString) {
    strleadername_ = new ::std::string;
  }
  strleadername_->assign(value);
}
inline void LegionBaseInfo::set_strleadername(const char* value, size_t size) {
  set_has_strleadername();
  if (strleadername_ == &::google::protobuf::internal::kEmptyString) {
    strleadername_ = new ::std::string;
  }
  strleadername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionBaseInfo::mutable_strleadername() {
  set_has_strleadername();
  if (strleadername_ == &::google::protobuf::internal::kEmptyString) {
    strleadername_ = new ::std::string;
  }
  return strleadername_;
}
inline ::std::string* LegionBaseInfo::release_strleadername() {
  clear_has_strleadername();
  if (strleadername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strleadername_;
    strleadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionBaseInfo::set_allocated_strleadername(::std::string* strleadername) {
  if (strleadername_ != &::google::protobuf::internal::kEmptyString) {
    delete strleadername_;
  }
  if (strleadername) {
    set_has_strleadername();
    strleadername_ = strleadername;
  } else {
    clear_has_strleadername();
    strleadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iRank = 4;
inline bool LegionBaseInfo::has_irank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LegionBaseInfo::set_has_irank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LegionBaseInfo::clear_has_irank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LegionBaseInfo::clear_irank() {
  irank_ = 0;
  clear_has_irank();
}
inline ::google::protobuf::int32 LegionBaseInfo::irank() const {
  return irank_;
}
inline void LegionBaseInfo::set_irank(::google::protobuf::int32 value) {
  set_has_irank();
  irank_ = value;
}

// required int32 iMemCount = 5;
inline bool LegionBaseInfo::has_imemcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LegionBaseInfo::set_has_imemcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LegionBaseInfo::clear_has_imemcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LegionBaseInfo::clear_imemcount() {
  imemcount_ = 0;
  clear_has_imemcount();
}
inline ::google::protobuf::int32 LegionBaseInfo::imemcount() const {
  return imemcount_;
}
inline void LegionBaseInfo::set_imemcount(::google::protobuf::int32 value) {
  set_has_imemcount();
  imemcount_ = value;
}

// required int32 iMemLimit = 6;
inline bool LegionBaseInfo::has_imemlimit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LegionBaseInfo::set_has_imemlimit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LegionBaseInfo::clear_has_imemlimit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LegionBaseInfo::clear_imemlimit() {
  imemlimit_ = 0;
  clear_has_imemlimit();
}
inline ::google::protobuf::int32 LegionBaseInfo::imemlimit() const {
  return imemlimit_;
}
inline void LegionBaseInfo::set_imemlimit(::google::protobuf::int32 value) {
  set_has_imemlimit();
  imemlimit_ = value;
}

// required int32 iLevel = 7;
inline bool LegionBaseInfo::has_ilevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LegionBaseInfo::set_has_ilevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LegionBaseInfo::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LegionBaseInfo::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 LegionBaseInfo::ilevel() const {
  return ilevel_;
}
inline void LegionBaseInfo::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// required int32 iExp = 8;
inline bool LegionBaseInfo::has_iexp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LegionBaseInfo::set_has_iexp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LegionBaseInfo::clear_has_iexp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LegionBaseInfo::clear_iexp() {
  iexp_ = 0;
  clear_has_iexp();
}
inline ::google::protobuf::int32 LegionBaseInfo::iexp() const {
  return iexp_;
}
inline void LegionBaseInfo::set_iexp(::google::protobuf::int32 value) {
  set_has_iexp();
  iexp_ = value;
}

// required int32 iLevelUpExp = 9;
inline bool LegionBaseInfo::has_ilevelupexp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LegionBaseInfo::set_has_ilevelupexp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LegionBaseInfo::clear_has_ilevelupexp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LegionBaseInfo::clear_ilevelupexp() {
  ilevelupexp_ = 0;
  clear_has_ilevelupexp();
}
inline ::google::protobuf::int32 LegionBaseInfo::ilevelupexp() const {
  return ilevelupexp_;
}
inline void LegionBaseInfo::set_ilevelupexp(::google::protobuf::int32 value) {
  set_has_ilevelupexp();
  ilevelupexp_ = value;
}

// required string strBroadcat = 10;
inline bool LegionBaseInfo::has_strbroadcat() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LegionBaseInfo::set_has_strbroadcat() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LegionBaseInfo::clear_has_strbroadcat() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LegionBaseInfo::clear_strbroadcat() {
  if (strbroadcat_ != &::google::protobuf::internal::kEmptyString) {
    strbroadcat_->clear();
  }
  clear_has_strbroadcat();
}
inline const ::std::string& LegionBaseInfo::strbroadcat() const {
  return *strbroadcat_;
}
inline void LegionBaseInfo::set_strbroadcat(const ::std::string& value) {
  set_has_strbroadcat();
  if (strbroadcat_ == &::google::protobuf::internal::kEmptyString) {
    strbroadcat_ = new ::std::string;
  }
  strbroadcat_->assign(value);
}
inline void LegionBaseInfo::set_strbroadcat(const char* value) {
  set_has_strbroadcat();
  if (strbroadcat_ == &::google::protobuf::internal::kEmptyString) {
    strbroadcat_ = new ::std::string;
  }
  strbroadcat_->assign(value);
}
inline void LegionBaseInfo::set_strbroadcat(const char* value, size_t size) {
  set_has_strbroadcat();
  if (strbroadcat_ == &::google::protobuf::internal::kEmptyString) {
    strbroadcat_ = new ::std::string;
  }
  strbroadcat_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionBaseInfo::mutable_strbroadcat() {
  set_has_strbroadcat();
  if (strbroadcat_ == &::google::protobuf::internal::kEmptyString) {
    strbroadcat_ = new ::std::string;
  }
  return strbroadcat_;
}
inline ::std::string* LegionBaseInfo::release_strbroadcat() {
  clear_has_strbroadcat();
  if (strbroadcat_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strbroadcat_;
    strbroadcat_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionBaseInfo::set_allocated_strbroadcat(::std::string* strbroadcat) {
  if (strbroadcat_ != &::google::protobuf::internal::kEmptyString) {
    delete strbroadcat_;
  }
  if (strbroadcat) {
    set_has_strbroadcat();
    strbroadcat_ = strbroadcat;
  } else {
    clear_has_strbroadcat();
    strbroadcat_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iOccupation = 11;
inline bool LegionBaseInfo::has_ioccupation() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LegionBaseInfo::set_has_ioccupation() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LegionBaseInfo::clear_has_ioccupation() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LegionBaseInfo::clear_ioccupation() {
  ioccupation_ = 0;
  clear_has_ioccupation();
}
inline ::google::protobuf::int32 LegionBaseInfo::ioccupation() const {
  return ioccupation_;
}
inline void LegionBaseInfo::set_ioccupation(::google::protobuf::int32 value) {
  set_has_ioccupation();
  ioccupation_ = value;
}

// required int32 iBlessed = 12;
inline bool LegionBaseInfo::has_iblessed() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void LegionBaseInfo::set_has_iblessed() {
  _has_bits_[0] |= 0x00000800u;
}
inline void LegionBaseInfo::clear_has_iblessed() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void LegionBaseInfo::clear_iblessed() {
  iblessed_ = 0;
  clear_has_iblessed();
}
inline ::google::protobuf::int32 LegionBaseInfo::iblessed() const {
  return iblessed_;
}
inline void LegionBaseInfo::set_iblessed(::google::protobuf::int32 value) {
  set_has_iblessed();
  iblessed_ = value;
}

// optional int32 iContribute = 13;
inline bool LegionBaseInfo::has_icontribute() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void LegionBaseInfo::set_has_icontribute() {
  _has_bits_[0] |= 0x00001000u;
}
inline void LegionBaseInfo::clear_has_icontribute() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void LegionBaseInfo::clear_icontribute() {
  icontribute_ = 0;
  clear_has_icontribute();
}
inline ::google::protobuf::int32 LegionBaseInfo::icontribute() const {
  return icontribute_;
}
inline void LegionBaseInfo::set_icontribute(::google::protobuf::int32 value) {
  set_has_icontribute();
  icontribute_ = value;
}

// required int32 iLegionIconId = 14;
inline bool LegionBaseInfo::has_ilegioniconid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void LegionBaseInfo::set_has_ilegioniconid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void LegionBaseInfo::clear_has_ilegioniconid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void LegionBaseInfo::clear_ilegioniconid() {
  ilegioniconid_ = 0;
  clear_has_ilegioniconid();
}
inline ::google::protobuf::int32 LegionBaseInfo::ilegioniconid() const {
  return ilegioniconid_;
}
inline void LegionBaseInfo::set_ilegioniconid(::google::protobuf::int32 value) {
  set_has_ilegioniconid();
  ilegioniconid_ = value;
}

// required int32 iTotalContribute = 15;
inline bool LegionBaseInfo::has_itotalcontribute() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void LegionBaseInfo::set_has_itotalcontribute() {
  _has_bits_[0] |= 0x00004000u;
}
inline void LegionBaseInfo::clear_has_itotalcontribute() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void LegionBaseInfo::clear_itotalcontribute() {
  itotalcontribute_ = 0;
  clear_has_itotalcontribute();
}
inline ::google::protobuf::int32 LegionBaseInfo::itotalcontribute() const {
  return itotalcontribute_;
}
inline void LegionBaseInfo::set_itotalcontribute(::google::protobuf::int32 value) {
  set_has_itotalcontribute();
  itotalcontribute_ = value;
}

// required int32 iLegionMoney = 16;
inline bool LegionBaseInfo::has_ilegionmoney() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void LegionBaseInfo::set_has_ilegionmoney() {
  _has_bits_[0] |= 0x00008000u;
}
inline void LegionBaseInfo::clear_has_ilegionmoney() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void LegionBaseInfo::clear_ilegionmoney() {
  ilegionmoney_ = 0;
  clear_has_ilegionmoney();
}
inline ::google::protobuf::int32 LegionBaseInfo::ilegionmoney() const {
  return ilegionmoney_;
}
inline void LegionBaseInfo::set_ilegionmoney(::google::protobuf::int32 value) {
  set_has_ilegionmoney();
  ilegionmoney_ = value;
}

// optional string strAnnouce = 17;
inline bool LegionBaseInfo::has_strannouce() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void LegionBaseInfo::set_has_strannouce() {
  _has_bits_[0] |= 0x00010000u;
}
inline void LegionBaseInfo::clear_has_strannouce() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void LegionBaseInfo::clear_strannouce() {
  if (strannouce_ != &::google::protobuf::internal::kEmptyString) {
    strannouce_->clear();
  }
  clear_has_strannouce();
}
inline const ::std::string& LegionBaseInfo::strannouce() const {
  return *strannouce_;
}
inline void LegionBaseInfo::set_strannouce(const ::std::string& value) {
  set_has_strannouce();
  if (strannouce_ == &::google::protobuf::internal::kEmptyString) {
    strannouce_ = new ::std::string;
  }
  strannouce_->assign(value);
}
inline void LegionBaseInfo::set_strannouce(const char* value) {
  set_has_strannouce();
  if (strannouce_ == &::google::protobuf::internal::kEmptyString) {
    strannouce_ = new ::std::string;
  }
  strannouce_->assign(value);
}
inline void LegionBaseInfo::set_strannouce(const char* value, size_t size) {
  set_has_strannouce();
  if (strannouce_ == &::google::protobuf::internal::kEmptyString) {
    strannouce_ = new ::std::string;
  }
  strannouce_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionBaseInfo::mutable_strannouce() {
  set_has_strannouce();
  if (strannouce_ == &::google::protobuf::internal::kEmptyString) {
    strannouce_ = new ::std::string;
  }
  return strannouce_;
}
inline ::std::string* LegionBaseInfo::release_strannouce() {
  clear_has_strannouce();
  if (strannouce_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strannouce_;
    strannouce_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionBaseInfo::set_allocated_strannouce(::std::string* strannouce) {
  if (strannouce_ != &::google::protobuf::internal::kEmptyString) {
    delete strannouce_;
  }
  if (strannouce) {
    set_has_strannouce();
    strannouce_ = strannouce;
  } else {
    clear_has_strannouce();
    strannouce_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_QUERY_LEGION_BASE_SC

// required .GSProto.LegionBaseInfo baseInfo = 1;
inline bool CMD_QUERY_LEGION_BASE_SC::has_baseinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_LEGION_BASE_SC::set_has_baseinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_LEGION_BASE_SC::clear_has_baseinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_LEGION_BASE_SC::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::GSProto::LegionBaseInfo::Clear();
  clear_has_baseinfo();
}
inline const ::GSProto::LegionBaseInfo& CMD_QUERY_LEGION_BASE_SC::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::GSProto::LegionBaseInfo* CMD_QUERY_LEGION_BASE_SC::mutable_baseinfo() {
  set_has_baseinfo();
  if (baseinfo_ == NULL) baseinfo_ = new ::GSProto::LegionBaseInfo;
  return baseinfo_;
}
inline ::GSProto::LegionBaseInfo* CMD_QUERY_LEGION_BASE_SC::release_baseinfo() {
  clear_has_baseinfo();
  ::GSProto::LegionBaseInfo* temp = baseinfo_;
  baseinfo_ = NULL;
  return temp;
}
inline void CMD_QUERY_LEGION_BASE_SC::set_allocated_baseinfo(::GSProto::LegionBaseInfo* baseinfo) {
  delete baseinfo_;
  baseinfo_ = baseinfo;
  if (baseinfo) {
    set_has_baseinfo();
  } else {
    clear_has_baseinfo();
  }
}

// -------------------------------------------------------------------

// LegionMember

// required string strMemName = 1;
inline bool LegionMember::has_strmemname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegionMember::set_has_strmemname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegionMember::clear_has_strmemname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegionMember::clear_strmemname() {
  if (strmemname_ != &::google::protobuf::internal::kEmptyString) {
    strmemname_->clear();
  }
  clear_has_strmemname();
}
inline const ::std::string& LegionMember::strmemname() const {
  return *strmemname_;
}
inline void LegionMember::set_strmemname(const ::std::string& value) {
  set_has_strmemname();
  if (strmemname_ == &::google::protobuf::internal::kEmptyString) {
    strmemname_ = new ::std::string;
  }
  strmemname_->assign(value);
}
inline void LegionMember::set_strmemname(const char* value) {
  set_has_strmemname();
  if (strmemname_ == &::google::protobuf::internal::kEmptyString) {
    strmemname_ = new ::std::string;
  }
  strmemname_->assign(value);
}
inline void LegionMember::set_strmemname(const char* value, size_t size) {
  set_has_strmemname();
  if (strmemname_ == &::google::protobuf::internal::kEmptyString) {
    strmemname_ = new ::std::string;
  }
  strmemname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionMember::mutable_strmemname() {
  set_has_strmemname();
  if (strmemname_ == &::google::protobuf::internal::kEmptyString) {
    strmemname_ = new ::std::string;
  }
  return strmemname_;
}
inline ::std::string* LegionMember::release_strmemname() {
  clear_has_strmemname();
  if (strmemname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmemname_;
    strmemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionMember::set_allocated_strmemname(::std::string* strmemname) {
  if (strmemname_ != &::google::protobuf::internal::kEmptyString) {
    delete strmemname_;
  }
  if (strmemname) {
    set_has_strmemname();
    strmemname_ = strmemname;
  } else {
    clear_has_strmemname();
    strmemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iLevel = 2;
inline bool LegionMember::has_ilevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionMember::set_has_ilevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionMember::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionMember::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 LegionMember::ilevel() const {
  return ilevel_;
}
inline void LegionMember::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// required int32 iOccupation = 3;
inline bool LegionMember::has_ioccupation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionMember::set_has_ioccupation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionMember::clear_has_ioccupation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionMember::clear_ioccupation() {
  ioccupation_ = 0;
  clear_has_ioccupation();
}
inline ::google::protobuf::int32 LegionMember::ioccupation() const {
  return ioccupation_;
}
inline void LegionMember::set_ioccupation(::google::protobuf::int32 value) {
  set_has_ioccupation();
  ioccupation_ = value;
}

// required int32 iArenaRank = 4;
inline bool LegionMember::has_iarenarank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LegionMember::set_has_iarenarank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LegionMember::clear_has_iarenarank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LegionMember::clear_iarenarank() {
  iarenarank_ = 0;
  clear_has_iarenarank();
}
inline ::google::protobuf::int32 LegionMember::iarenarank() const {
  return iarenarank_;
}
inline void LegionMember::set_iarenarank(::google::protobuf::int32 value) {
  set_has_iarenarank();
  iarenarank_ = value;
}

// required int32 iDayContribute = 5;
inline bool LegionMember::has_idaycontribute() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LegionMember::set_has_idaycontribute() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LegionMember::clear_has_idaycontribute() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LegionMember::clear_idaycontribute() {
  idaycontribute_ = 0;
  clear_has_idaycontribute();
}
inline ::google::protobuf::int32 LegionMember::idaycontribute() const {
  return idaycontribute_;
}
inline void LegionMember::set_idaycontribute(::google::protobuf::int32 value) {
  set_has_idaycontribute();
  idaycontribute_ = value;
}

// required int32 iTotalContribute = 6;
inline bool LegionMember::has_itotalcontribute() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LegionMember::set_has_itotalcontribute() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LegionMember::clear_has_itotalcontribute() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LegionMember::clear_itotalcontribute() {
  itotalcontribute_ = 0;
  clear_has_itotalcontribute();
}
inline ::google::protobuf::int32 LegionMember::itotalcontribute() const {
  return itotalcontribute_;
}
inline void LegionMember::set_itotalcontribute(::google::protobuf::int32 value) {
  set_has_itotalcontribute();
  itotalcontribute_ = value;
}

// required int32 iContributeRank = 7;
inline bool LegionMember::has_icontributerank() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LegionMember::set_has_icontributerank() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LegionMember::clear_has_icontributerank() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LegionMember::clear_icontributerank() {
  icontributerank_ = 0;
  clear_has_icontributerank();
}
inline ::google::protobuf::int32 LegionMember::icontributerank() const {
  return icontributerank_;
}
inline void LegionMember::set_icontributerank(::google::protobuf::int32 value) {
  set_has_icontributerank();
  icontributerank_ = value;
}

// required bool bActorIsOnLine = 8;
inline bool LegionMember::has_bactorisonline() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LegionMember::set_has_bactorisonline() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LegionMember::clear_has_bactorisonline() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LegionMember::clear_bactorisonline() {
  bactorisonline_ = false;
  clear_has_bactorisonline();
}
inline bool LegionMember::bactorisonline() const {
  return bactorisonline_;
}
inline void LegionMember::set_bactorisonline(bool value) {
  set_has_bactorisonline();
  bactorisonline_ = value;
}

// optional uint32 outLineSecond = 9;
inline bool LegionMember::has_outlinesecond() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LegionMember::set_has_outlinesecond() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LegionMember::clear_has_outlinesecond() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LegionMember::clear_outlinesecond() {
  outlinesecond_ = 0u;
  clear_has_outlinesecond();
}
inline ::google::protobuf::uint32 LegionMember::outlinesecond() const {
  return outlinesecond_;
}
inline void LegionMember::set_outlinesecond(::google::protobuf::uint32 value) {
  set_has_outlinesecond();
  outlinesecond_ = value;
}

// required bool bIsCanWorship = 10;
inline bool LegionMember::has_biscanworship() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LegionMember::set_has_biscanworship() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LegionMember::clear_has_biscanworship() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LegionMember::clear_biscanworship() {
  biscanworship_ = false;
  clear_has_biscanworship();
}
inline bool LegionMember::biscanworship() const {
  return biscanworship_;
}
inline void LegionMember::set_biscanworship(bool value) {
  set_has_biscanworship();
  biscanworship_ = value;
}

// required int32 iThreeDayContribute = 11;
inline bool LegionMember::has_ithreedaycontribute() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LegionMember::set_has_ithreedaycontribute() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LegionMember::clear_has_ithreedaycontribute() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LegionMember::clear_ithreedaycontribute() {
  ithreedaycontribute_ = 0;
  clear_has_ithreedaycontribute();
}
inline ::google::protobuf::int32 LegionMember::ithreedaycontribute() const {
  return ithreedaycontribute_;
}
inline void LegionMember::set_ithreedaycontribute(::google::protobuf::int32 value) {
  set_has_ithreedaycontribute();
  ithreedaycontribute_ = value;
}

// required int32 iHeadIcon = 12;
inline bool LegionMember::has_iheadicon() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void LegionMember::set_has_iheadicon() {
  _has_bits_[0] |= 0x00000800u;
}
inline void LegionMember::clear_has_iheadicon() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void LegionMember::clear_iheadicon() {
  iheadicon_ = 0;
  clear_has_iheadicon();
}
inline ::google::protobuf::int32 LegionMember::iheadicon() const {
  return iheadicon_;
}
inline void LegionMember::set_iheadicon(::google::protobuf::int32 value) {
  set_has_iheadicon();
  iheadicon_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_LEGION_MEMBERLIST_SC

// repeated .GSProto.LegionMember szMemberList = 2;
inline int CMD_QUERY_LEGION_MEMBERLIST_SC::szmemberlist_size() const {
  return szmemberlist_.size();
}
inline void CMD_QUERY_LEGION_MEMBERLIST_SC::clear_szmemberlist() {
  szmemberlist_.Clear();
}
inline const ::GSProto::LegionMember& CMD_QUERY_LEGION_MEMBERLIST_SC::szmemberlist(int index) const {
  return szmemberlist_.Get(index);
}
inline ::GSProto::LegionMember* CMD_QUERY_LEGION_MEMBERLIST_SC::mutable_szmemberlist(int index) {
  return szmemberlist_.Mutable(index);
}
inline ::GSProto::LegionMember* CMD_QUERY_LEGION_MEMBERLIST_SC::add_szmemberlist() {
  return szmemberlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionMember >&
CMD_QUERY_LEGION_MEMBERLIST_SC::szmemberlist() const {
  return szmemberlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionMember >*
CMD_QUERY_LEGION_MEMBERLIST_SC::mutable_szmemberlist() {
  return &szmemberlist_;
}

// -------------------------------------------------------------------

// LegionAppItem

// required string strAppName = 1;
inline bool LegionAppItem::has_strappname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegionAppItem::set_has_strappname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegionAppItem::clear_has_strappname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegionAppItem::clear_strappname() {
  if (strappname_ != &::google::protobuf::internal::kEmptyString) {
    strappname_->clear();
  }
  clear_has_strappname();
}
inline const ::std::string& LegionAppItem::strappname() const {
  return *strappname_;
}
inline void LegionAppItem::set_strappname(const ::std::string& value) {
  set_has_strappname();
  if (strappname_ == &::google::protobuf::internal::kEmptyString) {
    strappname_ = new ::std::string;
  }
  strappname_->assign(value);
}
inline void LegionAppItem::set_strappname(const char* value) {
  set_has_strappname();
  if (strappname_ == &::google::protobuf::internal::kEmptyString) {
    strappname_ = new ::std::string;
  }
  strappname_->assign(value);
}
inline void LegionAppItem::set_strappname(const char* value, size_t size) {
  set_has_strappname();
  if (strappname_ == &::google::protobuf::internal::kEmptyString) {
    strappname_ = new ::std::string;
  }
  strappname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionAppItem::mutable_strappname() {
  set_has_strappname();
  if (strappname_ == &::google::protobuf::internal::kEmptyString) {
    strappname_ = new ::std::string;
  }
  return strappname_;
}
inline ::std::string* LegionAppItem::release_strappname() {
  clear_has_strappname();
  if (strappname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strappname_;
    strappname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionAppItem::set_allocated_strappname(::std::string* strappname) {
  if (strappname_ != &::google::protobuf::internal::kEmptyString) {
    delete strappname_;
  }
  if (strappname) {
    set_has_strappname();
    strappname_ = strappname;
  } else {
    clear_has_strappname();
    strappname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iLevel = 2;
inline bool LegionAppItem::has_ilevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionAppItem::set_has_ilevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionAppItem::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionAppItem::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 LegionAppItem::ilevel() const {
  return ilevel_;
}
inline void LegionAppItem::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// required int32 iArenaRank = 3;
inline bool LegionAppItem::has_iarenarank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionAppItem::set_has_iarenarank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionAppItem::clear_has_iarenarank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionAppItem::clear_iarenarank() {
  iarenarank_ = 0;
  clear_has_iarenarank();
}
inline ::google::protobuf::int32 LegionAppItem::iarenarank() const {
  return iarenarank_;
}
inline void LegionAppItem::set_iarenarank(::google::protobuf::int32 value) {
  set_has_iarenarank();
  iarenarank_ = value;
}

// required int32 iActorHeadIcon = 4;
inline bool LegionAppItem::has_iactorheadicon() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LegionAppItem::set_has_iactorheadicon() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LegionAppItem::clear_has_iactorheadicon() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LegionAppItem::clear_iactorheadicon() {
  iactorheadicon_ = 0;
  clear_has_iactorheadicon();
}
inline ::google::protobuf::int32 LegionAppItem::iactorheadicon() const {
  return iactorheadicon_;
}
inline void LegionAppItem::set_iactorheadicon(::google::protobuf::int32 value) {
  set_has_iactorheadicon();
  iactorheadicon_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_LEGION_APP_SC

// repeated .GSProto.LegionAppItem szAppList = 2;
inline int CMD_QUERY_LEGION_APP_SC::szapplist_size() const {
  return szapplist_.size();
}
inline void CMD_QUERY_LEGION_APP_SC::clear_szapplist() {
  szapplist_.Clear();
}
inline const ::GSProto::LegionAppItem& CMD_QUERY_LEGION_APP_SC::szapplist(int index) const {
  return szapplist_.Get(index);
}
inline ::GSProto::LegionAppItem* CMD_QUERY_LEGION_APP_SC::mutable_szapplist(int index) {
  return szapplist_.Mutable(index);
}
inline ::GSProto::LegionAppItem* CMD_QUERY_LEGION_APP_SC::add_szapplist() {
  return szapplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionAppItem >&
CMD_QUERY_LEGION_APP_SC::szapplist() const {
  return szapplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionAppItem >*
CMD_QUERY_LEGION_APP_SC::mutable_szapplist() {
  return &szapplist_;
}

// -------------------------------------------------------------------

// CMD_MODIFY_LEGION_SETTING_CS

// required string strAnnouce = 1;
inline bool CMD_MODIFY_LEGION_SETTING_CS::has_strannouce() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_MODIFY_LEGION_SETTING_CS::set_has_strannouce() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_MODIFY_LEGION_SETTING_CS::clear_has_strannouce() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_MODIFY_LEGION_SETTING_CS::clear_strannouce() {
  if (strannouce_ != &::google::protobuf::internal::kEmptyString) {
    strannouce_->clear();
  }
  clear_has_strannouce();
}
inline const ::std::string& CMD_MODIFY_LEGION_SETTING_CS::strannouce() const {
  return *strannouce_;
}
inline void CMD_MODIFY_LEGION_SETTING_CS::set_strannouce(const ::std::string& value) {
  set_has_strannouce();
  if (strannouce_ == &::google::protobuf::internal::kEmptyString) {
    strannouce_ = new ::std::string;
  }
  strannouce_->assign(value);
}
inline void CMD_MODIFY_LEGION_SETTING_CS::set_strannouce(const char* value) {
  set_has_strannouce();
  if (strannouce_ == &::google::protobuf::internal::kEmptyString) {
    strannouce_ = new ::std::string;
  }
  strannouce_->assign(value);
}
inline void CMD_MODIFY_LEGION_SETTING_CS::set_strannouce(const char* value, size_t size) {
  set_has_strannouce();
  if (strannouce_ == &::google::protobuf::internal::kEmptyString) {
    strannouce_ = new ::std::string;
  }
  strannouce_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_MODIFY_LEGION_SETTING_CS::mutable_strannouce() {
  set_has_strannouce();
  if (strannouce_ == &::google::protobuf::internal::kEmptyString) {
    strannouce_ = new ::std::string;
  }
  return strannouce_;
}
inline ::std::string* CMD_MODIFY_LEGION_SETTING_CS::release_strannouce() {
  clear_has_strannouce();
  if (strannouce_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strannouce_;
    strannouce_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_MODIFY_LEGION_SETTING_CS::set_allocated_strannouce(::std::string* strannouce) {
  if (strannouce_ != &::google::protobuf::internal::kEmptyString) {
    delete strannouce_;
  }
  if (strannouce) {
    set_has_strannouce();
    strannouce_ = strannouce;
  } else {
    clear_has_strannouce();
    strannouce_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strBroadcast = 2;
inline bool CMD_MODIFY_LEGION_SETTING_CS::has_strbroadcast() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_MODIFY_LEGION_SETTING_CS::set_has_strbroadcast() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_MODIFY_LEGION_SETTING_CS::clear_has_strbroadcast() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_MODIFY_LEGION_SETTING_CS::clear_strbroadcast() {
  if (strbroadcast_ != &::google::protobuf::internal::kEmptyString) {
    strbroadcast_->clear();
  }
  clear_has_strbroadcast();
}
inline const ::std::string& CMD_MODIFY_LEGION_SETTING_CS::strbroadcast() const {
  return *strbroadcast_;
}
inline void CMD_MODIFY_LEGION_SETTING_CS::set_strbroadcast(const ::std::string& value) {
  set_has_strbroadcast();
  if (strbroadcast_ == &::google::protobuf::internal::kEmptyString) {
    strbroadcast_ = new ::std::string;
  }
  strbroadcast_->assign(value);
}
inline void CMD_MODIFY_LEGION_SETTING_CS::set_strbroadcast(const char* value) {
  set_has_strbroadcast();
  if (strbroadcast_ == &::google::protobuf::internal::kEmptyString) {
    strbroadcast_ = new ::std::string;
  }
  strbroadcast_->assign(value);
}
inline void CMD_MODIFY_LEGION_SETTING_CS::set_strbroadcast(const char* value, size_t size) {
  set_has_strbroadcast();
  if (strbroadcast_ == &::google::protobuf::internal::kEmptyString) {
    strbroadcast_ = new ::std::string;
  }
  strbroadcast_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_MODIFY_LEGION_SETTING_CS::mutable_strbroadcast() {
  set_has_strbroadcast();
  if (strbroadcast_ == &::google::protobuf::internal::kEmptyString) {
    strbroadcast_ = new ::std::string;
  }
  return strbroadcast_;
}
inline ::std::string* CMD_MODIFY_LEGION_SETTING_CS::release_strbroadcast() {
  clear_has_strbroadcast();
  if (strbroadcast_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strbroadcast_;
    strbroadcast_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_MODIFY_LEGION_SETTING_CS::set_allocated_strbroadcast(::std::string* strbroadcast) {
  if (strbroadcast_ != &::google::protobuf::internal::kEmptyString) {
    delete strbroadcast_;
  }
  if (strbroadcast) {
    set_has_strbroadcast();
    strbroadcast_ = strbroadcast;
  } else {
    clear_has_strbroadcast();
    strbroadcast_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iLegionIconId = 3;
inline bool CMD_MODIFY_LEGION_SETTING_CS::has_ilegioniconid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_MODIFY_LEGION_SETTING_CS::set_has_ilegioniconid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_MODIFY_LEGION_SETTING_CS::clear_has_ilegioniconid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_MODIFY_LEGION_SETTING_CS::clear_ilegioniconid() {
  ilegioniconid_ = 0;
  clear_has_ilegioniconid();
}
inline ::google::protobuf::int32 CMD_MODIFY_LEGION_SETTING_CS::ilegioniconid() const {
  return ilegioniconid_;
}
inline void CMD_MODIFY_LEGION_SETTING_CS::set_ilegioniconid(::google::protobuf::int32 value) {
  set_has_ilegioniconid();
  ilegioniconid_ = value;
}

// -------------------------------------------------------------------

// CMD_DEAL_LEGIONAPP_CS

// required string strAppName = 2;
inline bool CMD_DEAL_LEGIONAPP_CS::has_strappname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_DEAL_LEGIONAPP_CS::set_has_strappname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_DEAL_LEGIONAPP_CS::clear_has_strappname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_DEAL_LEGIONAPP_CS::clear_strappname() {
  if (strappname_ != &::google::protobuf::internal::kEmptyString) {
    strappname_->clear();
  }
  clear_has_strappname();
}
inline const ::std::string& CMD_DEAL_LEGIONAPP_CS::strappname() const {
  return *strappname_;
}
inline void CMD_DEAL_LEGIONAPP_CS::set_strappname(const ::std::string& value) {
  set_has_strappname();
  if (strappname_ == &::google::protobuf::internal::kEmptyString) {
    strappname_ = new ::std::string;
  }
  strappname_->assign(value);
}
inline void CMD_DEAL_LEGIONAPP_CS::set_strappname(const char* value) {
  set_has_strappname();
  if (strappname_ == &::google::protobuf::internal::kEmptyString) {
    strappname_ = new ::std::string;
  }
  strappname_->assign(value);
}
inline void CMD_DEAL_LEGIONAPP_CS::set_strappname(const char* value, size_t size) {
  set_has_strappname();
  if (strappname_ == &::google::protobuf::internal::kEmptyString) {
    strappname_ = new ::std::string;
  }
  strappname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_DEAL_LEGIONAPP_CS::mutable_strappname() {
  set_has_strappname();
  if (strappname_ == &::google::protobuf::internal::kEmptyString) {
    strappname_ = new ::std::string;
  }
  return strappname_;
}
inline ::std::string* CMD_DEAL_LEGIONAPP_CS::release_strappname() {
  clear_has_strappname();
  if (strappname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strappname_;
    strappname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_DEAL_LEGIONAPP_CS::set_allocated_strappname(::std::string* strappname) {
  if (strappname_ != &::google::protobuf::internal::kEmptyString) {
    delete strappname_;
  }
  if (strappname) {
    set_has_strappname();
    strappname_ = strappname;
  } else {
    clear_has_strappname();
    strappname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bool bAccept = 3;
inline bool CMD_DEAL_LEGIONAPP_CS::has_baccept() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_DEAL_LEGIONAPP_CS::set_has_baccept() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_DEAL_LEGIONAPP_CS::clear_has_baccept() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_DEAL_LEGIONAPP_CS::clear_baccept() {
  baccept_ = false;
  clear_has_baccept();
}
inline bool CMD_DEAL_LEGIONAPP_CS::baccept() const {
  return baccept_;
}
inline void CMD_DEAL_LEGIONAPP_CS::set_baccept(bool value) {
  set_has_baccept();
  baccept_ = value;
}

// -------------------------------------------------------------------

// CMD_DEAL_LEGIONAPP_SC

// required string strAppName = 2;
inline bool CMD_DEAL_LEGIONAPP_SC::has_strappname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_DEAL_LEGIONAPP_SC::set_has_strappname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_DEAL_LEGIONAPP_SC::clear_has_strappname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_DEAL_LEGIONAPP_SC::clear_strappname() {
  if (strappname_ != &::google::protobuf::internal::kEmptyString) {
    strappname_->clear();
  }
  clear_has_strappname();
}
inline const ::std::string& CMD_DEAL_LEGIONAPP_SC::strappname() const {
  return *strappname_;
}
inline void CMD_DEAL_LEGIONAPP_SC::set_strappname(const ::std::string& value) {
  set_has_strappname();
  if (strappname_ == &::google::protobuf::internal::kEmptyString) {
    strappname_ = new ::std::string;
  }
  strappname_->assign(value);
}
inline void CMD_DEAL_LEGIONAPP_SC::set_strappname(const char* value) {
  set_has_strappname();
  if (strappname_ == &::google::protobuf::internal::kEmptyString) {
    strappname_ = new ::std::string;
  }
  strappname_->assign(value);
}
inline void CMD_DEAL_LEGIONAPP_SC::set_strappname(const char* value, size_t size) {
  set_has_strappname();
  if (strappname_ == &::google::protobuf::internal::kEmptyString) {
    strappname_ = new ::std::string;
  }
  strappname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_DEAL_LEGIONAPP_SC::mutable_strappname() {
  set_has_strappname();
  if (strappname_ == &::google::protobuf::internal::kEmptyString) {
    strappname_ = new ::std::string;
  }
  return strappname_;
}
inline ::std::string* CMD_DEAL_LEGIONAPP_SC::release_strappname() {
  clear_has_strappname();
  if (strappname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strappname_;
    strappname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_DEAL_LEGIONAPP_SC::set_allocated_strappname(::std::string* strappname) {
  if (strappname_ != &::google::protobuf::internal::kEmptyString) {
    delete strappname_;
  }
  if (strappname) {
    set_has_strappname();
    strappname_ = strappname;
  } else {
    clear_has_strappname();
    strappname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bool bAccept = 3;
inline bool CMD_DEAL_LEGIONAPP_SC::has_baccept() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_DEAL_LEGIONAPP_SC::set_has_baccept() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_DEAL_LEGIONAPP_SC::clear_has_baccept() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_DEAL_LEGIONAPP_SC::clear_baccept() {
  baccept_ = false;
  clear_has_baccept();
}
inline bool CMD_DEAL_LEGIONAPP_SC::baccept() const {
  return baccept_;
}
inline void CMD_DEAL_LEGIONAPP_SC::set_baccept(bool value) {
  set_has_baccept();
  baccept_ = value;
}

// -------------------------------------------------------------------

// CMD_KICK_LEGIONMEMBER_CS

// required string strLegionMemName = 1;
inline bool CMD_KICK_LEGIONMEMBER_CS::has_strlegionmemname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_KICK_LEGIONMEMBER_CS::set_has_strlegionmemname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_KICK_LEGIONMEMBER_CS::clear_has_strlegionmemname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_KICK_LEGIONMEMBER_CS::clear_strlegionmemname() {
  if (strlegionmemname_ != &::google::protobuf::internal::kEmptyString) {
    strlegionmemname_->clear();
  }
  clear_has_strlegionmemname();
}
inline const ::std::string& CMD_KICK_LEGIONMEMBER_CS::strlegionmemname() const {
  return *strlegionmemname_;
}
inline void CMD_KICK_LEGIONMEMBER_CS::set_strlegionmemname(const ::std::string& value) {
  set_has_strlegionmemname();
  if (strlegionmemname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionmemname_ = new ::std::string;
  }
  strlegionmemname_->assign(value);
}
inline void CMD_KICK_LEGIONMEMBER_CS::set_strlegionmemname(const char* value) {
  set_has_strlegionmemname();
  if (strlegionmemname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionmemname_ = new ::std::string;
  }
  strlegionmemname_->assign(value);
}
inline void CMD_KICK_LEGIONMEMBER_CS::set_strlegionmemname(const char* value, size_t size) {
  set_has_strlegionmemname();
  if (strlegionmemname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionmemname_ = new ::std::string;
  }
  strlegionmemname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_KICK_LEGIONMEMBER_CS::mutable_strlegionmemname() {
  set_has_strlegionmemname();
  if (strlegionmemname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionmemname_ = new ::std::string;
  }
  return strlegionmemname_;
}
inline ::std::string* CMD_KICK_LEGIONMEMBER_CS::release_strlegionmemname() {
  clear_has_strlegionmemname();
  if (strlegionmemname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strlegionmemname_;
    strlegionmemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_KICK_LEGIONMEMBER_CS::set_allocated_strlegionmemname(::std::string* strlegionmemname) {
  if (strlegionmemname_ != &::google::protobuf::internal::kEmptyString) {
    delete strlegionmemname_;
  }
  if (strlegionmemname) {
    set_has_strlegionmemname();
    strlegionmemname_ = strlegionmemname;
  } else {
    clear_has_strlegionmemname();
    strlegionmemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_KICK_LEGIONMEMBER_SC

// required string strLegionMemName = 1;
inline bool CMD_KICK_LEGIONMEMBER_SC::has_strlegionmemname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_KICK_LEGIONMEMBER_SC::set_has_strlegionmemname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_KICK_LEGIONMEMBER_SC::clear_has_strlegionmemname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_KICK_LEGIONMEMBER_SC::clear_strlegionmemname() {
  if (strlegionmemname_ != &::google::protobuf::internal::kEmptyString) {
    strlegionmemname_->clear();
  }
  clear_has_strlegionmemname();
}
inline const ::std::string& CMD_KICK_LEGIONMEMBER_SC::strlegionmemname() const {
  return *strlegionmemname_;
}
inline void CMD_KICK_LEGIONMEMBER_SC::set_strlegionmemname(const ::std::string& value) {
  set_has_strlegionmemname();
  if (strlegionmemname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionmemname_ = new ::std::string;
  }
  strlegionmemname_->assign(value);
}
inline void CMD_KICK_LEGIONMEMBER_SC::set_strlegionmemname(const char* value) {
  set_has_strlegionmemname();
  if (strlegionmemname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionmemname_ = new ::std::string;
  }
  strlegionmemname_->assign(value);
}
inline void CMD_KICK_LEGIONMEMBER_SC::set_strlegionmemname(const char* value, size_t size) {
  set_has_strlegionmemname();
  if (strlegionmemname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionmemname_ = new ::std::string;
  }
  strlegionmemname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_KICK_LEGIONMEMBER_SC::mutable_strlegionmemname() {
  set_has_strlegionmemname();
  if (strlegionmemname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionmemname_ = new ::std::string;
  }
  return strlegionmemname_;
}
inline ::std::string* CMD_KICK_LEGIONMEMBER_SC::release_strlegionmemname() {
  clear_has_strlegionmemname();
  if (strlegionmemname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strlegionmemname_;
    strlegionmemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_KICK_LEGIONMEMBER_SC::set_allocated_strlegionmemname(::std::string* strlegionmemname) {
  if (strlegionmemname_ != &::google::protobuf::internal::kEmptyString) {
    delete strlegionmemname_;
  }
  if (strlegionmemname) {
    set_has_strlegionmemname();
    strlegionmemname_ = strlegionmemname;
  } else {
    clear_has_strlegionmemname();
    strlegionmemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_TRANSFER_LEGIONLEADER_CS

// required string strTargetMemName = 1;
inline bool CMD_TRANSFER_LEGIONLEADER_CS::has_strtargetmemname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_TRANSFER_LEGIONLEADER_CS::set_has_strtargetmemname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_TRANSFER_LEGIONLEADER_CS::clear_has_strtargetmemname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_TRANSFER_LEGIONLEADER_CS::clear_strtargetmemname() {
  if (strtargetmemname_ != &::google::protobuf::internal::kEmptyString) {
    strtargetmemname_->clear();
  }
  clear_has_strtargetmemname();
}
inline const ::std::string& CMD_TRANSFER_LEGIONLEADER_CS::strtargetmemname() const {
  return *strtargetmemname_;
}
inline void CMD_TRANSFER_LEGIONLEADER_CS::set_strtargetmemname(const ::std::string& value) {
  set_has_strtargetmemname();
  if (strtargetmemname_ == &::google::protobuf::internal::kEmptyString) {
    strtargetmemname_ = new ::std::string;
  }
  strtargetmemname_->assign(value);
}
inline void CMD_TRANSFER_LEGIONLEADER_CS::set_strtargetmemname(const char* value) {
  set_has_strtargetmemname();
  if (strtargetmemname_ == &::google::protobuf::internal::kEmptyString) {
    strtargetmemname_ = new ::std::string;
  }
  strtargetmemname_->assign(value);
}
inline void CMD_TRANSFER_LEGIONLEADER_CS::set_strtargetmemname(const char* value, size_t size) {
  set_has_strtargetmemname();
  if (strtargetmemname_ == &::google::protobuf::internal::kEmptyString) {
    strtargetmemname_ = new ::std::string;
  }
  strtargetmemname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_TRANSFER_LEGIONLEADER_CS::mutable_strtargetmemname() {
  set_has_strtargetmemname();
  if (strtargetmemname_ == &::google::protobuf::internal::kEmptyString) {
    strtargetmemname_ = new ::std::string;
  }
  return strtargetmemname_;
}
inline ::std::string* CMD_TRANSFER_LEGIONLEADER_CS::release_strtargetmemname() {
  clear_has_strtargetmemname();
  if (strtargetmemname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strtargetmemname_;
    strtargetmemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_TRANSFER_LEGIONLEADER_CS::set_allocated_strtargetmemname(::std::string* strtargetmemname) {
  if (strtargetmemname_ != &::google::protobuf::internal::kEmptyString) {
    delete strtargetmemname_;
  }
  if (strtargetmemname) {
    set_has_strtargetmemname();
    strtargetmemname_ = strtargetmemname;
  } else {
    clear_has_strtargetmemname();
    strtargetmemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_TRANSFER_LEGIONLEADER_SC

// required string strNewLeader = 1;
inline bool CMD_TRANSFER_LEGIONLEADER_SC::has_strnewleader() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_TRANSFER_LEGIONLEADER_SC::set_has_strnewleader() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_TRANSFER_LEGIONLEADER_SC::clear_has_strnewleader() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_TRANSFER_LEGIONLEADER_SC::clear_strnewleader() {
  if (strnewleader_ != &::google::protobuf::internal::kEmptyString) {
    strnewleader_->clear();
  }
  clear_has_strnewleader();
}
inline const ::std::string& CMD_TRANSFER_LEGIONLEADER_SC::strnewleader() const {
  return *strnewleader_;
}
inline void CMD_TRANSFER_LEGIONLEADER_SC::set_strnewleader(const ::std::string& value) {
  set_has_strnewleader();
  if (strnewleader_ == &::google::protobuf::internal::kEmptyString) {
    strnewleader_ = new ::std::string;
  }
  strnewleader_->assign(value);
}
inline void CMD_TRANSFER_LEGIONLEADER_SC::set_strnewleader(const char* value) {
  set_has_strnewleader();
  if (strnewleader_ == &::google::protobuf::internal::kEmptyString) {
    strnewleader_ = new ::std::string;
  }
  strnewleader_->assign(value);
}
inline void CMD_TRANSFER_LEGIONLEADER_SC::set_strnewleader(const char* value, size_t size) {
  set_has_strnewleader();
  if (strnewleader_ == &::google::protobuf::internal::kEmptyString) {
    strnewleader_ = new ::std::string;
  }
  strnewleader_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_TRANSFER_LEGIONLEADER_SC::mutable_strnewleader() {
  set_has_strnewleader();
  if (strnewleader_ == &::google::protobuf::internal::kEmptyString) {
    strnewleader_ = new ::std::string;
  }
  return strnewleader_;
}
inline ::std::string* CMD_TRANSFER_LEGIONLEADER_SC::release_strnewleader() {
  clear_has_strnewleader();
  if (strnewleader_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strnewleader_;
    strnewleader_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_TRANSFER_LEGIONLEADER_SC::set_allocated_strnewleader(::std::string* strnewleader) {
  if (strnewleader_ != &::google::protobuf::internal::kEmptyString) {
    delete strnewleader_;
  }
  if (strnewleader) {
    set_has_strnewleader();
    strnewleader_ = strnewleader;
  } else {
    clear_has_strnewleader();
    strnewleader_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_QUERY_LELGION_CONTRIBUTE_SC

// required int32 iContribute = 1;
inline bool CMD_QUERY_LELGION_CONTRIBUTE_SC::has_icontribute() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_LELGION_CONTRIBUTE_SC::set_has_icontribute() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_LELGION_CONTRIBUTE_SC::clear_has_icontribute() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_LELGION_CONTRIBUTE_SC::clear_icontribute() {
  icontribute_ = 0;
  clear_has_icontribute();
}
inline ::google::protobuf::int32 CMD_QUERY_LELGION_CONTRIBUTE_SC::icontribute() const {
  return icontribute_;
}
inline void CMD_QUERY_LELGION_CONTRIBUTE_SC::set_icontribute(::google::protobuf::int32 value) {
  set_has_icontribute();
  icontribute_ = value;
}

// required int32 iLegionExp = 2;
inline bool CMD_QUERY_LELGION_CONTRIBUTE_SC::has_ilegionexp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_QUERY_LELGION_CONTRIBUTE_SC::set_has_ilegionexp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_QUERY_LELGION_CONTRIBUTE_SC::clear_has_ilegionexp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_QUERY_LELGION_CONTRIBUTE_SC::clear_ilegionexp() {
  ilegionexp_ = 0;
  clear_has_ilegionexp();
}
inline ::google::protobuf::int32 CMD_QUERY_LELGION_CONTRIBUTE_SC::ilegionexp() const {
  return ilegionexp_;
}
inline void CMD_QUERY_LELGION_CONTRIBUTE_SC::set_ilegionexp(::google::protobuf::int32 value) {
  set_has_ilegionexp();
  ilegionexp_ = value;
}

// required int32 iLegionUpLevelExp = 3;
inline bool CMD_QUERY_LELGION_CONTRIBUTE_SC::has_ilegionuplevelexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_QUERY_LELGION_CONTRIBUTE_SC::set_has_ilegionuplevelexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_QUERY_LELGION_CONTRIBUTE_SC::clear_has_ilegionuplevelexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_QUERY_LELGION_CONTRIBUTE_SC::clear_ilegionuplevelexp() {
  ilegionuplevelexp_ = 0;
  clear_has_ilegionuplevelexp();
}
inline ::google::protobuf::int32 CMD_QUERY_LELGION_CONTRIBUTE_SC::ilegionuplevelexp() const {
  return ilegionuplevelexp_;
}
inline void CMD_QUERY_LELGION_CONTRIBUTE_SC::set_ilegionuplevelexp(::google::protobuf::int32 value) {
  set_has_ilegionuplevelexp();
  ilegionuplevelexp_ = value;
}

// required int32 iLevel = 4;
inline bool CMD_QUERY_LELGION_CONTRIBUTE_SC::has_ilevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_QUERY_LELGION_CONTRIBUTE_SC::set_has_ilevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_QUERY_LELGION_CONTRIBUTE_SC::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_QUERY_LELGION_CONTRIBUTE_SC::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 CMD_QUERY_LELGION_CONTRIBUTE_SC::ilevel() const {
  return ilevel_;
}
inline void CMD_QUERY_LELGION_CONTRIBUTE_SC::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_OTHERLEGION_CS

// required uint32 dwLegionObjectID = 1;
inline bool CMD_QUERY_OTHERLEGION_CS::has_dwlegionobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_OTHERLEGION_CS::set_has_dwlegionobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_OTHERLEGION_CS::clear_has_dwlegionobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_OTHERLEGION_CS::clear_dwlegionobjectid() {
  dwlegionobjectid_ = 0u;
  clear_has_dwlegionobjectid();
}
inline ::google::protobuf::uint32 CMD_QUERY_OTHERLEGION_CS::dwlegionobjectid() const {
  return dwlegionobjectid_;
}
inline void CMD_QUERY_OTHERLEGION_CS::set_dwlegionobjectid(::google::protobuf::uint32 value) {
  set_has_dwlegionobjectid();
  dwlegionobjectid_ = value;
}

// -------------------------------------------------------------------

// OtherLegionInfo

// required uint32 dwLegionObjectID = 1;
inline bool OtherLegionInfo::has_dwlegionobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OtherLegionInfo::set_has_dwlegionobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OtherLegionInfo::clear_has_dwlegionobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OtherLegionInfo::clear_dwlegionobjectid() {
  dwlegionobjectid_ = 0u;
  clear_has_dwlegionobjectid();
}
inline ::google::protobuf::uint32 OtherLegionInfo::dwlegionobjectid() const {
  return dwlegionobjectid_;
}
inline void OtherLegionInfo::set_dwlegionobjectid(::google::protobuf::uint32 value) {
  set_has_dwlegionobjectid();
  dwlegionobjectid_ = value;
}

// required string strLegionName = 2;
inline bool OtherLegionInfo::has_strlegionname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OtherLegionInfo::set_has_strlegionname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OtherLegionInfo::clear_has_strlegionname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OtherLegionInfo::clear_strlegionname() {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    strlegionname_->clear();
  }
  clear_has_strlegionname();
}
inline const ::std::string& OtherLegionInfo::strlegionname() const {
  return *strlegionname_;
}
inline void OtherLegionInfo::set_strlegionname(const ::std::string& value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void OtherLegionInfo::set_strlegionname(const char* value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void OtherLegionInfo::set_strlegionname(const char* value, size_t size) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OtherLegionInfo::mutable_strlegionname() {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  return strlegionname_;
}
inline ::std::string* OtherLegionInfo::release_strlegionname() {
  clear_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strlegionname_;
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OtherLegionInfo::set_allocated_strlegionname(::std::string* strlegionname) {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strlegionname_;
  }
  if (strlegionname) {
    set_has_strlegionname();
    strlegionname_ = strlegionname;
  } else {
    clear_has_strlegionname();
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iLevel = 3;
inline bool OtherLegionInfo::has_ilevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OtherLegionInfo::set_has_ilevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OtherLegionInfo::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OtherLegionInfo::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 OtherLegionInfo::ilevel() const {
  return ilevel_;
}
inline void OtherLegionInfo::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// required string strLeaderName = 4;
inline bool OtherLegionInfo::has_strleadername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OtherLegionInfo::set_has_strleadername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OtherLegionInfo::clear_has_strleadername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OtherLegionInfo::clear_strleadername() {
  if (strleadername_ != &::google::protobuf::internal::kEmptyString) {
    strleadername_->clear();
  }
  clear_has_strleadername();
}
inline const ::std::string& OtherLegionInfo::strleadername() const {
  return *strleadername_;
}
inline void OtherLegionInfo::set_strleadername(const ::std::string& value) {
  set_has_strleadername();
  if (strleadername_ == &::google::protobuf::internal::kEmptyString) {
    strleadername_ = new ::std::string;
  }
  strleadername_->assign(value);
}
inline void OtherLegionInfo::set_strleadername(const char* value) {
  set_has_strleadername();
  if (strleadername_ == &::google::protobuf::internal::kEmptyString) {
    strleadername_ = new ::std::string;
  }
  strleadername_->assign(value);
}
inline void OtherLegionInfo::set_strleadername(const char* value, size_t size) {
  set_has_strleadername();
  if (strleadername_ == &::google::protobuf::internal::kEmptyString) {
    strleadername_ = new ::std::string;
  }
  strleadername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OtherLegionInfo::mutable_strleadername() {
  set_has_strleadername();
  if (strleadername_ == &::google::protobuf::internal::kEmptyString) {
    strleadername_ = new ::std::string;
  }
  return strleadername_;
}
inline ::std::string* OtherLegionInfo::release_strleadername() {
  clear_has_strleadername();
  if (strleadername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strleadername_;
    strleadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OtherLegionInfo::set_allocated_strleadername(::std::string* strleadername) {
  if (strleadername_ != &::google::protobuf::internal::kEmptyString) {
    delete strleadername_;
  }
  if (strleadername) {
    set_has_strleadername();
    strleadername_ = strleadername;
  } else {
    clear_has_strleadername();
    strleadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iRank = 5;
inline bool OtherLegionInfo::has_irank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OtherLegionInfo::set_has_irank() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OtherLegionInfo::clear_has_irank() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OtherLegionInfo::clear_irank() {
  irank_ = 0;
  clear_has_irank();
}
inline ::google::protobuf::int32 OtherLegionInfo::irank() const {
  return irank_;
}
inline void OtherLegionInfo::set_irank(::google::protobuf::int32 value) {
  set_has_irank();
  irank_ = value;
}

// required int32 iMemCount = 6;
inline bool OtherLegionInfo::has_imemcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OtherLegionInfo::set_has_imemcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OtherLegionInfo::clear_has_imemcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OtherLegionInfo::clear_imemcount() {
  imemcount_ = 0;
  clear_has_imemcount();
}
inline ::google::protobuf::int32 OtherLegionInfo::imemcount() const {
  return imemcount_;
}
inline void OtherLegionInfo::set_imemcount(::google::protobuf::int32 value) {
  set_has_imemcount();
  imemcount_ = value;
}

// required int32 iMemLimit = 7;
inline bool OtherLegionInfo::has_imemlimit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OtherLegionInfo::set_has_imemlimit() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OtherLegionInfo::clear_has_imemlimit() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OtherLegionInfo::clear_imemlimit() {
  imemlimit_ = 0;
  clear_has_imemlimit();
}
inline ::google::protobuf::int32 OtherLegionInfo::imemlimit() const {
  return imemlimit_;
}
inline void OtherLegionInfo::set_imemlimit(::google::protobuf::int32 value) {
  set_has_imemlimit();
  imemlimit_ = value;
}

// required string strAnnouce = 8;
inline bool OtherLegionInfo::has_strannouce() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OtherLegionInfo::set_has_strannouce() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OtherLegionInfo::clear_has_strannouce() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OtherLegionInfo::clear_strannouce() {
  if (strannouce_ != &::google::protobuf::internal::kEmptyString) {
    strannouce_->clear();
  }
  clear_has_strannouce();
}
inline const ::std::string& OtherLegionInfo::strannouce() const {
  return *strannouce_;
}
inline void OtherLegionInfo::set_strannouce(const ::std::string& value) {
  set_has_strannouce();
  if (strannouce_ == &::google::protobuf::internal::kEmptyString) {
    strannouce_ = new ::std::string;
  }
  strannouce_->assign(value);
}
inline void OtherLegionInfo::set_strannouce(const char* value) {
  set_has_strannouce();
  if (strannouce_ == &::google::protobuf::internal::kEmptyString) {
    strannouce_ = new ::std::string;
  }
  strannouce_->assign(value);
}
inline void OtherLegionInfo::set_strannouce(const char* value, size_t size) {
  set_has_strannouce();
  if (strannouce_ == &::google::protobuf::internal::kEmptyString) {
    strannouce_ = new ::std::string;
  }
  strannouce_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OtherLegionInfo::mutable_strannouce() {
  set_has_strannouce();
  if (strannouce_ == &::google::protobuf::internal::kEmptyString) {
    strannouce_ = new ::std::string;
  }
  return strannouce_;
}
inline ::std::string* OtherLegionInfo::release_strannouce() {
  clear_has_strannouce();
  if (strannouce_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strannouce_;
    strannouce_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OtherLegionInfo::set_allocated_strannouce(::std::string* strannouce) {
  if (strannouce_ != &::google::protobuf::internal::kEmptyString) {
    delete strannouce_;
  }
  if (strannouce) {
    set_has_strannouce();
    strannouce_ = strannouce;
  } else {
    clear_has_strannouce();
    strannouce_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_QUERY_OTHERLEGION_SC

// required .GSProto.OtherLegionInfo otherLegionInfo = 1;
inline bool CMD_QUERY_OTHERLEGION_SC::has_otherlegioninfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_OTHERLEGION_SC::set_has_otherlegioninfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_OTHERLEGION_SC::clear_has_otherlegioninfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_OTHERLEGION_SC::clear_otherlegioninfo() {
  if (otherlegioninfo_ != NULL) otherlegioninfo_->::GSProto::OtherLegionInfo::Clear();
  clear_has_otherlegioninfo();
}
inline const ::GSProto::OtherLegionInfo& CMD_QUERY_OTHERLEGION_SC::otherlegioninfo() const {
  return otherlegioninfo_ != NULL ? *otherlegioninfo_ : *default_instance_->otherlegioninfo_;
}
inline ::GSProto::OtherLegionInfo* CMD_QUERY_OTHERLEGION_SC::mutable_otherlegioninfo() {
  set_has_otherlegioninfo();
  if (otherlegioninfo_ == NULL) otherlegioninfo_ = new ::GSProto::OtherLegionInfo;
  return otherlegioninfo_;
}
inline ::GSProto::OtherLegionInfo* CMD_QUERY_OTHERLEGION_SC::release_otherlegioninfo() {
  clear_has_otherlegioninfo();
  ::GSProto::OtherLegionInfo* temp = otherlegioninfo_;
  otherlegioninfo_ = NULL;
  return temp;
}
inline void CMD_QUERY_OTHERLEGION_SC::set_allocated_otherlegioninfo(::GSProto::OtherLegionInfo* otherlegioninfo) {
  delete otherlegioninfo_;
  otherlegioninfo_ = otherlegioninfo;
  if (otherlegioninfo) {
    set_has_otherlegioninfo();
  } else {
    clear_has_otherlegioninfo();
  }
}

// -------------------------------------------------------------------

// CMD_LEGION_CONTRIBUTE_CS

// required int32 iContributeType = 1;
inline bool CMD_LEGION_CONTRIBUTE_CS::has_icontributetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_LEGION_CONTRIBUTE_CS::set_has_icontributetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_LEGION_CONTRIBUTE_CS::clear_has_icontributetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_LEGION_CONTRIBUTE_CS::clear_icontributetype() {
  icontributetype_ = 0;
  clear_has_icontributetype();
}
inline ::google::protobuf::int32 CMD_LEGION_CONTRIBUTE_CS::icontributetype() const {
  return icontributetype_;
}
inline void CMD_LEGION_CONTRIBUTE_CS::set_icontributetype(::google::protobuf::int32 value) {
  set_has_icontributetype();
  icontributetype_ = value;
}

// -------------------------------------------------------------------

// CMD_LEGION_CONTRIBUTE_SC

// required int32 iContribute = 1;
inline bool CMD_LEGION_CONTRIBUTE_SC::has_icontribute() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_LEGION_CONTRIBUTE_SC::set_has_icontribute() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_LEGION_CONTRIBUTE_SC::clear_has_icontribute() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_LEGION_CONTRIBUTE_SC::clear_icontribute() {
  icontribute_ = 0;
  clear_has_icontribute();
}
inline ::google::protobuf::int32 CMD_LEGION_CONTRIBUTE_SC::icontribute() const {
  return icontribute_;
}
inline void CMD_LEGION_CONTRIBUTE_SC::set_icontribute(::google::protobuf::int32 value) {
  set_has_icontribute();
  icontribute_ = value;
}

// required int32 iLegionExp = 2;
inline bool CMD_LEGION_CONTRIBUTE_SC::has_ilegionexp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_LEGION_CONTRIBUTE_SC::set_has_ilegionexp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_LEGION_CONTRIBUTE_SC::clear_has_ilegionexp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_LEGION_CONTRIBUTE_SC::clear_ilegionexp() {
  ilegionexp_ = 0;
  clear_has_ilegionexp();
}
inline ::google::protobuf::int32 CMD_LEGION_CONTRIBUTE_SC::ilegionexp() const {
  return ilegionexp_;
}
inline void CMD_LEGION_CONTRIBUTE_SC::set_ilegionexp(::google::protobuf::int32 value) {
  set_has_ilegionexp();
  ilegionexp_ = value;
}

// required int32 iLegionUpLevelExp = 3;
inline bool CMD_LEGION_CONTRIBUTE_SC::has_ilegionuplevelexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_LEGION_CONTRIBUTE_SC::set_has_ilegionuplevelexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_LEGION_CONTRIBUTE_SC::clear_has_ilegionuplevelexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_LEGION_CONTRIBUTE_SC::clear_ilegionuplevelexp() {
  ilegionuplevelexp_ = 0;
  clear_has_ilegionuplevelexp();
}
inline ::google::protobuf::int32 CMD_LEGION_CONTRIBUTE_SC::ilegionuplevelexp() const {
  return ilegionuplevelexp_;
}
inline void CMD_LEGION_CONTRIBUTE_SC::set_ilegionuplevelexp(::google::protobuf::int32 value) {
  set_has_ilegionuplevelexp();
  ilegionuplevelexp_ = value;
}

// required int32 iLevel = 4;
inline bool CMD_LEGION_CONTRIBUTE_SC::has_ilevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_LEGION_CONTRIBUTE_SC::set_has_ilevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_LEGION_CONTRIBUTE_SC::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_LEGION_CONTRIBUTE_SC::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 CMD_LEGION_CONTRIBUTE_SC::ilevel() const {
  return ilevel_;
}
inline void CMD_LEGION_CONTRIBUTE_SC::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// required int32 iGetContribute = 5;
inline bool CMD_LEGION_CONTRIBUTE_SC::has_igetcontribute() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_LEGION_CONTRIBUTE_SC::set_has_igetcontribute() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_LEGION_CONTRIBUTE_SC::clear_has_igetcontribute() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_LEGION_CONTRIBUTE_SC::clear_igetcontribute() {
  igetcontribute_ = 0;
  clear_has_igetcontribute();
}
inline ::google::protobuf::int32 CMD_LEGION_CONTRIBUTE_SC::igetcontribute() const {
  return igetcontribute_;
}
inline void CMD_LEGION_CONTRIBUTE_SC::set_igetcontribute(::google::protobuf::int32 value) {
  set_has_igetcontribute();
  igetcontribute_ = value;
}

// -------------------------------------------------------------------

// CMD_LEGION_BLESS_CS

// required int32 iBlessType = 1;
inline bool CMD_LEGION_BLESS_CS::has_iblesstype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_LEGION_BLESS_CS::set_has_iblesstype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_LEGION_BLESS_CS::clear_has_iblesstype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_LEGION_BLESS_CS::clear_iblesstype() {
  iblesstype_ = 0;
  clear_has_iblesstype();
}
inline ::google::protobuf::int32 CMD_LEGION_BLESS_CS::iblesstype() const {
  return iblesstype_;
}
inline void CMD_LEGION_BLESS_CS::set_iblesstype(::google::protobuf::int32 value) {
  set_has_iblesstype();
  iblesstype_ = value;
}

// -------------------------------------------------------------------

// CMD_LEGION_BLESS_SC

// required int32 iContribute = 1;
inline bool CMD_LEGION_BLESS_SC::has_icontribute() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_LEGION_BLESS_SC::set_has_icontribute() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_LEGION_BLESS_SC::clear_has_icontribute() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_LEGION_BLESS_SC::clear_icontribute() {
  icontribute_ = 0;
  clear_has_icontribute();
}
inline ::google::protobuf::int32 CMD_LEGION_BLESS_SC::icontribute() const {
  return icontribute_;
}
inline void CMD_LEGION_BLESS_SC::set_icontribute(::google::protobuf::int32 value) {
  set_has_icontribute();
  icontribute_ = value;
}

// required int32 iGetContribute = 2;
inline bool CMD_LEGION_BLESS_SC::has_igetcontribute() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_LEGION_BLESS_SC::set_has_igetcontribute() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_LEGION_BLESS_SC::clear_has_igetcontribute() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_LEGION_BLESS_SC::clear_igetcontribute() {
  igetcontribute_ = 0;
  clear_has_igetcontribute();
}
inline ::google::protobuf::int32 CMD_LEGION_BLESS_SC::igetcontribute() const {
  return igetcontribute_;
}
inline void CMD_LEGION_BLESS_SC::set_igetcontribute(::google::protobuf::int32 value) {
  set_has_igetcontribute();
  igetcontribute_ = value;
}

// -------------------------------------------------------------------

// LegionPay

// required int32 iPayType = 1;
inline bool LegionPay::has_ipaytype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegionPay::set_has_ipaytype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegionPay::clear_has_ipaytype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegionPay::clear_ipaytype() {
  ipaytype_ = 0;
  clear_has_ipaytype();
}
inline ::google::protobuf::int32 LegionPay::ipaytype() const {
  return ipaytype_;
}
inline void LegionPay::set_ipaytype(::google::protobuf::int32 value) {
  set_has_ipaytype();
  ipaytype_ = value;
}

// required int32 iLegionLv = 2;
inline bool LegionPay::has_ilegionlv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionPay::set_has_ilegionlv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionPay::clear_has_ilegionlv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionPay::clear_ilegionlv() {
  ilegionlv_ = 0;
  clear_has_ilegionlv();
}
inline ::google::protobuf::int32 LegionPay::ilegionlv() const {
  return ilegionlv_;
}
inline void LegionPay::set_ilegionlv(::google::protobuf::int32 value) {
  set_has_ilegionlv();
  ilegionlv_ = value;
}

// required int32 iDomainCount = 3;
inline bool LegionPay::has_idomaincount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionPay::set_has_idomaincount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionPay::clear_has_idomaincount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionPay::clear_idomaincount() {
  idomaincount_ = 0;
  clear_has_idomaincount();
}
inline ::google::protobuf::int32 LegionPay::idomaincount() const {
  return idomaincount_;
}
inline void LegionPay::set_idomaincount(::google::protobuf::int32 value) {
  set_has_idomaincount();
  idomaincount_ = value;
}

// required int32 iBaseGold = 4;
inline bool LegionPay::has_ibasegold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LegionPay::set_has_ibasegold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LegionPay::clear_has_ibasegold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LegionPay::clear_ibasegold() {
  ibasegold_ = 0;
  clear_has_ibasegold();
}
inline ::google::protobuf::int32 LegionPay::ibasegold() const {
  return ibasegold_;
}
inline void LegionPay::set_ibasegold(::google::protobuf::int32 value) {
  set_has_ibasegold();
  ibasegold_ = value;
}

// required int32 iBaseSilver = 5;
inline bool LegionPay::has_ibasesilver() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LegionPay::set_has_ibasesilver() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LegionPay::clear_has_ibasesilver() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LegionPay::clear_ibasesilver() {
  ibasesilver_ = 0;
  clear_has_ibasesilver();
}
inline ::google::protobuf::int32 LegionPay::ibasesilver() const {
  return ibasesilver_;
}
inline void LegionPay::set_ibasesilver(::google::protobuf::int32 value) {
  set_has_ibasesilver();
  ibasesilver_ = value;
}

// required int32 iContributeRank = 6;
inline bool LegionPay::has_icontributerank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LegionPay::set_has_icontributerank() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LegionPay::clear_has_icontributerank() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LegionPay::clear_icontributerank() {
  icontributerank_ = 0;
  clear_has_icontributerank();
}
inline ::google::protobuf::int32 LegionPay::icontributerank() const {
  return icontributerank_;
}
inline void LegionPay::set_icontributerank(::google::protobuf::int32 value) {
  set_has_icontributerank();
  icontributerank_ = value;
}

// required int32 iTotalGold = 7;
inline bool LegionPay::has_itotalgold() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LegionPay::set_has_itotalgold() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LegionPay::clear_has_itotalgold() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LegionPay::clear_itotalgold() {
  itotalgold_ = 0;
  clear_has_itotalgold();
}
inline ::google::protobuf::int32 LegionPay::itotalgold() const {
  return itotalgold_;
}
inline void LegionPay::set_itotalgold(::google::protobuf::int32 value) {
  set_has_itotalgold();
  itotalgold_ = value;
}

// required int32 iTotalSilver = 8;
inline bool LegionPay::has_itotalsilver() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LegionPay::set_has_itotalsilver() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LegionPay::clear_has_itotalsilver() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LegionPay::clear_itotalsilver() {
  itotalsilver_ = 0;
  clear_has_itotalsilver();
}
inline ::google::protobuf::int32 LegionPay::itotalsilver() const {
  return itotalsilver_;
}
inline void LegionPay::set_itotalsilver(::google::protobuf::int32 value) {
  set_has_itotalsilver();
  itotalsilver_ = value;
}

// required bool bGeted = 9;
inline bool LegionPay::has_bgeted() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LegionPay::set_has_bgeted() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LegionPay::clear_has_bgeted() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LegionPay::clear_bgeted() {
  bgeted_ = false;
  clear_has_bgeted();
}
inline bool LegionPay::bgeted() const {
  return bgeted_;
}
inline void LegionPay::set_bgeted(bool value) {
  set_has_bgeted();
  bgeted_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_LEGIONPAY_SC

// repeated .GSProto.LegionPay szPayList = 1;
inline int CMD_QUERY_LEGIONPAY_SC::szpaylist_size() const {
  return szpaylist_.size();
}
inline void CMD_QUERY_LEGIONPAY_SC::clear_szpaylist() {
  szpaylist_.Clear();
}
inline const ::GSProto::LegionPay& CMD_QUERY_LEGIONPAY_SC::szpaylist(int index) const {
  return szpaylist_.Get(index);
}
inline ::GSProto::LegionPay* CMD_QUERY_LEGIONPAY_SC::mutable_szpaylist(int index) {
  return szpaylist_.Mutable(index);
}
inline ::GSProto::LegionPay* CMD_QUERY_LEGIONPAY_SC::add_szpaylist() {
  return szpaylist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionPay >&
CMD_QUERY_LEGIONPAY_SC::szpaylist() const {
  return szpaylist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionPay >*
CMD_QUERY_LEGIONPAY_SC::mutable_szpaylist() {
  return &szpaylist_;
}

// required int32 iActorContribute = 2;
inline bool CMD_QUERY_LEGIONPAY_SC::has_iactorcontribute() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_QUERY_LEGIONPAY_SC::set_has_iactorcontribute() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_QUERY_LEGIONPAY_SC::clear_has_iactorcontribute() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_QUERY_LEGIONPAY_SC::clear_iactorcontribute() {
  iactorcontribute_ = 0;
  clear_has_iactorcontribute();
}
inline ::google::protobuf::int32 CMD_QUERY_LEGIONPAY_SC::iactorcontribute() const {
  return iactorcontribute_;
}
inline void CMD_QUERY_LEGIONPAY_SC::set_iactorcontribute(::google::protobuf::int32 value) {
  set_has_iactorcontribute();
  iactorcontribute_ = value;
}

// -------------------------------------------------------------------

// CMD_GET_LEGIONPAY_CS

// required int32 iPayType = 1;
inline bool CMD_GET_LEGIONPAY_CS::has_ipaytype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GET_LEGIONPAY_CS::set_has_ipaytype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GET_LEGIONPAY_CS::clear_has_ipaytype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GET_LEGIONPAY_CS::clear_ipaytype() {
  ipaytype_ = 0;
  clear_has_ipaytype();
}
inline ::google::protobuf::int32 CMD_GET_LEGIONPAY_CS::ipaytype() const {
  return ipaytype_;
}
inline void CMD_GET_LEGIONPAY_CS::set_ipaytype(::google::protobuf::int32 value) {
  set_has_ipaytype();
  ipaytype_ = value;
}

// -------------------------------------------------------------------

// CMD_GET_LEGIONPAY_SC

// required int32 iPayType = 1;
inline bool CMD_GET_LEGIONPAY_SC::has_ipaytype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GET_LEGIONPAY_SC::set_has_ipaytype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GET_LEGIONPAY_SC::clear_has_ipaytype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GET_LEGIONPAY_SC::clear_ipaytype() {
  ipaytype_ = 0;
  clear_has_ipaytype();
}
inline ::google::protobuf::int32 CMD_GET_LEGIONPAY_SC::ipaytype() const {
  return ipaytype_;
}
inline void CMD_GET_LEGIONPAY_SC::set_ipaytype(::google::protobuf::int32 value) {
  set_has_ipaytype();
  ipaytype_ = value;
}

// required bool bGeted = 2;
inline bool CMD_GET_LEGIONPAY_SC::has_bgeted() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_GET_LEGIONPAY_SC::set_has_bgeted() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_GET_LEGIONPAY_SC::clear_has_bgeted() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_GET_LEGIONPAY_SC::clear_bgeted() {
  bgeted_ = false;
  clear_has_bgeted();
}
inline bool CMD_GET_LEGIONPAY_SC::bgeted() const {
  return bgeted_;
}
inline void CMD_GET_LEGIONPAY_SC::set_bgeted(bool value) {
  set_has_bgeted();
  bgeted_ = value;
}

// required int32 iActorContribute = 3;
inline bool CMD_GET_LEGIONPAY_SC::has_iactorcontribute() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_GET_LEGIONPAY_SC::set_has_iactorcontribute() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_GET_LEGIONPAY_SC::clear_has_iactorcontribute() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_GET_LEGIONPAY_SC::clear_iactorcontribute() {
  iactorcontribute_ = 0;
  clear_has_iactorcontribute();
}
inline ::google::protobuf::int32 CMD_GET_LEGIONPAY_SC::iactorcontribute() const {
  return iactorcontribute_;
}
inline void CMD_GET_LEGIONPAY_SC::set_iactorcontribute(::google::protobuf::int32 value) {
  set_has_iactorcontribute();
  iactorcontribute_ = value;
}

// -------------------------------------------------------------------

// GoodDetail

// required int32 iGoodId = 1;
inline bool GoodDetail::has_igoodid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoodDetail::set_has_igoodid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoodDetail::clear_has_igoodid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoodDetail::clear_igoodid() {
  igoodid_ = 0;
  clear_has_igoodid();
}
inline ::google::protobuf::int32 GoodDetail::igoodid() const {
  return igoodid_;
}
inline void GoodDetail::set_igoodid(::google::protobuf::int32 value) {
  set_has_igoodid();
  igoodid_ = value;
}

// required bool bIsSale = 2;
inline bool GoodDetail::has_bissale() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GoodDetail::set_has_bissale() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GoodDetail::clear_has_bissale() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GoodDetail::clear_bissale() {
  bissale_ = false;
  clear_has_bissale();
}
inline bool GoodDetail::bissale() const {
  return bissale_;
}
inline void GoodDetail::set_bissale(bool value) {
  set_has_bissale();
  bissale_ = value;
}

// required int32 iIndex = 3;
inline bool GoodDetail::has_iindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GoodDetail::set_has_iindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GoodDetail::clear_has_iindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GoodDetail::clear_iindex() {
  iindex_ = 0;
  clear_has_iindex();
}
inline ::google::protobuf::int32 GoodDetail::iindex() const {
  return iindex_;
}
inline void GoodDetail::set_iindex(::google::protobuf::int32 value) {
  set_has_iindex();
  iindex_ = value;
}

// required bool bCanBuy = 4;
inline bool GoodDetail::has_bcanbuy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GoodDetail::set_has_bcanbuy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GoodDetail::clear_has_bcanbuy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GoodDetail::clear_bcanbuy() {
  bcanbuy_ = false;
  clear_has_bcanbuy();
}
inline bool GoodDetail::bcanbuy() const {
  return bcanbuy_;
}
inline void GoodDetail::set_bcanbuy(bool value) {
  set_has_bcanbuy();
  bcanbuy_ = value;
}

// optional int32 iCanBuyLevel = 5;
inline bool GoodDetail::has_icanbuylevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GoodDetail::set_has_icanbuylevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GoodDetail::clear_has_icanbuylevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GoodDetail::clear_icanbuylevel() {
  icanbuylevel_ = 0;
  clear_has_icanbuylevel();
}
inline ::google::protobuf::int32 GoodDetail::icanbuylevel() const {
  return icanbuylevel_;
}
inline void GoodDetail::set_icanbuylevel(::google::protobuf::int32 value) {
  set_has_icanbuylevel();
  icanbuylevel_ = value;
}

// -------------------------------------------------------------------

// CMD_OPEN_LEGIONSHOP_SC

// repeated .GSProto.GoodDetail szGoodList = 1;
inline int CMD_OPEN_LEGIONSHOP_SC::szgoodlist_size() const {
  return szgoodlist_.size();
}
inline void CMD_OPEN_LEGIONSHOP_SC::clear_szgoodlist() {
  szgoodlist_.Clear();
}
inline const ::GSProto::GoodDetail& CMD_OPEN_LEGIONSHOP_SC::szgoodlist(int index) const {
  return szgoodlist_.Get(index);
}
inline ::GSProto::GoodDetail* CMD_OPEN_LEGIONSHOP_SC::mutable_szgoodlist(int index) {
  return szgoodlist_.Mutable(index);
}
inline ::GSProto::GoodDetail* CMD_OPEN_LEGIONSHOP_SC::add_szgoodlist() {
  return szgoodlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::GoodDetail >&
CMD_OPEN_LEGIONSHOP_SC::szgoodlist() const {
  return szgoodlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::GoodDetail >*
CMD_OPEN_LEGIONSHOP_SC::mutable_szgoodlist() {
  return &szgoodlist_;
}

// required bool bIsToday = 2;
inline bool CMD_OPEN_LEGIONSHOP_SC::has_bistoday() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_OPEN_LEGIONSHOP_SC::set_has_bistoday() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_OPEN_LEGIONSHOP_SC::clear_has_bistoday() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_OPEN_LEGIONSHOP_SC::clear_bistoday() {
  bistoday_ = false;
  clear_has_bistoday();
}
inline bool CMD_OPEN_LEGIONSHOP_SC::bistoday() const {
  return bistoday_;
}
inline void CMD_OPEN_LEGIONSHOP_SC::set_bistoday(bool value) {
  set_has_bistoday();
  bistoday_ = value;
}

// required int32 iUpdateMoment = 3;
inline bool CMD_OPEN_LEGIONSHOP_SC::has_iupdatemoment() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_OPEN_LEGIONSHOP_SC::set_has_iupdatemoment() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_OPEN_LEGIONSHOP_SC::clear_has_iupdatemoment() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_OPEN_LEGIONSHOP_SC::clear_iupdatemoment() {
  iupdatemoment_ = 0;
  clear_has_iupdatemoment();
}
inline ::google::protobuf::int32 CMD_OPEN_LEGIONSHOP_SC::iupdatemoment() const {
  return iupdatemoment_;
}
inline void CMD_OPEN_LEGIONSHOP_SC::set_iupdatemoment(::google::protobuf::int32 value) {
  set_has_iupdatemoment();
  iupdatemoment_ = value;
}

// required int32 iContribute = 4;
inline bool CMD_OPEN_LEGIONSHOP_SC::has_icontribute() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_OPEN_LEGIONSHOP_SC::set_has_icontribute() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_OPEN_LEGIONSHOP_SC::clear_has_icontribute() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_OPEN_LEGIONSHOP_SC::clear_icontribute() {
  icontribute_ = 0;
  clear_has_icontribute();
}
inline ::google::protobuf::int32 CMD_OPEN_LEGIONSHOP_SC::icontribute() const {
  return icontribute_;
}
inline void CMD_OPEN_LEGIONSHOP_SC::set_icontribute(::google::protobuf::int32 value) {
  set_has_icontribute();
  icontribute_ = value;
}

// -------------------------------------------------------------------

// CMD_SELECT_LEGIONSHOP_CS

// required int32 iIndex = 1;
inline bool CMD_SELECT_LEGIONSHOP_CS::has_iindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_SELECT_LEGIONSHOP_CS::set_has_iindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_SELECT_LEGIONSHOP_CS::clear_has_iindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_SELECT_LEGIONSHOP_CS::clear_iindex() {
  iindex_ = 0;
  clear_has_iindex();
}
inline ::google::protobuf::int32 CMD_SELECT_LEGIONSHOP_CS::iindex() const {
  return iindex_;
}
inline void CMD_SELECT_LEGIONSHOP_CS::set_iindex(::google::protobuf::int32 value) {
  set_has_iindex();
  iindex_ = value;
}

// -------------------------------------------------------------------

// CMD_CHANNEL_CHAT_CS

// required int32 iChancel = 1;
inline bool CMD_CHANNEL_CHAT_CS::has_ichancel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_CHANNEL_CHAT_CS::set_has_ichancel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_CHANNEL_CHAT_CS::clear_has_ichancel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_CHANNEL_CHAT_CS::clear_ichancel() {
  ichancel_ = 0;
  clear_has_ichancel();
}
inline ::google::protobuf::int32 CMD_CHANNEL_CHAT_CS::ichancel() const {
  return ichancel_;
}
inline void CMD_CHANNEL_CHAT_CS::set_ichancel(::google::protobuf::int32 value) {
  set_has_ichancel();
  ichancel_ = value;
}

// required string strMsg = 2;
inline bool CMD_CHANNEL_CHAT_CS::has_strmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_CHANNEL_CHAT_CS::set_has_strmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_CHANNEL_CHAT_CS::clear_has_strmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_CHANNEL_CHAT_CS::clear_strmsg() {
  if (strmsg_ != &::google::protobuf::internal::kEmptyString) {
    strmsg_->clear();
  }
  clear_has_strmsg();
}
inline const ::std::string& CMD_CHANNEL_CHAT_CS::strmsg() const {
  return *strmsg_;
}
inline void CMD_CHANNEL_CHAT_CS::set_strmsg(const ::std::string& value) {
  set_has_strmsg();
  if (strmsg_ == &::google::protobuf::internal::kEmptyString) {
    strmsg_ = new ::std::string;
  }
  strmsg_->assign(value);
}
inline void CMD_CHANNEL_CHAT_CS::set_strmsg(const char* value) {
  set_has_strmsg();
  if (strmsg_ == &::google::protobuf::internal::kEmptyString) {
    strmsg_ = new ::std::string;
  }
  strmsg_->assign(value);
}
inline void CMD_CHANNEL_CHAT_CS::set_strmsg(const char* value, size_t size) {
  set_has_strmsg();
  if (strmsg_ == &::google::protobuf::internal::kEmptyString) {
    strmsg_ = new ::std::string;
  }
  strmsg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_CHANNEL_CHAT_CS::mutable_strmsg() {
  set_has_strmsg();
  if (strmsg_ == &::google::protobuf::internal::kEmptyString) {
    strmsg_ = new ::std::string;
  }
  return strmsg_;
}
inline ::std::string* CMD_CHANNEL_CHAT_CS::release_strmsg() {
  clear_has_strmsg();
  if (strmsg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmsg_;
    strmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_CHANNEL_CHAT_CS::set_allocated_strmsg(::std::string* strmsg) {
  if (strmsg_ != &::google::protobuf::internal::kEmptyString) {
    delete strmsg_;
  }
  if (strmsg) {
    set_has_strmsg();
    strmsg_ = strmsg;
  } else {
    clear_has_strmsg();
    strmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_CHANNEL_CHAT_SC

// required string strSender = 1;
inline bool CMD_CHANNEL_CHAT_SC::has_strsender() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_CHANNEL_CHAT_SC::set_has_strsender() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_CHANNEL_CHAT_SC::clear_has_strsender() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_CHANNEL_CHAT_SC::clear_strsender() {
  if (strsender_ != &::google::protobuf::internal::kEmptyString) {
    strsender_->clear();
  }
  clear_has_strsender();
}
inline const ::std::string& CMD_CHANNEL_CHAT_SC::strsender() const {
  return *strsender_;
}
inline void CMD_CHANNEL_CHAT_SC::set_strsender(const ::std::string& value) {
  set_has_strsender();
  if (strsender_ == &::google::protobuf::internal::kEmptyString) {
    strsender_ = new ::std::string;
  }
  strsender_->assign(value);
}
inline void CMD_CHANNEL_CHAT_SC::set_strsender(const char* value) {
  set_has_strsender();
  if (strsender_ == &::google::protobuf::internal::kEmptyString) {
    strsender_ = new ::std::string;
  }
  strsender_->assign(value);
}
inline void CMD_CHANNEL_CHAT_SC::set_strsender(const char* value, size_t size) {
  set_has_strsender();
  if (strsender_ == &::google::protobuf::internal::kEmptyString) {
    strsender_ = new ::std::string;
  }
  strsender_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_CHANNEL_CHAT_SC::mutable_strsender() {
  set_has_strsender();
  if (strsender_ == &::google::protobuf::internal::kEmptyString) {
    strsender_ = new ::std::string;
  }
  return strsender_;
}
inline ::std::string* CMD_CHANNEL_CHAT_SC::release_strsender() {
  clear_has_strsender();
  if (strsender_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strsender_;
    strsender_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_CHANNEL_CHAT_SC::set_allocated_strsender(::std::string* strsender) {
  if (strsender_ != &::google::protobuf::internal::kEmptyString) {
    delete strsender_;
  }
  if (strsender) {
    set_has_strsender();
    strsender_ = strsender;
  } else {
    clear_has_strsender();
    strsender_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .GSProto.PBPkRole senderKey = 2;
inline bool CMD_CHANNEL_CHAT_SC::has_senderkey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_CHANNEL_CHAT_SC::set_has_senderkey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_CHANNEL_CHAT_SC::clear_has_senderkey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_CHANNEL_CHAT_SC::clear_senderkey() {
  if (senderkey_ != NULL) senderkey_->::GSProto::PBPkRole::Clear();
  clear_has_senderkey();
}
inline const ::GSProto::PBPkRole& CMD_CHANNEL_CHAT_SC::senderkey() const {
  return senderkey_ != NULL ? *senderkey_ : *default_instance_->senderkey_;
}
inline ::GSProto::PBPkRole* CMD_CHANNEL_CHAT_SC::mutable_senderkey() {
  set_has_senderkey();
  if (senderkey_ == NULL) senderkey_ = new ::GSProto::PBPkRole;
  return senderkey_;
}
inline ::GSProto::PBPkRole* CMD_CHANNEL_CHAT_SC::release_senderkey() {
  clear_has_senderkey();
  ::GSProto::PBPkRole* temp = senderkey_;
  senderkey_ = NULL;
  return temp;
}
inline void CMD_CHANNEL_CHAT_SC::set_allocated_senderkey(::GSProto::PBPkRole* senderkey) {
  delete senderkey_;
  senderkey_ = senderkey;
  if (senderkey) {
    set_has_senderkey();
  } else {
    clear_has_senderkey();
  }
}

// required string strMsg = 3;
inline bool CMD_CHANNEL_CHAT_SC::has_strmsg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_CHANNEL_CHAT_SC::set_has_strmsg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_CHANNEL_CHAT_SC::clear_has_strmsg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_CHANNEL_CHAT_SC::clear_strmsg() {
  if (strmsg_ != &::google::protobuf::internal::kEmptyString) {
    strmsg_->clear();
  }
  clear_has_strmsg();
}
inline const ::std::string& CMD_CHANNEL_CHAT_SC::strmsg() const {
  return *strmsg_;
}
inline void CMD_CHANNEL_CHAT_SC::set_strmsg(const ::std::string& value) {
  set_has_strmsg();
  if (strmsg_ == &::google::protobuf::internal::kEmptyString) {
    strmsg_ = new ::std::string;
  }
  strmsg_->assign(value);
}
inline void CMD_CHANNEL_CHAT_SC::set_strmsg(const char* value) {
  set_has_strmsg();
  if (strmsg_ == &::google::protobuf::internal::kEmptyString) {
    strmsg_ = new ::std::string;
  }
  strmsg_->assign(value);
}
inline void CMD_CHANNEL_CHAT_SC::set_strmsg(const char* value, size_t size) {
  set_has_strmsg();
  if (strmsg_ == &::google::protobuf::internal::kEmptyString) {
    strmsg_ = new ::std::string;
  }
  strmsg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_CHANNEL_CHAT_SC::mutable_strmsg() {
  set_has_strmsg();
  if (strmsg_ == &::google::protobuf::internal::kEmptyString) {
    strmsg_ = new ::std::string;
  }
  return strmsg_;
}
inline ::std::string* CMD_CHANNEL_CHAT_SC::release_strmsg() {
  clear_has_strmsg();
  if (strmsg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmsg_;
    strmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_CHANNEL_CHAT_SC::set_allocated_strmsg(::std::string* strmsg) {
  if (strmsg_ != &::google::protobuf::internal::kEmptyString) {
    delete strmsg_;
  }
  if (strmsg) {
    set_has_strmsg();
    strmsg_ = strmsg;
  } else {
    clear_has_strmsg();
    strmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iChannel = 4;
inline bool CMD_CHANNEL_CHAT_SC::has_ichannel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_CHANNEL_CHAT_SC::set_has_ichannel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_CHANNEL_CHAT_SC::clear_has_ichannel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_CHANNEL_CHAT_SC::clear_ichannel() {
  ichannel_ = 0;
  clear_has_ichannel();
}
inline ::google::protobuf::int32 CMD_CHANNEL_CHAT_SC::ichannel() const {
  return ichannel_;
}
inline void CMD_CHANNEL_CHAT_SC::set_ichannel(::google::protobuf::int32 value) {
  set_has_ichannel();
  ichannel_ = value;
}

// -------------------------------------------------------------------

// CMD_WHISPER_CS

// required string strRecver = 1;
inline bool CMD_WHISPER_CS::has_strrecver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_WHISPER_CS::set_has_strrecver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_WHISPER_CS::clear_has_strrecver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_WHISPER_CS::clear_strrecver() {
  if (strrecver_ != &::google::protobuf::internal::kEmptyString) {
    strrecver_->clear();
  }
  clear_has_strrecver();
}
inline const ::std::string& CMD_WHISPER_CS::strrecver() const {
  return *strrecver_;
}
inline void CMD_WHISPER_CS::set_strrecver(const ::std::string& value) {
  set_has_strrecver();
  if (strrecver_ == &::google::protobuf::internal::kEmptyString) {
    strrecver_ = new ::std::string;
  }
  strrecver_->assign(value);
}
inline void CMD_WHISPER_CS::set_strrecver(const char* value) {
  set_has_strrecver();
  if (strrecver_ == &::google::protobuf::internal::kEmptyString) {
    strrecver_ = new ::std::string;
  }
  strrecver_->assign(value);
}
inline void CMD_WHISPER_CS::set_strrecver(const char* value, size_t size) {
  set_has_strrecver();
  if (strrecver_ == &::google::protobuf::internal::kEmptyString) {
    strrecver_ = new ::std::string;
  }
  strrecver_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_WHISPER_CS::mutable_strrecver() {
  set_has_strrecver();
  if (strrecver_ == &::google::protobuf::internal::kEmptyString) {
    strrecver_ = new ::std::string;
  }
  return strrecver_;
}
inline ::std::string* CMD_WHISPER_CS::release_strrecver() {
  clear_has_strrecver();
  if (strrecver_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strrecver_;
    strrecver_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_WHISPER_CS::set_allocated_strrecver(::std::string* strrecver) {
  if (strrecver_ != &::google::protobuf::internal::kEmptyString) {
    delete strrecver_;
  }
  if (strrecver) {
    set_has_strrecver();
    strrecver_ = strrecver;
  } else {
    clear_has_strrecver();
    strrecver_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strMsg = 2;
inline bool CMD_WHISPER_CS::has_strmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_WHISPER_CS::set_has_strmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_WHISPER_CS::clear_has_strmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_WHISPER_CS::clear_strmsg() {
  if (strmsg_ != &::google::protobuf::internal::kEmptyString) {
    strmsg_->clear();
  }
  clear_has_strmsg();
}
inline const ::std::string& CMD_WHISPER_CS::strmsg() const {
  return *strmsg_;
}
inline void CMD_WHISPER_CS::set_strmsg(const ::std::string& value) {
  set_has_strmsg();
  if (strmsg_ == &::google::protobuf::internal::kEmptyString) {
    strmsg_ = new ::std::string;
  }
  strmsg_->assign(value);
}
inline void CMD_WHISPER_CS::set_strmsg(const char* value) {
  set_has_strmsg();
  if (strmsg_ == &::google::protobuf::internal::kEmptyString) {
    strmsg_ = new ::std::string;
  }
  strmsg_->assign(value);
}
inline void CMD_WHISPER_CS::set_strmsg(const char* value, size_t size) {
  set_has_strmsg();
  if (strmsg_ == &::google::protobuf::internal::kEmptyString) {
    strmsg_ = new ::std::string;
  }
  strmsg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_WHISPER_CS::mutable_strmsg() {
  set_has_strmsg();
  if (strmsg_ == &::google::protobuf::internal::kEmptyString) {
    strmsg_ = new ::std::string;
  }
  return strmsg_;
}
inline ::std::string* CMD_WHISPER_CS::release_strmsg() {
  clear_has_strmsg();
  if (strmsg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmsg_;
    strmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_WHISPER_CS::set_allocated_strmsg(::std::string* strmsg) {
  if (strmsg_ != &::google::protobuf::internal::kEmptyString) {
    delete strmsg_;
  }
  if (strmsg) {
    set_has_strmsg();
    strmsg_ = strmsg;
  } else {
    clear_has_strmsg();
    strmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_WHISPER_SC

// required string strSender = 1;
inline bool CMD_WHISPER_SC::has_strsender() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_WHISPER_SC::set_has_strsender() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_WHISPER_SC::clear_has_strsender() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_WHISPER_SC::clear_strsender() {
  if (strsender_ != &::google::protobuf::internal::kEmptyString) {
    strsender_->clear();
  }
  clear_has_strsender();
}
inline const ::std::string& CMD_WHISPER_SC::strsender() const {
  return *strsender_;
}
inline void CMD_WHISPER_SC::set_strsender(const ::std::string& value) {
  set_has_strsender();
  if (strsender_ == &::google::protobuf::internal::kEmptyString) {
    strsender_ = new ::std::string;
  }
  strsender_->assign(value);
}
inline void CMD_WHISPER_SC::set_strsender(const char* value) {
  set_has_strsender();
  if (strsender_ == &::google::protobuf::internal::kEmptyString) {
    strsender_ = new ::std::string;
  }
  strsender_->assign(value);
}
inline void CMD_WHISPER_SC::set_strsender(const char* value, size_t size) {
  set_has_strsender();
  if (strsender_ == &::google::protobuf::internal::kEmptyString) {
    strsender_ = new ::std::string;
  }
  strsender_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_WHISPER_SC::mutable_strsender() {
  set_has_strsender();
  if (strsender_ == &::google::protobuf::internal::kEmptyString) {
    strsender_ = new ::std::string;
  }
  return strsender_;
}
inline ::std::string* CMD_WHISPER_SC::release_strsender() {
  clear_has_strsender();
  if (strsender_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strsender_;
    strsender_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_WHISPER_SC::set_allocated_strsender(::std::string* strsender) {
  if (strsender_ != &::google::protobuf::internal::kEmptyString) {
    delete strsender_;
  }
  if (strsender) {
    set_has_strsender();
    strsender_ = strsender;
  } else {
    clear_has_strsender();
    strsender_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .GSProto.PBPkRole senderKey = 2;
inline bool CMD_WHISPER_SC::has_senderkey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_WHISPER_SC::set_has_senderkey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_WHISPER_SC::clear_has_senderkey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_WHISPER_SC::clear_senderkey() {
  if (senderkey_ != NULL) senderkey_->::GSProto::PBPkRole::Clear();
  clear_has_senderkey();
}
inline const ::GSProto::PBPkRole& CMD_WHISPER_SC::senderkey() const {
  return senderkey_ != NULL ? *senderkey_ : *default_instance_->senderkey_;
}
inline ::GSProto::PBPkRole* CMD_WHISPER_SC::mutable_senderkey() {
  set_has_senderkey();
  if (senderkey_ == NULL) senderkey_ = new ::GSProto::PBPkRole;
  return senderkey_;
}
inline ::GSProto::PBPkRole* CMD_WHISPER_SC::release_senderkey() {
  clear_has_senderkey();
  ::GSProto::PBPkRole* temp = senderkey_;
  senderkey_ = NULL;
  return temp;
}
inline void CMD_WHISPER_SC::set_allocated_senderkey(::GSProto::PBPkRole* senderkey) {
  delete senderkey_;
  senderkey_ = senderkey;
  if (senderkey) {
    set_has_senderkey();
  } else {
    clear_has_senderkey();
  }
}

// required string strRecver = 3;
inline bool CMD_WHISPER_SC::has_strrecver() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_WHISPER_SC::set_has_strrecver() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_WHISPER_SC::clear_has_strrecver() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_WHISPER_SC::clear_strrecver() {
  if (strrecver_ != &::google::protobuf::internal::kEmptyString) {
    strrecver_->clear();
  }
  clear_has_strrecver();
}
inline const ::std::string& CMD_WHISPER_SC::strrecver() const {
  return *strrecver_;
}
inline void CMD_WHISPER_SC::set_strrecver(const ::std::string& value) {
  set_has_strrecver();
  if (strrecver_ == &::google::protobuf::internal::kEmptyString) {
    strrecver_ = new ::std::string;
  }
  strrecver_->assign(value);
}
inline void CMD_WHISPER_SC::set_strrecver(const char* value) {
  set_has_strrecver();
  if (strrecver_ == &::google::protobuf::internal::kEmptyString) {
    strrecver_ = new ::std::string;
  }
  strrecver_->assign(value);
}
inline void CMD_WHISPER_SC::set_strrecver(const char* value, size_t size) {
  set_has_strrecver();
  if (strrecver_ == &::google::protobuf::internal::kEmptyString) {
    strrecver_ = new ::std::string;
  }
  strrecver_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_WHISPER_SC::mutable_strrecver() {
  set_has_strrecver();
  if (strrecver_ == &::google::protobuf::internal::kEmptyString) {
    strrecver_ = new ::std::string;
  }
  return strrecver_;
}
inline ::std::string* CMD_WHISPER_SC::release_strrecver() {
  clear_has_strrecver();
  if (strrecver_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strrecver_;
    strrecver_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_WHISPER_SC::set_allocated_strrecver(::std::string* strrecver) {
  if (strrecver_ != &::google::protobuf::internal::kEmptyString) {
    delete strrecver_;
  }
  if (strrecver) {
    set_has_strrecver();
    strrecver_ = strrecver;
  } else {
    clear_has_strrecver();
    strrecver_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .GSProto.PBPkRole recverKey = 4;
inline bool CMD_WHISPER_SC::has_recverkey() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_WHISPER_SC::set_has_recverkey() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_WHISPER_SC::clear_has_recverkey() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_WHISPER_SC::clear_recverkey() {
  if (recverkey_ != NULL) recverkey_->::GSProto::PBPkRole::Clear();
  clear_has_recverkey();
}
inline const ::GSProto::PBPkRole& CMD_WHISPER_SC::recverkey() const {
  return recverkey_ != NULL ? *recverkey_ : *default_instance_->recverkey_;
}
inline ::GSProto::PBPkRole* CMD_WHISPER_SC::mutable_recverkey() {
  set_has_recverkey();
  if (recverkey_ == NULL) recverkey_ = new ::GSProto::PBPkRole;
  return recverkey_;
}
inline ::GSProto::PBPkRole* CMD_WHISPER_SC::release_recverkey() {
  clear_has_recverkey();
  ::GSProto::PBPkRole* temp = recverkey_;
  recverkey_ = NULL;
  return temp;
}
inline void CMD_WHISPER_SC::set_allocated_recverkey(::GSProto::PBPkRole* recverkey) {
  delete recverkey_;
  recverkey_ = recverkey;
  if (recverkey) {
    set_has_recverkey();
  } else {
    clear_has_recverkey();
  }
}

// required string strMsg = 5;
inline bool CMD_WHISPER_SC::has_strmsg() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_WHISPER_SC::set_has_strmsg() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_WHISPER_SC::clear_has_strmsg() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_WHISPER_SC::clear_strmsg() {
  if (strmsg_ != &::google::protobuf::internal::kEmptyString) {
    strmsg_->clear();
  }
  clear_has_strmsg();
}
inline const ::std::string& CMD_WHISPER_SC::strmsg() const {
  return *strmsg_;
}
inline void CMD_WHISPER_SC::set_strmsg(const ::std::string& value) {
  set_has_strmsg();
  if (strmsg_ == &::google::protobuf::internal::kEmptyString) {
    strmsg_ = new ::std::string;
  }
  strmsg_->assign(value);
}
inline void CMD_WHISPER_SC::set_strmsg(const char* value) {
  set_has_strmsg();
  if (strmsg_ == &::google::protobuf::internal::kEmptyString) {
    strmsg_ = new ::std::string;
  }
  strmsg_->assign(value);
}
inline void CMD_WHISPER_SC::set_strmsg(const char* value, size_t size) {
  set_has_strmsg();
  if (strmsg_ == &::google::protobuf::internal::kEmptyString) {
    strmsg_ = new ::std::string;
  }
  strmsg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_WHISPER_SC::mutable_strmsg() {
  set_has_strmsg();
  if (strmsg_ == &::google::protobuf::internal::kEmptyString) {
    strmsg_ = new ::std::string;
  }
  return strmsg_;
}
inline ::std::string* CMD_WHISPER_SC::release_strmsg() {
  clear_has_strmsg();
  if (strmsg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmsg_;
    strmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_WHISPER_SC::set_allocated_strmsg(::std::string* strmsg) {
  if (strmsg_ != &::google::protobuf::internal::kEmptyString) {
    delete strmsg_;
  }
  if (strmsg) {
    set_has_strmsg();
    strmsg_ = strmsg;
  } else {
    clear_has_strmsg();
    strmsg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// LegionBossRankItem

// required string strName = 1;
inline bool LegionBossRankItem::has_strname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegionBossRankItem::set_has_strname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegionBossRankItem::clear_has_strname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegionBossRankItem::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& LegionBossRankItem::strname() const {
  return *strname_;
}
inline void LegionBossRankItem::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void LegionBossRankItem::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void LegionBossRankItem::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionBossRankItem::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* LegionBossRankItem::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionBossRankItem::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iDamageValue = 2;
inline bool LegionBossRankItem::has_idamagevalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionBossRankItem::set_has_idamagevalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionBossRankItem::clear_has_idamagevalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionBossRankItem::clear_idamagevalue() {
  idamagevalue_ = 0;
  clear_has_idamagevalue();
}
inline ::google::protobuf::int32 LegionBossRankItem::idamagevalue() const {
  return idamagevalue_;
}
inline void LegionBossRankItem::set_idamagevalue(::google::protobuf::int32 value) {
  set_has_idamagevalue();
  idamagevalue_ = value;
}

// -------------------------------------------------------------------

// LegionBossPreCall

// required int32 iCallCDSecond = 1;
inline bool LegionBossPreCall::has_icallcdsecond() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegionBossPreCall::set_has_icallcdsecond() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegionBossPreCall::clear_has_icallcdsecond() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegionBossPreCall::clear_icallcdsecond() {
  icallcdsecond_ = 0;
  clear_has_icallcdsecond();
}
inline ::google::protobuf::int32 LegionBossPreCall::icallcdsecond() const {
  return icallcdsecond_;
}
inline void LegionBossPreCall::set_icallcdsecond(::google::protobuf::int32 value) {
  set_has_icallcdsecond();
  icallcdsecond_ = value;
}

// required int32 iBossMaxHP = 2;
inline bool LegionBossPreCall::has_ibossmaxhp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionBossPreCall::set_has_ibossmaxhp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionBossPreCall::clear_has_ibossmaxhp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionBossPreCall::clear_ibossmaxhp() {
  ibossmaxhp_ = 0;
  clear_has_ibossmaxhp();
}
inline ::google::protobuf::int32 LegionBossPreCall::ibossmaxhp() const {
  return ibossmaxhp_;
}
inline void LegionBossPreCall::set_ibossmaxhp(::google::protobuf::int32 value) {
  set_has_ibossmaxhp();
  ibossmaxhp_ = value;
}

// required int32 iBossHP = 3;
inline bool LegionBossPreCall::has_ibosshp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionBossPreCall::set_has_ibosshp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionBossPreCall::clear_has_ibosshp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionBossPreCall::clear_ibosshp() {
  ibosshp_ = 0;
  clear_has_ibosshp();
}
inline ::google::protobuf::int32 LegionBossPreCall::ibosshp() const {
  return ibosshp_;
}
inline void LegionBossPreCall::set_ibosshp(::google::protobuf::int32 value) {
  set_has_ibosshp();
  ibosshp_ = value;
}

// -------------------------------------------------------------------

// LegionBossFightInfo

// required int32 iLeftKillSecond = 1;
inline bool LegionBossFightInfo::has_ileftkillsecond() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegionBossFightInfo::set_has_ileftkillsecond() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegionBossFightInfo::clear_has_ileftkillsecond() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegionBossFightInfo::clear_ileftkillsecond() {
  ileftkillsecond_ = 0;
  clear_has_ileftkillsecond();
}
inline ::google::protobuf::int32 LegionBossFightInfo::ileftkillsecond() const {
  return ileftkillsecond_;
}
inline void LegionBossFightInfo::set_ileftkillsecond(::google::protobuf::int32 value) {
  set_has_ileftkillsecond();
  ileftkillsecond_ = value;
}

// repeated .GSProto.LegionBossRankItem szRankList = 2;
inline int LegionBossFightInfo::szranklist_size() const {
  return szranklist_.size();
}
inline void LegionBossFightInfo::clear_szranklist() {
  szranklist_.Clear();
}
inline const ::GSProto::LegionBossRankItem& LegionBossFightInfo::szranklist(int index) const {
  return szranklist_.Get(index);
}
inline ::GSProto::LegionBossRankItem* LegionBossFightInfo::mutable_szranklist(int index) {
  return szranklist_.Mutable(index);
}
inline ::GSProto::LegionBossRankItem* LegionBossFightInfo::add_szranklist() {
  return szranklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBossRankItem >&
LegionBossFightInfo::szranklist() const {
  return szranklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBossRankItem >*
LegionBossFightInfo::mutable_szranklist() {
  return &szranklist_;
}

// required int32 iCheeredCount = 3;
inline bool LegionBossFightInfo::has_icheeredcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionBossFightInfo::set_has_icheeredcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionBossFightInfo::clear_has_icheeredcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionBossFightInfo::clear_icheeredcount() {
  icheeredcount_ = 0;
  clear_has_icheeredcount();
}
inline ::google::protobuf::int32 LegionBossFightInfo::icheeredcount() const {
  return icheeredcount_;
}
inline void LegionBossFightInfo::set_icheeredcount(::google::protobuf::int32 value) {
  set_has_icheeredcount();
  icheeredcount_ = value;
}

// required int32 iSelfDamage = 4;
inline bool LegionBossFightInfo::has_iselfdamage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LegionBossFightInfo::set_has_iselfdamage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LegionBossFightInfo::clear_has_iselfdamage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LegionBossFightInfo::clear_iselfdamage() {
  iselfdamage_ = 0;
  clear_has_iselfdamage();
}
inline ::google::protobuf::int32 LegionBossFightInfo::iselfdamage() const {
  return iselfdamage_;
}
inline void LegionBossFightInfo::set_iselfdamage(::google::protobuf::int32 value) {
  set_has_iselfdamage();
  iselfdamage_ = value;
}

// required int32 iSumSilver = 5;
inline bool LegionBossFightInfo::has_isumsilver() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LegionBossFightInfo::set_has_isumsilver() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LegionBossFightInfo::clear_has_isumsilver() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LegionBossFightInfo::clear_isumsilver() {
  isumsilver_ = 0;
  clear_has_isumsilver();
}
inline ::google::protobuf::int32 LegionBossFightInfo::isumsilver() const {
  return isumsilver_;
}
inline void LegionBossFightInfo::set_isumsilver(::google::protobuf::int32 value) {
  set_has_isumsilver();
  isumsilver_ = value;
}

// required int32 iSumHonor = 6;
inline bool LegionBossFightInfo::has_isumhonor() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LegionBossFightInfo::set_has_isumhonor() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LegionBossFightInfo::clear_has_isumhonor() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LegionBossFightInfo::clear_isumhonor() {
  isumhonor_ = 0;
  clear_has_isumhonor();
}
inline ::google::protobuf::int32 LegionBossFightInfo::isumhonor() const {
  return isumhonor_;
}
inline void LegionBossFightInfo::set_isumhonor(::google::protobuf::int32 value) {
  set_has_isumhonor();
  isumhonor_ = value;
}

// optional int32 iReliveCD = 7;
inline bool LegionBossFightInfo::has_irelivecd() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LegionBossFightInfo::set_has_irelivecd() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LegionBossFightInfo::clear_has_irelivecd() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LegionBossFightInfo::clear_irelivecd() {
  irelivecd_ = 0;
  clear_has_irelivecd();
}
inline ::google::protobuf::int32 LegionBossFightInfo::irelivecd() const {
  return irelivecd_;
}
inline void LegionBossFightInfo::set_irelivecd(::google::protobuf::int32 value) {
  set_has_irelivecd();
  irelivecd_ = value;
}

// required int32 iBossMaxHP = 8;
inline bool LegionBossFightInfo::has_ibossmaxhp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LegionBossFightInfo::set_has_ibossmaxhp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LegionBossFightInfo::clear_has_ibossmaxhp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LegionBossFightInfo::clear_ibossmaxhp() {
  ibossmaxhp_ = 0;
  clear_has_ibossmaxhp();
}
inline ::google::protobuf::int32 LegionBossFightInfo::ibossmaxhp() const {
  return ibossmaxhp_;
}
inline void LegionBossFightInfo::set_ibossmaxhp(::google::protobuf::int32 value) {
  set_has_ibossmaxhp();
  ibossmaxhp_ = value;
}

// required int32 iBossHP = 9;
inline bool LegionBossFightInfo::has_ibosshp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LegionBossFightInfo::set_has_ibosshp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LegionBossFightInfo::clear_has_ibosshp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LegionBossFightInfo::clear_ibosshp() {
  ibosshp_ = 0;
  clear_has_ibosshp();
}
inline ::google::protobuf::int32 LegionBossFightInfo::ibosshp() const {
  return ibosshp_;
}
inline void LegionBossFightInfo::set_ibosshp(::google::protobuf::int32 value) {
  set_has_ibosshp();
  ibosshp_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_LEGIONBOSS_SC

// required bool bCalled = 1;
inline bool CMD_QUERY_LEGIONBOSS_SC::has_bcalled() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_LEGIONBOSS_SC::set_has_bcalled() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_LEGIONBOSS_SC::clear_has_bcalled() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_LEGIONBOSS_SC::clear_bcalled() {
  bcalled_ = false;
  clear_has_bcalled();
}
inline bool CMD_QUERY_LEGIONBOSS_SC::bcalled() const {
  return bcalled_;
}
inline void CMD_QUERY_LEGIONBOSS_SC::set_bcalled(bool value) {
  set_has_bcalled();
  bcalled_ = value;
}

// optional .GSProto.LegionBossPreCall preCallInfo = 2;
inline bool CMD_QUERY_LEGIONBOSS_SC::has_precallinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_QUERY_LEGIONBOSS_SC::set_has_precallinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_QUERY_LEGIONBOSS_SC::clear_has_precallinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_QUERY_LEGIONBOSS_SC::clear_precallinfo() {
  if (precallinfo_ != NULL) precallinfo_->::GSProto::LegionBossPreCall::Clear();
  clear_has_precallinfo();
}
inline const ::GSProto::LegionBossPreCall& CMD_QUERY_LEGIONBOSS_SC::precallinfo() const {
  return precallinfo_ != NULL ? *precallinfo_ : *default_instance_->precallinfo_;
}
inline ::GSProto::LegionBossPreCall* CMD_QUERY_LEGIONBOSS_SC::mutable_precallinfo() {
  set_has_precallinfo();
  if (precallinfo_ == NULL) precallinfo_ = new ::GSProto::LegionBossPreCall;
  return precallinfo_;
}
inline ::GSProto::LegionBossPreCall* CMD_QUERY_LEGIONBOSS_SC::release_precallinfo() {
  clear_has_precallinfo();
  ::GSProto::LegionBossPreCall* temp = precallinfo_;
  precallinfo_ = NULL;
  return temp;
}
inline void CMD_QUERY_LEGIONBOSS_SC::set_allocated_precallinfo(::GSProto::LegionBossPreCall* precallinfo) {
  delete precallinfo_;
  precallinfo_ = precallinfo;
  if (precallinfo) {
    set_has_precallinfo();
  } else {
    clear_has_precallinfo();
  }
}

// optional .GSProto.LegionBossFightInfo fightInfo = 3;
inline bool CMD_QUERY_LEGIONBOSS_SC::has_fightinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_QUERY_LEGIONBOSS_SC::set_has_fightinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_QUERY_LEGIONBOSS_SC::clear_has_fightinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_QUERY_LEGIONBOSS_SC::clear_fightinfo() {
  if (fightinfo_ != NULL) fightinfo_->::GSProto::LegionBossFightInfo::Clear();
  clear_has_fightinfo();
}
inline const ::GSProto::LegionBossFightInfo& CMD_QUERY_LEGIONBOSS_SC::fightinfo() const {
  return fightinfo_ != NULL ? *fightinfo_ : *default_instance_->fightinfo_;
}
inline ::GSProto::LegionBossFightInfo* CMD_QUERY_LEGIONBOSS_SC::mutable_fightinfo() {
  set_has_fightinfo();
  if (fightinfo_ == NULL) fightinfo_ = new ::GSProto::LegionBossFightInfo;
  return fightinfo_;
}
inline ::GSProto::LegionBossFightInfo* CMD_QUERY_LEGIONBOSS_SC::release_fightinfo() {
  clear_has_fightinfo();
  ::GSProto::LegionBossFightInfo* temp = fightinfo_;
  fightinfo_ = NULL;
  return temp;
}
inline void CMD_QUERY_LEGIONBOSS_SC::set_allocated_fightinfo(::GSProto::LegionBossFightInfo* fightinfo) {
  delete fightinfo_;
  fightinfo_ = fightinfo;
  if (fightinfo) {
    set_has_fightinfo();
  } else {
    clear_has_fightinfo();
  }
}

// -------------------------------------------------------------------

// CMD_LEGIONBOSS_END_SC

// required bool bKill = 1;
inline bool CMD_LEGIONBOSS_END_SC::has_bkill() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_LEGIONBOSS_END_SC::set_has_bkill() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_LEGIONBOSS_END_SC::clear_has_bkill() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_LEGIONBOSS_END_SC::clear_bkill() {
  bkill_ = false;
  clear_has_bkill();
}
inline bool CMD_LEGIONBOSS_END_SC::bkill() const {
  return bkill_;
}
inline void CMD_LEGIONBOSS_END_SC::set_bkill(bool value) {
  set_has_bkill();
  bkill_ = value;
}

// required int32 iRank = 2;
inline bool CMD_LEGIONBOSS_END_SC::has_irank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_LEGIONBOSS_END_SC::set_has_irank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_LEGIONBOSS_END_SC::clear_has_irank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_LEGIONBOSS_END_SC::clear_irank() {
  irank_ = 0;
  clear_has_irank();
}
inline ::google::protobuf::int32 CMD_LEGIONBOSS_END_SC::irank() const {
  return irank_;
}
inline void CMD_LEGIONBOSS_END_SC::set_irank(::google::protobuf::int32 value) {
  set_has_irank();
  irank_ = value;
}

// required int32 iDamage = 3;
inline bool CMD_LEGIONBOSS_END_SC::has_idamage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_LEGIONBOSS_END_SC::set_has_idamage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_LEGIONBOSS_END_SC::clear_has_idamage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_LEGIONBOSS_END_SC::clear_idamage() {
  idamage_ = 0;
  clear_has_idamage();
}
inline ::google::protobuf::int32 CMD_LEGIONBOSS_END_SC::idamage() const {
  return idamage_;
}
inline void CMD_LEGIONBOSS_END_SC::set_idamage(::google::protobuf::int32 value) {
  set_has_idamage();
  idamage_ = value;
}

// required int32 iAwardSilver = 4;
inline bool CMD_LEGIONBOSS_END_SC::has_iawardsilver() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_LEGIONBOSS_END_SC::set_has_iawardsilver() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_LEGIONBOSS_END_SC::clear_has_iawardsilver() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_LEGIONBOSS_END_SC::clear_iawardsilver() {
  iawardsilver_ = 0;
  clear_has_iawardsilver();
}
inline ::google::protobuf::int32 CMD_LEGIONBOSS_END_SC::iawardsilver() const {
  return iawardsilver_;
}
inline void CMD_LEGIONBOSS_END_SC::set_iawardsilver(::google::protobuf::int32 value) {
  set_has_iawardsilver();
  iawardsilver_ = value;
}

// required int32 iAwardHonor = 5;
inline bool CMD_LEGIONBOSS_END_SC::has_iawardhonor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_LEGIONBOSS_END_SC::set_has_iawardhonor() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_LEGIONBOSS_END_SC::clear_has_iawardhonor() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_LEGIONBOSS_END_SC::clear_iawardhonor() {
  iawardhonor_ = 0;
  clear_has_iawardhonor();
}
inline ::google::protobuf::int32 CMD_LEGIONBOSS_END_SC::iawardhonor() const {
  return iawardhonor_;
}
inline void CMD_LEGIONBOSS_END_SC::set_iawardhonor(::google::protobuf::int32 value) {
  set_has_iawardhonor();
  iawardhonor_ = value;
}

// -------------------------------------------------------------------

// CMD_CALL_LEGIONBOSS_SC

// required .GSProto.LegionBossFightInfo fightInfo = 3;
inline bool CMD_CALL_LEGIONBOSS_SC::has_fightinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_CALL_LEGIONBOSS_SC::set_has_fightinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_CALL_LEGIONBOSS_SC::clear_has_fightinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_CALL_LEGIONBOSS_SC::clear_fightinfo() {
  if (fightinfo_ != NULL) fightinfo_->::GSProto::LegionBossFightInfo::Clear();
  clear_has_fightinfo();
}
inline const ::GSProto::LegionBossFightInfo& CMD_CALL_LEGIONBOSS_SC::fightinfo() const {
  return fightinfo_ != NULL ? *fightinfo_ : *default_instance_->fightinfo_;
}
inline ::GSProto::LegionBossFightInfo* CMD_CALL_LEGIONBOSS_SC::mutable_fightinfo() {
  set_has_fightinfo();
  if (fightinfo_ == NULL) fightinfo_ = new ::GSProto::LegionBossFightInfo;
  return fightinfo_;
}
inline ::GSProto::LegionBossFightInfo* CMD_CALL_LEGIONBOSS_SC::release_fightinfo() {
  clear_has_fightinfo();
  ::GSProto::LegionBossFightInfo* temp = fightinfo_;
  fightinfo_ = NULL;
  return temp;
}
inline void CMD_CALL_LEGIONBOSS_SC::set_allocated_fightinfo(::GSProto::LegionBossFightInfo* fightinfo) {
  delete fightinfo_;
  fightinfo_ = fightinfo;
  if (fightinfo) {
    set_has_fightinfo();
  } else {
    clear_has_fightinfo();
  }
}

// -------------------------------------------------------------------

// CMD_CHEER_LEGIONBOSS_SC

// required int32 iCheerCount = 1;
inline bool CMD_CHEER_LEGIONBOSS_SC::has_icheercount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_CHEER_LEGIONBOSS_SC::set_has_icheercount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_CHEER_LEGIONBOSS_SC::clear_has_icheercount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_CHEER_LEGIONBOSS_SC::clear_icheercount() {
  icheercount_ = 0;
  clear_has_icheercount();
}
inline ::google::protobuf::int32 CMD_CHEER_LEGIONBOSS_SC::icheercount() const {
  return icheercount_;
}
inline void CMD_CHEER_LEGIONBOSS_SC::set_icheercount(::google::protobuf::int32 value) {
  set_has_icheercount();
  icheercount_ = value;
}

// -------------------------------------------------------------------

// LegionBossUpdate

// repeated .GSProto.LegionBossRankItem szRankList = 1;
inline int LegionBossUpdate::szranklist_size() const {
  return szranklist_.size();
}
inline void LegionBossUpdate::clear_szranklist() {
  szranklist_.Clear();
}
inline const ::GSProto::LegionBossRankItem& LegionBossUpdate::szranklist(int index) const {
  return szranklist_.Get(index);
}
inline ::GSProto::LegionBossRankItem* LegionBossUpdate::mutable_szranklist(int index) {
  return szranklist_.Mutable(index);
}
inline ::GSProto::LegionBossRankItem* LegionBossUpdate::add_szranklist() {
  return szranklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBossRankItem >&
LegionBossUpdate::szranklist() const {
  return szranklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBossRankItem >*
LegionBossUpdate::mutable_szranklist() {
  return &szranklist_;
}

// required int32 iBossMaxHP = 2;
inline bool LegionBossUpdate::has_ibossmaxhp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionBossUpdate::set_has_ibossmaxhp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionBossUpdate::clear_has_ibossmaxhp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionBossUpdate::clear_ibossmaxhp() {
  ibossmaxhp_ = 0;
  clear_has_ibossmaxhp();
}
inline ::google::protobuf::int32 LegionBossUpdate::ibossmaxhp() const {
  return ibossmaxhp_;
}
inline void LegionBossUpdate::set_ibossmaxhp(::google::protobuf::int32 value) {
  set_has_ibossmaxhp();
  ibossmaxhp_ = value;
}

// required int32 iBossHP = 3;
inline bool LegionBossUpdate::has_ibosshp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionBossUpdate::set_has_ibosshp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionBossUpdate::clear_has_ibosshp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionBossUpdate::clear_ibosshp() {
  ibosshp_ = 0;
  clear_has_ibosshp();
}
inline ::google::protobuf::int32 LegionBossUpdate::ibosshp() const {
  return ibosshp_;
}
inline void LegionBossUpdate::set_ibosshp(::google::protobuf::int32 value) {
  set_has_ibosshp();
  ibosshp_ = value;
}

// -------------------------------------------------------------------

// CMD_UPDATE_LEGIONBOSS_SC

// required .GSProto.LegionBossUpdate updateInfo = 1;
inline bool CMD_UPDATE_LEGIONBOSS_SC::has_updateinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_UPDATE_LEGIONBOSS_SC::set_has_updateinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_UPDATE_LEGIONBOSS_SC::clear_has_updateinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_UPDATE_LEGIONBOSS_SC::clear_updateinfo() {
  if (updateinfo_ != NULL) updateinfo_->::GSProto::LegionBossUpdate::Clear();
  clear_has_updateinfo();
}
inline const ::GSProto::LegionBossUpdate& CMD_UPDATE_LEGIONBOSS_SC::updateinfo() const {
  return updateinfo_ != NULL ? *updateinfo_ : *default_instance_->updateinfo_;
}
inline ::GSProto::LegionBossUpdate* CMD_UPDATE_LEGIONBOSS_SC::mutable_updateinfo() {
  set_has_updateinfo();
  if (updateinfo_ == NULL) updateinfo_ = new ::GSProto::LegionBossUpdate;
  return updateinfo_;
}
inline ::GSProto::LegionBossUpdate* CMD_UPDATE_LEGIONBOSS_SC::release_updateinfo() {
  clear_has_updateinfo();
  ::GSProto::LegionBossUpdate* temp = updateinfo_;
  updateinfo_ = NULL;
  return temp;
}
inline void CMD_UPDATE_LEGIONBOSS_SC::set_allocated_updateinfo(::GSProto::LegionBossUpdate* updateinfo) {
  delete updateinfo_;
  updateinfo_ = updateinfo;
  if (updateinfo) {
    set_has_updateinfo();
  } else {
    clear_has_updateinfo();
  }
}

// -------------------------------------------------------------------

// WorldBossRankItem

// required string strName = 1;
inline bool WorldBossRankItem::has_strname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldBossRankItem::set_has_strname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldBossRankItem::clear_has_strname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldBossRankItem::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& WorldBossRankItem::strname() const {
  return *strname_;
}
inline void WorldBossRankItem::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void WorldBossRankItem::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void WorldBossRankItem::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WorldBossRankItem::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* WorldBossRankItem::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WorldBossRankItem::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iDamageValue = 2;
inline bool WorldBossRankItem::has_idamagevalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldBossRankItem::set_has_idamagevalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldBossRankItem::clear_has_idamagevalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldBossRankItem::clear_idamagevalue() {
  idamagevalue_ = 0;
  clear_has_idamagevalue();
}
inline ::google::protobuf::int32 WorldBossRankItem::idamagevalue() const {
  return idamagevalue_;
}
inline void WorldBossRankItem::set_idamagevalue(::google::protobuf::int32 value) {
  set_has_idamagevalue();
  idamagevalue_ = value;
}

// -------------------------------------------------------------------

// WorldBossPreStart

// required int32 iWaitSecond = 1;
inline bool WorldBossPreStart::has_iwaitsecond() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldBossPreStart::set_has_iwaitsecond() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldBossPreStart::clear_has_iwaitsecond() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldBossPreStart::clear_iwaitsecond() {
  iwaitsecond_ = 0;
  clear_has_iwaitsecond();
}
inline ::google::protobuf::int32 WorldBossPreStart::iwaitsecond() const {
  return iwaitsecond_;
}
inline void WorldBossPreStart::set_iwaitsecond(::google::protobuf::int32 value) {
  set_has_iwaitsecond();
  iwaitsecond_ = value;
}

// required int32 iBossMaxHP = 2;
inline bool WorldBossPreStart::has_ibossmaxhp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldBossPreStart::set_has_ibossmaxhp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldBossPreStart::clear_has_ibossmaxhp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldBossPreStart::clear_ibossmaxhp() {
  ibossmaxhp_ = 0;
  clear_has_ibossmaxhp();
}
inline ::google::protobuf::int32 WorldBossPreStart::ibossmaxhp() const {
  return ibossmaxhp_;
}
inline void WorldBossPreStart::set_ibossmaxhp(::google::protobuf::int32 value) {
  set_has_ibossmaxhp();
  ibossmaxhp_ = value;
}

// required int32 iBossHP = 3;
inline bool WorldBossPreStart::has_ibosshp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldBossPreStart::set_has_ibosshp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldBossPreStart::clear_has_ibosshp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldBossPreStart::clear_ibosshp() {
  ibosshp_ = 0;
  clear_has_ibosshp();
}
inline ::google::protobuf::int32 WorldBossPreStart::ibosshp() const {
  return ibosshp_;
}
inline void WorldBossPreStart::set_ibosshp(::google::protobuf::int32 value) {
  set_has_ibosshp();
  ibosshp_ = value;
}

// -------------------------------------------------------------------

// WorldBossFightInfo

// required int32 iLeftKillSecond = 1;
inline bool WorldBossFightInfo::has_ileftkillsecond() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldBossFightInfo::set_has_ileftkillsecond() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldBossFightInfo::clear_has_ileftkillsecond() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldBossFightInfo::clear_ileftkillsecond() {
  ileftkillsecond_ = 0;
  clear_has_ileftkillsecond();
}
inline ::google::protobuf::int32 WorldBossFightInfo::ileftkillsecond() const {
  return ileftkillsecond_;
}
inline void WorldBossFightInfo::set_ileftkillsecond(::google::protobuf::int32 value) {
  set_has_ileftkillsecond();
  ileftkillsecond_ = value;
}

// repeated .GSProto.WorldBossRankItem szRankList = 2;
inline int WorldBossFightInfo::szranklist_size() const {
  return szranklist_.size();
}
inline void WorldBossFightInfo::clear_szranklist() {
  szranklist_.Clear();
}
inline const ::GSProto::WorldBossRankItem& WorldBossFightInfo::szranklist(int index) const {
  return szranklist_.Get(index);
}
inline ::GSProto::WorldBossRankItem* WorldBossFightInfo::mutable_szranklist(int index) {
  return szranklist_.Mutable(index);
}
inline ::GSProto::WorldBossRankItem* WorldBossFightInfo::add_szranklist() {
  return szranklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::WorldBossRankItem >&
WorldBossFightInfo::szranklist() const {
  return szranklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::WorldBossRankItem >*
WorldBossFightInfo::mutable_szranklist() {
  return &szranklist_;
}

// required int32 iCheeredCount = 3;
inline bool WorldBossFightInfo::has_icheeredcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldBossFightInfo::set_has_icheeredcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldBossFightInfo::clear_has_icheeredcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldBossFightInfo::clear_icheeredcount() {
  icheeredcount_ = 0;
  clear_has_icheeredcount();
}
inline ::google::protobuf::int32 WorldBossFightInfo::icheeredcount() const {
  return icheeredcount_;
}
inline void WorldBossFightInfo::set_icheeredcount(::google::protobuf::int32 value) {
  set_has_icheeredcount();
  icheeredcount_ = value;
}

// required int32 iSelfDamage = 4;
inline bool WorldBossFightInfo::has_iselfdamage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WorldBossFightInfo::set_has_iselfdamage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WorldBossFightInfo::clear_has_iselfdamage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WorldBossFightInfo::clear_iselfdamage() {
  iselfdamage_ = 0;
  clear_has_iselfdamage();
}
inline ::google::protobuf::int32 WorldBossFightInfo::iselfdamage() const {
  return iselfdamage_;
}
inline void WorldBossFightInfo::set_iselfdamage(::google::protobuf::int32 value) {
  set_has_iselfdamage();
  iselfdamage_ = value;
}

// required int32 iSumSilver = 5;
inline bool WorldBossFightInfo::has_isumsilver() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WorldBossFightInfo::set_has_isumsilver() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WorldBossFightInfo::clear_has_isumsilver() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WorldBossFightInfo::clear_isumsilver() {
  isumsilver_ = 0;
  clear_has_isumsilver();
}
inline ::google::protobuf::int32 WorldBossFightInfo::isumsilver() const {
  return isumsilver_;
}
inline void WorldBossFightInfo::set_isumsilver(::google::protobuf::int32 value) {
  set_has_isumsilver();
  isumsilver_ = value;
}

// required int32 iSumHonor = 6;
inline bool WorldBossFightInfo::has_isumhonor() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WorldBossFightInfo::set_has_isumhonor() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WorldBossFightInfo::clear_has_isumhonor() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WorldBossFightInfo::clear_isumhonor() {
  isumhonor_ = 0;
  clear_has_isumhonor();
}
inline ::google::protobuf::int32 WorldBossFightInfo::isumhonor() const {
  return isumhonor_;
}
inline void WorldBossFightInfo::set_isumhonor(::google::protobuf::int32 value) {
  set_has_isumhonor();
  isumhonor_ = value;
}

// optional int32 iReliveCD = 7;
inline bool WorldBossFightInfo::has_irelivecd() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WorldBossFightInfo::set_has_irelivecd() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WorldBossFightInfo::clear_has_irelivecd() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WorldBossFightInfo::clear_irelivecd() {
  irelivecd_ = 0;
  clear_has_irelivecd();
}
inline ::google::protobuf::int32 WorldBossFightInfo::irelivecd() const {
  return irelivecd_;
}
inline void WorldBossFightInfo::set_irelivecd(::google::protobuf::int32 value) {
  set_has_irelivecd();
  irelivecd_ = value;
}

// required int32 iBossMaxHP = 8;
inline bool WorldBossFightInfo::has_ibossmaxhp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WorldBossFightInfo::set_has_ibossmaxhp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WorldBossFightInfo::clear_has_ibossmaxhp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WorldBossFightInfo::clear_ibossmaxhp() {
  ibossmaxhp_ = 0;
  clear_has_ibossmaxhp();
}
inline ::google::protobuf::int32 WorldBossFightInfo::ibossmaxhp() const {
  return ibossmaxhp_;
}
inline void WorldBossFightInfo::set_ibossmaxhp(::google::protobuf::int32 value) {
  set_has_ibossmaxhp();
  ibossmaxhp_ = value;
}

// required int32 iBossHP = 9;
inline bool WorldBossFightInfo::has_ibosshp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WorldBossFightInfo::set_has_ibosshp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WorldBossFightInfo::clear_has_ibosshp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WorldBossFightInfo::clear_ibosshp() {
  ibosshp_ = 0;
  clear_has_ibosshp();
}
inline ::google::protobuf::int32 WorldBossFightInfo::ibosshp() const {
  return ibosshp_;
}
inline void WorldBossFightInfo::set_ibosshp(::google::protobuf::int32 value) {
  set_has_ibosshp();
  ibosshp_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_WORLDBOSS_SC

// required bool bStarted = 1;
inline bool CMD_QUERY_WORLDBOSS_SC::has_bstarted() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_WORLDBOSS_SC::set_has_bstarted() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_WORLDBOSS_SC::clear_has_bstarted() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_WORLDBOSS_SC::clear_bstarted() {
  bstarted_ = false;
  clear_has_bstarted();
}
inline bool CMD_QUERY_WORLDBOSS_SC::bstarted() const {
  return bstarted_;
}
inline void CMD_QUERY_WORLDBOSS_SC::set_bstarted(bool value) {
  set_has_bstarted();
  bstarted_ = value;
}

// optional .GSProto.WorldBossPreStart preStartInfo = 2;
inline bool CMD_QUERY_WORLDBOSS_SC::has_prestartinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_QUERY_WORLDBOSS_SC::set_has_prestartinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_QUERY_WORLDBOSS_SC::clear_has_prestartinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_QUERY_WORLDBOSS_SC::clear_prestartinfo() {
  if (prestartinfo_ != NULL) prestartinfo_->::GSProto::WorldBossPreStart::Clear();
  clear_has_prestartinfo();
}
inline const ::GSProto::WorldBossPreStart& CMD_QUERY_WORLDBOSS_SC::prestartinfo() const {
  return prestartinfo_ != NULL ? *prestartinfo_ : *default_instance_->prestartinfo_;
}
inline ::GSProto::WorldBossPreStart* CMD_QUERY_WORLDBOSS_SC::mutable_prestartinfo() {
  set_has_prestartinfo();
  if (prestartinfo_ == NULL) prestartinfo_ = new ::GSProto::WorldBossPreStart;
  return prestartinfo_;
}
inline ::GSProto::WorldBossPreStart* CMD_QUERY_WORLDBOSS_SC::release_prestartinfo() {
  clear_has_prestartinfo();
  ::GSProto::WorldBossPreStart* temp = prestartinfo_;
  prestartinfo_ = NULL;
  return temp;
}
inline void CMD_QUERY_WORLDBOSS_SC::set_allocated_prestartinfo(::GSProto::WorldBossPreStart* prestartinfo) {
  delete prestartinfo_;
  prestartinfo_ = prestartinfo;
  if (prestartinfo) {
    set_has_prestartinfo();
  } else {
    clear_has_prestartinfo();
  }
}

// optional .GSProto.WorldBossFightInfo fightInfo = 3;
inline bool CMD_QUERY_WORLDBOSS_SC::has_fightinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_QUERY_WORLDBOSS_SC::set_has_fightinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_QUERY_WORLDBOSS_SC::clear_has_fightinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_QUERY_WORLDBOSS_SC::clear_fightinfo() {
  if (fightinfo_ != NULL) fightinfo_->::GSProto::WorldBossFightInfo::Clear();
  clear_has_fightinfo();
}
inline const ::GSProto::WorldBossFightInfo& CMD_QUERY_WORLDBOSS_SC::fightinfo() const {
  return fightinfo_ != NULL ? *fightinfo_ : *default_instance_->fightinfo_;
}
inline ::GSProto::WorldBossFightInfo* CMD_QUERY_WORLDBOSS_SC::mutable_fightinfo() {
  set_has_fightinfo();
  if (fightinfo_ == NULL) fightinfo_ = new ::GSProto::WorldBossFightInfo;
  return fightinfo_;
}
inline ::GSProto::WorldBossFightInfo* CMD_QUERY_WORLDBOSS_SC::release_fightinfo() {
  clear_has_fightinfo();
  ::GSProto::WorldBossFightInfo* temp = fightinfo_;
  fightinfo_ = NULL;
  return temp;
}
inline void CMD_QUERY_WORLDBOSS_SC::set_allocated_fightinfo(::GSProto::WorldBossFightInfo* fightinfo) {
  delete fightinfo_;
  fightinfo_ = fightinfo;
  if (fightinfo) {
    set_has_fightinfo();
  } else {
    clear_has_fightinfo();
  }
}

// optional int32 iShowMonsterID = 4;
inline bool CMD_QUERY_WORLDBOSS_SC::has_ishowmonsterid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_QUERY_WORLDBOSS_SC::set_has_ishowmonsterid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_QUERY_WORLDBOSS_SC::clear_has_ishowmonsterid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_QUERY_WORLDBOSS_SC::clear_ishowmonsterid() {
  ishowmonsterid_ = 0;
  clear_has_ishowmonsterid();
}
inline ::google::protobuf::int32 CMD_QUERY_WORLDBOSS_SC::ishowmonsterid() const {
  return ishowmonsterid_;
}
inline void CMD_QUERY_WORLDBOSS_SC::set_ishowmonsterid(::google::protobuf::int32 value) {
  set_has_ishowmonsterid();
  ishowmonsterid_ = value;
}

// optional int32 iBossLevel = 5;
inline bool CMD_QUERY_WORLDBOSS_SC::has_ibosslevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_QUERY_WORLDBOSS_SC::set_has_ibosslevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_QUERY_WORLDBOSS_SC::clear_has_ibosslevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_QUERY_WORLDBOSS_SC::clear_ibosslevel() {
  ibosslevel_ = 0;
  clear_has_ibosslevel();
}
inline ::google::protobuf::int32 CMD_QUERY_WORLDBOSS_SC::ibosslevel() const {
  return ibosslevel_;
}
inline void CMD_QUERY_WORLDBOSS_SC::set_ibosslevel(::google::protobuf::int32 value) {
  set_has_ibosslevel();
  ibosslevel_ = value;
}

// -------------------------------------------------------------------

// WorldBossUpdate

// repeated .GSProto.WorldBossRankItem szRankList = 1;
inline int WorldBossUpdate::szranklist_size() const {
  return szranklist_.size();
}
inline void WorldBossUpdate::clear_szranklist() {
  szranklist_.Clear();
}
inline const ::GSProto::WorldBossRankItem& WorldBossUpdate::szranklist(int index) const {
  return szranklist_.Get(index);
}
inline ::GSProto::WorldBossRankItem* WorldBossUpdate::mutable_szranklist(int index) {
  return szranklist_.Mutable(index);
}
inline ::GSProto::WorldBossRankItem* WorldBossUpdate::add_szranklist() {
  return szranklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::WorldBossRankItem >&
WorldBossUpdate::szranklist() const {
  return szranklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::WorldBossRankItem >*
WorldBossUpdate::mutable_szranklist() {
  return &szranklist_;
}

// required int32 iBossMaxHP = 2;
inline bool WorldBossUpdate::has_ibossmaxhp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldBossUpdate::set_has_ibossmaxhp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldBossUpdate::clear_has_ibossmaxhp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldBossUpdate::clear_ibossmaxhp() {
  ibossmaxhp_ = 0;
  clear_has_ibossmaxhp();
}
inline ::google::protobuf::int32 WorldBossUpdate::ibossmaxhp() const {
  return ibossmaxhp_;
}
inline void WorldBossUpdate::set_ibossmaxhp(::google::protobuf::int32 value) {
  set_has_ibossmaxhp();
  ibossmaxhp_ = value;
}

// required int32 iBossHP = 3;
inline bool WorldBossUpdate::has_ibosshp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WorldBossUpdate::set_has_ibosshp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WorldBossUpdate::clear_has_ibosshp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WorldBossUpdate::clear_ibosshp() {
  ibosshp_ = 0;
  clear_has_ibosshp();
}
inline ::google::protobuf::int32 WorldBossUpdate::ibosshp() const {
  return ibosshp_;
}
inline void WorldBossUpdate::set_ibosshp(::google::protobuf::int32 value) {
  set_has_ibosshp();
  ibosshp_ = value;
}

// -------------------------------------------------------------------

// CMD_UPDATE_WORLDBOSS_SC

// required .GSProto.WorldBossUpdate updateInfo = 1;
inline bool CMD_UPDATE_WORLDBOSS_SC::has_updateinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_UPDATE_WORLDBOSS_SC::set_has_updateinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_UPDATE_WORLDBOSS_SC::clear_has_updateinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_UPDATE_WORLDBOSS_SC::clear_updateinfo() {
  if (updateinfo_ != NULL) updateinfo_->::GSProto::WorldBossUpdate::Clear();
  clear_has_updateinfo();
}
inline const ::GSProto::WorldBossUpdate& CMD_UPDATE_WORLDBOSS_SC::updateinfo() const {
  return updateinfo_ != NULL ? *updateinfo_ : *default_instance_->updateinfo_;
}
inline ::GSProto::WorldBossUpdate* CMD_UPDATE_WORLDBOSS_SC::mutable_updateinfo() {
  set_has_updateinfo();
  if (updateinfo_ == NULL) updateinfo_ = new ::GSProto::WorldBossUpdate;
  return updateinfo_;
}
inline ::GSProto::WorldBossUpdate* CMD_UPDATE_WORLDBOSS_SC::release_updateinfo() {
  clear_has_updateinfo();
  ::GSProto::WorldBossUpdate* temp = updateinfo_;
  updateinfo_ = NULL;
  return temp;
}
inline void CMD_UPDATE_WORLDBOSS_SC::set_allocated_updateinfo(::GSProto::WorldBossUpdate* updateinfo) {
  delete updateinfo_;
  updateinfo_ = updateinfo;
  if (updateinfo) {
    set_has_updateinfo();
  } else {
    clear_has_updateinfo();
  }
}

// -------------------------------------------------------------------

// CMD_WORLDBOSS_END_SC

// required bool bKill = 1;
inline bool CMD_WORLDBOSS_END_SC::has_bkill() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_WORLDBOSS_END_SC::set_has_bkill() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_WORLDBOSS_END_SC::clear_has_bkill() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_WORLDBOSS_END_SC::clear_bkill() {
  bkill_ = false;
  clear_has_bkill();
}
inline bool CMD_WORLDBOSS_END_SC::bkill() const {
  return bkill_;
}
inline void CMD_WORLDBOSS_END_SC::set_bkill(bool value) {
  set_has_bkill();
  bkill_ = value;
}

// required int32 iRank = 2;
inline bool CMD_WORLDBOSS_END_SC::has_irank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_WORLDBOSS_END_SC::set_has_irank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_WORLDBOSS_END_SC::clear_has_irank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_WORLDBOSS_END_SC::clear_irank() {
  irank_ = 0;
  clear_has_irank();
}
inline ::google::protobuf::int32 CMD_WORLDBOSS_END_SC::irank() const {
  return irank_;
}
inline void CMD_WORLDBOSS_END_SC::set_irank(::google::protobuf::int32 value) {
  set_has_irank();
  irank_ = value;
}

// required int32 iDamage = 3;
inline bool CMD_WORLDBOSS_END_SC::has_idamage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_WORLDBOSS_END_SC::set_has_idamage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_WORLDBOSS_END_SC::clear_has_idamage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_WORLDBOSS_END_SC::clear_idamage() {
  idamage_ = 0;
  clear_has_idamage();
}
inline ::google::protobuf::int32 CMD_WORLDBOSS_END_SC::idamage() const {
  return idamage_;
}
inline void CMD_WORLDBOSS_END_SC::set_idamage(::google::protobuf::int32 value) {
  set_has_idamage();
  idamage_ = value;
}

// required int32 iAwardSilver = 4;
inline bool CMD_WORLDBOSS_END_SC::has_iawardsilver() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_WORLDBOSS_END_SC::set_has_iawardsilver() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_WORLDBOSS_END_SC::clear_has_iawardsilver() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_WORLDBOSS_END_SC::clear_iawardsilver() {
  iawardsilver_ = 0;
  clear_has_iawardsilver();
}
inline ::google::protobuf::int32 CMD_WORLDBOSS_END_SC::iawardsilver() const {
  return iawardsilver_;
}
inline void CMD_WORLDBOSS_END_SC::set_iawardsilver(::google::protobuf::int32 value) {
  set_has_iawardsilver();
  iawardsilver_ = value;
}

// required int32 iAwardHonor = 5;
inline bool CMD_WORLDBOSS_END_SC::has_iawardhonor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_WORLDBOSS_END_SC::set_has_iawardhonor() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_WORLDBOSS_END_SC::clear_has_iawardhonor() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_WORLDBOSS_END_SC::clear_iawardhonor() {
  iawardhonor_ = 0;
  clear_has_iawardhonor();
}
inline ::google::protobuf::int32 CMD_WORLDBOSS_END_SC::iawardhonor() const {
  return iawardhonor_;
}
inline void CMD_WORLDBOSS_END_SC::set_iawardhonor(::google::protobuf::int32 value) {
  set_has_iawardhonor();
  iawardhonor_ = value;
}

// -------------------------------------------------------------------

// CMD_CHEER_WORLDBOSS_SC

// required int32 iCheerCount = 1;
inline bool CMD_CHEER_WORLDBOSS_SC::has_icheercount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_CHEER_WORLDBOSS_SC::set_has_icheercount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_CHEER_WORLDBOSS_SC::clear_has_icheercount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_CHEER_WORLDBOSS_SC::clear_icheercount() {
  icheercount_ = 0;
  clear_has_icheercount();
}
inline ::google::protobuf::int32 CMD_CHEER_WORLDBOSS_SC::icheercount() const {
  return icheercount_;
}
inline void CMD_CHEER_WORLDBOSS_SC::set_icheercount(::google::protobuf::int32 value) {
  set_has_icheercount();
  icheercount_ = value;
}

// -------------------------------------------------------------------

// ClimbTowerDatail

// required int32 iTotalLayers = 1;
inline bool ClimbTowerDatail::has_itotallayers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClimbTowerDatail::set_has_itotallayers() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClimbTowerDatail::clear_has_itotallayers() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClimbTowerDatail::clear_itotallayers() {
  itotallayers_ = 0;
  clear_has_itotallayers();
}
inline ::google::protobuf::int32 ClimbTowerDatail::itotallayers() const {
  return itotallayers_;
}
inline void ClimbTowerDatail::set_itotallayers(::google::protobuf::int32 value) {
  set_has_itotallayers();
  itotallayers_ = value;
}

// required int32 iCurrentLayer = 2;
inline bool ClimbTowerDatail::has_icurrentlayer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClimbTowerDatail::set_has_icurrentlayer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClimbTowerDatail::clear_has_icurrentlayer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClimbTowerDatail::clear_icurrentlayer() {
  icurrentlayer_ = 0;
  clear_has_icurrentlayer();
}
inline ::google::protobuf::int32 ClimbTowerDatail::icurrentlayer() const {
  return icurrentlayer_;
}
inline void ClimbTowerDatail::set_icurrentlayer(::google::protobuf::int32 value) {
  set_has_icurrentlayer();
  icurrentlayer_ = value;
}

// required int32 iClimbResetCount = 3;
inline bool ClimbTowerDatail::has_iclimbresetcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClimbTowerDatail::set_has_iclimbresetcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClimbTowerDatail::clear_has_iclimbresetcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClimbTowerDatail::clear_iclimbresetcount() {
  iclimbresetcount_ = 0;
  clear_has_iclimbresetcount();
}
inline ::google::protobuf::int32 ClimbTowerDatail::iclimbresetcount() const {
  return iclimbresetcount_;
}
inline void ClimbTowerDatail::set_iclimbresetcount(::google::protobuf::int32 value) {
  set_has_iclimbresetcount();
  iclimbresetcount_ = value;
}

// required int32 iHightestLayer = 4;
inline bool ClimbTowerDatail::has_ihightestlayer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClimbTowerDatail::set_has_ihightestlayer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClimbTowerDatail::clear_has_ihightestlayer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClimbTowerDatail::clear_ihightestlayer() {
  ihightestlayer_ = 0;
  clear_has_ihightestlayer();
}
inline ::google::protobuf::int32 ClimbTowerDatail::ihightestlayer() const {
  return ihightestlayer_;
}
inline void ClimbTowerDatail::set_ihightestlayer(::google::protobuf::int32 value) {
  set_has_ihightestlayer();
  ihightestlayer_ = value;
}

// required int32 iTotalCultivation = 5;
inline bool ClimbTowerDatail::has_itotalcultivation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClimbTowerDatail::set_has_itotalcultivation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClimbTowerDatail::clear_has_itotalcultivation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClimbTowerDatail::clear_itotalcultivation() {
  itotalcultivation_ = 0;
  clear_has_itotalcultivation();
}
inline ::google::protobuf::int32 ClimbTowerDatail::itotalcultivation() const {
  return itotalcultivation_;
}
inline void ClimbTowerDatail::set_itotalcultivation(::google::protobuf::int32 value) {
  set_has_itotalcultivation();
  itotalcultivation_ = value;
}

// required int32 iNextLayerCultivation = 6;
inline bool ClimbTowerDatail::has_inextlayercultivation() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClimbTowerDatail::set_has_inextlayercultivation() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClimbTowerDatail::clear_has_inextlayercultivation() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClimbTowerDatail::clear_inextlayercultivation() {
  inextlayercultivation_ = 0;
  clear_has_inextlayercultivation();
}
inline ::google::protobuf::int32 ClimbTowerDatail::inextlayercultivation() const {
  return inextlayercultivation_;
}
inline void ClimbTowerDatail::set_inextlayercultivation(::google::protobuf::int32 value) {
  set_has_inextlayercultivation();
  inextlayercultivation_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_CLIMBTOWERDETAIL_SC

// required .GSProto.ClimbTowerDatail detail = 1;
inline bool CMD_QUERY_CLIMBTOWERDETAIL_SC::has_detail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_CLIMBTOWERDETAIL_SC::set_has_detail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_CLIMBTOWERDETAIL_SC::clear_has_detail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_CLIMBTOWERDETAIL_SC::clear_detail() {
  if (detail_ != NULL) detail_->::GSProto::ClimbTowerDatail::Clear();
  clear_has_detail();
}
inline const ::GSProto::ClimbTowerDatail& CMD_QUERY_CLIMBTOWERDETAIL_SC::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::GSProto::ClimbTowerDatail* CMD_QUERY_CLIMBTOWERDETAIL_SC::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) detail_ = new ::GSProto::ClimbTowerDatail;
  return detail_;
}
inline ::GSProto::ClimbTowerDatail* CMD_QUERY_CLIMBTOWERDETAIL_SC::release_detail() {
  clear_has_detail();
  ::GSProto::ClimbTowerDatail* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void CMD_QUERY_CLIMBTOWERDETAIL_SC::set_allocated_detail(::GSProto::ClimbTowerDatail* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
}

// -------------------------------------------------------------------

// CMD_CHALLENGE_TOWER_CS

// required int32 iTowerLayerId = 1;
inline bool CMD_CHALLENGE_TOWER_CS::has_itowerlayerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_CHALLENGE_TOWER_CS::set_has_itowerlayerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_CHALLENGE_TOWER_CS::clear_has_itowerlayerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_CHALLENGE_TOWER_CS::clear_itowerlayerid() {
  itowerlayerid_ = 0;
  clear_has_itowerlayerid();
}
inline ::google::protobuf::int32 CMD_CHALLENGE_TOWER_CS::itowerlayerid() const {
  return itowerlayerid_;
}
inline void CMD_CHALLENGE_TOWER_CS::set_itowerlayerid(::google::protobuf::int32 value) {
  set_has_itowerlayerid();
  itowerlayerid_ = value;
}

// -------------------------------------------------------------------

// CMD_FAST_CHALLENGE_TOWER_CS

// required int32 iTowerLayerId = 1;
inline bool CMD_FAST_CHALLENGE_TOWER_CS::has_itowerlayerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_FAST_CHALLENGE_TOWER_CS::set_has_itowerlayerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_FAST_CHALLENGE_TOWER_CS::clear_has_itowerlayerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_FAST_CHALLENGE_TOWER_CS::clear_itowerlayerid() {
  itowerlayerid_ = 0;
  clear_has_itowerlayerid();
}
inline ::google::protobuf::int32 CMD_FAST_CHALLENGE_TOWER_CS::itowerlayerid() const {
  return itowerlayerid_;
}
inline void CMD_FAST_CHALLENGE_TOWER_CS::set_itowerlayerid(::google::protobuf::int32 value) {
  set_has_itowerlayerid();
  itowerlayerid_ = value;
}

// -------------------------------------------------------------------

// CMD_TOWER_FAST_CHALLENGE_RESOULT_SC

// required bool bIsWin = 1;
inline bool CMD_TOWER_FAST_CHALLENGE_RESOULT_SC::has_biswin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_TOWER_FAST_CHALLENGE_RESOULT_SC::set_has_biswin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_TOWER_FAST_CHALLENGE_RESOULT_SC::clear_has_biswin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_TOWER_FAST_CHALLENGE_RESOULT_SC::clear_biswin() {
  biswin_ = false;
  clear_has_biswin();
}
inline bool CMD_TOWER_FAST_CHALLENGE_RESOULT_SC::biswin() const {
  return biswin_;
}
inline void CMD_TOWER_FAST_CHALLENGE_RESOULT_SC::set_biswin(bool value) {
  set_has_biswin();
  biswin_ = value;
}

// required int32 iChallengeLayerId = 2;
inline bool CMD_TOWER_FAST_CHALLENGE_RESOULT_SC::has_ichallengelayerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_TOWER_FAST_CHALLENGE_RESOULT_SC::set_has_ichallengelayerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_TOWER_FAST_CHALLENGE_RESOULT_SC::clear_has_ichallengelayerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_TOWER_FAST_CHALLENGE_RESOULT_SC::clear_ichallengelayerid() {
  ichallengelayerid_ = 0;
  clear_has_ichallengelayerid();
}
inline ::google::protobuf::int32 CMD_TOWER_FAST_CHALLENGE_RESOULT_SC::ichallengelayerid() const {
  return ichallengelayerid_;
}
inline void CMD_TOWER_FAST_CHALLENGE_RESOULT_SC::set_ichallengelayerid(::google::protobuf::int32 value) {
  set_has_ichallengelayerid();
  ichallengelayerid_ = value;
}

// optional .GSProto.FightAwardResult awrdRes = 3;
inline bool CMD_TOWER_FAST_CHALLENGE_RESOULT_SC::has_awrdres() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_TOWER_FAST_CHALLENGE_RESOULT_SC::set_has_awrdres() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_TOWER_FAST_CHALLENGE_RESOULT_SC::clear_has_awrdres() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_TOWER_FAST_CHALLENGE_RESOULT_SC::clear_awrdres() {
  if (awrdres_ != NULL) awrdres_->::GSProto::FightAwardResult::Clear();
  clear_has_awrdres();
}
inline const ::GSProto::FightAwardResult& CMD_TOWER_FAST_CHALLENGE_RESOULT_SC::awrdres() const {
  return awrdres_ != NULL ? *awrdres_ : *default_instance_->awrdres_;
}
inline ::GSProto::FightAwardResult* CMD_TOWER_FAST_CHALLENGE_RESOULT_SC::mutable_awrdres() {
  set_has_awrdres();
  if (awrdres_ == NULL) awrdres_ = new ::GSProto::FightAwardResult;
  return awrdres_;
}
inline ::GSProto::FightAwardResult* CMD_TOWER_FAST_CHALLENGE_RESOULT_SC::release_awrdres() {
  clear_has_awrdres();
  ::GSProto::FightAwardResult* temp = awrdres_;
  awrdres_ = NULL;
  return temp;
}
inline void CMD_TOWER_FAST_CHALLENGE_RESOULT_SC::set_allocated_awrdres(::GSProto::FightAwardResult* awrdres) {
  delete awrdres_;
  awrdres_ = awrdres;
  if (awrdres) {
    set_has_awrdres();
  } else {
    clear_has_awrdres();
  }
}

// -------------------------------------------------------------------

// LegionBattleCityBase

// required int32 iCityID = 1;
inline bool LegionBattleCityBase::has_icityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegionBattleCityBase::set_has_icityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegionBattleCityBase::clear_has_icityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegionBattleCityBase::clear_icityid() {
  icityid_ = 0;
  clear_has_icityid();
}
inline ::google::protobuf::int32 LegionBattleCityBase::icityid() const {
  return icityid_;
}
inline void LegionBattleCityBase::set_icityid(::google::protobuf::int32 value) {
  set_has_icityid();
  icityid_ = value;
}

// required string strOwnerLegion = 2;
inline bool LegionBattleCityBase::has_strownerlegion() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionBattleCityBase::set_has_strownerlegion() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionBattleCityBase::clear_has_strownerlegion() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionBattleCityBase::clear_strownerlegion() {
  if (strownerlegion_ != &::google::protobuf::internal::kEmptyString) {
    strownerlegion_->clear();
  }
  clear_has_strownerlegion();
}
inline const ::std::string& LegionBattleCityBase::strownerlegion() const {
  return *strownerlegion_;
}
inline void LegionBattleCityBase::set_strownerlegion(const ::std::string& value) {
  set_has_strownerlegion();
  if (strownerlegion_ == &::google::protobuf::internal::kEmptyString) {
    strownerlegion_ = new ::std::string;
  }
  strownerlegion_->assign(value);
}
inline void LegionBattleCityBase::set_strownerlegion(const char* value) {
  set_has_strownerlegion();
  if (strownerlegion_ == &::google::protobuf::internal::kEmptyString) {
    strownerlegion_ = new ::std::string;
  }
  strownerlegion_->assign(value);
}
inline void LegionBattleCityBase::set_strownerlegion(const char* value, size_t size) {
  set_has_strownerlegion();
  if (strownerlegion_ == &::google::protobuf::internal::kEmptyString) {
    strownerlegion_ = new ::std::string;
  }
  strownerlegion_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionBattleCityBase::mutable_strownerlegion() {
  set_has_strownerlegion();
  if (strownerlegion_ == &::google::protobuf::internal::kEmptyString) {
    strownerlegion_ = new ::std::string;
  }
  return strownerlegion_;
}
inline ::std::string* LegionBattleCityBase::release_strownerlegion() {
  clear_has_strownerlegion();
  if (strownerlegion_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strownerlegion_;
    strownerlegion_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionBattleCityBase::set_allocated_strownerlegion(::std::string* strownerlegion) {
  if (strownerlegion_ != &::google::protobuf::internal::kEmptyString) {
    delete strownerlegion_;
  }
  if (strownerlegion) {
    set_has_strownerlegion();
    strownerlegion_ = strownerlegion;
  } else {
    clear_has_strownerlegion();
    strownerlegion_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strLeader = 3;
inline bool LegionBattleCityBase::has_strleader() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionBattleCityBase::set_has_strleader() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionBattleCityBase::clear_has_strleader() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionBattleCityBase::clear_strleader() {
  if (strleader_ != &::google::protobuf::internal::kEmptyString) {
    strleader_->clear();
  }
  clear_has_strleader();
}
inline const ::std::string& LegionBattleCityBase::strleader() const {
  return *strleader_;
}
inline void LegionBattleCityBase::set_strleader(const ::std::string& value) {
  set_has_strleader();
  if (strleader_ == &::google::protobuf::internal::kEmptyString) {
    strleader_ = new ::std::string;
  }
  strleader_->assign(value);
}
inline void LegionBattleCityBase::set_strleader(const char* value) {
  set_has_strleader();
  if (strleader_ == &::google::protobuf::internal::kEmptyString) {
    strleader_ = new ::std::string;
  }
  strleader_->assign(value);
}
inline void LegionBattleCityBase::set_strleader(const char* value, size_t size) {
  set_has_strleader();
  if (strleader_ == &::google::protobuf::internal::kEmptyString) {
    strleader_ = new ::std::string;
  }
  strleader_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionBattleCityBase::mutable_strleader() {
  set_has_strleader();
  if (strleader_ == &::google::protobuf::internal::kEmptyString) {
    strleader_ = new ::std::string;
  }
  return strleader_;
}
inline ::std::string* LegionBattleCityBase::release_strleader() {
  clear_has_strleader();
  if (strleader_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strleader_;
    strleader_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionBattleCityBase::set_allocated_strleader(::std::string* strleader) {
  if (strleader_ != &::google::protobuf::internal::kEmptyString) {
    delete strleader_;
  }
  if (strleader) {
    set_has_strleader();
    strleader_ = strleader;
  } else {
    clear_has_strleader();
    strleader_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iGetSilverDay = 4;
inline bool LegionBattleCityBase::has_igetsilverday() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LegionBattleCityBase::set_has_igetsilverday() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LegionBattleCityBase::clear_has_igetsilverday() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LegionBattleCityBase::clear_igetsilverday() {
  igetsilverday_ = 0;
  clear_has_igetsilverday();
}
inline ::google::protobuf::int32 LegionBattleCityBase::igetsilverday() const {
  return igetsilverday_;
}
inline void LegionBattleCityBase::set_igetsilverday(::google::protobuf::int32 value) {
  set_has_igetsilverday();
  igetsilverday_ = value;
}

// -------------------------------------------------------------------

// BattleLegionReportItem

// required string strLegionName = 1;
inline bool BattleLegionReportItem::has_strlegionname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BattleLegionReportItem::set_has_strlegionname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BattleLegionReportItem::clear_has_strlegionname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BattleLegionReportItem::clear_strlegionname() {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    strlegionname_->clear();
  }
  clear_has_strlegionname();
}
inline const ::std::string& BattleLegionReportItem::strlegionname() const {
  return *strlegionname_;
}
inline void BattleLegionReportItem::set_strlegionname(const ::std::string& value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void BattleLegionReportItem::set_strlegionname(const char* value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void BattleLegionReportItem::set_strlegionname(const char* value, size_t size) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BattleLegionReportItem::mutable_strlegionname() {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  return strlegionname_;
}
inline ::std::string* BattleLegionReportItem::release_strlegionname() {
  clear_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strlegionname_;
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BattleLegionReportItem::set_allocated_strlegionname(::std::string* strlegionname) {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strlegionname_;
  }
  if (strlegionname) {
    set_has_strlegionname();
    strlegionname_ = strlegionname;
  } else {
    clear_has_strlegionname();
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iJoinMemCount = 2;
inline bool BattleLegionReportItem::has_ijoinmemcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BattleLegionReportItem::set_has_ijoinmemcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BattleLegionReportItem::clear_has_ijoinmemcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BattleLegionReportItem::clear_ijoinmemcount() {
  ijoinmemcount_ = 0;
  clear_has_ijoinmemcount();
}
inline ::google::protobuf::int32 BattleLegionReportItem::ijoinmemcount() const {
  return ijoinmemcount_;
}
inline void BattleLegionReportItem::set_ijoinmemcount(::google::protobuf::int32 value) {
  set_has_ijoinmemcount();
  ijoinmemcount_ = value;
}

// required int32 iLegionLevel = 3;
inline bool BattleLegionReportItem::has_ilegionlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BattleLegionReportItem::set_has_ilegionlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BattleLegionReportItem::clear_has_ilegionlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BattleLegionReportItem::clear_ilegionlevel() {
  ilegionlevel_ = 0;
  clear_has_ilegionlevel();
}
inline ::google::protobuf::int32 BattleLegionReportItem::ilegionlevel() const {
  return ilegionlevel_;
}
inline void BattleLegionReportItem::set_ilegionlevel(::google::protobuf::int32 value) {
  set_has_ilegionlevel();
  ilegionlevel_ = value;
}

// optional int32 iOwnCityCount = 4;
inline bool BattleLegionReportItem::has_iowncitycount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BattleLegionReportItem::set_has_iowncitycount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BattleLegionReportItem::clear_has_iowncitycount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BattleLegionReportItem::clear_iowncitycount() {
  iowncitycount_ = 0;
  clear_has_iowncitycount();
}
inline ::google::protobuf::int32 BattleLegionReportItem::iowncitycount() const {
  return iowncitycount_;
}
inline void BattleLegionReportItem::set_iowncitycount(::google::protobuf::int32 value) {
  set_has_iowncitycount();
  iowncitycount_ = value;
}

// optional int32 iAttAddPercent = 5;
inline bool BattleLegionReportItem::has_iattaddpercent() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BattleLegionReportItem::set_has_iattaddpercent() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BattleLegionReportItem::clear_has_iattaddpercent() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BattleLegionReportItem::clear_iattaddpercent() {
  iattaddpercent_ = 0;
  clear_has_iattaddpercent();
}
inline ::google::protobuf::int32 BattleLegionReportItem::iattaddpercent() const {
  return iattaddpercent_;
}
inline void BattleLegionReportItem::set_iattaddpercent(::google::protobuf::int32 value) {
  set_has_iattaddpercent();
  iattaddpercent_ = value;
}

// -------------------------------------------------------------------

// BattleReportLegionInfo

// repeated .GSProto.BattleLegionReportItem szLegionList = 1;
inline int BattleReportLegionInfo::szlegionlist_size() const {
  return szlegionlist_.size();
}
inline void BattleReportLegionInfo::clear_szlegionlist() {
  szlegionlist_.Clear();
}
inline const ::GSProto::BattleLegionReportItem& BattleReportLegionInfo::szlegionlist(int index) const {
  return szlegionlist_.Get(index);
}
inline ::GSProto::BattleLegionReportItem* BattleReportLegionInfo::mutable_szlegionlist(int index) {
  return szlegionlist_.Mutable(index);
}
inline ::GSProto::BattleLegionReportItem* BattleReportLegionInfo::add_szlegionlist() {
  return szlegionlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::BattleLegionReportItem >&
BattleReportLegionInfo::szlegionlist() const {
  return szlegionlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::BattleLegionReportItem >*
BattleReportLegionInfo::mutable_szlegionlist() {
  return &szlegionlist_;
}

// -------------------------------------------------------------------

// LegionBattleReported

// required .GSProto.LegionBattleCityBase baseCityInfo = 1;
inline bool LegionBattleReported::has_basecityinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegionBattleReported::set_has_basecityinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegionBattleReported::clear_has_basecityinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegionBattleReported::clear_basecityinfo() {
  if (basecityinfo_ != NULL) basecityinfo_->::GSProto::LegionBattleCityBase::Clear();
  clear_has_basecityinfo();
}
inline const ::GSProto::LegionBattleCityBase& LegionBattleReported::basecityinfo() const {
  return basecityinfo_ != NULL ? *basecityinfo_ : *default_instance_->basecityinfo_;
}
inline ::GSProto::LegionBattleCityBase* LegionBattleReported::mutable_basecityinfo() {
  set_has_basecityinfo();
  if (basecityinfo_ == NULL) basecityinfo_ = new ::GSProto::LegionBattleCityBase;
  return basecityinfo_;
}
inline ::GSProto::LegionBattleCityBase* LegionBattleReported::release_basecityinfo() {
  clear_has_basecityinfo();
  ::GSProto::LegionBattleCityBase* temp = basecityinfo_;
  basecityinfo_ = NULL;
  return temp;
}
inline void LegionBattleReported::set_allocated_basecityinfo(::GSProto::LegionBattleCityBase* basecityinfo) {
  delete basecityinfo_;
  basecityinfo_ = basecityinfo;
  if (basecityinfo) {
    set_has_basecityinfo();
  } else {
    clear_has_basecityinfo();
  }
}

// required .GSProto.BattleReportLegionInfo reportedLegionInfo = 2;
inline bool LegionBattleReported::has_reportedlegioninfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionBattleReported::set_has_reportedlegioninfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionBattleReported::clear_has_reportedlegioninfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionBattleReported::clear_reportedlegioninfo() {
  if (reportedlegioninfo_ != NULL) reportedlegioninfo_->::GSProto::BattleReportLegionInfo::Clear();
  clear_has_reportedlegioninfo();
}
inline const ::GSProto::BattleReportLegionInfo& LegionBattleReported::reportedlegioninfo() const {
  return reportedlegioninfo_ != NULL ? *reportedlegioninfo_ : *default_instance_->reportedlegioninfo_;
}
inline ::GSProto::BattleReportLegionInfo* LegionBattleReported::mutable_reportedlegioninfo() {
  set_has_reportedlegioninfo();
  if (reportedlegioninfo_ == NULL) reportedlegioninfo_ = new ::GSProto::BattleReportLegionInfo;
  return reportedlegioninfo_;
}
inline ::GSProto::BattleReportLegionInfo* LegionBattleReported::release_reportedlegioninfo() {
  clear_has_reportedlegioninfo();
  ::GSProto::BattleReportLegionInfo* temp = reportedlegioninfo_;
  reportedlegioninfo_ = NULL;
  return temp;
}
inline void LegionBattleReported::set_allocated_reportedlegioninfo(::GSProto::BattleReportLegionInfo* reportedlegioninfo) {
  delete reportedlegioninfo_;
  reportedlegioninfo_ = reportedlegioninfo;
  if (reportedlegioninfo) {
    set_has_reportedlegioninfo();
  } else {
    clear_has_reportedlegioninfo();
  }
}

// required int32 iLeftSecond = 3;
inline bool LegionBattleReported::has_ileftsecond() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionBattleReported::set_has_ileftsecond() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionBattleReported::clear_has_ileftsecond() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionBattleReported::clear_ileftsecond() {
  ileftsecond_ = 0;
  clear_has_ileftsecond();
}
inline ::google::protobuf::int32 LegionBattleReported::ileftsecond() const {
  return ileftsecond_;
}
inline void LegionBattleReported::set_ileftsecond(::google::protobuf::int32 value) {
  set_has_ileftsecond();
  ileftsecond_ = value;
}

// -------------------------------------------------------------------

// LegionBattleRecordItem

// required string strWinLegionName = 1;
inline bool LegionBattleRecordItem::has_strwinlegionname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegionBattleRecordItem::set_has_strwinlegionname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegionBattleRecordItem::clear_has_strwinlegionname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegionBattleRecordItem::clear_strwinlegionname() {
  if (strwinlegionname_ != &::google::protobuf::internal::kEmptyString) {
    strwinlegionname_->clear();
  }
  clear_has_strwinlegionname();
}
inline const ::std::string& LegionBattleRecordItem::strwinlegionname() const {
  return *strwinlegionname_;
}
inline void LegionBattleRecordItem::set_strwinlegionname(const ::std::string& value) {
  set_has_strwinlegionname();
  if (strwinlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strwinlegionname_ = new ::std::string;
  }
  strwinlegionname_->assign(value);
}
inline void LegionBattleRecordItem::set_strwinlegionname(const char* value) {
  set_has_strwinlegionname();
  if (strwinlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strwinlegionname_ = new ::std::string;
  }
  strwinlegionname_->assign(value);
}
inline void LegionBattleRecordItem::set_strwinlegionname(const char* value, size_t size) {
  set_has_strwinlegionname();
  if (strwinlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strwinlegionname_ = new ::std::string;
  }
  strwinlegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionBattleRecordItem::mutable_strwinlegionname() {
  set_has_strwinlegionname();
  if (strwinlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strwinlegionname_ = new ::std::string;
  }
  return strwinlegionname_;
}
inline ::std::string* LegionBattleRecordItem::release_strwinlegionname() {
  clear_has_strwinlegionname();
  if (strwinlegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strwinlegionname_;
    strwinlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionBattleRecordItem::set_allocated_strwinlegionname(::std::string* strwinlegionname) {
  if (strwinlegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strwinlegionname_;
  }
  if (strwinlegionname) {
    set_has_strwinlegionname();
    strwinlegionname_ = strwinlegionname;
  } else {
    clear_has_strwinlegionname();
    strwinlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strWinActorName = 2;
inline bool LegionBattleRecordItem::has_strwinactorname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionBattleRecordItem::set_has_strwinactorname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionBattleRecordItem::clear_has_strwinactorname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionBattleRecordItem::clear_strwinactorname() {
  if (strwinactorname_ != &::google::protobuf::internal::kEmptyString) {
    strwinactorname_->clear();
  }
  clear_has_strwinactorname();
}
inline const ::std::string& LegionBattleRecordItem::strwinactorname() const {
  return *strwinactorname_;
}
inline void LegionBattleRecordItem::set_strwinactorname(const ::std::string& value) {
  set_has_strwinactorname();
  if (strwinactorname_ == &::google::protobuf::internal::kEmptyString) {
    strwinactorname_ = new ::std::string;
  }
  strwinactorname_->assign(value);
}
inline void LegionBattleRecordItem::set_strwinactorname(const char* value) {
  set_has_strwinactorname();
  if (strwinactorname_ == &::google::protobuf::internal::kEmptyString) {
    strwinactorname_ = new ::std::string;
  }
  strwinactorname_->assign(value);
}
inline void LegionBattleRecordItem::set_strwinactorname(const char* value, size_t size) {
  set_has_strwinactorname();
  if (strwinactorname_ == &::google::protobuf::internal::kEmptyString) {
    strwinactorname_ = new ::std::string;
  }
  strwinactorname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionBattleRecordItem::mutable_strwinactorname() {
  set_has_strwinactorname();
  if (strwinactorname_ == &::google::protobuf::internal::kEmptyString) {
    strwinactorname_ = new ::std::string;
  }
  return strwinactorname_;
}
inline ::std::string* LegionBattleRecordItem::release_strwinactorname() {
  clear_has_strwinactorname();
  if (strwinactorname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strwinactorname_;
    strwinactorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionBattleRecordItem::set_allocated_strwinactorname(::std::string* strwinactorname) {
  if (strwinactorname_ != &::google::protobuf::internal::kEmptyString) {
    delete strwinactorname_;
  }
  if (strwinactorname) {
    set_has_strwinactorname();
    strwinactorname_ = strwinactorname;
  } else {
    clear_has_strwinactorname();
    strwinactorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strFailLegionName = 3;
inline bool LegionBattleRecordItem::has_strfaillegionname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionBattleRecordItem::set_has_strfaillegionname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionBattleRecordItem::clear_has_strfaillegionname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionBattleRecordItem::clear_strfaillegionname() {
  if (strfaillegionname_ != &::google::protobuf::internal::kEmptyString) {
    strfaillegionname_->clear();
  }
  clear_has_strfaillegionname();
}
inline const ::std::string& LegionBattleRecordItem::strfaillegionname() const {
  return *strfaillegionname_;
}
inline void LegionBattleRecordItem::set_strfaillegionname(const ::std::string& value) {
  set_has_strfaillegionname();
  if (strfaillegionname_ == &::google::protobuf::internal::kEmptyString) {
    strfaillegionname_ = new ::std::string;
  }
  strfaillegionname_->assign(value);
}
inline void LegionBattleRecordItem::set_strfaillegionname(const char* value) {
  set_has_strfaillegionname();
  if (strfaillegionname_ == &::google::protobuf::internal::kEmptyString) {
    strfaillegionname_ = new ::std::string;
  }
  strfaillegionname_->assign(value);
}
inline void LegionBattleRecordItem::set_strfaillegionname(const char* value, size_t size) {
  set_has_strfaillegionname();
  if (strfaillegionname_ == &::google::protobuf::internal::kEmptyString) {
    strfaillegionname_ = new ::std::string;
  }
  strfaillegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionBattleRecordItem::mutable_strfaillegionname() {
  set_has_strfaillegionname();
  if (strfaillegionname_ == &::google::protobuf::internal::kEmptyString) {
    strfaillegionname_ = new ::std::string;
  }
  return strfaillegionname_;
}
inline ::std::string* LegionBattleRecordItem::release_strfaillegionname() {
  clear_has_strfaillegionname();
  if (strfaillegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strfaillegionname_;
    strfaillegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionBattleRecordItem::set_allocated_strfaillegionname(::std::string* strfaillegionname) {
  if (strfaillegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strfaillegionname_;
  }
  if (strfaillegionname) {
    set_has_strfaillegionname();
    strfaillegionname_ = strfaillegionname;
  } else {
    clear_has_strfaillegionname();
    strfaillegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strFailActorName = 4;
inline bool LegionBattleRecordItem::has_strfailactorname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LegionBattleRecordItem::set_has_strfailactorname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LegionBattleRecordItem::clear_has_strfailactorname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LegionBattleRecordItem::clear_strfailactorname() {
  if (strfailactorname_ != &::google::protobuf::internal::kEmptyString) {
    strfailactorname_->clear();
  }
  clear_has_strfailactorname();
}
inline const ::std::string& LegionBattleRecordItem::strfailactorname() const {
  return *strfailactorname_;
}
inline void LegionBattleRecordItem::set_strfailactorname(const ::std::string& value) {
  set_has_strfailactorname();
  if (strfailactorname_ == &::google::protobuf::internal::kEmptyString) {
    strfailactorname_ = new ::std::string;
  }
  strfailactorname_->assign(value);
}
inline void LegionBattleRecordItem::set_strfailactorname(const char* value) {
  set_has_strfailactorname();
  if (strfailactorname_ == &::google::protobuf::internal::kEmptyString) {
    strfailactorname_ = new ::std::string;
  }
  strfailactorname_->assign(value);
}
inline void LegionBattleRecordItem::set_strfailactorname(const char* value, size_t size) {
  set_has_strfailactorname();
  if (strfailactorname_ == &::google::protobuf::internal::kEmptyString) {
    strfailactorname_ = new ::std::string;
  }
  strfailactorname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionBattleRecordItem::mutable_strfailactorname() {
  set_has_strfailactorname();
  if (strfailactorname_ == &::google::protobuf::internal::kEmptyString) {
    strfailactorname_ = new ::std::string;
  }
  return strfailactorname_;
}
inline ::std::string* LegionBattleRecordItem::release_strfailactorname() {
  clear_has_strfailactorname();
  if (strfailactorname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strfailactorname_;
    strfailactorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionBattleRecordItem::set_allocated_strfailactorname(::std::string* strfailactorname) {
  if (strfailactorname_ != &::google::protobuf::internal::kEmptyString) {
    delete strfailactorname_;
  }
  if (strfailactorname) {
    set_has_strfailactorname();
    strfailactorname_ = strfailactorname;
  } else {
    clear_has_strfailactorname();
    strfailactorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// LegionBattleRecordPage

// repeated .GSProto.LegionBattleRecordItem szBattleRecordPage = 1;
inline int LegionBattleRecordPage::szbattlerecordpage_size() const {
  return szbattlerecordpage_.size();
}
inline void LegionBattleRecordPage::clear_szbattlerecordpage() {
  szbattlerecordpage_.Clear();
}
inline const ::GSProto::LegionBattleRecordItem& LegionBattleRecordPage::szbattlerecordpage(int index) const {
  return szbattlerecordpage_.Get(index);
}
inline ::GSProto::LegionBattleRecordItem* LegionBattleRecordPage::mutable_szbattlerecordpage(int index) {
  return szbattlerecordpage_.Mutable(index);
}
inline ::GSProto::LegionBattleRecordItem* LegionBattleRecordPage::add_szbattlerecordpage() {
  return szbattlerecordpage_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBattleRecordItem >&
LegionBattleRecordPage::szbattlerecordpage() const {
  return szbattlerecordpage_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBattleRecordItem >*
LegionBattleRecordPage::mutable_szbattlerecordpage() {
  return &szbattlerecordpage_;
}

// -------------------------------------------------------------------

// LegionFightStateItem

// required string strLegionName = 2;
inline bool LegionFightStateItem::has_strlegionname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegionFightStateItem::set_has_strlegionname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegionFightStateItem::clear_has_strlegionname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegionFightStateItem::clear_strlegionname() {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    strlegionname_->clear();
  }
  clear_has_strlegionname();
}
inline const ::std::string& LegionFightStateItem::strlegionname() const {
  return *strlegionname_;
}
inline void LegionFightStateItem::set_strlegionname(const ::std::string& value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void LegionFightStateItem::set_strlegionname(const char* value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void LegionFightStateItem::set_strlegionname(const char* value, size_t size) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionFightStateItem::mutable_strlegionname() {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  return strlegionname_;
}
inline ::std::string* LegionFightStateItem::release_strlegionname() {
  clear_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strlegionname_;
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionFightStateItem::set_allocated_strlegionname(::std::string* strlegionname) {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strlegionname_;
  }
  if (strlegionname) {
    set_has_strlegionname();
    strlegionname_ = strlegionname;
  } else {
    clear_has_strlegionname();
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iLeftAliveMem = 3;
inline bool LegionFightStateItem::has_ileftalivemem() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionFightStateItem::set_has_ileftalivemem() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionFightStateItem::clear_has_ileftalivemem() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionFightStateItem::clear_ileftalivemem() {
  ileftalivemem_ = 0;
  clear_has_ileftalivemem();
}
inline ::google::protobuf::int32 LegionFightStateItem::ileftalivemem() const {
  return ileftalivemem_;
}
inline void LegionFightStateItem::set_ileftalivemem(::google::protobuf::int32 value) {
  set_has_ileftalivemem();
  ileftalivemem_ = value;
}

// required int32 iLevel = 4;
inline bool LegionFightStateItem::has_ilevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionFightStateItem::set_has_ilevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionFightStateItem::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionFightStateItem::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 LegionFightStateItem::ilevel() const {
  return ilevel_;
}
inline void LegionFightStateItem::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// -------------------------------------------------------------------

// LegionFightState

// repeated .GSProto.LegionFightStateItem szLegionState = 1;
inline int LegionFightState::szlegionstate_size() const {
  return szlegionstate_.size();
}
inline void LegionFightState::clear_szlegionstate() {
  szlegionstate_.Clear();
}
inline const ::GSProto::LegionFightStateItem& LegionFightState::szlegionstate(int index) const {
  return szlegionstate_.Get(index);
}
inline ::GSProto::LegionFightStateItem* LegionFightState::mutable_szlegionstate(int index) {
  return szlegionstate_.Mutable(index);
}
inline ::GSProto::LegionFightStateItem* LegionFightState::add_szlegionstate() {
  return szlegionstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionFightStateItem >&
LegionFightState::szlegionstate() const {
  return szlegionstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionFightStateItem >*
LegionFightState::mutable_szlegionstate() {
  return &szlegionstate_;
}

// required bool bFinish = 2;
inline bool LegionFightState::has_bfinish() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionFightState::set_has_bfinish() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionFightState::clear_has_bfinish() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionFightState::clear_bfinish() {
  bfinish_ = false;
  clear_has_bfinish();
}
inline bool LegionFightState::bfinish() const {
  return bfinish_;
}
inline void LegionFightState::set_bfinish(bool value) {
  set_has_bfinish();
  bfinish_ = value;
}

// optional string strWinLegionName = 3;
inline bool LegionFightState::has_strwinlegionname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionFightState::set_has_strwinlegionname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionFightState::clear_has_strwinlegionname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionFightState::clear_strwinlegionname() {
  if (strwinlegionname_ != &::google::protobuf::internal::kEmptyString) {
    strwinlegionname_->clear();
  }
  clear_has_strwinlegionname();
}
inline const ::std::string& LegionFightState::strwinlegionname() const {
  return *strwinlegionname_;
}
inline void LegionFightState::set_strwinlegionname(const ::std::string& value) {
  set_has_strwinlegionname();
  if (strwinlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strwinlegionname_ = new ::std::string;
  }
  strwinlegionname_->assign(value);
}
inline void LegionFightState::set_strwinlegionname(const char* value) {
  set_has_strwinlegionname();
  if (strwinlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strwinlegionname_ = new ::std::string;
  }
  strwinlegionname_->assign(value);
}
inline void LegionFightState::set_strwinlegionname(const char* value, size_t size) {
  set_has_strwinlegionname();
  if (strwinlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strwinlegionname_ = new ::std::string;
  }
  strwinlegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionFightState::mutable_strwinlegionname() {
  set_has_strwinlegionname();
  if (strwinlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strwinlegionname_ = new ::std::string;
  }
  return strwinlegionname_;
}
inline ::std::string* LegionFightState::release_strwinlegionname() {
  clear_has_strwinlegionname();
  if (strwinlegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strwinlegionname_;
    strwinlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionFightState::set_allocated_strwinlegionname(::std::string* strwinlegionname) {
  if (strwinlegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strwinlegionname_;
  }
  if (strwinlegionname) {
    set_has_strwinlegionname();
    strwinlegionname_ = strwinlegionname;
  } else {
    clear_has_strwinlegionname();
    strwinlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// LegionFightSelfState

// required int32 iKillerCount = 1;
inline bool LegionFightSelfState::has_ikillercount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegionFightSelfState::set_has_ikillercount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegionFightSelfState::clear_has_ikillercount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegionFightSelfState::clear_ikillercount() {
  ikillercount_ = 0;
  clear_has_ikillercount();
}
inline ::google::protobuf::int32 LegionFightSelfState::ikillercount() const {
  return ikillercount_;
}
inline void LegionFightSelfState::set_ikillercount(::google::protobuf::int32 value) {
  set_has_ikillercount();
  ikillercount_ = value;
}

// required int32 iGetHonor = 2;
inline bool LegionFightSelfState::has_igethonor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionFightSelfState::set_has_igethonor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionFightSelfState::clear_has_igethonor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionFightSelfState::clear_igethonor() {
  igethonor_ = 0;
  clear_has_igethonor();
}
inline ::google::protobuf::int32 LegionFightSelfState::igethonor() const {
  return igethonor_;
}
inline void LegionFightSelfState::set_igethonor(::google::protobuf::int32 value) {
  set_has_igethonor();
  igethonor_ = value;
}

// required int32 iGetContribute = 3;
inline bool LegionFightSelfState::has_igetcontribute() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionFightSelfState::set_has_igetcontribute() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionFightSelfState::clear_has_igetcontribute() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionFightSelfState::clear_igetcontribute() {
  igetcontribute_ = 0;
  clear_has_igetcontribute();
}
inline ::google::protobuf::int32 LegionFightSelfState::igetcontribute() const {
  return igetcontribute_;
}
inline void LegionFightSelfState::set_igetcontribute(::google::protobuf::int32 value) {
  set_has_igetcontribute();
  igetcontribute_ = value;
}

// -------------------------------------------------------------------

// LegionBattlePage

// required int32 iCityID = 1;
inline bool LegionBattlePage::has_icityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegionBattlePage::set_has_icityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegionBattlePage::clear_has_icityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegionBattlePage::clear_icityid() {
  icityid_ = 0;
  clear_has_icityid();
}
inline ::google::protobuf::int32 LegionBattlePage::icityid() const {
  return icityid_;
}
inline void LegionBattlePage::set_icityid(::google::protobuf::int32 value) {
  set_has_icityid();
  icityid_ = value;
}

// required .GSProto.LegionBattleRecordPage battleRecordPage = 2;
inline bool LegionBattlePage::has_battlerecordpage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionBattlePage::set_has_battlerecordpage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionBattlePage::clear_has_battlerecordpage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionBattlePage::clear_battlerecordpage() {
  if (battlerecordpage_ != NULL) battlerecordpage_->::GSProto::LegionBattleRecordPage::Clear();
  clear_has_battlerecordpage();
}
inline const ::GSProto::LegionBattleRecordPage& LegionBattlePage::battlerecordpage() const {
  return battlerecordpage_ != NULL ? *battlerecordpage_ : *default_instance_->battlerecordpage_;
}
inline ::GSProto::LegionBattleRecordPage* LegionBattlePage::mutable_battlerecordpage() {
  set_has_battlerecordpage();
  if (battlerecordpage_ == NULL) battlerecordpage_ = new ::GSProto::LegionBattleRecordPage;
  return battlerecordpage_;
}
inline ::GSProto::LegionBattleRecordPage* LegionBattlePage::release_battlerecordpage() {
  clear_has_battlerecordpage();
  ::GSProto::LegionBattleRecordPage* temp = battlerecordpage_;
  battlerecordpage_ = NULL;
  return temp;
}
inline void LegionBattlePage::set_allocated_battlerecordpage(::GSProto::LegionBattleRecordPage* battlerecordpage) {
  delete battlerecordpage_;
  battlerecordpage_ = battlerecordpage;
  if (battlerecordpage) {
    set_has_battlerecordpage();
  } else {
    clear_has_battlerecordpage();
  }
}

// required .GSProto.LegionFightState legionStateInfo = 3;
inline bool LegionBattlePage::has_legionstateinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionBattlePage::set_has_legionstateinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionBattlePage::clear_has_legionstateinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionBattlePage::clear_legionstateinfo() {
  if (legionstateinfo_ != NULL) legionstateinfo_->::GSProto::LegionFightState::Clear();
  clear_has_legionstateinfo();
}
inline const ::GSProto::LegionFightState& LegionBattlePage::legionstateinfo() const {
  return legionstateinfo_ != NULL ? *legionstateinfo_ : *default_instance_->legionstateinfo_;
}
inline ::GSProto::LegionFightState* LegionBattlePage::mutable_legionstateinfo() {
  set_has_legionstateinfo();
  if (legionstateinfo_ == NULL) legionstateinfo_ = new ::GSProto::LegionFightState;
  return legionstateinfo_;
}
inline ::GSProto::LegionFightState* LegionBattlePage::release_legionstateinfo() {
  clear_has_legionstateinfo();
  ::GSProto::LegionFightState* temp = legionstateinfo_;
  legionstateinfo_ = NULL;
  return temp;
}
inline void LegionBattlePage::set_allocated_legionstateinfo(::GSProto::LegionFightState* legionstateinfo) {
  delete legionstateinfo_;
  legionstateinfo_ = legionstateinfo;
  if (legionstateinfo) {
    set_has_legionstateinfo();
  } else {
    clear_has_legionstateinfo();
  }
}

// required .GSProto.LegionFightSelfState seflState = 4;
inline bool LegionBattlePage::has_seflstate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LegionBattlePage::set_has_seflstate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LegionBattlePage::clear_has_seflstate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LegionBattlePage::clear_seflstate() {
  if (seflstate_ != NULL) seflstate_->::GSProto::LegionFightSelfState::Clear();
  clear_has_seflstate();
}
inline const ::GSProto::LegionFightSelfState& LegionBattlePage::seflstate() const {
  return seflstate_ != NULL ? *seflstate_ : *default_instance_->seflstate_;
}
inline ::GSProto::LegionFightSelfState* LegionBattlePage::mutable_seflstate() {
  set_has_seflstate();
  if (seflstate_ == NULL) seflstate_ = new ::GSProto::LegionFightSelfState;
  return seflstate_;
}
inline ::GSProto::LegionFightSelfState* LegionBattlePage::release_seflstate() {
  clear_has_seflstate();
  ::GSProto::LegionFightSelfState* temp = seflstate_;
  seflstate_ = NULL;
  return temp;
}
inline void LegionBattlePage::set_allocated_seflstate(::GSProto::LegionFightSelfState* seflstate) {
  delete seflstate_;
  seflstate_ = seflstate;
  if (seflstate) {
    set_has_seflstate();
  } else {
    clear_has_seflstate();
  }
}

// -------------------------------------------------------------------

// CMD_QUERY_LEGIONBATTLE_SC

// required bool bFightingTime = 1;
inline bool CMD_QUERY_LEGIONBATTLE_SC::has_bfightingtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_LEGIONBATTLE_SC::set_has_bfightingtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_LEGIONBATTLE_SC::clear_has_bfightingtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_LEGIONBATTLE_SC::clear_bfightingtime() {
  bfightingtime_ = false;
  clear_has_bfightingtime();
}
inline bool CMD_QUERY_LEGIONBATTLE_SC::bfightingtime() const {
  return bfightingtime_;
}
inline void CMD_QUERY_LEGIONBATTLE_SC::set_bfightingtime(bool value) {
  set_has_bfightingtime();
  bfightingtime_ = value;
}

// required bool bReported = 2;
inline bool CMD_QUERY_LEGIONBATTLE_SC::has_breported() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_QUERY_LEGIONBATTLE_SC::set_has_breported() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_QUERY_LEGIONBATTLE_SC::clear_has_breported() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_QUERY_LEGIONBATTLE_SC::clear_breported() {
  breported_ = false;
  clear_has_breported();
}
inline bool CMD_QUERY_LEGIONBATTLE_SC::breported() const {
  return breported_;
}
inline void CMD_QUERY_LEGIONBATTLE_SC::set_breported(bool value) {
  set_has_breported();
  breported_ = value;
}

// required bool bJoin = 3;
inline bool CMD_QUERY_LEGIONBATTLE_SC::has_bjoin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_QUERY_LEGIONBATTLE_SC::set_has_bjoin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_QUERY_LEGIONBATTLE_SC::clear_has_bjoin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_QUERY_LEGIONBATTLE_SC::clear_bjoin() {
  bjoin_ = false;
  clear_has_bjoin();
}
inline bool CMD_QUERY_LEGIONBATTLE_SC::bjoin() const {
  return bjoin_;
}
inline void CMD_QUERY_LEGIONBATTLE_SC::set_bjoin(bool value) {
  set_has_bjoin();
  bjoin_ = value;
}

// optional .GSProto.LegionBattleReported reportedInfo = 4;
inline bool CMD_QUERY_LEGIONBATTLE_SC::has_reportedinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_QUERY_LEGIONBATTLE_SC::set_has_reportedinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_QUERY_LEGIONBATTLE_SC::clear_has_reportedinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_QUERY_LEGIONBATTLE_SC::clear_reportedinfo() {
  if (reportedinfo_ != NULL) reportedinfo_->::GSProto::LegionBattleReported::Clear();
  clear_has_reportedinfo();
}
inline const ::GSProto::LegionBattleReported& CMD_QUERY_LEGIONBATTLE_SC::reportedinfo() const {
  return reportedinfo_ != NULL ? *reportedinfo_ : *default_instance_->reportedinfo_;
}
inline ::GSProto::LegionBattleReported* CMD_QUERY_LEGIONBATTLE_SC::mutable_reportedinfo() {
  set_has_reportedinfo();
  if (reportedinfo_ == NULL) reportedinfo_ = new ::GSProto::LegionBattleReported;
  return reportedinfo_;
}
inline ::GSProto::LegionBattleReported* CMD_QUERY_LEGIONBATTLE_SC::release_reportedinfo() {
  clear_has_reportedinfo();
  ::GSProto::LegionBattleReported* temp = reportedinfo_;
  reportedinfo_ = NULL;
  return temp;
}
inline void CMD_QUERY_LEGIONBATTLE_SC::set_allocated_reportedinfo(::GSProto::LegionBattleReported* reportedinfo) {
  delete reportedinfo_;
  reportedinfo_ = reportedinfo;
  if (reportedinfo) {
    set_has_reportedinfo();
  } else {
    clear_has_reportedinfo();
  }
}

// optional .GSProto.LegionBattlePage battlePage = 5;
inline bool CMD_QUERY_LEGIONBATTLE_SC::has_battlepage() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_QUERY_LEGIONBATTLE_SC::set_has_battlepage() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_QUERY_LEGIONBATTLE_SC::clear_has_battlepage() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_QUERY_LEGIONBATTLE_SC::clear_battlepage() {
  if (battlepage_ != NULL) battlepage_->::GSProto::LegionBattlePage::Clear();
  clear_has_battlepage();
}
inline const ::GSProto::LegionBattlePage& CMD_QUERY_LEGIONBATTLE_SC::battlepage() const {
  return battlepage_ != NULL ? *battlepage_ : *default_instance_->battlepage_;
}
inline ::GSProto::LegionBattlePage* CMD_QUERY_LEGIONBATTLE_SC::mutable_battlepage() {
  set_has_battlepage();
  if (battlepage_ == NULL) battlepage_ = new ::GSProto::LegionBattlePage;
  return battlepage_;
}
inline ::GSProto::LegionBattlePage* CMD_QUERY_LEGIONBATTLE_SC::release_battlepage() {
  clear_has_battlepage();
  ::GSProto::LegionBattlePage* temp = battlepage_;
  battlepage_ = NULL;
  return temp;
}
inline void CMD_QUERY_LEGIONBATTLE_SC::set_allocated_battlepage(::GSProto::LegionBattlePage* battlepage) {
  delete battlepage_;
  battlepage_ = battlepage;
  if (battlepage) {
    set_has_battlepage();
  } else {
    clear_has_battlepage();
  }
}

// -------------------------------------------------------------------

// LegionCityOwnerItem

// required int32 iCityID = 1;
inline bool LegionCityOwnerItem::has_icityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegionCityOwnerItem::set_has_icityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegionCityOwnerItem::clear_has_icityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegionCityOwnerItem::clear_icityid() {
  icityid_ = 0;
  clear_has_icityid();
}
inline ::google::protobuf::int32 LegionCityOwnerItem::icityid() const {
  return icityid_;
}
inline void LegionCityOwnerItem::set_icityid(::google::protobuf::int32 value) {
  set_has_icityid();
  icityid_ = value;
}

// required string strOwner = 2;
inline bool LegionCityOwnerItem::has_strowner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionCityOwnerItem::set_has_strowner() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionCityOwnerItem::clear_has_strowner() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionCityOwnerItem::clear_strowner() {
  if (strowner_ != &::google::protobuf::internal::kEmptyString) {
    strowner_->clear();
  }
  clear_has_strowner();
}
inline const ::std::string& LegionCityOwnerItem::strowner() const {
  return *strowner_;
}
inline void LegionCityOwnerItem::set_strowner(const ::std::string& value) {
  set_has_strowner();
  if (strowner_ == &::google::protobuf::internal::kEmptyString) {
    strowner_ = new ::std::string;
  }
  strowner_->assign(value);
}
inline void LegionCityOwnerItem::set_strowner(const char* value) {
  set_has_strowner();
  if (strowner_ == &::google::protobuf::internal::kEmptyString) {
    strowner_ = new ::std::string;
  }
  strowner_->assign(value);
}
inline void LegionCityOwnerItem::set_strowner(const char* value, size_t size) {
  set_has_strowner();
  if (strowner_ == &::google::protobuf::internal::kEmptyString) {
    strowner_ = new ::std::string;
  }
  strowner_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionCityOwnerItem::mutable_strowner() {
  set_has_strowner();
  if (strowner_ == &::google::protobuf::internal::kEmptyString) {
    strowner_ = new ::std::string;
  }
  return strowner_;
}
inline ::std::string* LegionCityOwnerItem::release_strowner() {
  clear_has_strowner();
  if (strowner_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strowner_;
    strowner_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionCityOwnerItem::set_allocated_strowner(::std::string* strowner) {
  if (strowner_ != &::google::protobuf::internal::kEmptyString) {
    delete strowner_;
  }
  if (strowner) {
    set_has_strowner();
    strowner_ = strowner;
  } else {
    clear_has_strowner();
    strowner_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bool bCanReportFight = 3;
inline bool LegionCityOwnerItem::has_bcanreportfight() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionCityOwnerItem::set_has_bcanreportfight() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionCityOwnerItem::clear_has_bcanreportfight() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionCityOwnerItem::clear_bcanreportfight() {
  bcanreportfight_ = false;
  clear_has_bcanreportfight();
}
inline bool LegionCityOwnerItem::bcanreportfight() const {
  return bcanreportfight_;
}
inline void LegionCityOwnerItem::set_bcanreportfight(bool value) {
  set_has_bcanreportfight();
  bcanreportfight_ = value;
}

// optional bool bMonsterOwner = 4;
inline bool LegionCityOwnerItem::has_bmonsterowner() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LegionCityOwnerItem::set_has_bmonsterowner() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LegionCityOwnerItem::clear_has_bmonsterowner() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LegionCityOwnerItem::clear_bmonsterowner() {
  bmonsterowner_ = false;
  clear_has_bmonsterowner();
}
inline bool LegionCityOwnerItem::bmonsterowner() const {
  return bmonsterowner_;
}
inline void LegionCityOwnerItem::set_bmonsterowner(bool value) {
  set_has_bmonsterowner();
  bmonsterowner_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_BATTLEOWNER_SC

// repeated .GSProto.LegionCityOwnerItem szCityList = 1;
inline int CMD_QUERY_BATTLEOWNER_SC::szcitylist_size() const {
  return szcitylist_.size();
}
inline void CMD_QUERY_BATTLEOWNER_SC::clear_szcitylist() {
  szcitylist_.Clear();
}
inline const ::GSProto::LegionCityOwnerItem& CMD_QUERY_BATTLEOWNER_SC::szcitylist(int index) const {
  return szcitylist_.Get(index);
}
inline ::GSProto::LegionCityOwnerItem* CMD_QUERY_BATTLEOWNER_SC::mutable_szcitylist(int index) {
  return szcitylist_.Mutable(index);
}
inline ::GSProto::LegionCityOwnerItem* CMD_QUERY_BATTLEOWNER_SC::add_szcitylist() {
  return szcitylist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionCityOwnerItem >&
CMD_QUERY_BATTLEOWNER_SC::szcitylist() const {
  return szcitylist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionCityOwnerItem >*
CMD_QUERY_BATTLEOWNER_SC::mutable_szcitylist() {
  return &szcitylist_;
}

// -------------------------------------------------------------------

// LegionCityReportState

// required int32 iCityID = 1;
inline bool LegionCityReportState::has_icityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegionCityReportState::set_has_icityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegionCityReportState::clear_has_icityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegionCityReportState::clear_icityid() {
  icityid_ = 0;
  clear_has_icityid();
}
inline ::google::protobuf::int32 LegionCityReportState::icityid() const {
  return icityid_;
}
inline void LegionCityReportState::set_icityid(::google::protobuf::int32 value) {
  set_has_icityid();
  icityid_ = value;
}

// required string strLegionName = 2;
inline bool LegionCityReportState::has_strlegionname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionCityReportState::set_has_strlegionname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionCityReportState::clear_has_strlegionname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionCityReportState::clear_strlegionname() {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    strlegionname_->clear();
  }
  clear_has_strlegionname();
}
inline const ::std::string& LegionCityReportState::strlegionname() const {
  return *strlegionname_;
}
inline void LegionCityReportState::set_strlegionname(const ::std::string& value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void LegionCityReportState::set_strlegionname(const char* value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void LegionCityReportState::set_strlegionname(const char* value, size_t size) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionCityReportState::mutable_strlegionname() {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  return strlegionname_;
}
inline ::std::string* LegionCityReportState::release_strlegionname() {
  clear_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strlegionname_;
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionCityReportState::set_allocated_strlegionname(::std::string* strlegionname) {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strlegionname_;
  }
  if (strlegionname) {
    set_has_strlegionname();
    strlegionname_ = strlegionname;
  } else {
    clear_has_strlegionname();
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strLeaderName = 3;
inline bool LegionCityReportState::has_strleadername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionCityReportState::set_has_strleadername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionCityReportState::clear_has_strleadername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionCityReportState::clear_strleadername() {
  if (strleadername_ != &::google::protobuf::internal::kEmptyString) {
    strleadername_->clear();
  }
  clear_has_strleadername();
}
inline const ::std::string& LegionCityReportState::strleadername() const {
  return *strleadername_;
}
inline void LegionCityReportState::set_strleadername(const ::std::string& value) {
  set_has_strleadername();
  if (strleadername_ == &::google::protobuf::internal::kEmptyString) {
    strleadername_ = new ::std::string;
  }
  strleadername_->assign(value);
}
inline void LegionCityReportState::set_strleadername(const char* value) {
  set_has_strleadername();
  if (strleadername_ == &::google::protobuf::internal::kEmptyString) {
    strleadername_ = new ::std::string;
  }
  strleadername_->assign(value);
}
inline void LegionCityReportState::set_strleadername(const char* value, size_t size) {
  set_has_strleadername();
  if (strleadername_ == &::google::protobuf::internal::kEmptyString) {
    strleadername_ = new ::std::string;
  }
  strleadername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionCityReportState::mutable_strleadername() {
  set_has_strleadername();
  if (strleadername_ == &::google::protobuf::internal::kEmptyString) {
    strleadername_ = new ::std::string;
  }
  return strleadername_;
}
inline ::std::string* LegionCityReportState::release_strleadername() {
  clear_has_strleadername();
  if (strleadername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strleadername_;
    strleadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionCityReportState::set_allocated_strleadername(::std::string* strleadername) {
  if (strleadername_ != &::google::protobuf::internal::kEmptyString) {
    delete strleadername_;
  }
  if (strleadername) {
    set_has_strleadername();
    strleadername_ = strleadername;
  } else {
    clear_has_strleadername();
    strleadername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iSilver = 4;
inline bool LegionCityReportState::has_isilver() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LegionCityReportState::set_has_isilver() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LegionCityReportState::clear_has_isilver() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LegionCityReportState::clear_isilver() {
  isilver_ = 0;
  clear_has_isilver();
}
inline ::google::protobuf::int32 LegionCityReportState::isilver() const {
  return isilver_;
}
inline void LegionCityReportState::set_isilver(::google::protobuf::int32 value) {
  set_has_isilver();
  isilver_ = value;
}

// required bool bSelfOwner = 5;
inline bool LegionCityReportState::has_bselfowner() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LegionCityReportState::set_has_bselfowner() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LegionCityReportState::clear_has_bselfowner() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LegionCityReportState::clear_bselfowner() {
  bselfowner_ = false;
  clear_has_bselfowner();
}
inline bool LegionCityReportState::bselfowner() const {
  return bselfowner_;
}
inline void LegionCityReportState::set_bselfowner(bool value) {
  set_has_bselfowner();
  bselfowner_ = value;
}

// required bool bCanReport = 6;
inline bool LegionCityReportState::has_bcanreport() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LegionCityReportState::set_has_bcanreport() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LegionCityReportState::clear_has_bcanreport() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LegionCityReportState::clear_bcanreport() {
  bcanreport_ = false;
  clear_has_bcanreport();
}
inline bool LegionCityReportState::bcanreport() const {
  return bcanreport_;
}
inline void LegionCityReportState::set_bcanreport(bool value) {
  set_has_bcanreport();
  bcanreport_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_LEGIONBATTLE_REPORT_CS

// required int32 iQueryCityID = 1;
inline bool CMD_QUERY_LEGIONBATTLE_REPORT_CS::has_iquerycityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_LEGIONBATTLE_REPORT_CS::set_has_iquerycityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_LEGIONBATTLE_REPORT_CS::clear_has_iquerycityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_LEGIONBATTLE_REPORT_CS::clear_iquerycityid() {
  iquerycityid_ = 0;
  clear_has_iquerycityid();
}
inline ::google::protobuf::int32 CMD_QUERY_LEGIONBATTLE_REPORT_CS::iquerycityid() const {
  return iquerycityid_;
}
inline void CMD_QUERY_LEGIONBATTLE_REPORT_CS::set_iquerycityid(::google::protobuf::int32 value) {
  set_has_iquerycityid();
  iquerycityid_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_LEGIONBATTLE_REPORT_SC

// repeated .GSProto.LegionCityReportState szReportStateList = 1;
inline int CMD_QUERY_LEGIONBATTLE_REPORT_SC::szreportstatelist_size() const {
  return szreportstatelist_.size();
}
inline void CMD_QUERY_LEGIONBATTLE_REPORT_SC::clear_szreportstatelist() {
  szreportstatelist_.Clear();
}
inline const ::GSProto::LegionCityReportState& CMD_QUERY_LEGIONBATTLE_REPORT_SC::szreportstatelist(int index) const {
  return szreportstatelist_.Get(index);
}
inline ::GSProto::LegionCityReportState* CMD_QUERY_LEGIONBATTLE_REPORT_SC::mutable_szreportstatelist(int index) {
  return szreportstatelist_.Mutable(index);
}
inline ::GSProto::LegionCityReportState* CMD_QUERY_LEGIONBATTLE_REPORT_SC::add_szreportstatelist() {
  return szreportstatelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionCityReportState >&
CMD_QUERY_LEGIONBATTLE_REPORT_SC::szreportstatelist() const {
  return szreportstatelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionCityReportState >*
CMD_QUERY_LEGIONBATTLE_REPORT_SC::mutable_szreportstatelist() {
  return &szreportstatelist_;
}

// -------------------------------------------------------------------

// LegionLastBattleMsg

// required int32 iCityID = 1;
inline bool LegionLastBattleMsg::has_icityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegionLastBattleMsg::set_has_icityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegionLastBattleMsg::clear_has_icityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegionLastBattleMsg::clear_icityid() {
  icityid_ = 0;
  clear_has_icityid();
}
inline ::google::protobuf::int32 LegionLastBattleMsg::icityid() const {
  return icityid_;
}
inline void LegionLastBattleMsg::set_icityid(::google::protobuf::int32 value) {
  set_has_icityid();
  icityid_ = value;
}

// required bool bWin = 2;
inline bool LegionLastBattleMsg::has_bwin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionLastBattleMsg::set_has_bwin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionLastBattleMsg::clear_has_bwin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionLastBattleMsg::clear_bwin() {
  bwin_ = false;
  clear_has_bwin();
}
inline bool LegionLastBattleMsg::bwin() const {
  return bwin_;
}
inline void LegionLastBattleMsg::set_bwin(bool value) {
  set_has_bwin();
  bwin_ = value;
}

// required bool bSelfReport = 3;
inline bool LegionLastBattleMsg::has_bselfreport() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionLastBattleMsg::set_has_bselfreport() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionLastBattleMsg::clear_has_bselfreport() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionLastBattleMsg::clear_bselfreport() {
  bselfreport_ = false;
  clear_has_bselfreport();
}
inline bool LegionLastBattleMsg::bselfreport() const {
  return bselfreport_;
}
inline void LegionLastBattleMsg::set_bselfreport(bool value) {
  set_has_bselfreport();
  bselfreport_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_LASTBATTLE_LIST_SC

// repeated .GSProto.LegionLastBattleMsg szLastBattleMsg = 1;
inline int CMD_QUERY_LASTBATTLE_LIST_SC::szlastbattlemsg_size() const {
  return szlastbattlemsg_.size();
}
inline void CMD_QUERY_LASTBATTLE_LIST_SC::clear_szlastbattlemsg() {
  szlastbattlemsg_.Clear();
}
inline const ::GSProto::LegionLastBattleMsg& CMD_QUERY_LASTBATTLE_LIST_SC::szlastbattlemsg(int index) const {
  return szlastbattlemsg_.Get(index);
}
inline ::GSProto::LegionLastBattleMsg* CMD_QUERY_LASTBATTLE_LIST_SC::mutable_szlastbattlemsg(int index) {
  return szlastbattlemsg_.Mutable(index);
}
inline ::GSProto::LegionLastBattleMsg* CMD_QUERY_LASTBATTLE_LIST_SC::add_szlastbattlemsg() {
  return szlastbattlemsg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionLastBattleMsg >&
CMD_QUERY_LASTBATTLE_LIST_SC::szlastbattlemsg() const {
  return szlastbattlemsg_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionLastBattleMsg >*
CMD_QUERY_LASTBATTLE_LIST_SC::mutable_szlastbattlemsg() {
  return &szlastbattlemsg_;
}

// -------------------------------------------------------------------

// CMD_QUERY_SINGLE_LASTBATTLE_CS

// required int32 iCityID = 1;
inline bool CMD_QUERY_SINGLE_LASTBATTLE_CS::has_icityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_SINGLE_LASTBATTLE_CS::set_has_icityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_SINGLE_LASTBATTLE_CS::clear_has_icityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_SINGLE_LASTBATTLE_CS::clear_icityid() {
  icityid_ = 0;
  clear_has_icityid();
}
inline ::google::protobuf::int32 CMD_QUERY_SINGLE_LASTBATTLE_CS::icityid() const {
  return icityid_;
}
inline void CMD_QUERY_SINGLE_LASTBATTLE_CS::set_icityid(::google::protobuf::int32 value) {
  set_has_icityid();
  icityid_ = value;
}

// -------------------------------------------------------------------

// LegionLastBattlePage

// required int32 iCityID = 1;
inline bool LegionLastBattlePage::has_icityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegionLastBattlePage::set_has_icityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegionLastBattlePage::clear_has_icityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegionLastBattlePage::clear_icityid() {
  icityid_ = 0;
  clear_has_icityid();
}
inline ::google::protobuf::int32 LegionLastBattlePage::icityid() const {
  return icityid_;
}
inline void LegionLastBattlePage::set_icityid(::google::protobuf::int32 value) {
  set_has_icityid();
  icityid_ = value;
}

// required .GSProto.LegionBattleRecordPage battleRecordPage = 2;
inline bool LegionLastBattlePage::has_battlerecordpage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionLastBattlePage::set_has_battlerecordpage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionLastBattlePage::clear_has_battlerecordpage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionLastBattlePage::clear_battlerecordpage() {
  if (battlerecordpage_ != NULL) battlerecordpage_->::GSProto::LegionBattleRecordPage::Clear();
  clear_has_battlerecordpage();
}
inline const ::GSProto::LegionBattleRecordPage& LegionLastBattlePage::battlerecordpage() const {
  return battlerecordpage_ != NULL ? *battlerecordpage_ : *default_instance_->battlerecordpage_;
}
inline ::GSProto::LegionBattleRecordPage* LegionLastBattlePage::mutable_battlerecordpage() {
  set_has_battlerecordpage();
  if (battlerecordpage_ == NULL) battlerecordpage_ = new ::GSProto::LegionBattleRecordPage;
  return battlerecordpage_;
}
inline ::GSProto::LegionBattleRecordPage* LegionLastBattlePage::release_battlerecordpage() {
  clear_has_battlerecordpage();
  ::GSProto::LegionBattleRecordPage* temp = battlerecordpage_;
  battlerecordpage_ = NULL;
  return temp;
}
inline void LegionLastBattlePage::set_allocated_battlerecordpage(::GSProto::LegionBattleRecordPage* battlerecordpage) {
  delete battlerecordpage_;
  battlerecordpage_ = battlerecordpage;
  if (battlerecordpage) {
    set_has_battlerecordpage();
  } else {
    clear_has_battlerecordpage();
  }
}

// required int32 iTotalPage = 3;
inline bool LegionLastBattlePage::has_itotalpage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionLastBattlePage::set_has_itotalpage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionLastBattlePage::clear_has_itotalpage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionLastBattlePage::clear_itotalpage() {
  itotalpage_ = 0;
  clear_has_itotalpage();
}
inline ::google::protobuf::int32 LegionLastBattlePage::itotalpage() const {
  return itotalpage_;
}
inline void LegionLastBattlePage::set_itotalpage(::google::protobuf::int32 value) {
  set_has_itotalpage();
  itotalpage_ = value;
}

// required int32 iCurPage = 4;
inline bool LegionLastBattlePage::has_icurpage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LegionLastBattlePage::set_has_icurpage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LegionLastBattlePage::clear_has_icurpage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LegionLastBattlePage::clear_icurpage() {
  icurpage_ = 0;
  clear_has_icurpage();
}
inline ::google::protobuf::int32 LegionLastBattlePage::icurpage() const {
  return icurpage_;
}
inline void LegionLastBattlePage::set_icurpage(::google::protobuf::int32 value) {
  set_has_icurpage();
  icurpage_ = value;
}

// required .GSProto.LegionFightState legionStateInfo = 5;
inline bool LegionLastBattlePage::has_legionstateinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LegionLastBattlePage::set_has_legionstateinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LegionLastBattlePage::clear_has_legionstateinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LegionLastBattlePage::clear_legionstateinfo() {
  if (legionstateinfo_ != NULL) legionstateinfo_->::GSProto::LegionFightState::Clear();
  clear_has_legionstateinfo();
}
inline const ::GSProto::LegionFightState& LegionLastBattlePage::legionstateinfo() const {
  return legionstateinfo_ != NULL ? *legionstateinfo_ : *default_instance_->legionstateinfo_;
}
inline ::GSProto::LegionFightState* LegionLastBattlePage::mutable_legionstateinfo() {
  set_has_legionstateinfo();
  if (legionstateinfo_ == NULL) legionstateinfo_ = new ::GSProto::LegionFightState;
  return legionstateinfo_;
}
inline ::GSProto::LegionFightState* LegionLastBattlePage::release_legionstateinfo() {
  clear_has_legionstateinfo();
  ::GSProto::LegionFightState* temp = legionstateinfo_;
  legionstateinfo_ = NULL;
  return temp;
}
inline void LegionLastBattlePage::set_allocated_legionstateinfo(::GSProto::LegionFightState* legionstateinfo) {
  delete legionstateinfo_;
  legionstateinfo_ = legionstateinfo;
  if (legionstateinfo) {
    set_has_legionstateinfo();
  } else {
    clear_has_legionstateinfo();
  }
}

// required .GSProto.LegionFightSelfState seflState = 6;
inline bool LegionLastBattlePage::has_seflstate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LegionLastBattlePage::set_has_seflstate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LegionLastBattlePage::clear_has_seflstate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LegionLastBattlePage::clear_seflstate() {
  if (seflstate_ != NULL) seflstate_->::GSProto::LegionFightSelfState::Clear();
  clear_has_seflstate();
}
inline const ::GSProto::LegionFightSelfState& LegionLastBattlePage::seflstate() const {
  return seflstate_ != NULL ? *seflstate_ : *default_instance_->seflstate_;
}
inline ::GSProto::LegionFightSelfState* LegionLastBattlePage::mutable_seflstate() {
  set_has_seflstate();
  if (seflstate_ == NULL) seflstate_ = new ::GSProto::LegionFightSelfState;
  return seflstate_;
}
inline ::GSProto::LegionFightSelfState* LegionLastBattlePage::release_seflstate() {
  clear_has_seflstate();
  ::GSProto::LegionFightSelfState* temp = seflstate_;
  seflstate_ = NULL;
  return temp;
}
inline void LegionLastBattlePage::set_allocated_seflstate(::GSProto::LegionFightSelfState* seflstate) {
  delete seflstate_;
  seflstate_ = seflstate;
  if (seflstate) {
    set_has_seflstate();
  } else {
    clear_has_seflstate();
  }
}

// -------------------------------------------------------------------

// CMD_QUERY_SINGLE_LASTBATTLE_SC

// required .GSProto.LegionLastBattlePage lastBattlePage = 1;
inline bool CMD_QUERY_SINGLE_LASTBATTLE_SC::has_lastbattlepage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_SINGLE_LASTBATTLE_SC::set_has_lastbattlepage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_SINGLE_LASTBATTLE_SC::clear_has_lastbattlepage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_SINGLE_LASTBATTLE_SC::clear_lastbattlepage() {
  if (lastbattlepage_ != NULL) lastbattlepage_->::GSProto::LegionLastBattlePage::Clear();
  clear_has_lastbattlepage();
}
inline const ::GSProto::LegionLastBattlePage& CMD_QUERY_SINGLE_LASTBATTLE_SC::lastbattlepage() const {
  return lastbattlepage_ != NULL ? *lastbattlepage_ : *default_instance_->lastbattlepage_;
}
inline ::GSProto::LegionLastBattlePage* CMD_QUERY_SINGLE_LASTBATTLE_SC::mutable_lastbattlepage() {
  set_has_lastbattlepage();
  if (lastbattlepage_ == NULL) lastbattlepage_ = new ::GSProto::LegionLastBattlePage;
  return lastbattlepage_;
}
inline ::GSProto::LegionLastBattlePage* CMD_QUERY_SINGLE_LASTBATTLE_SC::release_lastbattlepage() {
  clear_has_lastbattlepage();
  ::GSProto::LegionLastBattlePage* temp = lastbattlepage_;
  lastbattlepage_ = NULL;
  return temp;
}
inline void CMD_QUERY_SINGLE_LASTBATTLE_SC::set_allocated_lastbattlepage(::GSProto::LegionLastBattlePage* lastbattlepage) {
  delete lastbattlepage_;
  lastbattlepage_ = lastbattlepage;
  if (lastbattlepage) {
    set_has_lastbattlepage();
  } else {
    clear_has_lastbattlepage();
  }
}

// -------------------------------------------------------------------

// CMD_REPORT_LEGIONBATTLE_CS

// required int32 iCityID = 1;
inline bool CMD_REPORT_LEGIONBATTLE_CS::has_icityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_REPORT_LEGIONBATTLE_CS::set_has_icityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_REPORT_LEGIONBATTLE_CS::clear_has_icityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_REPORT_LEGIONBATTLE_CS::clear_icityid() {
  icityid_ = 0;
  clear_has_icityid();
}
inline ::google::protobuf::int32 CMD_REPORT_LEGIONBATTLE_CS::icityid() const {
  return icityid_;
}
inline void CMD_REPORT_LEGIONBATTLE_CS::set_icityid(::google::protobuf::int32 value) {
  set_has_icityid();
  icityid_ = value;
}

// -------------------------------------------------------------------

// CMD_REPORT_LEGIONBATTLE_SC

// required .GSProto.LegionBattleReported reportInfo = 1;
inline bool CMD_REPORT_LEGIONBATTLE_SC::has_reportinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_REPORT_LEGIONBATTLE_SC::set_has_reportinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_REPORT_LEGIONBATTLE_SC::clear_has_reportinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_REPORT_LEGIONBATTLE_SC::clear_reportinfo() {
  if (reportinfo_ != NULL) reportinfo_->::GSProto::LegionBattleReported::Clear();
  clear_has_reportinfo();
}
inline const ::GSProto::LegionBattleReported& CMD_REPORT_LEGIONBATTLE_SC::reportinfo() const {
  return reportinfo_ != NULL ? *reportinfo_ : *default_instance_->reportinfo_;
}
inline ::GSProto::LegionBattleReported* CMD_REPORT_LEGIONBATTLE_SC::mutable_reportinfo() {
  set_has_reportinfo();
  if (reportinfo_ == NULL) reportinfo_ = new ::GSProto::LegionBattleReported;
  return reportinfo_;
}
inline ::GSProto::LegionBattleReported* CMD_REPORT_LEGIONBATTLE_SC::release_reportinfo() {
  clear_has_reportinfo();
  ::GSProto::LegionBattleReported* temp = reportinfo_;
  reportinfo_ = NULL;
  return temp;
}
inline void CMD_REPORT_LEGIONBATTLE_SC::set_allocated_reportinfo(::GSProto::LegionBattleReported* reportinfo) {
  delete reportinfo_;
  reportinfo_ = reportinfo;
  if (reportinfo) {
    set_has_reportinfo();
  } else {
    clear_has_reportinfo();
  }
}

// -------------------------------------------------------------------

// CMD_JOIN_LEGIONBATTLE_SC

// required .GSProto.LegionBattleReported reportInfo = 1;
inline bool CMD_JOIN_LEGIONBATTLE_SC::has_reportinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_JOIN_LEGIONBATTLE_SC::set_has_reportinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_JOIN_LEGIONBATTLE_SC::clear_has_reportinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_JOIN_LEGIONBATTLE_SC::clear_reportinfo() {
  if (reportinfo_ != NULL) reportinfo_->::GSProto::LegionBattleReported::Clear();
  clear_has_reportinfo();
}
inline const ::GSProto::LegionBattleReported& CMD_JOIN_LEGIONBATTLE_SC::reportinfo() const {
  return reportinfo_ != NULL ? *reportinfo_ : *default_instance_->reportinfo_;
}
inline ::GSProto::LegionBattleReported* CMD_JOIN_LEGIONBATTLE_SC::mutable_reportinfo() {
  set_has_reportinfo();
  if (reportinfo_ == NULL) reportinfo_ = new ::GSProto::LegionBattleReported;
  return reportinfo_;
}
inline ::GSProto::LegionBattleReported* CMD_JOIN_LEGIONBATTLE_SC::release_reportinfo() {
  clear_has_reportinfo();
  ::GSProto::LegionBattleReported* temp = reportinfo_;
  reportinfo_ = NULL;
  return temp;
}
inline void CMD_JOIN_LEGIONBATTLE_SC::set_allocated_reportinfo(::GSProto::LegionBattleReported* reportinfo) {
  delete reportinfo_;
  reportinfo_ = reportinfo;
  if (reportinfo) {
    set_has_reportinfo();
  } else {
    clear_has_reportinfo();
  }
}

// -------------------------------------------------------------------

// CMD_QUERY_CURBATTLE_PAGE_SC

// required .GSProto.LegionBattlePage battlePage = 1;
inline bool CMD_QUERY_CURBATTLE_PAGE_SC::has_battlepage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_CURBATTLE_PAGE_SC::set_has_battlepage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_CURBATTLE_PAGE_SC::clear_has_battlepage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_CURBATTLE_PAGE_SC::clear_battlepage() {
  if (battlepage_ != NULL) battlepage_->::GSProto::LegionBattlePage::Clear();
  clear_has_battlepage();
}
inline const ::GSProto::LegionBattlePage& CMD_QUERY_CURBATTLE_PAGE_SC::battlepage() const {
  return battlepage_ != NULL ? *battlepage_ : *default_instance_->battlepage_;
}
inline ::GSProto::LegionBattlePage* CMD_QUERY_CURBATTLE_PAGE_SC::mutable_battlepage() {
  set_has_battlepage();
  if (battlepage_ == NULL) battlepage_ = new ::GSProto::LegionBattlePage;
  return battlepage_;
}
inline ::GSProto::LegionBattlePage* CMD_QUERY_CURBATTLE_PAGE_SC::release_battlepage() {
  clear_has_battlepage();
  ::GSProto::LegionBattlePage* temp = battlepage_;
  battlepage_ = NULL;
  return temp;
}
inline void CMD_QUERY_CURBATTLE_PAGE_SC::set_allocated_battlepage(::GSProto::LegionBattlePage* battlepage) {
  delete battlepage_;
  battlepage_ = battlepage;
  if (battlepage) {
    set_has_battlepage();
  } else {
    clear_has_battlepage();
  }
}

// -------------------------------------------------------------------

// CMD_ADD_CURBATTLE_RECORD_SC

// repeated .GSProto.LegionBattleRecordItem szNewBattleRecordPage = 1;
inline int CMD_ADD_CURBATTLE_RECORD_SC::sznewbattlerecordpage_size() const {
  return sznewbattlerecordpage_.size();
}
inline void CMD_ADD_CURBATTLE_RECORD_SC::clear_sznewbattlerecordpage() {
  sznewbattlerecordpage_.Clear();
}
inline const ::GSProto::LegionBattleRecordItem& CMD_ADD_CURBATTLE_RECORD_SC::sznewbattlerecordpage(int index) const {
  return sznewbattlerecordpage_.Get(index);
}
inline ::GSProto::LegionBattleRecordItem* CMD_ADD_CURBATTLE_RECORD_SC::mutable_sznewbattlerecordpage(int index) {
  return sznewbattlerecordpage_.Mutable(index);
}
inline ::GSProto::LegionBattleRecordItem* CMD_ADD_CURBATTLE_RECORD_SC::add_sznewbattlerecordpage() {
  return sznewbattlerecordpage_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBattleRecordItem >&
CMD_ADD_CURBATTLE_RECORD_SC::sznewbattlerecordpage() const {
  return sznewbattlerecordpage_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBattleRecordItem >*
CMD_ADD_CURBATTLE_RECORD_SC::mutable_sznewbattlerecordpage() {
  return &sznewbattlerecordpage_;
}

// -------------------------------------------------------------------

// CMD_UPDATE_CURBATTLE_SELFINFO_SC

// required .GSProto.LegionFightSelfState seflState = 1;
inline bool CMD_UPDATE_CURBATTLE_SELFINFO_SC::has_seflstate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_UPDATE_CURBATTLE_SELFINFO_SC::set_has_seflstate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_UPDATE_CURBATTLE_SELFINFO_SC::clear_has_seflstate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_UPDATE_CURBATTLE_SELFINFO_SC::clear_seflstate() {
  if (seflstate_ != NULL) seflstate_->::GSProto::LegionFightSelfState::Clear();
  clear_has_seflstate();
}
inline const ::GSProto::LegionFightSelfState& CMD_UPDATE_CURBATTLE_SELFINFO_SC::seflstate() const {
  return seflstate_ != NULL ? *seflstate_ : *default_instance_->seflstate_;
}
inline ::GSProto::LegionFightSelfState* CMD_UPDATE_CURBATTLE_SELFINFO_SC::mutable_seflstate() {
  set_has_seflstate();
  if (seflstate_ == NULL) seflstate_ = new ::GSProto::LegionFightSelfState;
  return seflstate_;
}
inline ::GSProto::LegionFightSelfState* CMD_UPDATE_CURBATTLE_SELFINFO_SC::release_seflstate() {
  clear_has_seflstate();
  ::GSProto::LegionFightSelfState* temp = seflstate_;
  seflstate_ = NULL;
  return temp;
}
inline void CMD_UPDATE_CURBATTLE_SELFINFO_SC::set_allocated_seflstate(::GSProto::LegionFightSelfState* seflstate) {
  delete seflstate_;
  seflstate_ = seflstate;
  if (seflstate) {
    set_has_seflstate();
  } else {
    clear_has_seflstate();
  }
}

// -------------------------------------------------------------------

// CMD_UPDATE_CURBATTLE_LEGIONINFO_SC

// required .GSProto.LegionFightState newState = 1;
inline bool CMD_UPDATE_CURBATTLE_LEGIONINFO_SC::has_newstate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_UPDATE_CURBATTLE_LEGIONINFO_SC::set_has_newstate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_UPDATE_CURBATTLE_LEGIONINFO_SC::clear_has_newstate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_UPDATE_CURBATTLE_LEGIONINFO_SC::clear_newstate() {
  if (newstate_ != NULL) newstate_->::GSProto::LegionFightState::Clear();
  clear_has_newstate();
}
inline const ::GSProto::LegionFightState& CMD_UPDATE_CURBATTLE_LEGIONINFO_SC::newstate() const {
  return newstate_ != NULL ? *newstate_ : *default_instance_->newstate_;
}
inline ::GSProto::LegionFightState* CMD_UPDATE_CURBATTLE_LEGIONINFO_SC::mutable_newstate() {
  set_has_newstate();
  if (newstate_ == NULL) newstate_ = new ::GSProto::LegionFightState;
  return newstate_;
}
inline ::GSProto::LegionFightState* CMD_UPDATE_CURBATTLE_LEGIONINFO_SC::release_newstate() {
  clear_has_newstate();
  ::GSProto::LegionFightState* temp = newstate_;
  newstate_ = NULL;
  return temp;
}
inline void CMD_UPDATE_CURBATTLE_LEGIONINFO_SC::set_allocated_newstate(::GSProto::LegionFightState* newstate) {
  delete newstate_;
  newstate_ = newstate;
  if (newstate) {
    set_has_newstate();
  } else {
    clear_has_newstate();
  }
}

// -------------------------------------------------------------------

// LegionBattleSelfRecordItem

// required string strAttackerLegionName = 1;
inline bool LegionBattleSelfRecordItem::has_strattackerlegionname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LegionBattleSelfRecordItem::set_has_strattackerlegionname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LegionBattleSelfRecordItem::clear_has_strattackerlegionname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LegionBattleSelfRecordItem::clear_strattackerlegionname() {
  if (strattackerlegionname_ != &::google::protobuf::internal::kEmptyString) {
    strattackerlegionname_->clear();
  }
  clear_has_strattackerlegionname();
}
inline const ::std::string& LegionBattleSelfRecordItem::strattackerlegionname() const {
  return *strattackerlegionname_;
}
inline void LegionBattleSelfRecordItem::set_strattackerlegionname(const ::std::string& value) {
  set_has_strattackerlegionname();
  if (strattackerlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strattackerlegionname_ = new ::std::string;
  }
  strattackerlegionname_->assign(value);
}
inline void LegionBattleSelfRecordItem::set_strattackerlegionname(const char* value) {
  set_has_strattackerlegionname();
  if (strattackerlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strattackerlegionname_ = new ::std::string;
  }
  strattackerlegionname_->assign(value);
}
inline void LegionBattleSelfRecordItem::set_strattackerlegionname(const char* value, size_t size) {
  set_has_strattackerlegionname();
  if (strattackerlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strattackerlegionname_ = new ::std::string;
  }
  strattackerlegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionBattleSelfRecordItem::mutable_strattackerlegionname() {
  set_has_strattackerlegionname();
  if (strattackerlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strattackerlegionname_ = new ::std::string;
  }
  return strattackerlegionname_;
}
inline ::std::string* LegionBattleSelfRecordItem::release_strattackerlegionname() {
  clear_has_strattackerlegionname();
  if (strattackerlegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strattackerlegionname_;
    strattackerlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionBattleSelfRecordItem::set_allocated_strattackerlegionname(::std::string* strattackerlegionname) {
  if (strattackerlegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strattackerlegionname_;
  }
  if (strattackerlegionname) {
    set_has_strattackerlegionname();
    strattackerlegionname_ = strattackerlegionname;
  } else {
    clear_has_strattackerlegionname();
    strattackerlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strAttackerName = 2;
inline bool LegionBattleSelfRecordItem::has_strattackername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LegionBattleSelfRecordItem::set_has_strattackername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LegionBattleSelfRecordItem::clear_has_strattackername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LegionBattleSelfRecordItem::clear_strattackername() {
  if (strattackername_ != &::google::protobuf::internal::kEmptyString) {
    strattackername_->clear();
  }
  clear_has_strattackername();
}
inline const ::std::string& LegionBattleSelfRecordItem::strattackername() const {
  return *strattackername_;
}
inline void LegionBattleSelfRecordItem::set_strattackername(const ::std::string& value) {
  set_has_strattackername();
  if (strattackername_ == &::google::protobuf::internal::kEmptyString) {
    strattackername_ = new ::std::string;
  }
  strattackername_->assign(value);
}
inline void LegionBattleSelfRecordItem::set_strattackername(const char* value) {
  set_has_strattackername();
  if (strattackername_ == &::google::protobuf::internal::kEmptyString) {
    strattackername_ = new ::std::string;
  }
  strattackername_->assign(value);
}
inline void LegionBattleSelfRecordItem::set_strattackername(const char* value, size_t size) {
  set_has_strattackername();
  if (strattackername_ == &::google::protobuf::internal::kEmptyString) {
    strattackername_ = new ::std::string;
  }
  strattackername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionBattleSelfRecordItem::mutable_strattackername() {
  set_has_strattackername();
  if (strattackername_ == &::google::protobuf::internal::kEmptyString) {
    strattackername_ = new ::std::string;
  }
  return strattackername_;
}
inline ::std::string* LegionBattleSelfRecordItem::release_strattackername() {
  clear_has_strattackername();
  if (strattackername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strattackername_;
    strattackername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionBattleSelfRecordItem::set_allocated_strattackername(::std::string* strattackername) {
  if (strattackername_ != &::google::protobuf::internal::kEmptyString) {
    delete strattackername_;
  }
  if (strattackername) {
    set_has_strattackername();
    strattackername_ = strattackername;
  } else {
    clear_has_strattackername();
    strattackername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strTargetLegionName = 3;
inline bool LegionBattleSelfRecordItem::has_strtargetlegionname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LegionBattleSelfRecordItem::set_has_strtargetlegionname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LegionBattleSelfRecordItem::clear_has_strtargetlegionname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LegionBattleSelfRecordItem::clear_strtargetlegionname() {
  if (strtargetlegionname_ != &::google::protobuf::internal::kEmptyString) {
    strtargetlegionname_->clear();
  }
  clear_has_strtargetlegionname();
}
inline const ::std::string& LegionBattleSelfRecordItem::strtargetlegionname() const {
  return *strtargetlegionname_;
}
inline void LegionBattleSelfRecordItem::set_strtargetlegionname(const ::std::string& value) {
  set_has_strtargetlegionname();
  if (strtargetlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strtargetlegionname_ = new ::std::string;
  }
  strtargetlegionname_->assign(value);
}
inline void LegionBattleSelfRecordItem::set_strtargetlegionname(const char* value) {
  set_has_strtargetlegionname();
  if (strtargetlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strtargetlegionname_ = new ::std::string;
  }
  strtargetlegionname_->assign(value);
}
inline void LegionBattleSelfRecordItem::set_strtargetlegionname(const char* value, size_t size) {
  set_has_strtargetlegionname();
  if (strtargetlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strtargetlegionname_ = new ::std::string;
  }
  strtargetlegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionBattleSelfRecordItem::mutable_strtargetlegionname() {
  set_has_strtargetlegionname();
  if (strtargetlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strtargetlegionname_ = new ::std::string;
  }
  return strtargetlegionname_;
}
inline ::std::string* LegionBattleSelfRecordItem::release_strtargetlegionname() {
  clear_has_strtargetlegionname();
  if (strtargetlegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strtargetlegionname_;
    strtargetlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionBattleSelfRecordItem::set_allocated_strtargetlegionname(::std::string* strtargetlegionname) {
  if (strtargetlegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strtargetlegionname_;
  }
  if (strtargetlegionname) {
    set_has_strtargetlegionname();
    strtargetlegionname_ = strtargetlegionname;
  } else {
    clear_has_strtargetlegionname();
    strtargetlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strTargetName = 4;
inline bool LegionBattleSelfRecordItem::has_strtargetname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LegionBattleSelfRecordItem::set_has_strtargetname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LegionBattleSelfRecordItem::clear_has_strtargetname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LegionBattleSelfRecordItem::clear_strtargetname() {
  if (strtargetname_ != &::google::protobuf::internal::kEmptyString) {
    strtargetname_->clear();
  }
  clear_has_strtargetname();
}
inline const ::std::string& LegionBattleSelfRecordItem::strtargetname() const {
  return *strtargetname_;
}
inline void LegionBattleSelfRecordItem::set_strtargetname(const ::std::string& value) {
  set_has_strtargetname();
  if (strtargetname_ == &::google::protobuf::internal::kEmptyString) {
    strtargetname_ = new ::std::string;
  }
  strtargetname_->assign(value);
}
inline void LegionBattleSelfRecordItem::set_strtargetname(const char* value) {
  set_has_strtargetname();
  if (strtargetname_ == &::google::protobuf::internal::kEmptyString) {
    strtargetname_ = new ::std::string;
  }
  strtargetname_->assign(value);
}
inline void LegionBattleSelfRecordItem::set_strtargetname(const char* value, size_t size) {
  set_has_strtargetname();
  if (strtargetname_ == &::google::protobuf::internal::kEmptyString) {
    strtargetname_ = new ::std::string;
  }
  strtargetname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionBattleSelfRecordItem::mutable_strtargetname() {
  set_has_strtargetname();
  if (strtargetname_ == &::google::protobuf::internal::kEmptyString) {
    strtargetname_ = new ::std::string;
  }
  return strtargetname_;
}
inline ::std::string* LegionBattleSelfRecordItem::release_strtargetname() {
  clear_has_strtargetname();
  if (strtargetname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strtargetname_;
    strtargetname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionBattleSelfRecordItem::set_allocated_strtargetname(::std::string* strtargetname) {
  if (strtargetname_ != &::google::protobuf::internal::kEmptyString) {
    delete strtargetname_;
  }
  if (strtargetname) {
    set_has_strtargetname();
    strtargetname_ = strtargetname;
  } else {
    clear_has_strtargetname();
    strtargetname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bool bAttackerWin = 5;
inline bool LegionBattleSelfRecordItem::has_battackerwin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LegionBattleSelfRecordItem::set_has_battackerwin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LegionBattleSelfRecordItem::clear_has_battackerwin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LegionBattleSelfRecordItem::clear_battackerwin() {
  battackerwin_ = false;
  clear_has_battackerwin();
}
inline bool LegionBattleSelfRecordItem::battackerwin() const {
  return battackerwin_;
}
inline void LegionBattleSelfRecordItem::set_battackerwin(bool value) {
  set_has_battackerwin();
  battackerwin_ = value;
}

// required string strFightKey = 6;
inline bool LegionBattleSelfRecordItem::has_strfightkey() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LegionBattleSelfRecordItem::set_has_strfightkey() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LegionBattleSelfRecordItem::clear_has_strfightkey() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LegionBattleSelfRecordItem::clear_strfightkey() {
  if (strfightkey_ != &::google::protobuf::internal::kEmptyString) {
    strfightkey_->clear();
  }
  clear_has_strfightkey();
}
inline const ::std::string& LegionBattleSelfRecordItem::strfightkey() const {
  return *strfightkey_;
}
inline void LegionBattleSelfRecordItem::set_strfightkey(const ::std::string& value) {
  set_has_strfightkey();
  if (strfightkey_ == &::google::protobuf::internal::kEmptyString) {
    strfightkey_ = new ::std::string;
  }
  strfightkey_->assign(value);
}
inline void LegionBattleSelfRecordItem::set_strfightkey(const char* value) {
  set_has_strfightkey();
  if (strfightkey_ == &::google::protobuf::internal::kEmptyString) {
    strfightkey_ = new ::std::string;
  }
  strfightkey_->assign(value);
}
inline void LegionBattleSelfRecordItem::set_strfightkey(const char* value, size_t size) {
  set_has_strfightkey();
  if (strfightkey_ == &::google::protobuf::internal::kEmptyString) {
    strfightkey_ = new ::std::string;
  }
  strfightkey_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LegionBattleSelfRecordItem::mutable_strfightkey() {
  set_has_strfightkey();
  if (strfightkey_ == &::google::protobuf::internal::kEmptyString) {
    strfightkey_ = new ::std::string;
  }
  return strfightkey_;
}
inline ::std::string* LegionBattleSelfRecordItem::release_strfightkey() {
  clear_has_strfightkey();
  if (strfightkey_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strfightkey_;
    strfightkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LegionBattleSelfRecordItem::set_allocated_strfightkey(::std::string* strfightkey) {
  if (strfightkey_ != &::google::protobuf::internal::kEmptyString) {
    delete strfightkey_;
  }
  if (strfightkey) {
    set_has_strfightkey();
    strfightkey_ = strfightkey;
  } else {
    clear_has_strfightkey();
    strfightkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_QUERY_CURBATTLE_SELFRECORD_SC

// repeated .GSProto.LegionBattleSelfRecordItem szSelfRecord = 1;
inline int CMD_QUERY_CURBATTLE_SELFRECORD_SC::szselfrecord_size() const {
  return szselfrecord_.size();
}
inline void CMD_QUERY_CURBATTLE_SELFRECORD_SC::clear_szselfrecord() {
  szselfrecord_.Clear();
}
inline const ::GSProto::LegionBattleSelfRecordItem& CMD_QUERY_CURBATTLE_SELFRECORD_SC::szselfrecord(int index) const {
  return szselfrecord_.Get(index);
}
inline ::GSProto::LegionBattleSelfRecordItem* CMD_QUERY_CURBATTLE_SELFRECORD_SC::mutable_szselfrecord(int index) {
  return szselfrecord_.Mutable(index);
}
inline ::GSProto::LegionBattleSelfRecordItem* CMD_QUERY_CURBATTLE_SELFRECORD_SC::add_szselfrecord() {
  return szselfrecord_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBattleSelfRecordItem >&
CMD_QUERY_CURBATTLE_SELFRECORD_SC::szselfrecord() const {
  return szselfrecord_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBattleSelfRecordItem >*
CMD_QUERY_CURBATTLE_SELFRECORD_SC::mutable_szselfrecord() {
  return &szselfrecord_;
}

// -------------------------------------------------------------------

// CMD_QUERY_LASTBATTLE_SELFRECORD_CS

// required int32 iCityID = 1;
inline bool CMD_QUERY_LASTBATTLE_SELFRECORD_CS::has_icityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_LASTBATTLE_SELFRECORD_CS::set_has_icityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_LASTBATTLE_SELFRECORD_CS::clear_has_icityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_LASTBATTLE_SELFRECORD_CS::clear_icityid() {
  icityid_ = 0;
  clear_has_icityid();
}
inline ::google::protobuf::int32 CMD_QUERY_LASTBATTLE_SELFRECORD_CS::icityid() const {
  return icityid_;
}
inline void CMD_QUERY_LASTBATTLE_SELFRECORD_CS::set_icityid(::google::protobuf::int32 value) {
  set_has_icityid();
  icityid_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_LASTBATTLE_SELFRECORD_SC

// repeated .GSProto.LegionBattleSelfRecordItem szSelfRecord = 1;
inline int CMD_QUERY_LASTBATTLE_SELFRECORD_SC::szselfrecord_size() const {
  return szselfrecord_.size();
}
inline void CMD_QUERY_LASTBATTLE_SELFRECORD_SC::clear_szselfrecord() {
  szselfrecord_.Clear();
}
inline const ::GSProto::LegionBattleSelfRecordItem& CMD_QUERY_LASTBATTLE_SELFRECORD_SC::szselfrecord(int index) const {
  return szselfrecord_.Get(index);
}
inline ::GSProto::LegionBattleSelfRecordItem* CMD_QUERY_LASTBATTLE_SELFRECORD_SC::mutable_szselfrecord(int index) {
  return szselfrecord_.Mutable(index);
}
inline ::GSProto::LegionBattleSelfRecordItem* CMD_QUERY_LASTBATTLE_SELFRECORD_SC::add_szselfrecord() {
  return szselfrecord_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBattleSelfRecordItem >&
CMD_QUERY_LASTBATTLE_SELFRECORD_SC::szselfrecord() const {
  return szselfrecord_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::LegionBattleSelfRecordItem >*
CMD_QUERY_LASTBATTLE_SELFRECORD_SC::mutable_szselfrecord() {
  return &szselfrecord_;
}

// -------------------------------------------------------------------

// CMD_COMM_QUERYBATTLE_CS

// required string strFightKey = 1;
inline bool CMD_COMM_QUERYBATTLE_CS::has_strfightkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_COMM_QUERYBATTLE_CS::set_has_strfightkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_COMM_QUERYBATTLE_CS::clear_has_strfightkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_COMM_QUERYBATTLE_CS::clear_strfightkey() {
  if (strfightkey_ != &::google::protobuf::internal::kEmptyString) {
    strfightkey_->clear();
  }
  clear_has_strfightkey();
}
inline const ::std::string& CMD_COMM_QUERYBATTLE_CS::strfightkey() const {
  return *strfightkey_;
}
inline void CMD_COMM_QUERYBATTLE_CS::set_strfightkey(const ::std::string& value) {
  set_has_strfightkey();
  if (strfightkey_ == &::google::protobuf::internal::kEmptyString) {
    strfightkey_ = new ::std::string;
  }
  strfightkey_->assign(value);
}
inline void CMD_COMM_QUERYBATTLE_CS::set_strfightkey(const char* value) {
  set_has_strfightkey();
  if (strfightkey_ == &::google::protobuf::internal::kEmptyString) {
    strfightkey_ = new ::std::string;
  }
  strfightkey_->assign(value);
}
inline void CMD_COMM_QUERYBATTLE_CS::set_strfightkey(const char* value, size_t size) {
  set_has_strfightkey();
  if (strfightkey_ == &::google::protobuf::internal::kEmptyString) {
    strfightkey_ = new ::std::string;
  }
  strfightkey_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_COMM_QUERYBATTLE_CS::mutable_strfightkey() {
  set_has_strfightkey();
  if (strfightkey_ == &::google::protobuf::internal::kEmptyString) {
    strfightkey_ = new ::std::string;
  }
  return strfightkey_;
}
inline ::std::string* CMD_COMM_QUERYBATTLE_CS::release_strfightkey() {
  clear_has_strfightkey();
  if (strfightkey_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strfightkey_;
    strfightkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_COMM_QUERYBATTLE_CS::set_allocated_strfightkey(::std::string* strfightkey) {
  if (strfightkey_ != &::google::protobuf::internal::kEmptyString) {
    delete strfightkey_;
  }
  if (strfightkey) {
    set_has_strfightkey();
    strfightkey_ = strfightkey;
  } else {
    clear_has_strfightkey();
    strfightkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// HonorRankItem

// required string strName = 2;
inline bool HonorRankItem::has_strname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HonorRankItem::set_has_strname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HonorRankItem::clear_has_strname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HonorRankItem::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& HonorRankItem::strname() const {
  return *strname_;
}
inline void HonorRankItem::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void HonorRankItem::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void HonorRankItem::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HonorRankItem::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* HonorRankItem::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void HonorRankItem::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iLevel = 3;
inline bool HonorRankItem::has_ilevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HonorRankItem::set_has_ilevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HonorRankItem::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HonorRankItem::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 HonorRankItem::ilevel() const {
  return ilevel_;
}
inline void HonorRankItem::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// required int32 iKillCount = 4;
inline bool HonorRankItem::has_ikillcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HonorRankItem::set_has_ikillcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HonorRankItem::clear_has_ikillcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HonorRankItem::clear_ikillcount() {
  ikillcount_ = 0;
  clear_has_ikillcount();
}
inline ::google::protobuf::int32 HonorRankItem::ikillcount() const {
  return ikillcount_;
}
inline void HonorRankItem::set_ikillcount(::google::protobuf::int32 value) {
  set_has_ikillcount();
  ikillcount_ = value;
}

// required int32 iGetHonor = 5;
inline bool HonorRankItem::has_igethonor() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HonorRankItem::set_has_igethonor() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HonorRankItem::clear_has_igethonor() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HonorRankItem::clear_igethonor() {
  igethonor_ = 0;
  clear_has_igethonor();
}
inline ::google::protobuf::int32 HonorRankItem::igethonor() const {
  return igethonor_;
}
inline void HonorRankItem::set_igethonor(::google::protobuf::int32 value) {
  set_has_igethonor();
  igethonor_ = value;
}

// required int32 iGetContribute = 6;
inline bool HonorRankItem::has_igetcontribute() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HonorRankItem::set_has_igetcontribute() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HonorRankItem::clear_has_igetcontribute() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HonorRankItem::clear_igetcontribute() {
  igetcontribute_ = 0;
  clear_has_igetcontribute();
}
inline ::google::protobuf::int32 HonorRankItem::igetcontribute() const {
  return igetcontribute_;
}
inline void HonorRankItem::set_igetcontribute(::google::protobuf::int32 value) {
  set_has_igetcontribute();
  igetcontribute_ = value;
}

// required string strLegionName = 7;
inline bool HonorRankItem::has_strlegionname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HonorRankItem::set_has_strlegionname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HonorRankItem::clear_has_strlegionname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HonorRankItem::clear_strlegionname() {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    strlegionname_->clear();
  }
  clear_has_strlegionname();
}
inline const ::std::string& HonorRankItem::strlegionname() const {
  return *strlegionname_;
}
inline void HonorRankItem::set_strlegionname(const ::std::string& value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void HonorRankItem::set_strlegionname(const char* value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void HonorRankItem::set_strlegionname(const char* value, size_t size) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HonorRankItem::mutable_strlegionname() {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  return strlegionname_;
}
inline ::std::string* HonorRankItem::release_strlegionname() {
  clear_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strlegionname_;
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void HonorRankItem::set_allocated_strlegionname(::std::string* strlegionname) {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strlegionname_;
  }
  if (strlegionname) {
    set_has_strlegionname();
    strlegionname_ = strlegionname;
  } else {
    clear_has_strlegionname();
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_QUERY_CURBATTLE_HONORRANK_SC

// repeated .GSProto.HonorRankItem szHornorRank = 1;
inline int CMD_QUERY_CURBATTLE_HONORRANK_SC::szhornorrank_size() const {
  return szhornorrank_.size();
}
inline void CMD_QUERY_CURBATTLE_HONORRANK_SC::clear_szhornorrank() {
  szhornorrank_.Clear();
}
inline const ::GSProto::HonorRankItem& CMD_QUERY_CURBATTLE_HONORRANK_SC::szhornorrank(int index) const {
  return szhornorrank_.Get(index);
}
inline ::GSProto::HonorRankItem* CMD_QUERY_CURBATTLE_HONORRANK_SC::mutable_szhornorrank(int index) {
  return szhornorrank_.Mutable(index);
}
inline ::GSProto::HonorRankItem* CMD_QUERY_CURBATTLE_HONORRANK_SC::add_szhornorrank() {
  return szhornorrank_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HonorRankItem >&
CMD_QUERY_CURBATTLE_HONORRANK_SC::szhornorrank() const {
  return szhornorrank_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::HonorRankItem >*
CMD_QUERY_CURBATTLE_HONORRANK_SC::mutable_szhornorrank() {
  return &szhornorrank_;
}

// -------------------------------------------------------------------

// CMD_QUERY_LASTBATTLE_HONORRANK_CS

// required int32 iCityID = 1;
inline bool CMD_QUERY_LASTBATTLE_HONORRANK_CS::has_icityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_LASTBATTLE_HONORRANK_CS::set_has_icityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_LASTBATTLE_HONORRANK_CS::clear_has_icityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_LASTBATTLE_HONORRANK_CS::clear_icityid() {
  icityid_ = 0;
  clear_has_icityid();
}
inline ::google::protobuf::int32 CMD_QUERY_LASTBATTLE_HONORRANK_CS::icityid() const {
  return icityid_;
}
inline void CMD_QUERY_LASTBATTLE_HONORRANK_CS::set_icityid(::google::protobuf::int32 value) {
  set_has_icityid();
  icityid_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_LASTBATTLE_HONORRANK_SC

// repeated .GSProto.HonorRankItem szHornorRank = 1;
inline int CMD_QUERY_LASTBATTLE_HONORRANK_SC::szhornorrank_size() const {
  return szhornorrank_.size();
}
inline void CMD_QUERY_LASTBATTLE_HONORRANK_SC::clear_szhornorrank() {
  szhornorrank_.Clear();
}
inline const ::GSProto::HonorRankItem& CMD_QUERY_LASTBATTLE_HONORRANK_SC::szhornorrank(int index) const {
  return szhornorrank_.Get(index);
}
inline ::GSProto::HonorRankItem* CMD_QUERY_LASTBATTLE_HONORRANK_SC::mutable_szhornorrank(int index) {
  return szhornorrank_.Mutable(index);
}
inline ::GSProto::HonorRankItem* CMD_QUERY_LASTBATTLE_HONORRANK_SC::add_szhornorrank() {
  return szhornorrank_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HonorRankItem >&
CMD_QUERY_LASTBATTLE_HONORRANK_SC::szhornorrank() const {
  return szhornorrank_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::HonorRankItem >*
CMD_QUERY_LASTBATTLE_HONORRANK_SC::mutable_szhornorrank() {
  return &szhornorrank_;
}

// -------------------------------------------------------------------

// CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS

// required int32 iCityID = 1;
inline bool CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS::has_icityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS::set_has_icityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS::clear_has_icityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS::clear_icityid() {
  icityid_ = 0;
  clear_has_icityid();
}
inline ::google::protobuf::int32 CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS::icityid() const {
  return icityid_;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS::set_icityid(::google::protobuf::int32 value) {
  set_has_icityid();
  icityid_ = value;
}

// required int32 iPage = 2;
inline bool CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS::has_ipage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS::set_has_ipage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS::clear_has_ipage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS::clear_ipage() {
  ipage_ = 0;
  clear_has_ipage();
}
inline ::google::protobuf::int32 CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS::ipage() const {
  return ipage_;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_CS::set_ipage(::google::protobuf::int32 value) {
  set_has_ipage();
  ipage_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC

// required int32 iCityID = 1;
inline bool CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::has_icityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::set_has_icityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::clear_has_icityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::clear_icityid() {
  icityid_ = 0;
  clear_has_icityid();
}
inline ::google::protobuf::int32 CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::icityid() const {
  return icityid_;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::set_icityid(::google::protobuf::int32 value) {
  set_has_icityid();
  icityid_ = value;
}

// required .GSProto.LegionBattleRecordPage battleRecordPage = 2;
inline bool CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::has_battlerecordpage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::set_has_battlerecordpage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::clear_has_battlerecordpage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::clear_battlerecordpage() {
  if (battlerecordpage_ != NULL) battlerecordpage_->::GSProto::LegionBattleRecordPage::Clear();
  clear_has_battlerecordpage();
}
inline const ::GSProto::LegionBattleRecordPage& CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::battlerecordpage() const {
  return battlerecordpage_ != NULL ? *battlerecordpage_ : *default_instance_->battlerecordpage_;
}
inline ::GSProto::LegionBattleRecordPage* CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::mutable_battlerecordpage() {
  set_has_battlerecordpage();
  if (battlerecordpage_ == NULL) battlerecordpage_ = new ::GSProto::LegionBattleRecordPage;
  return battlerecordpage_;
}
inline ::GSProto::LegionBattleRecordPage* CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::release_battlerecordpage() {
  clear_has_battlerecordpage();
  ::GSProto::LegionBattleRecordPage* temp = battlerecordpage_;
  battlerecordpage_ = NULL;
  return temp;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::set_allocated_battlerecordpage(::GSProto::LegionBattleRecordPage* battlerecordpage) {
  delete battlerecordpage_;
  battlerecordpage_ = battlerecordpage;
  if (battlerecordpage) {
    set_has_battlerecordpage();
  } else {
    clear_has_battlerecordpage();
  }
}

// required int32 iTotalPage = 3;
inline bool CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::has_itotalpage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::set_has_itotalpage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::clear_has_itotalpage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::clear_itotalpage() {
  itotalpage_ = 0;
  clear_has_itotalpage();
}
inline ::google::protobuf::int32 CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::itotalpage() const {
  return itotalpage_;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::set_itotalpage(::google::protobuf::int32 value) {
  set_has_itotalpage();
  itotalpage_ = value;
}

// required int32 iCurPage = 4;
inline bool CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::has_icurpage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::set_has_icurpage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::clear_has_icurpage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::clear_icurpage() {
  icurpage_ = 0;
  clear_has_icurpage();
}
inline ::google::protobuf::int32 CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::icurpage() const {
  return icurpage_;
}
inline void CMD_QUERY_LASTBATTLE_RECORD_PAGE_SC::set_icurpage(::google::protobuf::int32 value) {
  set_has_icurpage();
  icurpage_ = value;
}

// -------------------------------------------------------------------

// GiftCustomBody

// required string strTitle = 1;
inline bool GiftCustomBody::has_strtitle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GiftCustomBody::set_has_strtitle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GiftCustomBody::clear_has_strtitle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GiftCustomBody::clear_strtitle() {
  if (strtitle_ != &::google::protobuf::internal::kEmptyString) {
    strtitle_->clear();
  }
  clear_has_strtitle();
}
inline const ::std::string& GiftCustomBody::strtitle() const {
  return *strtitle_;
}
inline void GiftCustomBody::set_strtitle(const ::std::string& value) {
  set_has_strtitle();
  if (strtitle_ == &::google::protobuf::internal::kEmptyString) {
    strtitle_ = new ::std::string;
  }
  strtitle_->assign(value);
}
inline void GiftCustomBody::set_strtitle(const char* value) {
  set_has_strtitle();
  if (strtitle_ == &::google::protobuf::internal::kEmptyString) {
    strtitle_ = new ::std::string;
  }
  strtitle_->assign(value);
}
inline void GiftCustomBody::set_strtitle(const char* value, size_t size) {
  set_has_strtitle();
  if (strtitle_ == &::google::protobuf::internal::kEmptyString) {
    strtitle_ = new ::std::string;
  }
  strtitle_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GiftCustomBody::mutable_strtitle() {
  set_has_strtitle();
  if (strtitle_ == &::google::protobuf::internal::kEmptyString) {
    strtitle_ = new ::std::string;
  }
  return strtitle_;
}
inline ::std::string* GiftCustomBody::release_strtitle() {
  clear_has_strtitle();
  if (strtitle_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strtitle_;
    strtitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GiftCustomBody::set_allocated_strtitle(::std::string* strtitle) {
  if (strtitle_ != &::google::protobuf::internal::kEmptyString) {
    delete strtitle_;
  }
  if (strtitle) {
    set_has_strtitle();
    strtitle_ = strtitle;
  } else {
    clear_has_strtitle();
    strtitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .GSProto.PropItem szAwardPropList = 2;
inline int GiftCustomBody::szawardproplist_size() const {
  return szawardproplist_.size();
}
inline void GiftCustomBody::clear_szawardproplist() {
  szawardproplist_.Clear();
}
inline const ::GSProto::PropItem& GiftCustomBody::szawardproplist(int index) const {
  return szawardproplist_.Get(index);
}
inline ::GSProto::PropItem* GiftCustomBody::mutable_szawardproplist(int index) {
  return szawardproplist_.Mutable(index);
}
inline ::GSProto::PropItem* GiftCustomBody::add_szawardproplist() {
  return szawardproplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
GiftCustomBody::szawardproplist() const {
  return szawardproplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
GiftCustomBody::mutable_szawardproplist() {
  return &szawardproplist_;
}

// repeated .GSProto.FightAwardItem szAwardItemList = 3;
inline int GiftCustomBody::szawarditemlist_size() const {
  return szawarditemlist_.size();
}
inline void GiftCustomBody::clear_szawarditemlist() {
  szawarditemlist_.Clear();
}
inline const ::GSProto::FightAwardItem& GiftCustomBody::szawarditemlist(int index) const {
  return szawarditemlist_.Get(index);
}
inline ::GSProto::FightAwardItem* GiftCustomBody::mutable_szawarditemlist(int index) {
  return szawarditemlist_.Mutable(index);
}
inline ::GSProto::FightAwardItem* GiftCustomBody::add_szawarditemlist() {
  return szawarditemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightAwardItem >&
GiftCustomBody::szawarditemlist() const {
  return szawarditemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightAwardItem >*
GiftCustomBody::mutable_szawarditemlist() {
  return &szawarditemlist_;
}

// optional int32 iAwardedContribute = 4;
inline bool GiftCustomBody::has_iawardedcontribute() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GiftCustomBody::set_has_iawardedcontribute() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GiftCustomBody::clear_has_iawardedcontribute() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GiftCustomBody::clear_iawardedcontribute() {
  iawardedcontribute_ = 0;
  clear_has_iawardedcontribute();
}
inline ::google::protobuf::int32 GiftCustomBody::iawardedcontribute() const {
  return iawardedcontribute_;
}
inline void GiftCustomBody::set_iawardedcontribute(::google::protobuf::int32 value) {
  set_has_iawardedcontribute();
  iawardedcontribute_ = value;
}

// -------------------------------------------------------------------

// GiftItem

// required string strUUID = 1;
inline bool GiftItem::has_struuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GiftItem::set_has_struuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GiftItem::clear_has_struuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GiftItem::clear_struuid() {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    struuid_->clear();
  }
  clear_has_struuid();
}
inline const ::std::string& GiftItem::struuid() const {
  return *struuid_;
}
inline void GiftItem::set_struuid(const ::std::string& value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void GiftItem::set_struuid(const char* value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void GiftItem::set_struuid(const char* value, size_t size) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GiftItem::mutable_struuid() {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  return struuid_;
}
inline ::std::string* GiftItem::release_struuid() {
  clear_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = struuid_;
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GiftItem::set_allocated_struuid(::std::string* struuid) {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    delete struuid_;
  }
  if (struuid) {
    set_has_struuid();
    struuid_ = struuid;
  } else {
    clear_has_struuid();
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bool bCustomGift = 2;
inline bool GiftItem::has_bcustomgift() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GiftItem::set_has_bcustomgift() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GiftItem::clear_has_bcustomgift() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GiftItem::clear_bcustomgift() {
  bcustomgift_ = false;
  clear_has_bcustomgift();
}
inline bool GiftItem::bcustomgift() const {
  return bcustomgift_;
}
inline void GiftItem::set_bcustomgift(bool value) {
  set_has_bcustomgift();
  bcustomgift_ = value;
}

// optional int32 iGiftID = 3;
inline bool GiftItem::has_igiftid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GiftItem::set_has_igiftid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GiftItem::clear_has_igiftid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GiftItem::clear_igiftid() {
  igiftid_ = 0;
  clear_has_igiftid();
}
inline ::google::protobuf::int32 GiftItem::igiftid() const {
  return igiftid_;
}
inline void GiftItem::set_igiftid(::google::protobuf::int32 value) {
  set_has_igiftid();
  igiftid_ = value;
}

// optional .GSProto.GiftCustomBody cutomBody = 4;
inline bool GiftItem::has_cutombody() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GiftItem::set_has_cutombody() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GiftItem::clear_has_cutombody() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GiftItem::clear_cutombody() {
  if (cutombody_ != NULL) cutombody_->::GSProto::GiftCustomBody::Clear();
  clear_has_cutombody();
}
inline const ::GSProto::GiftCustomBody& GiftItem::cutombody() const {
  return cutombody_ != NULL ? *cutombody_ : *default_instance_->cutombody_;
}
inline ::GSProto::GiftCustomBody* GiftItem::mutable_cutombody() {
  set_has_cutombody();
  if (cutombody_ == NULL) cutombody_ = new ::GSProto::GiftCustomBody;
  return cutombody_;
}
inline ::GSProto::GiftCustomBody* GiftItem::release_cutombody() {
  clear_has_cutombody();
  ::GSProto::GiftCustomBody* temp = cutombody_;
  cutombody_ = NULL;
  return temp;
}
inline void GiftItem::set_allocated_cutombody(::GSProto::GiftCustomBody* cutombody) {
  delete cutombody_;
  cutombody_ = cutombody;
  if (cutombody) {
    set_has_cutombody();
  } else {
    clear_has_cutombody();
  }
}

// -------------------------------------------------------------------

// CMD_QUERY_GIFT_SC

// repeated .GSProto.GiftItem szGiftItem = 1;
inline int CMD_QUERY_GIFT_SC::szgiftitem_size() const {
  return szgiftitem_.size();
}
inline void CMD_QUERY_GIFT_SC::clear_szgiftitem() {
  szgiftitem_.Clear();
}
inline const ::GSProto::GiftItem& CMD_QUERY_GIFT_SC::szgiftitem(int index) const {
  return szgiftitem_.Get(index);
}
inline ::GSProto::GiftItem* CMD_QUERY_GIFT_SC::mutable_szgiftitem(int index) {
  return szgiftitem_.Mutable(index);
}
inline ::GSProto::GiftItem* CMD_QUERY_GIFT_SC::add_szgiftitem() {
  return szgiftitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::GiftItem >&
CMD_QUERY_GIFT_SC::szgiftitem() const {
  return szgiftitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::GiftItem >*
CMD_QUERY_GIFT_SC::mutable_szgiftitem() {
  return &szgiftitem_;
}

// -------------------------------------------------------------------

// CMD_GET_GIFT_CS

// required string strGiftUUID = 1;
inline bool CMD_GET_GIFT_CS::has_strgiftuuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GET_GIFT_CS::set_has_strgiftuuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GET_GIFT_CS::clear_has_strgiftuuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GET_GIFT_CS::clear_strgiftuuid() {
  if (strgiftuuid_ != &::google::protobuf::internal::kEmptyString) {
    strgiftuuid_->clear();
  }
  clear_has_strgiftuuid();
}
inline const ::std::string& CMD_GET_GIFT_CS::strgiftuuid() const {
  return *strgiftuuid_;
}
inline void CMD_GET_GIFT_CS::set_strgiftuuid(const ::std::string& value) {
  set_has_strgiftuuid();
  if (strgiftuuid_ == &::google::protobuf::internal::kEmptyString) {
    strgiftuuid_ = new ::std::string;
  }
  strgiftuuid_->assign(value);
}
inline void CMD_GET_GIFT_CS::set_strgiftuuid(const char* value) {
  set_has_strgiftuuid();
  if (strgiftuuid_ == &::google::protobuf::internal::kEmptyString) {
    strgiftuuid_ = new ::std::string;
  }
  strgiftuuid_->assign(value);
}
inline void CMD_GET_GIFT_CS::set_strgiftuuid(const char* value, size_t size) {
  set_has_strgiftuuid();
  if (strgiftuuid_ == &::google::protobuf::internal::kEmptyString) {
    strgiftuuid_ = new ::std::string;
  }
  strgiftuuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_GET_GIFT_CS::mutable_strgiftuuid() {
  set_has_strgiftuuid();
  if (strgiftuuid_ == &::google::protobuf::internal::kEmptyString) {
    strgiftuuid_ = new ::std::string;
  }
  return strgiftuuid_;
}
inline ::std::string* CMD_GET_GIFT_CS::release_strgiftuuid() {
  clear_has_strgiftuuid();
  if (strgiftuuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strgiftuuid_;
    strgiftuuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_GET_GIFT_CS::set_allocated_strgiftuuid(::std::string* strgiftuuid) {
  if (strgiftuuid_ != &::google::protobuf::internal::kEmptyString) {
    delete strgiftuuid_;
  }
  if (strgiftuuid) {
    set_has_strgiftuuid();
    strgiftuuid_ = strgiftuuid;
  } else {
    clear_has_strgiftuuid();
    strgiftuuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_GET_GIFT_SC

// required string strGiftUUID = 1;
inline bool CMD_GET_GIFT_SC::has_strgiftuuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GET_GIFT_SC::set_has_strgiftuuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GET_GIFT_SC::clear_has_strgiftuuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GET_GIFT_SC::clear_strgiftuuid() {
  if (strgiftuuid_ != &::google::protobuf::internal::kEmptyString) {
    strgiftuuid_->clear();
  }
  clear_has_strgiftuuid();
}
inline const ::std::string& CMD_GET_GIFT_SC::strgiftuuid() const {
  return *strgiftuuid_;
}
inline void CMD_GET_GIFT_SC::set_strgiftuuid(const ::std::string& value) {
  set_has_strgiftuuid();
  if (strgiftuuid_ == &::google::protobuf::internal::kEmptyString) {
    strgiftuuid_ = new ::std::string;
  }
  strgiftuuid_->assign(value);
}
inline void CMD_GET_GIFT_SC::set_strgiftuuid(const char* value) {
  set_has_strgiftuuid();
  if (strgiftuuid_ == &::google::protobuf::internal::kEmptyString) {
    strgiftuuid_ = new ::std::string;
  }
  strgiftuuid_->assign(value);
}
inline void CMD_GET_GIFT_SC::set_strgiftuuid(const char* value, size_t size) {
  set_has_strgiftuuid();
  if (strgiftuuid_ == &::google::protobuf::internal::kEmptyString) {
    strgiftuuid_ = new ::std::string;
  }
  strgiftuuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_GET_GIFT_SC::mutable_strgiftuuid() {
  set_has_strgiftuuid();
  if (strgiftuuid_ == &::google::protobuf::internal::kEmptyString) {
    strgiftuuid_ = new ::std::string;
  }
  return strgiftuuid_;
}
inline ::std::string* CMD_GET_GIFT_SC::release_strgiftuuid() {
  clear_has_strgiftuuid();
  if (strgiftuuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strgiftuuid_;
    strgiftuuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_GET_GIFT_SC::set_allocated_strgiftuuid(::std::string* strgiftuuid) {
  if (strgiftuuid_ != &::google::protobuf::internal::kEmptyString) {
    delete strgiftuuid_;
  }
  if (strgiftuuid) {
    set_has_strgiftuuid();
    strgiftuuid_ = strgiftuuid;
  } else {
    clear_has_strgiftuuid();
    strgiftuuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_CANCEL_LEGIONAPP_CS

// required uint32 dwLegionObjectID = 1;
inline bool CMD_CANCEL_LEGIONAPP_CS::has_dwlegionobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_CANCEL_LEGIONAPP_CS::set_has_dwlegionobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_CANCEL_LEGIONAPP_CS::clear_has_dwlegionobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_CANCEL_LEGIONAPP_CS::clear_dwlegionobjectid() {
  dwlegionobjectid_ = 0u;
  clear_has_dwlegionobjectid();
}
inline ::google::protobuf::uint32 CMD_CANCEL_LEGIONAPP_CS::dwlegionobjectid() const {
  return dwlegionobjectid_;
}
inline void CMD_CANCEL_LEGIONAPP_CS::set_dwlegionobjectid(::google::protobuf::uint32 value) {
  set_has_dwlegionobjectid();
  dwlegionobjectid_ = value;
}

// -------------------------------------------------------------------

// CMD_CANCEL_LEGIONAPP_SC

// required uint32 dwLegionObjectID = 1;
inline bool CMD_CANCEL_LEGIONAPP_SC::has_dwlegionobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_CANCEL_LEGIONAPP_SC::set_has_dwlegionobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_CANCEL_LEGIONAPP_SC::clear_has_dwlegionobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_CANCEL_LEGIONAPP_SC::clear_dwlegionobjectid() {
  dwlegionobjectid_ = 0u;
  clear_has_dwlegionobjectid();
}
inline ::google::protobuf::uint32 CMD_CANCEL_LEGIONAPP_SC::dwlegionobjectid() const {
  return dwlegionobjectid_;
}
inline void CMD_CANCEL_LEGIONAPP_SC::set_dwlegionobjectid(::google::protobuf::uint32 value) {
  set_has_dwlegionobjectid();
  dwlegionobjectid_ = value;
}

// -------------------------------------------------------------------

// ArenaPlayer

// required int32 iShowID = 1;
inline bool ArenaPlayer::has_ishowid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaPlayer::set_has_ishowid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaPlayer::clear_has_ishowid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaPlayer::clear_ishowid() {
  ishowid_ = 0;
  clear_has_ishowid();
}
inline ::google::protobuf::int32 ArenaPlayer::ishowid() const {
  return ishowid_;
}
inline void ArenaPlayer::set_ishowid(::google::protobuf::int32 value) {
  set_has_ishowid();
  ishowid_ = value;
}

// required string strName = 2;
inline bool ArenaPlayer::has_strname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArenaPlayer::set_has_strname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArenaPlayer::clear_has_strname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArenaPlayer::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& ArenaPlayer::strname() const {
  return *strname_;
}
inline void ArenaPlayer::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void ArenaPlayer::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void ArenaPlayer::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArenaPlayer::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* ArenaPlayer::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ArenaPlayer::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iLevel = 3;
inline bool ArenaPlayer::has_ilevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArenaPlayer::set_has_ilevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArenaPlayer::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArenaPlayer::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 ArenaPlayer::ilevel() const {
  return ilevel_;
}
inline void ArenaPlayer::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// required int32 iFightValue = 4;
inline bool ArenaPlayer::has_ifightvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ArenaPlayer::set_has_ifightvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ArenaPlayer::clear_has_ifightvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ArenaPlayer::clear_ifightvalue() {
  ifightvalue_ = 0;
  clear_has_ifightvalue();
}
inline ::google::protobuf::int32 ArenaPlayer::ifightvalue() const {
  return ifightvalue_;
}
inline void ArenaPlayer::set_ifightvalue(::google::protobuf::int32 value) {
  set_has_ifightvalue();
  ifightvalue_ = value;
}

// required int32 iRank = 5;
inline bool ArenaPlayer::has_irank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ArenaPlayer::set_has_irank() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ArenaPlayer::clear_has_irank() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ArenaPlayer::clear_irank() {
  irank_ = 0;
  clear_has_irank();
}
inline ::google::protobuf::int32 ArenaPlayer::irank() const {
  return irank_;
}
inline void ArenaPlayer::set_irank(::google::protobuf::int32 value) {
  set_has_irank();
  irank_ = value;
}

// required bool bMonster = 6;
inline bool ArenaPlayer::has_bmonster() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ArenaPlayer::set_has_bmonster() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ArenaPlayer::clear_has_bmonster() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ArenaPlayer::clear_bmonster() {
  bmonster_ = false;
  clear_has_bmonster();
}
inline bool ArenaPlayer::bmonster() const {
  return bmonster_;
}
inline void ArenaPlayer::set_bmonster(bool value) {
  set_has_bmonster();
  bmonster_ = value;
}

// -------------------------------------------------------------------

// ArenaChallengeInfo

// repeated .GSProto.ArenaPlayer szChallengeList = 1;
inline int ArenaChallengeInfo::szchallengelist_size() const {
  return szchallengelist_.size();
}
inline void ArenaChallengeInfo::clear_szchallengelist() {
  szchallengelist_.Clear();
}
inline const ::GSProto::ArenaPlayer& ArenaChallengeInfo::szchallengelist(int index) const {
  return szchallengelist_.Get(index);
}
inline ::GSProto::ArenaPlayer* ArenaChallengeInfo::mutable_szchallengelist(int index) {
  return szchallengelist_.Mutable(index);
}
inline ::GSProto::ArenaPlayer* ArenaChallengeInfo::add_szchallengelist() {
  return szchallengelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ArenaPlayer >&
ArenaChallengeInfo::szchallengelist() const {
  return szchallengelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::ArenaPlayer >*
ArenaChallengeInfo::mutable_szchallengelist() {
  return &szchallengelist_;
}

// -------------------------------------------------------------------

// ArenaAppendInfo

// required .GSProto.ArenaAppendState state = 1;
inline bool ArenaAppendInfo::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaAppendInfo::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaAppendInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaAppendInfo::clear_state() {
  state_ = 1;
  clear_has_state();
}
inline ::GSProto::ArenaAppendState ArenaAppendInfo::state() const {
  return static_cast< ::GSProto::ArenaAppendState >(state_);
}
inline void ArenaAppendInfo::set_state(::GSProto::ArenaAppendState value) {
  assert(::GSProto::ArenaAppendState_IsValid(value));
  set_has_state();
  state_ = value;
}

// optional int32 iCurRemaindTimes = 2;
inline bool ArenaAppendInfo::has_icurremaindtimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArenaAppendInfo::set_has_icurremaindtimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArenaAppendInfo::clear_has_icurremaindtimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArenaAppendInfo::clear_icurremaindtimes() {
  icurremaindtimes_ = 0;
  clear_has_icurremaindtimes();
}
inline ::google::protobuf::int32 ArenaAppendInfo::icurremaindtimes() const {
  return icurremaindtimes_;
}
inline void ArenaAppendInfo::set_icurremaindtimes(::google::protobuf::int32 value) {
  set_has_icurremaindtimes();
  icurremaindtimes_ = value;
}

// optional int32 iTotalTimes = 3;
inline bool ArenaAppendInfo::has_itotaltimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArenaAppendInfo::set_has_itotaltimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArenaAppendInfo::clear_has_itotaltimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArenaAppendInfo::clear_itotaltimes() {
  itotaltimes_ = 0;
  clear_has_itotaltimes();
}
inline ::google::protobuf::int32 ArenaAppendInfo::itotaltimes() const {
  return itotaltimes_;
}
inline void ArenaAppendInfo::set_itotaltimes(::google::protobuf::int32 value) {
  set_has_itotaltimes();
  itotaltimes_ = value;
}

// optional int32 iRemaindSecond = 4;
inline bool ArenaAppendInfo::has_iremaindsecond() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ArenaAppendInfo::set_has_iremaindsecond() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ArenaAppendInfo::clear_has_iremaindsecond() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ArenaAppendInfo::clear_iremaindsecond() {
  iremaindsecond_ = 0;
  clear_has_iremaindsecond();
}
inline ::google::protobuf::int32 ArenaAppendInfo::iremaindsecond() const {
  return iremaindsecond_;
}
inline void ArenaAppendInfo::set_iremaindsecond(::google::protobuf::int32 value) {
  set_has_iremaindsecond();
  iremaindsecond_ = value;
}

// optional int32 iCost = 5;
inline bool ArenaAppendInfo::has_icost() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ArenaAppendInfo::set_has_icost() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ArenaAppendInfo::clear_has_icost() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ArenaAppendInfo::clear_icost() {
  icost_ = 0;
  clear_has_icost();
}
inline ::google::protobuf::int32 ArenaAppendInfo::icost() const {
  return icost_;
}
inline void ArenaAppendInfo::set_icost(::google::protobuf::int32 value) {
  set_has_icost();
  icost_ = value;
}

// -------------------------------------------------------------------

// CMD_OPEN_ARENA_SC

// required int32 iSelfRank = 1;
inline bool CMD_OPEN_ARENA_SC::has_iselfrank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_OPEN_ARENA_SC::set_has_iselfrank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_OPEN_ARENA_SC::clear_has_iselfrank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_OPEN_ARENA_SC::clear_iselfrank() {
  iselfrank_ = 0;
  clear_has_iselfrank();
}
inline ::google::protobuf::int32 CMD_OPEN_ARENA_SC::iselfrank() const {
  return iselfrank_;
}
inline void CMD_OPEN_ARENA_SC::set_iselfrank(::google::protobuf::int32 value) {
  set_has_iselfrank();
  iselfrank_ = value;
}

// required int32 iFightValue = 2;
inline bool CMD_OPEN_ARENA_SC::has_ifightvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_OPEN_ARENA_SC::set_has_ifightvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_OPEN_ARENA_SC::clear_has_ifightvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_OPEN_ARENA_SC::clear_ifightvalue() {
  ifightvalue_ = 0;
  clear_has_ifightvalue();
}
inline ::google::protobuf::int32 CMD_OPEN_ARENA_SC::ifightvalue() const {
  return ifightvalue_;
}
inline void CMD_OPEN_ARENA_SC::set_ifightvalue(::google::protobuf::int32 value) {
  set_has_ifightvalue();
  ifightvalue_ = value;
}

// required .GSProto.ArenaChallengeInfo challengeInfo = 3;
inline bool CMD_OPEN_ARENA_SC::has_challengeinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_OPEN_ARENA_SC::set_has_challengeinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_OPEN_ARENA_SC::clear_has_challengeinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_OPEN_ARENA_SC::clear_challengeinfo() {
  if (challengeinfo_ != NULL) challengeinfo_->::GSProto::ArenaChallengeInfo::Clear();
  clear_has_challengeinfo();
}
inline const ::GSProto::ArenaChallengeInfo& CMD_OPEN_ARENA_SC::challengeinfo() const {
  return challengeinfo_ != NULL ? *challengeinfo_ : *default_instance_->challengeinfo_;
}
inline ::GSProto::ArenaChallengeInfo* CMD_OPEN_ARENA_SC::mutable_challengeinfo() {
  set_has_challengeinfo();
  if (challengeinfo_ == NULL) challengeinfo_ = new ::GSProto::ArenaChallengeInfo;
  return challengeinfo_;
}
inline ::GSProto::ArenaChallengeInfo* CMD_OPEN_ARENA_SC::release_challengeinfo() {
  clear_has_challengeinfo();
  ::GSProto::ArenaChallengeInfo* temp = challengeinfo_;
  challengeinfo_ = NULL;
  return temp;
}
inline void CMD_OPEN_ARENA_SC::set_allocated_challengeinfo(::GSProto::ArenaChallengeInfo* challengeinfo) {
  delete challengeinfo_;
  challengeinfo_ = challengeinfo;
  if (challengeinfo) {
    set_has_challengeinfo();
  } else {
    clear_has_challengeinfo();
  }
}

// optional bool bCanGetAward = 4;
inline bool CMD_OPEN_ARENA_SC::has_bcangetaward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_OPEN_ARENA_SC::set_has_bcangetaward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_OPEN_ARENA_SC::clear_has_bcangetaward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_OPEN_ARENA_SC::clear_bcangetaward() {
  bcangetaward_ = false;
  clear_has_bcangetaward();
}
inline bool CMD_OPEN_ARENA_SC::bcangetaward() const {
  return bcangetaward_;
}
inline void CMD_OPEN_ARENA_SC::set_bcangetaward(bool value) {
  set_has_bcangetaward();
  bcangetaward_ = value;
}

// required .GSProto.ArenaAppendInfo appendInfo = 5;
inline bool CMD_OPEN_ARENA_SC::has_appendinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_OPEN_ARENA_SC::set_has_appendinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_OPEN_ARENA_SC::clear_has_appendinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_OPEN_ARENA_SC::clear_appendinfo() {
  if (appendinfo_ != NULL) appendinfo_->::GSProto::ArenaAppendInfo::Clear();
  clear_has_appendinfo();
}
inline const ::GSProto::ArenaAppendInfo& CMD_OPEN_ARENA_SC::appendinfo() const {
  return appendinfo_ != NULL ? *appendinfo_ : *default_instance_->appendinfo_;
}
inline ::GSProto::ArenaAppendInfo* CMD_OPEN_ARENA_SC::mutable_appendinfo() {
  set_has_appendinfo();
  if (appendinfo_ == NULL) appendinfo_ = new ::GSProto::ArenaAppendInfo;
  return appendinfo_;
}
inline ::GSProto::ArenaAppendInfo* CMD_OPEN_ARENA_SC::release_appendinfo() {
  clear_has_appendinfo();
  ::GSProto::ArenaAppendInfo* temp = appendinfo_;
  appendinfo_ = NULL;
  return temp;
}
inline void CMD_OPEN_ARENA_SC::set_allocated_appendinfo(::GSProto::ArenaAppendInfo* appendinfo) {
  delete appendinfo_;
  appendinfo_ = appendinfo;
  if (appendinfo) {
    set_has_appendinfo();
  } else {
    clear_has_appendinfo();
  }
}

// -------------------------------------------------------------------

// ArenaAwardItem

// required uint32 dwTime = 1;
inline bool ArenaAwardItem::has_dwtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaAwardItem::set_has_dwtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaAwardItem::clear_has_dwtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaAwardItem::clear_dwtime() {
  dwtime_ = 0u;
  clear_has_dwtime();
}
inline ::google::protobuf::uint32 ArenaAwardItem::dwtime() const {
  return dwtime_;
}
inline void ArenaAwardItem::set_dwtime(::google::protobuf::uint32 value) {
  set_has_dwtime();
  dwtime_ = value;
}

// required int32 iRank = 2;
inline bool ArenaAwardItem::has_irank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArenaAwardItem::set_has_irank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArenaAwardItem::clear_has_irank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArenaAwardItem::clear_irank() {
  irank_ = 0;
  clear_has_irank();
}
inline ::google::protobuf::int32 ArenaAwardItem::irank() const {
  return irank_;
}
inline void ArenaAwardItem::set_irank(::google::protobuf::int32 value) {
  set_has_irank();
  irank_ = value;
}

// required int32 iHonorAward = 3;
inline bool ArenaAwardItem::has_ihonoraward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArenaAwardItem::set_has_ihonoraward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArenaAwardItem::clear_has_ihonoraward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArenaAwardItem::clear_ihonoraward() {
  ihonoraward_ = 0;
  clear_has_ihonoraward();
}
inline ::google::protobuf::int32 ArenaAwardItem::ihonoraward() const {
  return ihonoraward_;
}
inline void ArenaAwardItem::set_ihonoraward(::google::protobuf::int32 value) {
  set_has_ihonoraward();
  ihonoraward_ = value;
}

// required int32 iSilverAward = 4;
inline bool ArenaAwardItem::has_isilveraward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ArenaAwardItem::set_has_isilveraward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ArenaAwardItem::clear_has_isilveraward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ArenaAwardItem::clear_isilveraward() {
  isilveraward_ = 0;
  clear_has_isilveraward();
}
inline ::google::protobuf::int32 ArenaAwardItem::isilveraward() const {
  return isilveraward_;
}
inline void ArenaAwardItem::set_isilveraward(::google::protobuf::int32 value) {
  set_has_isilveraward();
  isilveraward_ = value;
}

// required bool bCanGetNow = 5;
inline bool ArenaAwardItem::has_bcangetnow() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ArenaAwardItem::set_has_bcangetnow() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ArenaAwardItem::clear_has_bcangetnow() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ArenaAwardItem::clear_bcangetnow() {
  bcangetnow_ = false;
  clear_has_bcangetnow();
}
inline bool ArenaAwardItem::bcangetnow() const {
  return bcangetnow_;
}
inline void ArenaAwardItem::set_bcangetnow(bool value) {
  set_has_bcangetnow();
  bcangetnow_ = value;
}

// optional int32 iLeftSecond = 6;
inline bool ArenaAwardItem::has_ileftsecond() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ArenaAwardItem::set_has_ileftsecond() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ArenaAwardItem::clear_has_ileftsecond() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ArenaAwardItem::clear_ileftsecond() {
  ileftsecond_ = 0;
  clear_has_ileftsecond();
}
inline ::google::protobuf::int32 ArenaAwardItem::ileftsecond() const {
  return ileftsecond_;
}
inline void ArenaAwardItem::set_ileftsecond(::google::protobuf::int32 value) {
  set_has_ileftsecond();
  ileftsecond_ = value;
}

// required string strUUID = 7;
inline bool ArenaAwardItem::has_struuid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ArenaAwardItem::set_has_struuid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ArenaAwardItem::clear_has_struuid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ArenaAwardItem::clear_struuid() {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    struuid_->clear();
  }
  clear_has_struuid();
}
inline const ::std::string& ArenaAwardItem::struuid() const {
  return *struuid_;
}
inline void ArenaAwardItem::set_struuid(const ::std::string& value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void ArenaAwardItem::set_struuid(const char* value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void ArenaAwardItem::set_struuid(const char* value, size_t size) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArenaAwardItem::mutable_struuid() {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  return struuid_;
}
inline ::std::string* ArenaAwardItem::release_struuid() {
  clear_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = struuid_;
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ArenaAwardItem::set_allocated_struuid(::std::string* struuid) {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    delete struuid_;
  }
  if (struuid) {
    set_has_struuid();
    struuid_ = struuid;
  } else {
    clear_has_struuid();
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 iGold = 8;
inline bool ArenaAwardItem::has_igold() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ArenaAwardItem::set_has_igold() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ArenaAwardItem::clear_has_igold() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ArenaAwardItem::clear_igold() {
  igold_ = 0;
  clear_has_igold();
}
inline ::google::protobuf::int32 ArenaAwardItem::igold() const {
  return igold_;
}
inline void ArenaAwardItem::set_igold(::google::protobuf::int32 value) {
  set_has_igold();
  igold_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_ARENA_AWARD_SC

// repeated .GSProto.ArenaAwardItem szArenaAwardList = 1;
inline int CMD_QUERY_ARENA_AWARD_SC::szarenaawardlist_size() const {
  return szarenaawardlist_.size();
}
inline void CMD_QUERY_ARENA_AWARD_SC::clear_szarenaawardlist() {
  szarenaawardlist_.Clear();
}
inline const ::GSProto::ArenaAwardItem& CMD_QUERY_ARENA_AWARD_SC::szarenaawardlist(int index) const {
  return szarenaawardlist_.Get(index);
}
inline ::GSProto::ArenaAwardItem* CMD_QUERY_ARENA_AWARD_SC::mutable_szarenaawardlist(int index) {
  return szarenaawardlist_.Mutable(index);
}
inline ::GSProto::ArenaAwardItem* CMD_QUERY_ARENA_AWARD_SC::add_szarenaawardlist() {
  return szarenaawardlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ArenaAwardItem >&
CMD_QUERY_ARENA_AWARD_SC::szarenaawardlist() const {
  return szarenaawardlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::ArenaAwardItem >*
CMD_QUERY_ARENA_AWARD_SC::mutable_szarenaawardlist() {
  return &szarenaawardlist_;
}

// -------------------------------------------------------------------

// CMD_GET_ARENA_AWARD_CS

// required string strUUID = 1;
inline bool CMD_GET_ARENA_AWARD_CS::has_struuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GET_ARENA_AWARD_CS::set_has_struuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GET_ARENA_AWARD_CS::clear_has_struuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GET_ARENA_AWARD_CS::clear_struuid() {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    struuid_->clear();
  }
  clear_has_struuid();
}
inline const ::std::string& CMD_GET_ARENA_AWARD_CS::struuid() const {
  return *struuid_;
}
inline void CMD_GET_ARENA_AWARD_CS::set_struuid(const ::std::string& value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void CMD_GET_ARENA_AWARD_CS::set_struuid(const char* value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void CMD_GET_ARENA_AWARD_CS::set_struuid(const char* value, size_t size) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_GET_ARENA_AWARD_CS::mutable_struuid() {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  return struuid_;
}
inline ::std::string* CMD_GET_ARENA_AWARD_CS::release_struuid() {
  clear_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = struuid_;
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_GET_ARENA_AWARD_CS::set_allocated_struuid(::std::string* struuid) {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    delete struuid_;
  }
  if (struuid) {
    set_has_struuid();
    struuid_ = struuid;
  } else {
    clear_has_struuid();
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_GET_ARENA_AWARD_SC

// required string strUUID = 1;
inline bool CMD_GET_ARENA_AWARD_SC::has_struuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GET_ARENA_AWARD_SC::set_has_struuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GET_ARENA_AWARD_SC::clear_has_struuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GET_ARENA_AWARD_SC::clear_struuid() {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    struuid_->clear();
  }
  clear_has_struuid();
}
inline const ::std::string& CMD_GET_ARENA_AWARD_SC::struuid() const {
  return *struuid_;
}
inline void CMD_GET_ARENA_AWARD_SC::set_struuid(const ::std::string& value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void CMD_GET_ARENA_AWARD_SC::set_struuid(const char* value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void CMD_GET_ARENA_AWARD_SC::set_struuid(const char* value, size_t size) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_GET_ARENA_AWARD_SC::mutable_struuid() {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  return struuid_;
}
inline ::std::string* CMD_GET_ARENA_AWARD_SC::release_struuid() {
  clear_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = struuid_;
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_GET_ARENA_AWARD_SC::set_allocated_struuid(::std::string* struuid) {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    delete struuid_;
  }
  if (struuid) {
    set_has_struuid();
    struuid_ = struuid;
  } else {
    clear_has_struuid();
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool bCanGetAward = 2;
inline bool CMD_GET_ARENA_AWARD_SC::has_bcangetaward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_GET_ARENA_AWARD_SC::set_has_bcangetaward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_GET_ARENA_AWARD_SC::clear_has_bcangetaward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_GET_ARENA_AWARD_SC::clear_bcangetaward() {
  bcangetaward_ = false;
  clear_has_bcangetaward();
}
inline bool CMD_GET_ARENA_AWARD_SC::bcangetaward() const {
  return bcangetaward_;
}
inline void CMD_GET_ARENA_AWARD_SC::set_bcangetaward(bool value) {
  set_has_bcangetaward();
  bcangetaward_ = value;
}

// -------------------------------------------------------------------

// ArenaRankItem

// required string strName = 1;
inline bool ArenaRankItem::has_strname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaRankItem::set_has_strname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaRankItem::clear_has_strname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaRankItem::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& ArenaRankItem::strname() const {
  return *strname_;
}
inline void ArenaRankItem::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void ArenaRankItem::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void ArenaRankItem::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArenaRankItem::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* ArenaRankItem::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ArenaRankItem::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iLevel = 2;
inline bool ArenaRankItem::has_ilevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArenaRankItem::set_has_ilevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArenaRankItem::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArenaRankItem::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 ArenaRankItem::ilevel() const {
  return ilevel_;
}
inline void ArenaRankItem::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// required int32 iFightValue = 3;
inline bool ArenaRankItem::has_ifightvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArenaRankItem::set_has_ifightvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArenaRankItem::clear_has_ifightvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArenaRankItem::clear_ifightvalue() {
  ifightvalue_ = 0;
  clear_has_ifightvalue();
}
inline ::google::protobuf::int32 ArenaRankItem::ifightvalue() const {
  return ifightvalue_;
}
inline void ArenaRankItem::set_ifightvalue(::google::protobuf::int32 value) {
  set_has_ifightvalue();
  ifightvalue_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_ARENA_RANK_SC

// repeated .GSProto.ArenaRankItem szRankList = 1;
inline int CMD_QUERY_ARENA_RANK_SC::szranklist_size() const {
  return szranklist_.size();
}
inline void CMD_QUERY_ARENA_RANK_SC::clear_szranklist() {
  szranklist_.Clear();
}
inline const ::GSProto::ArenaRankItem& CMD_QUERY_ARENA_RANK_SC::szranklist(int index) const {
  return szranklist_.Get(index);
}
inline ::GSProto::ArenaRankItem* CMD_QUERY_ARENA_RANK_SC::mutable_szranklist(int index) {
  return szranklist_.Mutable(index);
}
inline ::GSProto::ArenaRankItem* CMD_QUERY_ARENA_RANK_SC::add_szranklist() {
  return szranklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ArenaRankItem >&
CMD_QUERY_ARENA_RANK_SC::szranklist() const {
  return szranklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::ArenaRankItem >*
CMD_QUERY_ARENA_RANK_SC::mutable_szranklist() {
  return &szranklist_;
}

// -------------------------------------------------------------------

// ArenaLogItem

// required string strAttName = 1;
inline bool ArenaLogItem::has_strattname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaLogItem::set_has_strattname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaLogItem::clear_has_strattname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaLogItem::clear_strattname() {
  if (strattname_ != &::google::protobuf::internal::kEmptyString) {
    strattname_->clear();
  }
  clear_has_strattname();
}
inline const ::std::string& ArenaLogItem::strattname() const {
  return *strattname_;
}
inline void ArenaLogItem::set_strattname(const ::std::string& value) {
  set_has_strattname();
  if (strattname_ == &::google::protobuf::internal::kEmptyString) {
    strattname_ = new ::std::string;
  }
  strattname_->assign(value);
}
inline void ArenaLogItem::set_strattname(const char* value) {
  set_has_strattname();
  if (strattname_ == &::google::protobuf::internal::kEmptyString) {
    strattname_ = new ::std::string;
  }
  strattname_->assign(value);
}
inline void ArenaLogItem::set_strattname(const char* value, size_t size) {
  set_has_strattname();
  if (strattname_ == &::google::protobuf::internal::kEmptyString) {
    strattname_ = new ::std::string;
  }
  strattname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArenaLogItem::mutable_strattname() {
  set_has_strattname();
  if (strattname_ == &::google::protobuf::internal::kEmptyString) {
    strattname_ = new ::std::string;
  }
  return strattname_;
}
inline ::std::string* ArenaLogItem::release_strattname() {
  clear_has_strattname();
  if (strattname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strattname_;
    strattname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ArenaLogItem::set_allocated_strattname(::std::string* strattname) {
  if (strattname_ != &::google::protobuf::internal::kEmptyString) {
    delete strattname_;
  }
  if (strattname) {
    set_has_strattname();
    strattname_ = strattname;
  } else {
    clear_has_strattname();
    strattname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strTarget = 2;
inline bool ArenaLogItem::has_strtarget() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArenaLogItem::set_has_strtarget() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArenaLogItem::clear_has_strtarget() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArenaLogItem::clear_strtarget() {
  if (strtarget_ != &::google::protobuf::internal::kEmptyString) {
    strtarget_->clear();
  }
  clear_has_strtarget();
}
inline const ::std::string& ArenaLogItem::strtarget() const {
  return *strtarget_;
}
inline void ArenaLogItem::set_strtarget(const ::std::string& value) {
  set_has_strtarget();
  if (strtarget_ == &::google::protobuf::internal::kEmptyString) {
    strtarget_ = new ::std::string;
  }
  strtarget_->assign(value);
}
inline void ArenaLogItem::set_strtarget(const char* value) {
  set_has_strtarget();
  if (strtarget_ == &::google::protobuf::internal::kEmptyString) {
    strtarget_ = new ::std::string;
  }
  strtarget_->assign(value);
}
inline void ArenaLogItem::set_strtarget(const char* value, size_t size) {
  set_has_strtarget();
  if (strtarget_ == &::google::protobuf::internal::kEmptyString) {
    strtarget_ = new ::std::string;
  }
  strtarget_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArenaLogItem::mutable_strtarget() {
  set_has_strtarget();
  if (strtarget_ == &::google::protobuf::internal::kEmptyString) {
    strtarget_ = new ::std::string;
  }
  return strtarget_;
}
inline ::std::string* ArenaLogItem::release_strtarget() {
  clear_has_strtarget();
  if (strtarget_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strtarget_;
    strtarget_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ArenaLogItem::set_allocated_strtarget(::std::string* strtarget) {
  if (strtarget_ != &::google::protobuf::internal::kEmptyString) {
    delete strtarget_;
  }
  if (strtarget) {
    set_has_strtarget();
    strtarget_ = strtarget;
  } else {
    clear_has_strtarget();
    strtarget_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bool bAttackerWin = 3;
inline bool ArenaLogItem::has_battackerwin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArenaLogItem::set_has_battackerwin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArenaLogItem::clear_has_battackerwin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArenaLogItem::clear_battackerwin() {
  battackerwin_ = false;
  clear_has_battackerwin();
}
inline bool ArenaLogItem::battackerwin() const {
  return battackerwin_;
}
inline void ArenaLogItem::set_battackerwin(bool value) {
  set_has_battackerwin();
  battackerwin_ = value;
}

// required int32 iRankChgType = 4;
inline bool ArenaLogItem::has_irankchgtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ArenaLogItem::set_has_irankchgtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ArenaLogItem::clear_has_irankchgtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ArenaLogItem::clear_irankchgtype() {
  irankchgtype_ = 0;
  clear_has_irankchgtype();
}
inline ::google::protobuf::int32 ArenaLogItem::irankchgtype() const {
  return irankchgtype_;
}
inline void ArenaLogItem::set_irankchgtype(::google::protobuf::int32 value) {
  set_has_irankchgtype();
  irankchgtype_ = value;
}

// optional int32 iRank = 5;
inline bool ArenaLogItem::has_irank() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ArenaLogItem::set_has_irank() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ArenaLogItem::clear_has_irank() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ArenaLogItem::clear_irank() {
  irank_ = 0;
  clear_has_irank();
}
inline ::google::protobuf::int32 ArenaLogItem::irank() const {
  return irank_;
}
inline void ArenaLogItem::set_irank(::google::protobuf::int32 value) {
  set_has_irank();
  irank_ = value;
}

// required string strUUID = 6;
inline bool ArenaLogItem::has_struuid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ArenaLogItem::set_has_struuid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ArenaLogItem::clear_has_struuid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ArenaLogItem::clear_struuid() {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    struuid_->clear();
  }
  clear_has_struuid();
}
inline const ::std::string& ArenaLogItem::struuid() const {
  return *struuid_;
}
inline void ArenaLogItem::set_struuid(const ::std::string& value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void ArenaLogItem::set_struuid(const char* value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void ArenaLogItem::set_struuid(const char* value, size_t size) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArenaLogItem::mutable_struuid() {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  return struuid_;
}
inline ::std::string* ArenaLogItem::release_struuid() {
  clear_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = struuid_;
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ArenaLogItem::set_allocated_struuid(::std::string* struuid) {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    delete struuid_;
  }
  if (struuid) {
    set_has_struuid();
    struuid_ = struuid;
  } else {
    clear_has_struuid();
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_QUERY_ARENA_LOG_SC

// repeated .GSProto.ArenaLogItem szLogItemList = 1;
inline int CMD_QUERY_ARENA_LOG_SC::szlogitemlist_size() const {
  return szlogitemlist_.size();
}
inline void CMD_QUERY_ARENA_LOG_SC::clear_szlogitemlist() {
  szlogitemlist_.Clear();
}
inline const ::GSProto::ArenaLogItem& CMD_QUERY_ARENA_LOG_SC::szlogitemlist(int index) const {
  return szlogitemlist_.Get(index);
}
inline ::GSProto::ArenaLogItem* CMD_QUERY_ARENA_LOG_SC::mutable_szlogitemlist(int index) {
  return szlogitemlist_.Mutable(index);
}
inline ::GSProto::ArenaLogItem* CMD_QUERY_ARENA_LOG_SC::add_szlogitemlist() {
  return szlogitemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ArenaLogItem >&
CMD_QUERY_ARENA_LOG_SC::szlogitemlist() const {
  return szlogitemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::ArenaLogItem >*
CMD_QUERY_ARENA_LOG_SC::mutable_szlogitemlist() {
  return &szlogitemlist_;
}

// -------------------------------------------------------------------

// CMD_ARENA_FIGHT_CS

// required int32 iRank = 1;
inline bool CMD_ARENA_FIGHT_CS::has_irank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_ARENA_FIGHT_CS::set_has_irank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_ARENA_FIGHT_CS::clear_has_irank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_ARENA_FIGHT_CS::clear_irank() {
  irank_ = 0;
  clear_has_irank();
}
inline ::google::protobuf::int32 CMD_ARENA_FIGHT_CS::irank() const {
  return irank_;
}
inline void CMD_ARENA_FIGHT_CS::set_irank(::google::protobuf::int32 value) {
  set_has_irank();
  irank_ = value;
}

// -------------------------------------------------------------------

// RankNodeInfo

// required int32 iMainHeroId = 1;
inline bool RankNodeInfo::has_imainheroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankNodeInfo::set_has_imainheroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankNodeInfo::clear_has_imainheroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankNodeInfo::clear_imainheroid() {
  imainheroid_ = 0;
  clear_has_imainheroid();
}
inline ::google::protobuf::int32 RankNodeInfo::imainheroid() const {
  return imainheroid_;
}
inline void RankNodeInfo::set_imainheroid(::google::protobuf::int32 value) {
  set_has_imainheroid();
  imainheroid_ = value;
}

// required int32 iActorHonor = 2;
inline bool RankNodeInfo::has_iactorhonor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankNodeInfo::set_has_iactorhonor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankNodeInfo::clear_has_iactorhonor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankNodeInfo::clear_iactorhonor() {
  iactorhonor_ = 0;
  clear_has_iactorhonor();
}
inline ::google::protobuf::int32 RankNodeInfo::iactorhonor() const {
  return iactorhonor_;
}
inline void RankNodeInfo::set_iactorhonor(::google::protobuf::int32 value) {
  set_has_iactorhonor();
  iactorhonor_ = value;
}

// required string strActorName = 3;
inline bool RankNodeInfo::has_stractorname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RankNodeInfo::set_has_stractorname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RankNodeInfo::clear_has_stractorname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RankNodeInfo::clear_stractorname() {
  if (stractorname_ != &::google::protobuf::internal::kEmptyString) {
    stractorname_->clear();
  }
  clear_has_stractorname();
}
inline const ::std::string& RankNodeInfo::stractorname() const {
  return *stractorname_;
}
inline void RankNodeInfo::set_stractorname(const ::std::string& value) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(value);
}
inline void RankNodeInfo::set_stractorname(const char* value) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(value);
}
inline void RankNodeInfo::set_stractorname(const char* value, size_t size) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RankNodeInfo::mutable_stractorname() {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  return stractorname_;
}
inline ::std::string* RankNodeInfo::release_stractorname() {
  clear_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stractorname_;
    stractorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RankNodeInfo::set_allocated_stractorname(::std::string* stractorname) {
  if (stractorname_ != &::google::protobuf::internal::kEmptyString) {
    delete stractorname_;
  }
  if (stractorname) {
    set_has_stractorname();
    stractorname_ = stractorname;
  } else {
    clear_has_stractorname();
    stractorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CampBattlePlayerDetail

// required int32 iTopDoubleHitTimes = 1;
inline bool CampBattlePlayerDetail::has_itopdoublehittimes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CampBattlePlayerDetail::set_has_itopdoublehittimes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CampBattlePlayerDetail::clear_has_itopdoublehittimes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CampBattlePlayerDetail::clear_itopdoublehittimes() {
  itopdoublehittimes_ = 0;
  clear_has_itopdoublehittimes();
}
inline ::google::protobuf::int32 CampBattlePlayerDetail::itopdoublehittimes() const {
  return itopdoublehittimes_;
}
inline void CampBattlePlayerDetail::set_itopdoublehittimes(::google::protobuf::int32 value) {
  set_has_itopdoublehittimes();
  itopdoublehittimes_ = value;
}

// required int32 iCurDoubleHitTimes = 2;
inline bool CampBattlePlayerDetail::has_icurdoublehittimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CampBattlePlayerDetail::set_has_icurdoublehittimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CampBattlePlayerDetail::clear_has_icurdoublehittimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CampBattlePlayerDetail::clear_icurdoublehittimes() {
  icurdoublehittimes_ = 0;
  clear_has_icurdoublehittimes();
}
inline ::google::protobuf::int32 CampBattlePlayerDetail::icurdoublehittimes() const {
  return icurdoublehittimes_;
}
inline void CampBattlePlayerDetail::set_icurdoublehittimes(::google::protobuf::int32 value) {
  set_has_icurdoublehittimes();
  icurdoublehittimes_ = value;
}

// required int32 iSumWinTimes = 3;
inline bool CampBattlePlayerDetail::has_isumwintimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CampBattlePlayerDetail::set_has_isumwintimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CampBattlePlayerDetail::clear_has_isumwintimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CampBattlePlayerDetail::clear_isumwintimes() {
  isumwintimes_ = 0;
  clear_has_isumwintimes();
}
inline ::google::protobuf::int32 CampBattlePlayerDetail::isumwintimes() const {
  return isumwintimes_;
}
inline void CampBattlePlayerDetail::set_isumwintimes(::google::protobuf::int32 value) {
  set_has_isumwintimes();
  isumwintimes_ = value;
}

// required int32 iSumFailedTimes = 4;
inline bool CampBattlePlayerDetail::has_isumfailedtimes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CampBattlePlayerDetail::set_has_isumfailedtimes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CampBattlePlayerDetail::clear_has_isumfailedtimes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CampBattlePlayerDetail::clear_isumfailedtimes() {
  isumfailedtimes_ = 0;
  clear_has_isumfailedtimes();
}
inline ::google::protobuf::int32 CampBattlePlayerDetail::isumfailedtimes() const {
  return isumfailedtimes_;
}
inline void CampBattlePlayerDetail::set_isumfailedtimes(::google::protobuf::int32 value) {
  set_has_isumfailedtimes();
  isumfailedtimes_ = value;
}

// required int32 iSumHonor = 5;
inline bool CampBattlePlayerDetail::has_isumhonor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CampBattlePlayerDetail::set_has_isumhonor() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CampBattlePlayerDetail::clear_has_isumhonor() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CampBattlePlayerDetail::clear_isumhonor() {
  isumhonor_ = 0;
  clear_has_isumhonor();
}
inline ::google::protobuf::int32 CampBattlePlayerDetail::isumhonor() const {
  return isumhonor_;
}
inline void CampBattlePlayerDetail::set_isumhonor(::google::protobuf::int32 value) {
  set_has_isumhonor();
  isumhonor_ = value;
}

// required int32 iSumSilverCount = 6;
inline bool CampBattlePlayerDetail::has_isumsilvercount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CampBattlePlayerDetail::set_has_isumsilvercount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CampBattlePlayerDetail::clear_has_isumsilvercount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CampBattlePlayerDetail::clear_isumsilvercount() {
  isumsilvercount_ = 0;
  clear_has_isumsilvercount();
}
inline ::google::protobuf::int32 CampBattlePlayerDetail::isumsilvercount() const {
  return isumsilvercount_;
}
inline void CampBattlePlayerDetail::set_isumsilvercount(::google::protobuf::int32 value) {
  set_has_isumsilvercount();
  isumsilvercount_ = value;
}

// -------------------------------------------------------------------

// RemaindTime

// required bool bIsStarted = 1;
inline bool RemaindTime::has_bisstarted() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemaindTime::set_has_bisstarted() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemaindTime::clear_has_bisstarted() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemaindTime::clear_bisstarted() {
  bisstarted_ = false;
  clear_has_bisstarted();
}
inline bool RemaindTime::bisstarted() const {
  return bisstarted_;
}
inline void RemaindTime::set_bisstarted(bool value) {
  set_has_bisstarted();
  bisstarted_ = value;
}

// required int32 iRemaindSecond = 2;
inline bool RemaindTime::has_iremaindsecond() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemaindTime::set_has_iremaindsecond() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RemaindTime::clear_has_iremaindsecond() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RemaindTime::clear_iremaindsecond() {
  iremaindsecond_ = 0;
  clear_has_iremaindsecond();
}
inline ::google::protobuf::int32 RemaindTime::iremaindsecond() const {
  return iremaindsecond_;
}
inline void RemaindTime::set_iremaindsecond(::google::protobuf::int32 value) {
  set_has_iremaindsecond();
  iremaindsecond_ = value;
}

// -------------------------------------------------------------------

// CMD_CAMPBATTLE_OPEN_SC

// repeated .GSProto.RankNodeInfo szLeftRankList = 1;
inline int CMD_CAMPBATTLE_OPEN_SC::szleftranklist_size() const {
  return szleftranklist_.size();
}
inline void CMD_CAMPBATTLE_OPEN_SC::clear_szleftranklist() {
  szleftranklist_.Clear();
}
inline const ::GSProto::RankNodeInfo& CMD_CAMPBATTLE_OPEN_SC::szleftranklist(int index) const {
  return szleftranklist_.Get(index);
}
inline ::GSProto::RankNodeInfo* CMD_CAMPBATTLE_OPEN_SC::mutable_szleftranklist(int index) {
  return szleftranklist_.Mutable(index);
}
inline ::GSProto::RankNodeInfo* CMD_CAMPBATTLE_OPEN_SC::add_szleftranklist() {
  return szleftranklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::RankNodeInfo >&
CMD_CAMPBATTLE_OPEN_SC::szleftranklist() const {
  return szleftranklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::RankNodeInfo >*
CMD_CAMPBATTLE_OPEN_SC::mutable_szleftranklist() {
  return &szleftranklist_;
}

// repeated .GSProto.RankNodeInfo szRightRankList = 2;
inline int CMD_CAMPBATTLE_OPEN_SC::szrightranklist_size() const {
  return szrightranklist_.size();
}
inline void CMD_CAMPBATTLE_OPEN_SC::clear_szrightranklist() {
  szrightranklist_.Clear();
}
inline const ::GSProto::RankNodeInfo& CMD_CAMPBATTLE_OPEN_SC::szrightranklist(int index) const {
  return szrightranklist_.Get(index);
}
inline ::GSProto::RankNodeInfo* CMD_CAMPBATTLE_OPEN_SC::mutable_szrightranklist(int index) {
  return szrightranklist_.Mutable(index);
}
inline ::GSProto::RankNodeInfo* CMD_CAMPBATTLE_OPEN_SC::add_szrightranklist() {
  return szrightranklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::RankNodeInfo >&
CMD_CAMPBATTLE_OPEN_SC::szrightranklist() const {
  return szrightranklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::RankNodeInfo >*
CMD_CAMPBATTLE_OPEN_SC::mutable_szrightranklist() {
  return &szrightranklist_;
}

// required .GSProto.CampBattlePlayerDetail playerDetail = 3;
inline bool CMD_CAMPBATTLE_OPEN_SC::has_playerdetail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_CAMPBATTLE_OPEN_SC::set_has_playerdetail() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_CAMPBATTLE_OPEN_SC::clear_has_playerdetail() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_CAMPBATTLE_OPEN_SC::clear_playerdetail() {
  if (playerdetail_ != NULL) playerdetail_->::GSProto::CampBattlePlayerDetail::Clear();
  clear_has_playerdetail();
}
inline const ::GSProto::CampBattlePlayerDetail& CMD_CAMPBATTLE_OPEN_SC::playerdetail() const {
  return playerdetail_ != NULL ? *playerdetail_ : *default_instance_->playerdetail_;
}
inline ::GSProto::CampBattlePlayerDetail* CMD_CAMPBATTLE_OPEN_SC::mutable_playerdetail() {
  set_has_playerdetail();
  if (playerdetail_ == NULL) playerdetail_ = new ::GSProto::CampBattlePlayerDetail;
  return playerdetail_;
}
inline ::GSProto::CampBattlePlayerDetail* CMD_CAMPBATTLE_OPEN_SC::release_playerdetail() {
  clear_has_playerdetail();
  ::GSProto::CampBattlePlayerDetail* temp = playerdetail_;
  playerdetail_ = NULL;
  return temp;
}
inline void CMD_CAMPBATTLE_OPEN_SC::set_allocated_playerdetail(::GSProto::CampBattlePlayerDetail* playerdetail) {
  delete playerdetail_;
  playerdetail_ = playerdetail;
  if (playerdetail) {
    set_has_playerdetail();
  } else {
    clear_has_playerdetail();
  }
}

// required .GSProto.RemaindTime remaindTime = 4;
inline bool CMD_CAMPBATTLE_OPEN_SC::has_remaindtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_CAMPBATTLE_OPEN_SC::set_has_remaindtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_CAMPBATTLE_OPEN_SC::clear_has_remaindtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_CAMPBATTLE_OPEN_SC::clear_remaindtime() {
  if (remaindtime_ != NULL) remaindtime_->::GSProto::RemaindTime::Clear();
  clear_has_remaindtime();
}
inline const ::GSProto::RemaindTime& CMD_CAMPBATTLE_OPEN_SC::remaindtime() const {
  return remaindtime_ != NULL ? *remaindtime_ : *default_instance_->remaindtime_;
}
inline ::GSProto::RemaindTime* CMD_CAMPBATTLE_OPEN_SC::mutable_remaindtime() {
  set_has_remaindtime();
  if (remaindtime_ == NULL) remaindtime_ = new ::GSProto::RemaindTime;
  return remaindtime_;
}
inline ::GSProto::RemaindTime* CMD_CAMPBATTLE_OPEN_SC::release_remaindtime() {
  clear_has_remaindtime();
  ::GSProto::RemaindTime* temp = remaindtime_;
  remaindtime_ = NULL;
  return temp;
}
inline void CMD_CAMPBATTLE_OPEN_SC::set_allocated_remaindtime(::GSProto::RemaindTime* remaindtime) {
  delete remaindtime_;
  remaindtime_ = remaindtime;
  if (remaindtime) {
    set_has_remaindtime();
  } else {
    clear_has_remaindtime();
  }
}

// -------------------------------------------------------------------

// CampBattleReport

// required string strWinActorName = 2;
inline bool CampBattleReport::has_strwinactorname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CampBattleReport::set_has_strwinactorname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CampBattleReport::clear_has_strwinactorname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CampBattleReport::clear_strwinactorname() {
  if (strwinactorname_ != &::google::protobuf::internal::kEmptyString) {
    strwinactorname_->clear();
  }
  clear_has_strwinactorname();
}
inline const ::std::string& CampBattleReport::strwinactorname() const {
  return *strwinactorname_;
}
inline void CampBattleReport::set_strwinactorname(const ::std::string& value) {
  set_has_strwinactorname();
  if (strwinactorname_ == &::google::protobuf::internal::kEmptyString) {
    strwinactorname_ = new ::std::string;
  }
  strwinactorname_->assign(value);
}
inline void CampBattleReport::set_strwinactorname(const char* value) {
  set_has_strwinactorname();
  if (strwinactorname_ == &::google::protobuf::internal::kEmptyString) {
    strwinactorname_ = new ::std::string;
  }
  strwinactorname_->assign(value);
}
inline void CampBattleReport::set_strwinactorname(const char* value, size_t size) {
  set_has_strwinactorname();
  if (strwinactorname_ == &::google::protobuf::internal::kEmptyString) {
    strwinactorname_ = new ::std::string;
  }
  strwinactorname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CampBattleReport::mutable_strwinactorname() {
  set_has_strwinactorname();
  if (strwinactorname_ == &::google::protobuf::internal::kEmptyString) {
    strwinactorname_ = new ::std::string;
  }
  return strwinactorname_;
}
inline ::std::string* CampBattleReport::release_strwinactorname() {
  clear_has_strwinactorname();
  if (strwinactorname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strwinactorname_;
    strwinactorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CampBattleReport::set_allocated_strwinactorname(::std::string* strwinactorname) {
  if (strwinactorname_ != &::google::protobuf::internal::kEmptyString) {
    delete strwinactorname_;
  }
  if (strwinactorname) {
    set_has_strwinactorname();
    strwinactorname_ = strwinactorname;
  } else {
    clear_has_strwinactorname();
    strwinactorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strFailedActorName = 3;
inline bool CampBattleReport::has_strfailedactorname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CampBattleReport::set_has_strfailedactorname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CampBattleReport::clear_has_strfailedactorname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CampBattleReport::clear_strfailedactorname() {
  if (strfailedactorname_ != &::google::protobuf::internal::kEmptyString) {
    strfailedactorname_->clear();
  }
  clear_has_strfailedactorname();
}
inline const ::std::string& CampBattleReport::strfailedactorname() const {
  return *strfailedactorname_;
}
inline void CampBattleReport::set_strfailedactorname(const ::std::string& value) {
  set_has_strfailedactorname();
  if (strfailedactorname_ == &::google::protobuf::internal::kEmptyString) {
    strfailedactorname_ = new ::std::string;
  }
  strfailedactorname_->assign(value);
}
inline void CampBattleReport::set_strfailedactorname(const char* value) {
  set_has_strfailedactorname();
  if (strfailedactorname_ == &::google::protobuf::internal::kEmptyString) {
    strfailedactorname_ = new ::std::string;
  }
  strfailedactorname_->assign(value);
}
inline void CampBattleReport::set_strfailedactorname(const char* value, size_t size) {
  set_has_strfailedactorname();
  if (strfailedactorname_ == &::google::protobuf::internal::kEmptyString) {
    strfailedactorname_ = new ::std::string;
  }
  strfailedactorname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CampBattleReport::mutable_strfailedactorname() {
  set_has_strfailedactorname();
  if (strfailedactorname_ == &::google::protobuf::internal::kEmptyString) {
    strfailedactorname_ = new ::std::string;
  }
  return strfailedactorname_;
}
inline ::std::string* CampBattleReport::release_strfailedactorname() {
  clear_has_strfailedactorname();
  if (strfailedactorname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strfailedactorname_;
    strfailedactorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CampBattleReport::set_allocated_strfailedactorname(::std::string* strfailedactorname) {
  if (strfailedactorname_ != &::google::protobuf::internal::kEmptyString) {
    delete strfailedactorname_;
  }
  if (strfailedactorname) {
    set_has_strfailedactorname();
    strfailedactorname_ = strfailedactorname;
  } else {
    clear_has_strfailedactorname();
    strfailedactorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iBattleResoultType = 4;
inline bool CampBattleReport::has_ibattleresoulttype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CampBattleReport::set_has_ibattleresoulttype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CampBattleReport::clear_has_ibattleresoulttype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CampBattleReport::clear_ibattleresoulttype() {
  ibattleresoulttype_ = 0;
  clear_has_ibattleresoulttype();
}
inline ::google::protobuf::int32 CampBattleReport::ibattleresoulttype() const {
  return ibattleresoulttype_;
}
inline void CampBattleReport::set_ibattleresoulttype(::google::protobuf::int32 value) {
  set_has_ibattleresoulttype();
  ibattleresoulttype_ = value;
}

// optional int32 iCurDoubleHitTimes = 5;
inline bool CampBattleReport::has_icurdoublehittimes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CampBattleReport::set_has_icurdoublehittimes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CampBattleReport::clear_has_icurdoublehittimes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CampBattleReport::clear_icurdoublehittimes() {
  icurdoublehittimes_ = 0;
  clear_has_icurdoublehittimes();
}
inline ::google::protobuf::int32 CampBattleReport::icurdoublehittimes() const {
  return icurdoublehittimes_;
}
inline void CampBattleReport::set_icurdoublehittimes(::google::protobuf::int32 value) {
  set_has_icurdoublehittimes();
  icurdoublehittimes_ = value;
}

// required int32 iRewardSilver = 6;
inline bool CampBattleReport::has_irewardsilver() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CampBattleReport::set_has_irewardsilver() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CampBattleReport::clear_has_irewardsilver() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CampBattleReport::clear_irewardsilver() {
  irewardsilver_ = 0;
  clear_has_irewardsilver();
}
inline ::google::protobuf::int32 CampBattleReport::irewardsilver() const {
  return irewardsilver_;
}
inline void CampBattleReport::set_irewardsilver(::google::protobuf::int32 value) {
  set_has_irewardsilver();
  irewardsilver_ = value;
}

// required int32 iRewardHonor = 7;
inline bool CampBattleReport::has_irewardhonor() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CampBattleReport::set_has_irewardhonor() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CampBattleReport::clear_has_irewardhonor() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CampBattleReport::clear_irewardhonor() {
  irewardhonor_ = 0;
  clear_has_irewardhonor();
}
inline ::google::protobuf::int32 CampBattleReport::irewardhonor() const {
  return irewardhonor_;
}
inline void CampBattleReport::set_irewardhonor(::google::protobuf::int32 value) {
  set_has_irewardhonor();
  irewardhonor_ = value;
}

// required int32 iWinerCampId = 8;
inline bool CampBattleReport::has_iwinercampid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CampBattleReport::set_has_iwinercampid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CampBattleReport::clear_has_iwinercampid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CampBattleReport::clear_iwinercampid() {
  iwinercampid_ = 0;
  clear_has_iwinercampid();
}
inline ::google::protobuf::int32 CampBattleReport::iwinercampid() const {
  return iwinercampid_;
}
inline void CampBattleReport::set_iwinercampid(::google::protobuf::int32 value) {
  set_has_iwinercampid();
  iwinercampid_ = value;
}

// -------------------------------------------------------------------

// CMD_CAMPBATTLE_BATTLE_LOG_SC

// repeated .GSProto.CampBattleReport szBattleReport = 1;
inline int CMD_CAMPBATTLE_BATTLE_LOG_SC::szbattlereport_size() const {
  return szbattlereport_.size();
}
inline void CMD_CAMPBATTLE_BATTLE_LOG_SC::clear_szbattlereport() {
  szbattlereport_.Clear();
}
inline const ::GSProto::CampBattleReport& CMD_CAMPBATTLE_BATTLE_LOG_SC::szbattlereport(int index) const {
  return szbattlereport_.Get(index);
}
inline ::GSProto::CampBattleReport* CMD_CAMPBATTLE_BATTLE_LOG_SC::mutable_szbattlereport(int index) {
  return szbattlereport_.Mutable(index);
}
inline ::GSProto::CampBattleReport* CMD_CAMPBATTLE_BATTLE_LOG_SC::add_szbattlereport() {
  return szbattlereport_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::CampBattleReport >&
CMD_CAMPBATTLE_BATTLE_LOG_SC::szbattlereport() const {
  return szbattlereport_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::CampBattleReport >*
CMD_CAMPBATTLE_BATTLE_LOG_SC::mutable_szbattlereport() {
  return &szbattlereport_;
}

// -------------------------------------------------------------------

// CMD_CAMPBATTLE_REFREASH_RANKLIST_SC

// repeated .GSProto.RankNodeInfo szLeftRankList = 1;
inline int CMD_CAMPBATTLE_REFREASH_RANKLIST_SC::szleftranklist_size() const {
  return szleftranklist_.size();
}
inline void CMD_CAMPBATTLE_REFREASH_RANKLIST_SC::clear_szleftranklist() {
  szleftranklist_.Clear();
}
inline const ::GSProto::RankNodeInfo& CMD_CAMPBATTLE_REFREASH_RANKLIST_SC::szleftranklist(int index) const {
  return szleftranklist_.Get(index);
}
inline ::GSProto::RankNodeInfo* CMD_CAMPBATTLE_REFREASH_RANKLIST_SC::mutable_szleftranklist(int index) {
  return szleftranklist_.Mutable(index);
}
inline ::GSProto::RankNodeInfo* CMD_CAMPBATTLE_REFREASH_RANKLIST_SC::add_szleftranklist() {
  return szleftranklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::RankNodeInfo >&
CMD_CAMPBATTLE_REFREASH_RANKLIST_SC::szleftranklist() const {
  return szleftranklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::RankNodeInfo >*
CMD_CAMPBATTLE_REFREASH_RANKLIST_SC::mutable_szleftranklist() {
  return &szleftranklist_;
}

// repeated .GSProto.RankNodeInfo szRightRankList = 2;
inline int CMD_CAMPBATTLE_REFREASH_RANKLIST_SC::szrightranklist_size() const {
  return szrightranklist_.size();
}
inline void CMD_CAMPBATTLE_REFREASH_RANKLIST_SC::clear_szrightranklist() {
  szrightranklist_.Clear();
}
inline const ::GSProto::RankNodeInfo& CMD_CAMPBATTLE_REFREASH_RANKLIST_SC::szrightranklist(int index) const {
  return szrightranklist_.Get(index);
}
inline ::GSProto::RankNodeInfo* CMD_CAMPBATTLE_REFREASH_RANKLIST_SC::mutable_szrightranklist(int index) {
  return szrightranklist_.Mutable(index);
}
inline ::GSProto::RankNodeInfo* CMD_CAMPBATTLE_REFREASH_RANKLIST_SC::add_szrightranklist() {
  return szrightranklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::RankNodeInfo >&
CMD_CAMPBATTLE_REFREASH_RANKLIST_SC::szrightranklist() const {
  return szrightranklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::RankNodeInfo >*
CMD_CAMPBATTLE_REFREASH_RANKLIST_SC::mutable_szrightranklist() {
  return &szrightranklist_;
}

// -------------------------------------------------------------------

// CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC

// required .GSProto.CampBattlePlayerDetail playerDetail = 8;
inline bool CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC::has_playerdetail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC::set_has_playerdetail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC::clear_has_playerdetail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC::clear_playerdetail() {
  if (playerdetail_ != NULL) playerdetail_->::GSProto::CampBattlePlayerDetail::Clear();
  clear_has_playerdetail();
}
inline const ::GSProto::CampBattlePlayerDetail& CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC::playerdetail() const {
  return playerdetail_ != NULL ? *playerdetail_ : *default_instance_->playerdetail_;
}
inline ::GSProto::CampBattlePlayerDetail* CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC::mutable_playerdetail() {
  set_has_playerdetail();
  if (playerdetail_ == NULL) playerdetail_ = new ::GSProto::CampBattlePlayerDetail;
  return playerdetail_;
}
inline ::GSProto::CampBattlePlayerDetail* CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC::release_playerdetail() {
  clear_has_playerdetail();
  ::GSProto::CampBattlePlayerDetail* temp = playerdetail_;
  playerdetail_ = NULL;
  return temp;
}
inline void CMD_CAMPBATTLE_REFREASH_ACTORDETAIL_SC::set_allocated_playerdetail(::GSProto::CampBattlePlayerDetail* playerdetail) {
  delete playerdetail_;
  playerdetail_ = playerdetail;
  if (playerdetail) {
    set_has_playerdetail();
  } else {
    clear_has_playerdetail();
  }
}

// -------------------------------------------------------------------

// CMD_CAMPBATTLE_REFREASH_TIME_SC

// required .GSProto.RemaindTime remaindTime = 1;
inline bool CMD_CAMPBATTLE_REFREASH_TIME_SC::has_remaindtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_CAMPBATTLE_REFREASH_TIME_SC::set_has_remaindtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_CAMPBATTLE_REFREASH_TIME_SC::clear_has_remaindtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_CAMPBATTLE_REFREASH_TIME_SC::clear_remaindtime() {
  if (remaindtime_ != NULL) remaindtime_->::GSProto::RemaindTime::Clear();
  clear_has_remaindtime();
}
inline const ::GSProto::RemaindTime& CMD_CAMPBATTLE_REFREASH_TIME_SC::remaindtime() const {
  return remaindtime_ != NULL ? *remaindtime_ : *default_instance_->remaindtime_;
}
inline ::GSProto::RemaindTime* CMD_CAMPBATTLE_REFREASH_TIME_SC::mutable_remaindtime() {
  set_has_remaindtime();
  if (remaindtime_ == NULL) remaindtime_ = new ::GSProto::RemaindTime;
  return remaindtime_;
}
inline ::GSProto::RemaindTime* CMD_CAMPBATTLE_REFREASH_TIME_SC::release_remaindtime() {
  clear_has_remaindtime();
  ::GSProto::RemaindTime* temp = remaindtime_;
  remaindtime_ = NULL;
  return temp;
}
inline void CMD_CAMPBATTLE_REFREASH_TIME_SC::set_allocated_remaindtime(::GSProto::RemaindTime* remaindtime) {
  delete remaindtime_;
  remaindtime_ = remaindtime;
  if (remaindtime) {
    set_has_remaindtime();
  } else {
    clear_has_remaindtime();
  }
}

// -------------------------------------------------------------------

// CMD_CMAPBATTLE_SYSTEM_CLOSE_SC

// required int32 iTopDoubleHitCount = 1;
inline bool CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::has_itopdoublehitcount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::set_has_itopdoublehitcount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::clear_has_itopdoublehitcount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::clear_itopdoublehitcount() {
  itopdoublehitcount_ = 0;
  clear_has_itopdoublehitcount();
}
inline ::google::protobuf::int32 CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::itopdoublehitcount() const {
  return itopdoublehitcount_;
}
inline void CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::set_itopdoublehitcount(::google::protobuf::int32 value) {
  set_has_itopdoublehitcount();
  itopdoublehitcount_ = value;
}

// required int32 iWinTimes = 2;
inline bool CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::has_iwintimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::set_has_iwintimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::clear_has_iwintimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::clear_iwintimes() {
  iwintimes_ = 0;
  clear_has_iwintimes();
}
inline ::google::protobuf::int32 CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::iwintimes() const {
  return iwintimes_;
}
inline void CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::set_iwintimes(::google::protobuf::int32 value) {
  set_has_iwintimes();
  iwintimes_ = value;
}

// required int32 iFailedTimes = 3;
inline bool CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::has_ifailedtimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::set_has_ifailedtimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::clear_has_ifailedtimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::clear_ifailedtimes() {
  ifailedtimes_ = 0;
  clear_has_ifailedtimes();
}
inline ::google::protobuf::int32 CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::ifailedtimes() const {
  return ifailedtimes_;
}
inline void CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::set_ifailedtimes(::google::protobuf::int32 value) {
  set_has_ifailedtimes();
  ifailedtimes_ = value;
}

// required int32 iRewardHonor = 4;
inline bool CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::has_irewardhonor() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::set_has_irewardhonor() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::clear_has_irewardhonor() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::clear_irewardhonor() {
  irewardhonor_ = 0;
  clear_has_irewardhonor();
}
inline ::google::protobuf::int32 CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::irewardhonor() const {
  return irewardhonor_;
}
inline void CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::set_irewardhonor(::google::protobuf::int32 value) {
  set_has_irewardhonor();
  irewardhonor_ = value;
}

// required int32 iRewardSilver = 5;
inline bool CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::has_irewardsilver() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::set_has_irewardsilver() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::clear_has_irewardsilver() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::clear_irewardsilver() {
  irewardsilver_ = 0;
  clear_has_irewardsilver();
}
inline ::google::protobuf::int32 CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::irewardsilver() const {
  return irewardsilver_;
}
inline void CMD_CMAPBATTLE_SYSTEM_CLOSE_SC::set_irewardsilver(::google::protobuf::int32 value) {
  set_has_irewardsilver();
  irewardsilver_ = value;
}

// -------------------------------------------------------------------

// FriendNodeInfo

// required int32 iVisibleHeroID = 1;
inline bool FriendNodeInfo::has_ivisibleheroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendNodeInfo::set_has_ivisibleheroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendNodeInfo::clear_has_ivisibleheroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendNodeInfo::clear_ivisibleheroid() {
  ivisibleheroid_ = 0;
  clear_has_ivisibleheroid();
}
inline ::google::protobuf::int32 FriendNodeInfo::ivisibleheroid() const {
  return ivisibleheroid_;
}
inline void FriendNodeInfo::set_ivisibleheroid(::google::protobuf::int32 value) {
  set_has_ivisibleheroid();
  ivisibleheroid_ = value;
}

// required string strFriendName = 2;
inline bool FriendNodeInfo::has_strfriendname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendNodeInfo::set_has_strfriendname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendNodeInfo::clear_has_strfriendname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendNodeInfo::clear_strfriendname() {
  if (strfriendname_ != &::google::protobuf::internal::kEmptyString) {
    strfriendname_->clear();
  }
  clear_has_strfriendname();
}
inline const ::std::string& FriendNodeInfo::strfriendname() const {
  return *strfriendname_;
}
inline void FriendNodeInfo::set_strfriendname(const ::std::string& value) {
  set_has_strfriendname();
  if (strfriendname_ == &::google::protobuf::internal::kEmptyString) {
    strfriendname_ = new ::std::string;
  }
  strfriendname_->assign(value);
}
inline void FriendNodeInfo::set_strfriendname(const char* value) {
  set_has_strfriendname();
  if (strfriendname_ == &::google::protobuf::internal::kEmptyString) {
    strfriendname_ = new ::std::string;
  }
  strfriendname_->assign(value);
}
inline void FriendNodeInfo::set_strfriendname(const char* value, size_t size) {
  set_has_strfriendname();
  if (strfriendname_ == &::google::protobuf::internal::kEmptyString) {
    strfriendname_ = new ::std::string;
  }
  strfriendname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FriendNodeInfo::mutable_strfriendname() {
  set_has_strfriendname();
  if (strfriendname_ == &::google::protobuf::internal::kEmptyString) {
    strfriendname_ = new ::std::string;
  }
  return strfriendname_;
}
inline ::std::string* FriendNodeInfo::release_strfriendname() {
  clear_has_strfriendname();
  if (strfriendname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strfriendname_;
    strfriendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FriendNodeInfo::set_allocated_strfriendname(::std::string* strfriendname) {
  if (strfriendname_ != &::google::protobuf::internal::kEmptyString) {
    delete strfriendname_;
  }
  if (strfriendname) {
    set_has_strfriendname();
    strfriendname_ = strfriendname;
  } else {
    clear_has_strfriendname();
    strfriendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iFriendLevel = 3;
inline bool FriendNodeInfo::has_ifriendlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendNodeInfo::set_has_ifriendlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendNodeInfo::clear_has_ifriendlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendNodeInfo::clear_ifriendlevel() {
  ifriendlevel_ = 0;
  clear_has_ifriendlevel();
}
inline ::google::protobuf::int32 FriendNodeInfo::ifriendlevel() const {
  return ifriendlevel_;
}
inline void FriendNodeInfo::set_ifriendlevel(::google::protobuf::int32 value) {
  set_has_ifriendlevel();
  ifriendlevel_ = value;
}

// required bool bIsOnLine = 4;
inline bool FriendNodeInfo::has_bisonline() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendNodeInfo::set_has_bisonline() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendNodeInfo::clear_has_bisonline() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendNodeInfo::clear_bisonline() {
  bisonline_ = false;
  clear_has_bisonline();
}
inline bool FriendNodeInfo::bisonline() const {
  return bisonline_;
}
inline void FriendNodeInfo::set_bisonline(bool value) {
  set_has_bisonline();
  bisonline_ = value;
}

// optional int32 iGetType = 5;
inline bool FriendNodeInfo::has_igettype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FriendNodeInfo::set_has_igettype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FriendNodeInfo::clear_has_igettype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FriendNodeInfo::clear_igettype() {
  igettype_ = 0;
  clear_has_igettype();
}
inline ::google::protobuf::int32 FriendNodeInfo::igettype() const {
  return igettype_;
}
inline void FriendNodeInfo::set_igettype(::google::protobuf::int32 value) {
  set_has_igettype();
  igettype_ = value;
}

// optional bool iHaveGive = 6;
inline bool FriendNodeInfo::has_ihavegive() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FriendNodeInfo::set_has_ihavegive() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FriendNodeInfo::clear_has_ihavegive() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FriendNodeInfo::clear_ihavegive() {
  ihavegive_ = false;
  clear_has_ihavegive();
}
inline bool FriendNodeInfo::ihavegive() const {
  return ihavegive_;
}
inline void FriendNodeInfo::set_ihavegive(bool value) {
  set_has_ihavegive();
  ihavegive_ = value;
}

// -------------------------------------------------------------------

// FriendPhyStrengthDetail

// required int32 iGetTimes = 1;
inline bool FriendPhyStrengthDetail::has_igettimes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendPhyStrengthDetail::set_has_igettimes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendPhyStrengthDetail::clear_has_igettimes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendPhyStrengthDetail::clear_igettimes() {
  igettimes_ = 0;
  clear_has_igettimes();
}
inline ::google::protobuf::int32 FriendPhyStrengthDetail::igettimes() const {
  return igettimes_;
}
inline void FriendPhyStrengthDetail::set_igettimes(::google::protobuf::int32 value) {
  set_has_igettimes();
  igettimes_ = value;
}

// required int32 iGiveTimes = 2;
inline bool FriendPhyStrengthDetail::has_igivetimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendPhyStrengthDetail::set_has_igivetimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendPhyStrengthDetail::clear_has_igivetimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendPhyStrengthDetail::clear_igivetimes() {
  igivetimes_ = 0;
  clear_has_igivetimes();
}
inline ::google::protobuf::int32 FriendPhyStrengthDetail::igivetimes() const {
  return igivetimes_;
}
inline void FriendPhyStrengthDetail::set_igivetimes(::google::protobuf::int32 value) {
  set_has_igivetimes();
  igivetimes_ = value;
}

// required int32 iTopGetTimes = 3;
inline bool FriendPhyStrengthDetail::has_itopgettimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendPhyStrengthDetail::set_has_itopgettimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendPhyStrengthDetail::clear_has_itopgettimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendPhyStrengthDetail::clear_itopgettimes() {
  itopgettimes_ = 0;
  clear_has_itopgettimes();
}
inline ::google::protobuf::int32 FriendPhyStrengthDetail::itopgettimes() const {
  return itopgettimes_;
}
inline void FriendPhyStrengthDetail::set_itopgettimes(::google::protobuf::int32 value) {
  set_has_itopgettimes();
  itopgettimes_ = value;
}

// required int32 iTopGiveTimes = 4;
inline bool FriendPhyStrengthDetail::has_itopgivetimes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendPhyStrengthDetail::set_has_itopgivetimes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendPhyStrengthDetail::clear_has_itopgivetimes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendPhyStrengthDetail::clear_itopgivetimes() {
  itopgivetimes_ = 0;
  clear_has_itopgivetimes();
}
inline ::google::protobuf::int32 FriendPhyStrengthDetail::itopgivetimes() const {
  return itopgivetimes_;
}
inline void FriendPhyStrengthDetail::set_itopgivetimes(::google::protobuf::int32 value) {
  set_has_itopgivetimes();
  itopgivetimes_ = value;
}

// required int32 iFrendCountLimit = 5;
inline bool FriendPhyStrengthDetail::has_ifrendcountlimit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FriendPhyStrengthDetail::set_has_ifrendcountlimit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FriendPhyStrengthDetail::clear_has_ifrendcountlimit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FriendPhyStrengthDetail::clear_ifrendcountlimit() {
  ifrendcountlimit_ = 0;
  clear_has_ifrendcountlimit();
}
inline ::google::protobuf::int32 FriendPhyStrengthDetail::ifrendcountlimit() const {
  return ifrendcountlimit_;
}
inline void FriendPhyStrengthDetail::set_ifrendcountlimit(::google::protobuf::int32 value) {
  set_has_ifrendcountlimit();
  ifrendcountlimit_ = value;
}

// -------------------------------------------------------------------

// CMD_FRIENDSYSTEM_QUERY_SC

// required bool bIsHaveRequest = 1;
inline bool CMD_FRIENDSYSTEM_QUERY_SC::has_bishaverequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_FRIENDSYSTEM_QUERY_SC::set_has_bishaverequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_FRIENDSYSTEM_QUERY_SC::clear_has_bishaverequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_FRIENDSYSTEM_QUERY_SC::clear_bishaverequest() {
  bishaverequest_ = false;
  clear_has_bishaverequest();
}
inline bool CMD_FRIENDSYSTEM_QUERY_SC::bishaverequest() const {
  return bishaverequest_;
}
inline void CMD_FRIENDSYSTEM_QUERY_SC::set_bishaverequest(bool value) {
  set_has_bishaverequest();
  bishaverequest_ = value;
}

// optional .GSProto.FriendPhyStrengthDetail detail = 2;
inline bool CMD_FRIENDSYSTEM_QUERY_SC::has_detail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_FRIENDSYSTEM_QUERY_SC::set_has_detail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_FRIENDSYSTEM_QUERY_SC::clear_has_detail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_FRIENDSYSTEM_QUERY_SC::clear_detail() {
  if (detail_ != NULL) detail_->::GSProto::FriendPhyStrengthDetail::Clear();
  clear_has_detail();
}
inline const ::GSProto::FriendPhyStrengthDetail& CMD_FRIENDSYSTEM_QUERY_SC::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::GSProto::FriendPhyStrengthDetail* CMD_FRIENDSYSTEM_QUERY_SC::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) detail_ = new ::GSProto::FriendPhyStrengthDetail;
  return detail_;
}
inline ::GSProto::FriendPhyStrengthDetail* CMD_FRIENDSYSTEM_QUERY_SC::release_detail() {
  clear_has_detail();
  ::GSProto::FriendPhyStrengthDetail* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void CMD_FRIENDSYSTEM_QUERY_SC::set_allocated_detail(::GSProto::FriendPhyStrengthDetail* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
}

// repeated .GSProto.FriendNodeInfo szFriendList = 3;
inline int CMD_FRIENDSYSTEM_QUERY_SC::szfriendlist_size() const {
  return szfriendlist_.size();
}
inline void CMD_FRIENDSYSTEM_QUERY_SC::clear_szfriendlist() {
  szfriendlist_.Clear();
}
inline const ::GSProto::FriendNodeInfo& CMD_FRIENDSYSTEM_QUERY_SC::szfriendlist(int index) const {
  return szfriendlist_.Get(index);
}
inline ::GSProto::FriendNodeInfo* CMD_FRIENDSYSTEM_QUERY_SC::mutable_szfriendlist(int index) {
  return szfriendlist_.Mutable(index);
}
inline ::GSProto::FriendNodeInfo* CMD_FRIENDSYSTEM_QUERY_SC::add_szfriendlist() {
  return szfriendlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FriendNodeInfo >&
CMD_FRIENDSYSTEM_QUERY_SC::szfriendlist() const {
  return szfriendlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FriendNodeInfo >*
CMD_FRIENDSYSTEM_QUERY_SC::mutable_szfriendlist() {
  return &szfriendlist_;
}

// -------------------------------------------------------------------

// CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS

// required string strName = 1;
inline bool CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS::has_strname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS::set_has_strname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS::clear_has_strname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS::strname() const {
  return *strname_;
}
inline void CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_FRIENDSYSTEM_QUERY_FRIENDINFO_CS::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_FRIENDSYSTEM_DELETE_FRIEND_CS

// required string strName = 1;
inline bool CMD_FRIENDSYSTEM_DELETE_FRIEND_CS::has_strname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_FRIENDSYSTEM_DELETE_FRIEND_CS::set_has_strname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_FRIENDSYSTEM_DELETE_FRIEND_CS::clear_has_strname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_FRIENDSYSTEM_DELETE_FRIEND_CS::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& CMD_FRIENDSYSTEM_DELETE_FRIEND_CS::strname() const {
  return *strname_;
}
inline void CMD_FRIENDSYSTEM_DELETE_FRIEND_CS::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void CMD_FRIENDSYSTEM_DELETE_FRIEND_CS::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void CMD_FRIENDSYSTEM_DELETE_FRIEND_CS::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_FRIENDSYSTEM_DELETE_FRIEND_CS::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* CMD_FRIENDSYSTEM_DELETE_FRIEND_CS::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_FRIENDSYSTEM_DELETE_FRIEND_CS::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC

// repeated .GSProto.FriendNodeInfo szSearchResoultList = 1;
inline int CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC::szsearchresoultlist_size() const {
  return szsearchresoultlist_.size();
}
inline void CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC::clear_szsearchresoultlist() {
  szsearchresoultlist_.Clear();
}
inline const ::GSProto::FriendNodeInfo& CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC::szsearchresoultlist(int index) const {
  return szsearchresoultlist_.Get(index);
}
inline ::GSProto::FriendNodeInfo* CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC::mutable_szsearchresoultlist(int index) {
  return szsearchresoultlist_.Mutable(index);
}
inline ::GSProto::FriendNodeInfo* CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC::add_szsearchresoultlist() {
  return szsearchresoultlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FriendNodeInfo >&
CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC::szsearchresoultlist() const {
  return szsearchresoultlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FriendNodeInfo >*
CMD_FRIENDSYSTEM_SEARCH_FRIEND_SC::mutable_szsearchresoultlist() {
  return &szsearchresoultlist_;
}

// -------------------------------------------------------------------

// CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS

// required bool bAgree = 1;
inline bool CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS::has_bagree() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS::set_has_bagree() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS::clear_has_bagree() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS::clear_bagree() {
  bagree_ = false;
  clear_has_bagree();
}
inline bool CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS::bagree() const {
  return bagree_;
}
inline void CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS::set_bagree(bool value) {
  set_has_bagree();
  bagree_ = value;
}

// required string stName = 2;
inline bool CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS::has_stname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS::set_has_stname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS::clear_has_stname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS::clear_stname() {
  if (stname_ != &::google::protobuf::internal::kEmptyString) {
    stname_->clear();
  }
  clear_has_stname();
}
inline const ::std::string& CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS::stname() const {
  return *stname_;
}
inline void CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS::set_stname(const ::std::string& value) {
  set_has_stname();
  if (stname_ == &::google::protobuf::internal::kEmptyString) {
    stname_ = new ::std::string;
  }
  stname_->assign(value);
}
inline void CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS::set_stname(const char* value) {
  set_has_stname();
  if (stname_ == &::google::protobuf::internal::kEmptyString) {
    stname_ = new ::std::string;
  }
  stname_->assign(value);
}
inline void CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS::set_stname(const char* value, size_t size) {
  set_has_stname();
  if (stname_ == &::google::protobuf::internal::kEmptyString) {
    stname_ = new ::std::string;
  }
  stname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS::mutable_stname() {
  set_has_stname();
  if (stname_ == &::google::protobuf::internal::kEmptyString) {
    stname_ = new ::std::string;
  }
  return stname_;
}
inline ::std::string* CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS::release_stname() {
  clear_has_stname();
  if (stname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stname_;
    stname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_FRIENDSYSTEM_ADDORDELET_REQUESTFRIEND_CS::set_allocated_stname(::std::string* stname) {
  if (stname_ != &::google::protobuf::internal::kEmptyString) {
    delete stname_;
  }
  if (stname) {
    set_has_stname();
    stname_ = stname;
  } else {
    clear_has_stname();
    stname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC

// required .GSProto.FriendPhyStrengthDetail detail = 1;
inline bool CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC::has_detail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC::set_has_detail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC::clear_has_detail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC::clear_detail() {
  if (detail_ != NULL) detail_->::GSProto::FriendPhyStrengthDetail::Clear();
  clear_has_detail();
}
inline const ::GSProto::FriendPhyStrengthDetail& CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::GSProto::FriendPhyStrengthDetail* CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) detail_ = new ::GSProto::FriendPhyStrengthDetail;
  return detail_;
}
inline ::GSProto::FriendPhyStrengthDetail* CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC::release_detail() {
  clear_has_detail();
  ::GSProto::FriendPhyStrengthDetail* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC::set_allocated_detail(::GSProto::FriendPhyStrengthDetail* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
}

// repeated .GSProto.FriendNodeInfo szFriendList = 2;
inline int CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC::szfriendlist_size() const {
  return szfriendlist_.size();
}
inline void CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC::clear_szfriendlist() {
  szfriendlist_.Clear();
}
inline const ::GSProto::FriendNodeInfo& CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC::szfriendlist(int index) const {
  return szfriendlist_.Get(index);
}
inline ::GSProto::FriendNodeInfo* CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC::mutable_szfriendlist(int index) {
  return szfriendlist_.Mutable(index);
}
inline ::GSProto::FriendNodeInfo* CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC::add_szfriendlist() {
  return szfriendlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FriendNodeInfo >&
CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC::szfriendlist() const {
  return szfriendlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FriendNodeInfo >*
CMD_FRIENDSYSTEM_QUERY_FRIENDLIST_SC::mutable_szfriendlist() {
  return &szfriendlist_;
}

// -------------------------------------------------------------------

// CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC

// repeated .GSProto.FriendNodeInfo szFriendList = 1;
inline int CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC::szfriendlist_size() const {
  return szfriendlist_.size();
}
inline void CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC::clear_szfriendlist() {
  szfriendlist_.Clear();
}
inline const ::GSProto::FriendNodeInfo& CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC::szfriendlist(int index) const {
  return szfriendlist_.Get(index);
}
inline ::GSProto::FriendNodeInfo* CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC::mutable_szfriendlist(int index) {
  return szfriendlist_.Mutable(index);
}
inline ::GSProto::FriendNodeInfo* CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC::add_szfriendlist() {
  return szfriendlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FriendNodeInfo >&
CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC::szfriendlist() const {
  return szfriendlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FriendNodeInfo >*
CMD_FRIENDSYSTEM_QUERY_REQUESTLIST_SC::mutable_szfriendlist() {
  return &szfriendlist_;
}

// -------------------------------------------------------------------

// CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS

// required string stName = 1;
inline bool CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS::has_stname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS::set_has_stname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS::clear_has_stname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS::clear_stname() {
  if (stname_ != &::google::protobuf::internal::kEmptyString) {
    stname_->clear();
  }
  clear_has_stname();
}
inline const ::std::string& CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS::stname() const {
  return *stname_;
}
inline void CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS::set_stname(const ::std::string& value) {
  set_has_stname();
  if (stname_ == &::google::protobuf::internal::kEmptyString) {
    stname_ = new ::std::string;
  }
  stname_->assign(value);
}
inline void CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS::set_stname(const char* value) {
  set_has_stname();
  if (stname_ == &::google::protobuf::internal::kEmptyString) {
    stname_ = new ::std::string;
  }
  stname_->assign(value);
}
inline void CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS::set_stname(const char* value, size_t size) {
  set_has_stname();
  if (stname_ == &::google::protobuf::internal::kEmptyString) {
    stname_ = new ::std::string;
  }
  stname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS::mutable_stname() {
  set_has_stname();
  if (stname_ == &::google::protobuf::internal::kEmptyString) {
    stname_ = new ::std::string;
  }
  return stname_;
}
inline ::std::string* CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS::release_stname() {
  clear_has_stname();
  if (stname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stname_;
    stname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_CS::set_allocated_stname(::std::string* stname) {
  if (stname_ != &::google::protobuf::internal::kEmptyString) {
    delete stname_;
  }
  if (stname) {
    set_has_stname();
    stname_ = stname;
  } else {
    clear_has_stname();
    stname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC

// required .GSProto.FriendPhyStrengthDetail detail = 1;
inline bool CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC::has_detail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC::set_has_detail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC::clear_has_detail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC::clear_detail() {
  if (detail_ != NULL) detail_->::GSProto::FriendPhyStrengthDetail::Clear();
  clear_has_detail();
}
inline const ::GSProto::FriendPhyStrengthDetail& CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::GSProto::FriendPhyStrengthDetail* CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) detail_ = new ::GSProto::FriendPhyStrengthDetail;
  return detail_;
}
inline ::GSProto::FriendPhyStrengthDetail* CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC::release_detail() {
  clear_has_detail();
  ::GSProto::FriendPhyStrengthDetail* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void CMD_FRIENDSYSTEM_GIVE_PHYSTRENGTH_SC::set_allocated_detail(::GSProto::FriendPhyStrengthDetail* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
}

// -------------------------------------------------------------------

// CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS

// required string stName = 1;
inline bool CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS::has_stname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS::set_has_stname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS::clear_has_stname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS::clear_stname() {
  if (stname_ != &::google::protobuf::internal::kEmptyString) {
    stname_->clear();
  }
  clear_has_stname();
}
inline const ::std::string& CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS::stname() const {
  return *stname_;
}
inline void CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS::set_stname(const ::std::string& value) {
  set_has_stname();
  if (stname_ == &::google::protobuf::internal::kEmptyString) {
    stname_ = new ::std::string;
  }
  stname_->assign(value);
}
inline void CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS::set_stname(const char* value) {
  set_has_stname();
  if (stname_ == &::google::protobuf::internal::kEmptyString) {
    stname_ = new ::std::string;
  }
  stname_->assign(value);
}
inline void CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS::set_stname(const char* value, size_t size) {
  set_has_stname();
  if (stname_ == &::google::protobuf::internal::kEmptyString) {
    stname_ = new ::std::string;
  }
  stname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS::mutable_stname() {
  set_has_stname();
  if (stname_ == &::google::protobuf::internal::kEmptyString) {
    stname_ = new ::std::string;
  }
  return stname_;
}
inline ::std::string* CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS::release_stname() {
  clear_has_stname();
  if (stname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stname_;
    stname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_FRIENDSYSTEM_GET_PHYSTENGTH_CS::set_allocated_stname(::std::string* stname) {
  if (stname_ != &::google::protobuf::internal::kEmptyString) {
    delete stname_;
  }
  if (stname) {
    set_has_stname();
    stname_ = stname;
  } else {
    clear_has_stname();
    stname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC

// required .GSProto.FriendPhyStrengthDetail detail = 1;
inline bool CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC::has_detail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC::set_has_detail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC::clear_has_detail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC::clear_detail() {
  if (detail_ != NULL) detail_->::GSProto::FriendPhyStrengthDetail::Clear();
  clear_has_detail();
}
inline const ::GSProto::FriendPhyStrengthDetail& CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::GSProto::FriendPhyStrengthDetail* CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) detail_ = new ::GSProto::FriendPhyStrengthDetail;
  return detail_;
}
inline ::GSProto::FriendPhyStrengthDetail* CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC::release_detail() {
  clear_has_detail();
  ::GSProto::FriendPhyStrengthDetail* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void CMD_FRIENDSYSTEM_GET_PHYSTENGTH_SC::set_allocated_detail(::GSProto::FriendPhyStrengthDetail* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
}

// -------------------------------------------------------------------

// CMD_FRIENDSYSTEM_REQUEST_CS

// required string strName = 1;
inline bool CMD_FRIENDSYSTEM_REQUEST_CS::has_strname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_FRIENDSYSTEM_REQUEST_CS::set_has_strname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_FRIENDSYSTEM_REQUEST_CS::clear_has_strname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_FRIENDSYSTEM_REQUEST_CS::clear_strname() {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    strname_->clear();
  }
  clear_has_strname();
}
inline const ::std::string& CMD_FRIENDSYSTEM_REQUEST_CS::strname() const {
  return *strname_;
}
inline void CMD_FRIENDSYSTEM_REQUEST_CS::set_strname(const ::std::string& value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void CMD_FRIENDSYSTEM_REQUEST_CS::set_strname(const char* value) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(value);
}
inline void CMD_FRIENDSYSTEM_REQUEST_CS::set_strname(const char* value, size_t size) {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  strname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_FRIENDSYSTEM_REQUEST_CS::mutable_strname() {
  set_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    strname_ = new ::std::string;
  }
  return strname_;
}
inline ::std::string* CMD_FRIENDSYSTEM_REQUEST_CS::release_strname() {
  clear_has_strname();
  if (strname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strname_;
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_FRIENDSYSTEM_REQUEST_CS::set_allocated_strname(::std::string* strname) {
  if (strname_ != &::google::protobuf::internal::kEmptyString) {
    delete strname_;
  }
  if (strname) {
    set_has_strname();
    strname_ = strname;
  } else {
    clear_has_strname();
    strname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_USENAME_FINED_ACTOR_INFO_CS

// required string strActorName = 1;
inline bool CMD_USENAME_FINED_ACTOR_INFO_CS::has_stractorname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_USENAME_FINED_ACTOR_INFO_CS::set_has_stractorname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_USENAME_FINED_ACTOR_INFO_CS::clear_has_stractorname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_USENAME_FINED_ACTOR_INFO_CS::clear_stractorname() {
  if (stractorname_ != &::google::protobuf::internal::kEmptyString) {
    stractorname_->clear();
  }
  clear_has_stractorname();
}
inline const ::std::string& CMD_USENAME_FINED_ACTOR_INFO_CS::stractorname() const {
  return *stractorname_;
}
inline void CMD_USENAME_FINED_ACTOR_INFO_CS::set_stractorname(const ::std::string& value) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(value);
}
inline void CMD_USENAME_FINED_ACTOR_INFO_CS::set_stractorname(const char* value) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(value);
}
inline void CMD_USENAME_FINED_ACTOR_INFO_CS::set_stractorname(const char* value, size_t size) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_USENAME_FINED_ACTOR_INFO_CS::mutable_stractorname() {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  return stractorname_;
}
inline ::std::string* CMD_USENAME_FINED_ACTOR_INFO_CS::release_stractorname() {
  clear_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stractorname_;
    stractorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_USENAME_FINED_ACTOR_INFO_CS::set_allocated_stractorname(::std::string* stractorname) {
  if (stractorname_ != &::google::protobuf::internal::kEmptyString) {
    delete stractorname_;
  }
  if (stractorname) {
    set_has_stractorname();
    stractorname_ = stractorname;
  } else {
    clear_has_stractorname();
    stractorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS

// required string strActorName = 1;
inline bool CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS::has_stractorname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS::set_has_stractorname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS::clear_has_stractorname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS::clear_stractorname() {
  if (stractorname_ != &::google::protobuf::internal::kEmptyString) {
    stractorname_->clear();
  }
  clear_has_stractorname();
}
inline const ::std::string& CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS::stractorname() const {
  return *stractorname_;
}
inline void CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS::set_stractorname(const ::std::string& value) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(value);
}
inline void CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS::set_stractorname(const char* value) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(value);
}
inline void CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS::set_stractorname(const char* value, size_t size) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS::mutable_stractorname() {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  return stractorname_;
}
inline ::std::string* CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS::release_stractorname() {
  clear_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stractorname_;
    stractorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS::set_allocated_stractorname(::std::string* stractorname) {
  if (stractorname_ != &::google::protobuf::internal::kEmptyString) {
    delete stractorname_;
  }
  if (stractorname) {
    set_has_stractorname();
    stractorname_ = stractorname;
  } else {
    clear_has_stractorname();
    stractorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .GSProto.PBPkRole roleKey = 2;
inline bool CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS::has_rolekey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS::set_has_rolekey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS::clear_has_rolekey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS::clear_rolekey() {
  if (rolekey_ != NULL) rolekey_->::GSProto::PBPkRole::Clear();
  clear_has_rolekey();
}
inline const ::GSProto::PBPkRole& CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS::rolekey() const {
  return rolekey_ != NULL ? *rolekey_ : *default_instance_->rolekey_;
}
inline ::GSProto::PBPkRole* CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS::mutable_rolekey() {
  set_has_rolekey();
  if (rolekey_ == NULL) rolekey_ = new ::GSProto::PBPkRole;
  return rolekey_;
}
inline ::GSProto::PBPkRole* CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS::release_rolekey() {
  clear_has_rolekey();
  ::GSProto::PBPkRole* temp = rolekey_;
  rolekey_ = NULL;
  return temp;
}
inline void CMD_USEPBPKROLE_FINED_ACTOR_INFO_CS::set_allocated_rolekey(::GSProto::PBPkRole* rolekey) {
  delete rolekey_;
  rolekey_ = rolekey;
  if (rolekey) {
    set_has_rolekey();
  } else {
    clear_has_rolekey();
  }
}

// -------------------------------------------------------------------

// ActorInfoDetail

// required string strActorName = 1;
inline bool ActorInfoDetail::has_stractorname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActorInfoDetail::set_has_stractorname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActorInfoDetail::clear_has_stractorname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActorInfoDetail::clear_stractorname() {
  if (stractorname_ != &::google::protobuf::internal::kEmptyString) {
    stractorname_->clear();
  }
  clear_has_stractorname();
}
inline const ::std::string& ActorInfoDetail::stractorname() const {
  return *stractorname_;
}
inline void ActorInfoDetail::set_stractorname(const ::std::string& value) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(value);
}
inline void ActorInfoDetail::set_stractorname(const char* value) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(value);
}
inline void ActorInfoDetail::set_stractorname(const char* value, size_t size) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ActorInfoDetail::mutable_stractorname() {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  return stractorname_;
}
inline ::std::string* ActorInfoDetail::release_stractorname() {
  clear_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stractorname_;
    stractorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ActorInfoDetail::set_allocated_stractorname(::std::string* stractorname) {
  if (stractorname_ != &::google::protobuf::internal::kEmptyString) {
    delete stractorname_;
  }
  if (stractorname) {
    set_has_stractorname();
    stractorname_ = stractorname;
  } else {
    clear_has_stractorname();
    stractorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iActorLevel = 2;
inline bool ActorInfoDetail::has_iactorlevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActorInfoDetail::set_has_iactorlevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActorInfoDetail::clear_has_iactorlevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActorInfoDetail::clear_iactorlevel() {
  iactorlevel_ = 0;
  clear_has_iactorlevel();
}
inline ::google::protobuf::int32 ActorInfoDetail::iactorlevel() const {
  return iactorlevel_;
}
inline void ActorInfoDetail::set_iactorlevel(::google::protobuf::int32 value) {
  set_has_iactorlevel();
  iactorlevel_ = value;
}

// required int32 iAreanRank = 3;
inline bool ActorInfoDetail::has_iareanrank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActorInfoDetail::set_has_iareanrank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActorInfoDetail::clear_has_iareanrank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActorInfoDetail::clear_iareanrank() {
  iareanrank_ = 0;
  clear_has_iareanrank();
}
inline ::google::protobuf::int32 ActorInfoDetail::iareanrank() const {
  return iareanrank_;
}
inline void ActorInfoDetail::set_iareanrank(::google::protobuf::int32 value) {
  set_has_iareanrank();
  iareanrank_ = value;
}

// optional string strBelongLegionName = 4;
inline bool ActorInfoDetail::has_strbelonglegionname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActorInfoDetail::set_has_strbelonglegionname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActorInfoDetail::clear_has_strbelonglegionname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActorInfoDetail::clear_strbelonglegionname() {
  if (strbelonglegionname_ != &::google::protobuf::internal::kEmptyString) {
    strbelonglegionname_->clear();
  }
  clear_has_strbelonglegionname();
}
inline const ::std::string& ActorInfoDetail::strbelonglegionname() const {
  return *strbelonglegionname_;
}
inline void ActorInfoDetail::set_strbelonglegionname(const ::std::string& value) {
  set_has_strbelonglegionname();
  if (strbelonglegionname_ == &::google::protobuf::internal::kEmptyString) {
    strbelonglegionname_ = new ::std::string;
  }
  strbelonglegionname_->assign(value);
}
inline void ActorInfoDetail::set_strbelonglegionname(const char* value) {
  set_has_strbelonglegionname();
  if (strbelonglegionname_ == &::google::protobuf::internal::kEmptyString) {
    strbelonglegionname_ = new ::std::string;
  }
  strbelonglegionname_->assign(value);
}
inline void ActorInfoDetail::set_strbelonglegionname(const char* value, size_t size) {
  set_has_strbelonglegionname();
  if (strbelonglegionname_ == &::google::protobuf::internal::kEmptyString) {
    strbelonglegionname_ = new ::std::string;
  }
  strbelonglegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ActorInfoDetail::mutable_strbelonglegionname() {
  set_has_strbelonglegionname();
  if (strbelonglegionname_ == &::google::protobuf::internal::kEmptyString) {
    strbelonglegionname_ = new ::std::string;
  }
  return strbelonglegionname_;
}
inline ::std::string* ActorInfoDetail::release_strbelonglegionname() {
  clear_has_strbelonglegionname();
  if (strbelonglegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strbelonglegionname_;
    strbelonglegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ActorInfoDetail::set_allocated_strbelonglegionname(::std::string* strbelonglegionname) {
  if (strbelonglegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strbelonglegionname_;
  }
  if (strbelonglegionname) {
    set_has_strbelonglegionname();
    strbelonglegionname_ = strbelonglegionname;
  } else {
    clear_has_strbelonglegionname();
    strbelonglegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iTotalFightStrength = 5;
inline bool ActorInfoDetail::has_itotalfightstrength() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActorInfoDetail::set_has_itotalfightstrength() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActorInfoDetail::clear_has_itotalfightstrength() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActorInfoDetail::clear_itotalfightstrength() {
  itotalfightstrength_ = 0;
  clear_has_itotalfightstrength();
}
inline ::google::protobuf::int32 ActorInfoDetail::itotalfightstrength() const {
  return itotalfightstrength_;
}
inline void ActorInfoDetail::set_itotalfightstrength(::google::protobuf::int32 value) {
  set_has_itotalfightstrength();
  itotalfightstrength_ = value;
}

// repeated .GSProto.HeroBaseData szHeroList = 6;
inline int ActorInfoDetail::szherolist_size() const {
  return szherolist_.size();
}
inline void ActorInfoDetail::clear_szherolist() {
  szherolist_.Clear();
}
inline const ::GSProto::HeroBaseData& ActorInfoDetail::szherolist(int index) const {
  return szherolist_.Get(index);
}
inline ::GSProto::HeroBaseData* ActorInfoDetail::mutable_szherolist(int index) {
  return szherolist_.Mutable(index);
}
inline ::GSProto::HeroBaseData* ActorInfoDetail::add_szherolist() {
  return szherolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HeroBaseData >&
ActorInfoDetail::szherolist() const {
  return szherolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::HeroBaseData >*
ActorInfoDetail::mutable_szherolist() {
  return &szherolist_;
}

// required int32 iHeadId = 7;
inline bool ActorInfoDetail::has_iheadid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ActorInfoDetail::set_has_iheadid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ActorInfoDetail::clear_has_iheadid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ActorInfoDetail::clear_iheadid() {
  iheadid_ = 0;
  clear_has_iheadid();
}
inline ::google::protobuf::int32 ActorInfoDetail::iheadid() const {
  return iheadid_;
}
inline void ActorInfoDetail::set_iheadid(::google::protobuf::int32 value) {
  set_has_iheadid();
  iheadid_ = value;
}

// -------------------------------------------------------------------

// CMD_FINED_ACTOR_INFO_SC

// required .GSProto.ActorInfoDetail detail = 1;
inline bool CMD_FINED_ACTOR_INFO_SC::has_detail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_FINED_ACTOR_INFO_SC::set_has_detail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_FINED_ACTOR_INFO_SC::clear_has_detail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_FINED_ACTOR_INFO_SC::clear_detail() {
  if (detail_ != NULL) detail_->::GSProto::ActorInfoDetail::Clear();
  clear_has_detail();
}
inline const ::GSProto::ActorInfoDetail& CMD_FINED_ACTOR_INFO_SC::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::GSProto::ActorInfoDetail* CMD_FINED_ACTOR_INFO_SC::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) detail_ = new ::GSProto::ActorInfoDetail;
  return detail_;
}
inline ::GSProto::ActorInfoDetail* CMD_FINED_ACTOR_INFO_SC::release_detail() {
  clear_has_detail();
  ::GSProto::ActorInfoDetail* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void CMD_FINED_ACTOR_INFO_SC::set_allocated_detail(::GSProto::ActorInfoDetail* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
}

// -------------------------------------------------------------------

// CMD_ATT_COMEUP_SC

// required bool bIsComeUp = 1;
inline bool CMD_ATT_COMEUP_SC::has_biscomeup() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_ATT_COMEUP_SC::set_has_biscomeup() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_ATT_COMEUP_SC::clear_has_biscomeup() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_ATT_COMEUP_SC::clear_biscomeup() {
  biscomeup_ = false;
  clear_has_biscomeup();
}
inline bool CMD_ATT_COMEUP_SC::biscomeup() const {
  return biscomeup_;
}
inline void CMD_ATT_COMEUP_SC::set_biscomeup(bool value) {
  set_has_biscomeup();
  biscomeup_ = value;
}

// -------------------------------------------------------------------

// CMD_MARQUEE_SC

// required int32 marqueeID = 1;
inline bool CMD_MARQUEE_SC::has_marqueeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_MARQUEE_SC::set_has_marqueeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_MARQUEE_SC::clear_has_marqueeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_MARQUEE_SC::clear_marqueeid() {
  marqueeid_ = 0;
  clear_has_marqueeid();
}
inline ::google::protobuf::int32 CMD_MARQUEE_SC::marqueeid() const {
  return marqueeid_;
}
inline void CMD_MARQUEE_SC::set_marqueeid(::google::protobuf::int32 value) {
  set_has_marqueeid();
  marqueeid_ = value;
}

// repeated string szStrMessage = 2;
inline int CMD_MARQUEE_SC::szstrmessage_size() const {
  return szstrmessage_.size();
}
inline void CMD_MARQUEE_SC::clear_szstrmessage() {
  szstrmessage_.Clear();
}
inline const ::std::string& CMD_MARQUEE_SC::szstrmessage(int index) const {
  return szstrmessage_.Get(index);
}
inline ::std::string* CMD_MARQUEE_SC::mutable_szstrmessage(int index) {
  return szstrmessage_.Mutable(index);
}
inline void CMD_MARQUEE_SC::set_szstrmessage(int index, const ::std::string& value) {
  szstrmessage_.Mutable(index)->assign(value);
}
inline void CMD_MARQUEE_SC::set_szstrmessage(int index, const char* value) {
  szstrmessage_.Mutable(index)->assign(value);
}
inline void CMD_MARQUEE_SC::set_szstrmessage(int index, const char* value, size_t size) {
  szstrmessage_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_MARQUEE_SC::add_szstrmessage() {
  return szstrmessage_.Add();
}
inline void CMD_MARQUEE_SC::add_szstrmessage(const ::std::string& value) {
  szstrmessage_.Add()->assign(value);
}
inline void CMD_MARQUEE_SC::add_szstrmessage(const char* value) {
  szstrmessage_.Add()->assign(value);
}
inline void CMD_MARQUEE_SC::add_szstrmessage(const char* value, size_t size) {
  szstrmessage_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMD_MARQUEE_SC::szstrmessage() const {
  return szstrmessage_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMD_MARQUEE_SC::mutable_szstrmessage() {
  return &szstrmessage_;
}

// -------------------------------------------------------------------

// CMD_HERO_SANGONG_CS

// required uint32 dwObjectID = 1;
inline bool CMD_HERO_SANGONG_CS::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_HERO_SANGONG_CS::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_HERO_SANGONG_CS::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_HERO_SANGONG_CS::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 CMD_HERO_SANGONG_CS::dwobjectid() const {
  return dwobjectid_;
}
inline void CMD_HERO_SANGONG_CS::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// -------------------------------------------------------------------

// CMD_HERO_SANGONG_SC

// required uint32 dwObjectID = 1;
inline bool CMD_HERO_SANGONG_SC::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_HERO_SANGONG_SC::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_HERO_SANGONG_SC::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_HERO_SANGONG_SC::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 CMD_HERO_SANGONG_SC::dwobjectid() const {
  return dwobjectid_;
}
inline void CMD_HERO_SANGONG_SC::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// required int32 iRebackHeroExp = 2;
inline bool CMD_HERO_SANGONG_SC::has_irebackheroexp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_HERO_SANGONG_SC::set_has_irebackheroexp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_HERO_SANGONG_SC::clear_has_irebackheroexp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_HERO_SANGONG_SC::clear_irebackheroexp() {
  irebackheroexp_ = 0;
  clear_has_irebackheroexp();
}
inline ::google::protobuf::int32 CMD_HERO_SANGONG_SC::irebackheroexp() const {
  return irebackheroexp_;
}
inline void CMD_HERO_SANGONG_SC::set_irebackheroexp(::google::protobuf::int32 value) {
  set_has_irebackheroexp();
  irebackheroexp_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_ACTORINFO_SC

// required int32 iPhyResumeCD = 1;
inline bool CMD_QUERY_ACTORINFO_SC::has_iphyresumecd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_ACTORINFO_SC::set_has_iphyresumecd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_ACTORINFO_SC::clear_has_iphyresumecd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_ACTORINFO_SC::clear_iphyresumecd() {
  iphyresumecd_ = 0;
  clear_has_iphyresumecd();
}
inline ::google::protobuf::int32 CMD_QUERY_ACTORINFO_SC::iphyresumecd() const {
  return iphyresumecd_;
}
inline void CMD_QUERY_ACTORINFO_SC::set_iphyresumecd(::google::protobuf::int32 value) {
  set_has_iphyresumecd();
  iphyresumecd_ = value;
}

// required int32 iFullPhyResumeCD = 2;
inline bool CMD_QUERY_ACTORINFO_SC::has_ifullphyresumecd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_QUERY_ACTORINFO_SC::set_has_ifullphyresumecd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_QUERY_ACTORINFO_SC::clear_has_ifullphyresumecd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_QUERY_ACTORINFO_SC::clear_ifullphyresumecd() {
  ifullphyresumecd_ = 0;
  clear_has_ifullphyresumecd();
}
inline ::google::protobuf::int32 CMD_QUERY_ACTORINFO_SC::ifullphyresumecd() const {
  return ifullphyresumecd_;
}
inline void CMD_QUERY_ACTORINFO_SC::set_ifullphyresumecd(::google::protobuf::int32 value) {
  set_has_ifullphyresumecd();
  ifullphyresumecd_ = value;
}

// optional string strLegionName = 3;
inline bool CMD_QUERY_ACTORINFO_SC::has_strlegionname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_QUERY_ACTORINFO_SC::set_has_strlegionname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_QUERY_ACTORINFO_SC::clear_has_strlegionname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_QUERY_ACTORINFO_SC::clear_strlegionname() {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    strlegionname_->clear();
  }
  clear_has_strlegionname();
}
inline const ::std::string& CMD_QUERY_ACTORINFO_SC::strlegionname() const {
  return *strlegionname_;
}
inline void CMD_QUERY_ACTORINFO_SC::set_strlegionname(const ::std::string& value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void CMD_QUERY_ACTORINFO_SC::set_strlegionname(const char* value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void CMD_QUERY_ACTORINFO_SC::set_strlegionname(const char* value, size_t size) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_QUERY_ACTORINFO_SC::mutable_strlegionname() {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  return strlegionname_;
}
inline ::std::string* CMD_QUERY_ACTORINFO_SC::release_strlegionname() {
  clear_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strlegionname_;
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_QUERY_ACTORINFO_SC::set_allocated_strlegionname(::std::string* strlegionname) {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strlegionname_;
  }
  if (strlegionname) {
    set_has_strlegionname();
    strlegionname_ = strlegionname;
  } else {
    clear_has_strlegionname();
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_NOTIFY_GUIDE_SC

// required int32 iGuideID = 1;
inline bool CMD_NOTIFY_GUIDE_SC::has_iguideid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_NOTIFY_GUIDE_SC::set_has_iguideid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_NOTIFY_GUIDE_SC::clear_has_iguideid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_NOTIFY_GUIDE_SC::clear_iguideid() {
  iguideid_ = 0;
  clear_has_iguideid();
}
inline ::google::protobuf::int32 CMD_NOTIFY_GUIDE_SC::iguideid() const {
  return iguideid_;
}
inline void CMD_NOTIFY_GUIDE_SC::set_iguideid(::google::protobuf::int32 value) {
  set_has_iguideid();
  iguideid_ = value;
}

// -------------------------------------------------------------------

// CMD_GUIDE_FINISH_CS

// required int32 iGuideID = 1;
inline bool CMD_GUIDE_FINISH_CS::has_iguideid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GUIDE_FINISH_CS::set_has_iguideid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GUIDE_FINISH_CS::clear_has_iguideid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GUIDE_FINISH_CS::clear_iguideid() {
  iguideid_ = 0;
  clear_has_iguideid();
}
inline ::google::protobuf::int32 CMD_GUIDE_FINISH_CS::iguideid() const {
  return iguideid_;
}
inline void CMD_GUIDE_FINISH_CS::set_iguideid(::google::protobuf::int32 value) {
  set_has_iguideid();
  iguideid_ = value;
}

// -------------------------------------------------------------------

// TaskDetail

// required int32 iTaskId = 1;
inline bool TaskDetail::has_itaskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskDetail::set_has_itaskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskDetail::clear_has_itaskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskDetail::clear_itaskid() {
  itaskid_ = 0;
  clear_has_itaskid();
}
inline ::google::protobuf::int32 TaskDetail::itaskid() const {
  return itaskid_;
}
inline void TaskDetail::set_itaskid(::google::protobuf::int32 value) {
  set_has_itaskid();
  itaskid_ = value;
}

// required int32 iTaskType = 2;
inline bool TaskDetail::has_itasktype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TaskDetail::set_has_itasktype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TaskDetail::clear_has_itasktype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TaskDetail::clear_itasktype() {
  itasktype_ = 0;
  clear_has_itasktype();
}
inline ::google::protobuf::int32 TaskDetail::itasktype() const {
  return itasktype_;
}
inline void TaskDetail::set_itasktype(::google::protobuf::int32 value) {
  set_has_itasktype();
  itasktype_ = value;
}

// required int32 iTaskOver = 3;
inline bool TaskDetail::has_itaskover() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TaskDetail::set_has_itaskover() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TaskDetail::clear_has_itaskover() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TaskDetail::clear_itaskover() {
  itaskover_ = 0;
  clear_has_itaskover();
}
inline ::google::protobuf::int32 TaskDetail::itaskover() const {
  return itaskover_;
}
inline void TaskDetail::set_itaskover(::google::protobuf::int32 value) {
  set_has_itaskover();
  itaskover_ = value;
}

// required int32 iTaskTotal = 4;
inline bool TaskDetail::has_itasktotal() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TaskDetail::set_has_itasktotal() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TaskDetail::clear_has_itasktotal() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TaskDetail::clear_itasktotal() {
  itasktotal_ = 0;
  clear_has_itasktotal();
}
inline ::google::protobuf::int32 TaskDetail::itasktotal() const {
  return itasktotal_;
}
inline void TaskDetail::set_itasktotal(::google::protobuf::int32 value) {
  set_has_itasktotal();
  itasktotal_ = value;
}

// required int32 iTaskState = 5;
inline bool TaskDetail::has_itaskstate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TaskDetail::set_has_itaskstate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TaskDetail::clear_has_itaskstate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TaskDetail::clear_itaskstate() {
  itaskstate_ = 0;
  clear_has_itaskstate();
}
inline ::google::protobuf::int32 TaskDetail::itaskstate() const {
  return itaskstate_;
}
inline void TaskDetail::set_itaskstate(::google::protobuf::int32 value) {
  set_has_itaskstate();
  itaskstate_ = value;
}

// -------------------------------------------------------------------

// CMD_TASK_QUERY_TASKINFO_CS

// required .GSProto.enTaskType type = 1;
inline bool CMD_TASK_QUERY_TASKINFO_CS::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_TASK_QUERY_TASKINFO_CS::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_TASK_QUERY_TASKINFO_CS::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_TASK_QUERY_TASKINFO_CS::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::GSProto::enTaskType CMD_TASK_QUERY_TASKINFO_CS::type() const {
  return static_cast< ::GSProto::enTaskType >(type_);
}
inline void CMD_TASK_QUERY_TASKINFO_CS::set_type(::GSProto::enTaskType value) {
  assert(::GSProto::enTaskType_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// MonthCardInfo

// required bool bMonthCardHaveOver = 1;
inline bool MonthCardInfo::has_bmonthcardhaveover() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonthCardInfo::set_has_bmonthcardhaveover() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonthCardInfo::clear_has_bmonthcardhaveover() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonthCardInfo::clear_bmonthcardhaveover() {
  bmonthcardhaveover_ = false;
  clear_has_bmonthcardhaveover();
}
inline bool MonthCardInfo::bmonthcardhaveover() const {
  return bmonthcardhaveover_;
}
inline void MonthCardInfo::set_bmonthcardhaveover(bool value) {
  set_has_bmonthcardhaveover();
  bmonthcardhaveover_ = value;
}

// required bool bTodayHaveGet = 2;
inline bool MonthCardInfo::has_btodayhaveget() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MonthCardInfo::set_has_btodayhaveget() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MonthCardInfo::clear_has_btodayhaveget() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MonthCardInfo::clear_btodayhaveget() {
  btodayhaveget_ = false;
  clear_has_btodayhaveget();
}
inline bool MonthCardInfo::btodayhaveget() const {
  return btodayhaveget_;
}
inline void MonthCardInfo::set_btodayhaveget(bool value) {
  set_has_btodayhaveget();
  btodayhaveget_ = value;
}

// required int32 iRemaindTimes = 3;
inline bool MonthCardInfo::has_iremaindtimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MonthCardInfo::set_has_iremaindtimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MonthCardInfo::clear_has_iremaindtimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MonthCardInfo::clear_iremaindtimes() {
  iremaindtimes_ = 0;
  clear_has_iremaindtimes();
}
inline ::google::protobuf::int32 MonthCardInfo::iremaindtimes() const {
  return iremaindtimes_;
}
inline void MonthCardInfo::set_iremaindtimes(::google::protobuf::int32 value) {
  set_has_iremaindtimes();
  iremaindtimes_ = value;
}

// -------------------------------------------------------------------

// CMD_TASK_QUERY_TASKINFO_SC

// required .GSProto.enTaskType type = 1;
inline bool CMD_TASK_QUERY_TASKINFO_SC::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_TASK_QUERY_TASKINFO_SC::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_TASK_QUERY_TASKINFO_SC::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_TASK_QUERY_TASKINFO_SC::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::GSProto::enTaskType CMD_TASK_QUERY_TASKINFO_SC::type() const {
  return static_cast< ::GSProto::enTaskType >(type_);
}
inline void CMD_TASK_QUERY_TASKINFO_SC::set_type(::GSProto::enTaskType value) {
  assert(::GSProto::enTaskType_IsValid(value));
  set_has_type();
  type_ = value;
}

// repeated .GSProto.TaskDetail szTaskDetail = 2;
inline int CMD_TASK_QUERY_TASKINFO_SC::sztaskdetail_size() const {
  return sztaskdetail_.size();
}
inline void CMD_TASK_QUERY_TASKINFO_SC::clear_sztaskdetail() {
  sztaskdetail_.Clear();
}
inline const ::GSProto::TaskDetail& CMD_TASK_QUERY_TASKINFO_SC::sztaskdetail(int index) const {
  return sztaskdetail_.Get(index);
}
inline ::GSProto::TaskDetail* CMD_TASK_QUERY_TASKINFO_SC::mutable_sztaskdetail(int index) {
  return sztaskdetail_.Mutable(index);
}
inline ::GSProto::TaskDetail* CMD_TASK_QUERY_TASKINFO_SC::add_sztaskdetail() {
  return sztaskdetail_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::TaskDetail >&
CMD_TASK_QUERY_TASKINFO_SC::sztaskdetail() const {
  return sztaskdetail_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::TaskDetail >*
CMD_TASK_QUERY_TASKINFO_SC::mutable_sztaskdetail() {
  return &sztaskdetail_;
}

// required bool bVigorHaveGet = 3;
inline bool CMD_TASK_QUERY_TASKINFO_SC::has_bvigorhaveget() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_TASK_QUERY_TASKINFO_SC::set_has_bvigorhaveget() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_TASK_QUERY_TASKINFO_SC::clear_has_bvigorhaveget() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_TASK_QUERY_TASKINFO_SC::clear_bvigorhaveget() {
  bvigorhaveget_ = false;
  clear_has_bvigorhaveget();
}
inline bool CMD_TASK_QUERY_TASKINFO_SC::bvigorhaveget() const {
  return bvigorhaveget_;
}
inline void CMD_TASK_QUERY_TASKINFO_SC::set_bvigorhaveget(bool value) {
  set_has_bvigorhaveget();
  bvigorhaveget_ = value;
}

// required .GSProto.MonthCardInfo monthcardInfo = 4;
inline bool CMD_TASK_QUERY_TASKINFO_SC::has_monthcardinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_TASK_QUERY_TASKINFO_SC::set_has_monthcardinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_TASK_QUERY_TASKINFO_SC::clear_has_monthcardinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_TASK_QUERY_TASKINFO_SC::clear_monthcardinfo() {
  if (monthcardinfo_ != NULL) monthcardinfo_->::GSProto::MonthCardInfo::Clear();
  clear_has_monthcardinfo();
}
inline const ::GSProto::MonthCardInfo& CMD_TASK_QUERY_TASKINFO_SC::monthcardinfo() const {
  return monthcardinfo_ != NULL ? *monthcardinfo_ : *default_instance_->monthcardinfo_;
}
inline ::GSProto::MonthCardInfo* CMD_TASK_QUERY_TASKINFO_SC::mutable_monthcardinfo() {
  set_has_monthcardinfo();
  if (monthcardinfo_ == NULL) monthcardinfo_ = new ::GSProto::MonthCardInfo;
  return monthcardinfo_;
}
inline ::GSProto::MonthCardInfo* CMD_TASK_QUERY_TASKINFO_SC::release_monthcardinfo() {
  clear_has_monthcardinfo();
  ::GSProto::MonthCardInfo* temp = monthcardinfo_;
  monthcardinfo_ = NULL;
  return temp;
}
inline void CMD_TASK_QUERY_TASKINFO_SC::set_allocated_monthcardinfo(::GSProto::MonthCardInfo* monthcardinfo) {
  delete monthcardinfo_;
  monthcardinfo_ = monthcardinfo;
  if (monthcardinfo) {
    set_has_monthcardinfo();
  } else {
    clear_has_monthcardinfo();
  }
}

// -------------------------------------------------------------------

// CMD_TASK_GET_REWARD_CS

// required int32 iTaskId = 1;
inline bool CMD_TASK_GET_REWARD_CS::has_itaskid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_TASK_GET_REWARD_CS::set_has_itaskid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_TASK_GET_REWARD_CS::clear_has_itaskid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_TASK_GET_REWARD_CS::clear_itaskid() {
  itaskid_ = 0;
  clear_has_itaskid();
}
inline ::google::protobuf::int32 CMD_TASK_GET_REWARD_CS::itaskid() const {
  return itaskid_;
}
inline void CMD_TASK_GET_REWARD_CS::set_itaskid(::google::protobuf::int32 value) {
  set_has_itaskid();
  itaskid_ = value;
}

// required .GSProto.enTaskType type = 2;
inline bool CMD_TASK_GET_REWARD_CS::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_TASK_GET_REWARD_CS::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_TASK_GET_REWARD_CS::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_TASK_GET_REWARD_CS::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::GSProto::enTaskType CMD_TASK_GET_REWARD_CS::type() const {
  return static_cast< ::GSProto::enTaskType >(type_);
}
inline void CMD_TASK_GET_REWARD_CS::set_type(::GSProto::enTaskType value) {
  assert(::GSProto::enTaskType_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// CMD_FIGHT_USEACTORSKILL_CS

// required int32 iActionIndex = 1;
inline bool CMD_FIGHT_USEACTORSKILL_CS::has_iactionindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_FIGHT_USEACTORSKILL_CS::set_has_iactionindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_FIGHT_USEACTORSKILL_CS::clear_has_iactionindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_FIGHT_USEACTORSKILL_CS::clear_iactionindex() {
  iactionindex_ = 0;
  clear_has_iactionindex();
}
inline ::google::protobuf::int32 CMD_FIGHT_USEACTORSKILL_CS::iactionindex() const {
  return iactionindex_;
}
inline void CMD_FIGHT_USEACTORSKILL_CS::set_iactionindex(::google::protobuf::int32 value) {
  set_has_iactionindex();
  iactionindex_ = value;
}

// required int32 iResultSetIndex = 2;
inline bool CMD_FIGHT_USEACTORSKILL_CS::has_iresultsetindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_FIGHT_USEACTORSKILL_CS::set_has_iresultsetindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_FIGHT_USEACTORSKILL_CS::clear_has_iresultsetindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_FIGHT_USEACTORSKILL_CS::clear_iresultsetindex() {
  iresultsetindex_ = 0;
  clear_has_iresultsetindex();
}
inline ::google::protobuf::int32 CMD_FIGHT_USEACTORSKILL_CS::iresultsetindex() const {
  return iresultsetindex_;
}
inline void CMD_FIGHT_USEACTORSKILL_CS::set_iresultsetindex(::google::protobuf::int32 value) {
  set_has_iresultsetindex();
  iresultsetindex_ = value;
}

// required bool bPost = 3;
inline bool CMD_FIGHT_USEACTORSKILL_CS::has_bpost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_FIGHT_USEACTORSKILL_CS::set_has_bpost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_FIGHT_USEACTORSKILL_CS::clear_has_bpost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_FIGHT_USEACTORSKILL_CS::clear_bpost() {
  bpost_ = false;
  clear_has_bpost();
}
inline bool CMD_FIGHT_USEACTORSKILL_CS::bpost() const {
  return bpost_;
}
inline void CMD_FIGHT_USEACTORSKILL_CS::set_bpost(bool value) {
  set_has_bpost();
  bpost_ = value;
}

// required int32 iActorSkillID = 4;
inline bool CMD_FIGHT_USEACTORSKILL_CS::has_iactorskillid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_FIGHT_USEACTORSKILL_CS::set_has_iactorskillid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_FIGHT_USEACTORSKILL_CS::clear_has_iactorskillid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_FIGHT_USEACTORSKILL_CS::clear_iactorskillid() {
  iactorskillid_ = 0;
  clear_has_iactorskillid();
}
inline ::google::protobuf::int32 CMD_FIGHT_USEACTORSKILL_CS::iactorskillid() const {
  return iactorskillid_;
}
inline void CMD_FIGHT_USEACTORSKILL_CS::set_iactorskillid(::google::protobuf::int32 value) {
  set_has_iactorskillid();
  iactorskillid_ = value;
}

// -------------------------------------------------------------------

// CMD_FIGHT_USEACTORSKILL_SC

// required bool bUseSuccess = 1;
inline bool CMD_FIGHT_USEACTORSKILL_SC::has_busesuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_FIGHT_USEACTORSKILL_SC::set_has_busesuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_FIGHT_USEACTORSKILL_SC::clear_has_busesuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_FIGHT_USEACTORSKILL_SC::clear_busesuccess() {
  busesuccess_ = false;
  clear_has_busesuccess();
}
inline bool CMD_FIGHT_USEACTORSKILL_SC::busesuccess() const {
  return busesuccess_;
}
inline void CMD_FIGHT_USEACTORSKILL_SC::set_busesuccess(bool value) {
  set_has_busesuccess();
  busesuccess_ = value;
}

// -------------------------------------------------------------------

// GodAnimalSoulUnit

// required int32 iAnimalSoulID = 1;
inline bool GodAnimalSoulUnit::has_ianimalsoulid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GodAnimalSoulUnit::set_has_ianimalsoulid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GodAnimalSoulUnit::clear_has_ianimalsoulid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GodAnimalSoulUnit::clear_ianimalsoulid() {
  ianimalsoulid_ = 0;
  clear_has_ianimalsoulid();
}
inline ::google::protobuf::int32 GodAnimalSoulUnit::ianimalsoulid() const {
  return ianimalsoulid_;
}
inline void GodAnimalSoulUnit::set_ianimalsoulid(::google::protobuf::int32 value) {
  set_has_ianimalsoulid();
  ianimalsoulid_ = value;
}

// required .GSProto.PropItem price = 2;
inline bool GodAnimalSoulUnit::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GodAnimalSoulUnit::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GodAnimalSoulUnit::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GodAnimalSoulUnit::clear_price() {
  if (price_ != NULL) price_->::GSProto::PropItem::Clear();
  clear_has_price();
}
inline const ::GSProto::PropItem& GodAnimalSoulUnit::price() const {
  return price_ != NULL ? *price_ : *default_instance_->price_;
}
inline ::GSProto::PropItem* GodAnimalSoulUnit::mutable_price() {
  set_has_price();
  if (price_ == NULL) price_ = new ::GSProto::PropItem;
  return price_;
}
inline ::GSProto::PropItem* GodAnimalSoulUnit::release_price() {
  clear_has_price();
  ::GSProto::PropItem* temp = price_;
  price_ = NULL;
  return temp;
}
inline void GodAnimalSoulUnit::set_allocated_price(::GSProto::PropItem* price) {
  delete price_;
  price_ = price;
  if (price) {
    set_has_price();
  } else {
    clear_has_price();
  }
}

// -------------------------------------------------------------------

// CMD_GODANIMAL_ANIMALSOUL_QUERY_SC

// repeated .GSProto.GodAnimalSoulUnit szUnit = 1;
inline int CMD_GODANIMAL_ANIMALSOUL_QUERY_SC::szunit_size() const {
  return szunit_.size();
}
inline void CMD_GODANIMAL_ANIMALSOUL_QUERY_SC::clear_szunit() {
  szunit_.Clear();
}
inline const ::GSProto::GodAnimalSoulUnit& CMD_GODANIMAL_ANIMALSOUL_QUERY_SC::szunit(int index) const {
  return szunit_.Get(index);
}
inline ::GSProto::GodAnimalSoulUnit* CMD_GODANIMAL_ANIMALSOUL_QUERY_SC::mutable_szunit(int index) {
  return szunit_.Mutable(index);
}
inline ::GSProto::GodAnimalSoulUnit* CMD_GODANIMAL_ANIMALSOUL_QUERY_SC::add_szunit() {
  return szunit_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::GodAnimalSoulUnit >&
CMD_GODANIMAL_ANIMALSOUL_QUERY_SC::szunit() const {
  return szunit_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::GodAnimalSoulUnit >*
CMD_GODANIMAL_ANIMALSOUL_QUERY_SC::mutable_szunit() {
  return &szunit_;
}

// -------------------------------------------------------------------

// CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS

// required int32 iAnimalSoulID = 1;
inline bool CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS::has_ianimalsoulid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS::set_has_ianimalsoulid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS::clear_has_ianimalsoulid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS::clear_ianimalsoulid() {
  ianimalsoulid_ = 0;
  clear_has_ianimalsoulid();
}
inline ::google::protobuf::int32 CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS::ianimalsoulid() const {
  return ianimalsoulid_;
}
inline void CMD_GODANIMAL_ANIMALSOUL_ACTIVE_CS::set_ianimalsoulid(::google::protobuf::int32 value) {
  set_has_ianimalsoulid();
  ianimalsoulid_ = value;
}

// -------------------------------------------------------------------

// CMD_GODANIMAL_ANIMALSOUL_SELL_CS

// required int32 iAnimalSoulID = 1;
inline bool CMD_GODANIMAL_ANIMALSOUL_SELL_CS::has_ianimalsoulid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GODANIMAL_ANIMALSOUL_SELL_CS::set_has_ianimalsoulid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GODANIMAL_ANIMALSOUL_SELL_CS::clear_has_ianimalsoulid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GODANIMAL_ANIMALSOUL_SELL_CS::clear_ianimalsoulid() {
  ianimalsoulid_ = 0;
  clear_has_ianimalsoulid();
}
inline ::google::protobuf::int32 CMD_GODANIMAL_ANIMALSOUL_SELL_CS::ianimalsoulid() const {
  return ianimalsoulid_;
}
inline void CMD_GODANIMAL_ANIMALSOUL_SELL_CS::set_ianimalsoulid(::google::protobuf::int32 value) {
  set_has_ianimalsoulid();
  ianimalsoulid_ = value;
}

// -------------------------------------------------------------------

// CMD_NEWPASS_SECTION_SC

// required int32 iPassedSectionID = 1;
inline bool CMD_NEWPASS_SECTION_SC::has_ipassedsectionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_NEWPASS_SECTION_SC::set_has_ipassedsectionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_NEWPASS_SECTION_SC::clear_has_ipassedsectionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_NEWPASS_SECTION_SC::clear_ipassedsectionid() {
  ipassedsectionid_ = 0;
  clear_has_ipassedsectionid();
}
inline ::google::protobuf::int32 CMD_NEWPASS_SECTION_SC::ipassedsectionid() const {
  return ipassedsectionid_;
}
inline void CMD_NEWPASS_SECTION_SC::set_ipassedsectionid(::google::protobuf::int32 value) {
  set_has_ipassedsectionid();
  ipassedsectionid_ = value;
}

// -------------------------------------------------------------------

// CMD_HEROSYSTEM_SELLHERO_CS

// required int32 iHeroID = 1;
inline bool CMD_HEROSYSTEM_SELLHERO_CS::has_iheroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_HEROSYSTEM_SELLHERO_CS::set_has_iheroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_HEROSYSTEM_SELLHERO_CS::clear_has_iheroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_HEROSYSTEM_SELLHERO_CS::clear_iheroid() {
  iheroid_ = 0;
  clear_has_iheroid();
}
inline ::google::protobuf::int32 CMD_HEROSYSTEM_SELLHERO_CS::iheroid() const {
  return iheroid_;
}
inline void CMD_HEROSYSTEM_SELLHERO_CS::set_iheroid(::google::protobuf::int32 value) {
  set_has_iheroid();
  iheroid_ = value;
}

// required int32 iSoulCount = 2;
inline bool CMD_HEROSYSTEM_SELLHERO_CS::has_isoulcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_HEROSYSTEM_SELLHERO_CS::set_has_isoulcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_HEROSYSTEM_SELLHERO_CS::clear_has_isoulcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_HEROSYSTEM_SELLHERO_CS::clear_isoulcount() {
  isoulcount_ = 0;
  clear_has_isoulcount();
}
inline ::google::protobuf::int32 CMD_HEROSYSTEM_SELLHERO_CS::isoulcount() const {
  return isoulcount_;
}
inline void CMD_HEROSYSTEM_SELLHERO_CS::set_isoulcount(::google::protobuf::int32 value) {
  set_has_isoulcount();
  isoulcount_ = value;
}

// -------------------------------------------------------------------

// EquipInfo

// required uint32 dwObjectID = 1;
inline bool EquipInfo::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipInfo::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipInfo::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipInfo::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 EquipInfo::dwobjectid() const {
  return dwobjectid_;
}
inline void EquipInfo::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// required int32 iItemID = 2;
inline bool EquipInfo::has_iitemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipInfo::set_has_iitemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipInfo::clear_has_iitemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipInfo::clear_iitemid() {
  iitemid_ = 0;
  clear_has_iitemid();
}
inline ::google::protobuf::int32 EquipInfo::iitemid() const {
  return iitemid_;
}
inline void EquipInfo::set_iitemid(::google::protobuf::int32 value) {
  set_has_iitemid();
  iitemid_ = value;
}

// required int32 iPos = 3;
inline bool EquipInfo::has_ipos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipInfo::set_has_ipos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipInfo::clear_has_ipos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipInfo::clear_ipos() {
  ipos_ = 0;
  clear_has_ipos();
}
inline ::google::protobuf::int32 EquipInfo::ipos() const {
  return ipos_;
}
inline void EquipInfo::set_ipos(::google::protobuf::int32 value) {
  set_has_ipos();
  ipos_ = value;
}

// repeated .GSProto.PropItem szBasePropList = 4;
inline int EquipInfo::szbaseproplist_size() const {
  return szbaseproplist_.size();
}
inline void EquipInfo::clear_szbaseproplist() {
  szbaseproplist_.Clear();
}
inline const ::GSProto::PropItem& EquipInfo::szbaseproplist(int index) const {
  return szbaseproplist_.Get(index);
}
inline ::GSProto::PropItem* EquipInfo::mutable_szbaseproplist(int index) {
  return szbaseproplist_.Mutable(index);
}
inline ::GSProto::PropItem* EquipInfo::add_szbaseproplist() {
  return szbaseproplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
EquipInfo::szbaseproplist() const {
  return szbaseproplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
EquipInfo::mutable_szbaseproplist() {
  return &szbaseproplist_;
}

// repeated .GSProto.PropItem szSpecialPropList = 5;
inline int EquipInfo::szspecialproplist_size() const {
  return szspecialproplist_.size();
}
inline void EquipInfo::clear_szspecialproplist() {
  szspecialproplist_.Clear();
}
inline const ::GSProto::PropItem& EquipInfo::szspecialproplist(int index) const {
  return szspecialproplist_.Get(index);
}
inline ::GSProto::PropItem* EquipInfo::mutable_szspecialproplist(int index) {
  return szspecialproplist_.Mutable(index);
}
inline ::GSProto::PropItem* EquipInfo::add_szspecialproplist() {
  return szspecialproplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
EquipInfo::szspecialproplist() const {
  return szspecialproplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
EquipInfo::mutable_szspecialproplist() {
  return &szspecialproplist_;
}

// repeated .GSProto.PropItem xilianPropList = 6;
inline int EquipInfo::xilianproplist_size() const {
  return xilianproplist_.size();
}
inline void EquipInfo::clear_xilianproplist() {
  xilianproplist_.Clear();
}
inline const ::GSProto::PropItem& EquipInfo::xilianproplist(int index) const {
  return xilianproplist_.Get(index);
}
inline ::GSProto::PropItem* EquipInfo::mutable_xilianproplist(int index) {
  return xilianproplist_.Mutable(index);
}
inline ::GSProto::PropItem* EquipInfo::add_xilianproplist() {
  return xilianproplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
EquipInfo::xilianproplist() const {
  return xilianproplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
EquipInfo::mutable_xilianproplist() {
  return &xilianproplist_;
}

// optional int32 iSuitID = 7;
inline bool EquipInfo::has_isuitid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EquipInfo::set_has_isuitid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EquipInfo::clear_has_isuitid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EquipInfo::clear_isuitid() {
  isuitid_ = 0;
  clear_has_isuitid();
}
inline ::google::protobuf::int32 EquipInfo::isuitid() const {
  return isuitid_;
}
inline void EquipInfo::set_isuitid(::google::protobuf::int32 value) {
  set_has_isuitid();
  isuitid_ = value;
}

// optional int32 iSellMoney = 8;
inline bool EquipInfo::has_isellmoney() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void EquipInfo::set_has_isellmoney() {
  _has_bits_[0] |= 0x00000080u;
}
inline void EquipInfo::clear_has_isellmoney() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void EquipInfo::clear_isellmoney() {
  isellmoney_ = 0;
  clear_has_isellmoney();
}
inline ::google::protobuf::int32 EquipInfo::isellmoney() const {
  return isellmoney_;
}
inline void EquipInfo::set_isellmoney(::google::protobuf::int32 value) {
  set_has_isellmoney();
  isellmoney_ = value;
}

// optional int32 iEquipLevel = 9;
inline bool EquipInfo::has_iequiplevel() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void EquipInfo::set_has_iequiplevel() {
  _has_bits_[0] |= 0x00000100u;
}
inline void EquipInfo::clear_has_iequiplevel() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void EquipInfo::clear_iequiplevel() {
  iequiplevel_ = 0;
  clear_has_iequiplevel();
}
inline ::google::protobuf::int32 EquipInfo::iequiplevel() const {
  return iequiplevel_;
}
inline void EquipInfo::set_iequiplevel(::google::protobuf::int32 value) {
  set_has_iequiplevel();
  iequiplevel_ = value;
}

// optional .GSProto.PropItem equipRandomProp = 10;
inline bool EquipInfo::has_equiprandomprop() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void EquipInfo::set_has_equiprandomprop() {
  _has_bits_[0] |= 0x00000200u;
}
inline void EquipInfo::clear_has_equiprandomprop() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void EquipInfo::clear_equiprandomprop() {
  if (equiprandomprop_ != NULL) equiprandomprop_->::GSProto::PropItem::Clear();
  clear_has_equiprandomprop();
}
inline const ::GSProto::PropItem& EquipInfo::equiprandomprop() const {
  return equiprandomprop_ != NULL ? *equiprandomprop_ : *default_instance_->equiprandomprop_;
}
inline ::GSProto::PropItem* EquipInfo::mutable_equiprandomprop() {
  set_has_equiprandomprop();
  if (equiprandomprop_ == NULL) equiprandomprop_ = new ::GSProto::PropItem;
  return equiprandomprop_;
}
inline ::GSProto::PropItem* EquipInfo::release_equiprandomprop() {
  clear_has_equiprandomprop();
  ::GSProto::PropItem* temp = equiprandomprop_;
  equiprandomprop_ = NULL;
  return temp;
}
inline void EquipInfo::set_allocated_equiprandomprop(::GSProto::PropItem* equiprandomprop) {
  delete equiprandomprop_;
  equiprandomprop_ = equiprandomprop;
  if (equiprandomprop) {
    set_has_equiprandomprop();
  } else {
    clear_has_equiprandomprop();
  }
}

// -------------------------------------------------------------------

// EquipSuitState

// required int32 iSuitID = 1;
inline bool EquipSuitState::has_isuitid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipSuitState::set_has_isuitid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipSuitState::clear_has_isuitid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipSuitState::clear_isuitid() {
  isuitid_ = 0;
  clear_has_isuitid();
}
inline ::google::protobuf::int32 EquipSuitState::isuitid() const {
  return isuitid_;
}
inline void EquipSuitState::set_isuitid(::google::protobuf::int32 value) {
  set_has_isuitid();
  isuitid_ = value;
}

// required sint32 iActiveCount = 2;
inline bool EquipSuitState::has_iactivecount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipSuitState::set_has_iactivecount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipSuitState::clear_has_iactivecount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipSuitState::clear_iactivecount() {
  iactivecount_ = 0;
  clear_has_iactivecount();
}
inline ::google::protobuf::int32 EquipSuitState::iactivecount() const {
  return iactivecount_;
}
inline void EquipSuitState::set_iactivecount(::google::protobuf::int32 value) {
  set_has_iactivecount();
  iactivecount_ = value;
}

// -------------------------------------------------------------------

// CMD_HERO_COVERT_OPEN_SC

// required .GSProto.COVERHEROVIEM iOpenId = 1;
inline bool CMD_HERO_COVERT_OPEN_SC::has_iopenid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_HERO_COVERT_OPEN_SC::set_has_iopenid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_HERO_COVERT_OPEN_SC::clear_has_iopenid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_HERO_COVERT_OPEN_SC::clear_iopenid() {
  iopenid_ = 1;
  clear_has_iopenid();
}
inline ::GSProto::COVERHEROVIEM CMD_HERO_COVERT_OPEN_SC::iopenid() const {
  return static_cast< ::GSProto::COVERHEROVIEM >(iopenid_);
}
inline void CMD_HERO_COVERT_OPEN_SC::set_iopenid(::GSProto::COVERHEROVIEM value) {
  assert(::GSProto::COVERHEROVIEM_IsValid(value));
  set_has_iopenid();
  iopenid_ = value;
}

// -------------------------------------------------------------------

// CMD_EQUIP_BAG_SC

// repeated .GSProto.EquipInfo szEquipList = 1;
inline int CMD_EQUIP_BAG_SC::szequiplist_size() const {
  return szequiplist_.size();
}
inline void CMD_EQUIP_BAG_SC::clear_szequiplist() {
  szequiplist_.Clear();
}
inline const ::GSProto::EquipInfo& CMD_EQUIP_BAG_SC::szequiplist(int index) const {
  return szequiplist_.Get(index);
}
inline ::GSProto::EquipInfo* CMD_EQUIP_BAG_SC::mutable_szequiplist(int index) {
  return szequiplist_.Mutable(index);
}
inline ::GSProto::EquipInfo* CMD_EQUIP_BAG_SC::add_szequiplist() {
  return szequiplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::EquipInfo >&
CMD_EQUIP_BAG_SC::szequiplist() const {
  return szequiplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::EquipInfo >*
CMD_EQUIP_BAG_SC::mutable_szequiplist() {
  return &szequiplist_;
}

// -------------------------------------------------------------------

// CMD_EQUIP_SUITSTATE_UPDATE_SC

// required uint32 dwObjectID = 1;
inline bool CMD_EQUIP_SUITSTATE_UPDATE_SC::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_SUITSTATE_UPDATE_SC::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_SUITSTATE_UPDATE_SC::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_SUITSTATE_UPDATE_SC::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 CMD_EQUIP_SUITSTATE_UPDATE_SC::dwobjectid() const {
  return dwobjectid_;
}
inline void CMD_EQUIP_SUITSTATE_UPDATE_SC::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// repeated .GSProto.EquipSuitState szsuitState = 2;
inline int CMD_EQUIP_SUITSTATE_UPDATE_SC::szsuitstate_size() const {
  return szsuitstate_.size();
}
inline void CMD_EQUIP_SUITSTATE_UPDATE_SC::clear_szsuitstate() {
  szsuitstate_.Clear();
}
inline const ::GSProto::EquipSuitState& CMD_EQUIP_SUITSTATE_UPDATE_SC::szsuitstate(int index) const {
  return szsuitstate_.Get(index);
}
inline ::GSProto::EquipSuitState* CMD_EQUIP_SUITSTATE_UPDATE_SC::mutable_szsuitstate(int index) {
  return szsuitstate_.Mutable(index);
}
inline ::GSProto::EquipSuitState* CMD_EQUIP_SUITSTATE_UPDATE_SC::add_szsuitstate() {
  return szsuitstate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::EquipSuitState >&
CMD_EQUIP_SUITSTATE_UPDATE_SC::szsuitstate() const {
  return szsuitstate_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::EquipSuitState >*
CMD_EQUIP_SUITSTATE_UPDATE_SC::mutable_szsuitstate() {
  return &szsuitstate_;
}

// -------------------------------------------------------------------

// CMD_QUERY_HEROEQUIP_CS

// required uint32 dwHeroObjectID = 1;
inline bool CMD_QUERY_HEROEQUIP_CS::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_HEROEQUIP_CS::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_HEROEQUIP_CS::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_HEROEQUIP_CS::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 CMD_QUERY_HEROEQUIP_CS::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void CMD_QUERY_HEROEQUIP_CS::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_HEROEQUIP_SC

// required uint32 dwHeroObjectID = 1;
inline bool CMD_QUERY_HEROEQUIP_SC::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_HEROEQUIP_SC::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_HEROEQUIP_SC::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_HEROEQUIP_SC::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 CMD_QUERY_HEROEQUIP_SC::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void CMD_QUERY_HEROEQUIP_SC::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// repeated .GSProto.EquipInfo szEquipList = 2;
inline int CMD_QUERY_HEROEQUIP_SC::szequiplist_size() const {
  return szequiplist_.size();
}
inline void CMD_QUERY_HEROEQUIP_SC::clear_szequiplist() {
  szequiplist_.Clear();
}
inline const ::GSProto::EquipInfo& CMD_QUERY_HEROEQUIP_SC::szequiplist(int index) const {
  return szequiplist_.Get(index);
}
inline ::GSProto::EquipInfo* CMD_QUERY_HEROEQUIP_SC::mutable_szequiplist(int index) {
  return szequiplist_.Mutable(index);
}
inline ::GSProto::EquipInfo* CMD_QUERY_HEROEQUIP_SC::add_szequiplist() {
  return szequiplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::EquipInfo >&
CMD_QUERY_HEROEQUIP_SC::szequiplist() const {
  return szequiplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::EquipInfo >*
CMD_QUERY_HEROEQUIP_SC::mutable_szequiplist() {
  return &szequiplist_;
}

// repeated .GSProto.EquipSuitState szSuitStateList = 3;
inline int CMD_QUERY_HEROEQUIP_SC::szsuitstatelist_size() const {
  return szsuitstatelist_.size();
}
inline void CMD_QUERY_HEROEQUIP_SC::clear_szsuitstatelist() {
  szsuitstatelist_.Clear();
}
inline const ::GSProto::EquipSuitState& CMD_QUERY_HEROEQUIP_SC::szsuitstatelist(int index) const {
  return szsuitstatelist_.Get(index);
}
inline ::GSProto::EquipSuitState* CMD_QUERY_HEROEQUIP_SC::mutable_szsuitstatelist(int index) {
  return szsuitstatelist_.Mutable(index);
}
inline ::GSProto::EquipSuitState* CMD_QUERY_HEROEQUIP_SC::add_szsuitstatelist() {
  return szsuitstatelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::EquipSuitState >&
CMD_QUERY_HEROEQUIP_SC::szsuitstatelist() const {
  return szsuitstatelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::EquipSuitState >*
CMD_QUERY_HEROEQUIP_SC::mutable_szsuitstatelist() {
  return &szsuitstatelist_;
}

// -------------------------------------------------------------------

// EquipChgItem

// required int32 iPos = 1;
inline bool EquipChgItem::has_ipos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipChgItem::set_has_ipos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipChgItem::clear_has_ipos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipChgItem::clear_ipos() {
  ipos_ = 0;
  clear_has_ipos();
}
inline ::google::protobuf::int32 EquipChgItem::ipos() const {
  return ipos_;
}
inline void EquipChgItem::set_ipos(::google::protobuf::int32 value) {
  set_has_ipos();
  ipos_ = value;
}

// required bool bDel = 2;
inline bool EquipChgItem::has_bdel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipChgItem::set_has_bdel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipChgItem::clear_has_bdel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipChgItem::clear_bdel() {
  bdel_ = false;
  clear_has_bdel();
}
inline bool EquipChgItem::bdel() const {
  return bdel_;
}
inline void EquipChgItem::set_bdel(bool value) {
  set_has_bdel();
  bdel_ = value;
}

// optional .GSProto.EquipInfo equipData = 3;
inline bool EquipChgItem::has_equipdata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipChgItem::set_has_equipdata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipChgItem::clear_has_equipdata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipChgItem::clear_equipdata() {
  if (equipdata_ != NULL) equipdata_->::GSProto::EquipInfo::Clear();
  clear_has_equipdata();
}
inline const ::GSProto::EquipInfo& EquipChgItem::equipdata() const {
  return equipdata_ != NULL ? *equipdata_ : *default_instance_->equipdata_;
}
inline ::GSProto::EquipInfo* EquipChgItem::mutable_equipdata() {
  set_has_equipdata();
  if (equipdata_ == NULL) equipdata_ = new ::GSProto::EquipInfo;
  return equipdata_;
}
inline ::GSProto::EquipInfo* EquipChgItem::release_equipdata() {
  clear_has_equipdata();
  ::GSProto::EquipInfo* temp = equipdata_;
  equipdata_ = NULL;
  return temp;
}
inline void EquipChgItem::set_allocated_equipdata(::GSProto::EquipInfo* equipdata) {
  delete equipdata_;
  equipdata_ = equipdata;
  if (equipdata) {
    set_has_equipdata();
  } else {
    clear_has_equipdata();
  }
}

// -------------------------------------------------------------------

// CMD_EQUIP_MOVE_CS

// required uint32 dwSrcObjectID = 1;
inline bool CMD_EQUIP_MOVE_CS::has_dwsrcobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_MOVE_CS::set_has_dwsrcobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_MOVE_CS::clear_has_dwsrcobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_MOVE_CS::clear_dwsrcobjectid() {
  dwsrcobjectid_ = 0u;
  clear_has_dwsrcobjectid();
}
inline ::google::protobuf::uint32 CMD_EQUIP_MOVE_CS::dwsrcobjectid() const {
  return dwsrcobjectid_;
}
inline void CMD_EQUIP_MOVE_CS::set_dwsrcobjectid(::google::protobuf::uint32 value) {
  set_has_dwsrcobjectid();
  dwsrcobjectid_ = value;
}

// required uint32 dwDstObjectID = 2;
inline bool CMD_EQUIP_MOVE_CS::has_dwdstobjectid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_EQUIP_MOVE_CS::set_has_dwdstobjectid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_EQUIP_MOVE_CS::clear_has_dwdstobjectid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_EQUIP_MOVE_CS::clear_dwdstobjectid() {
  dwdstobjectid_ = 0u;
  clear_has_dwdstobjectid();
}
inline ::google::protobuf::uint32 CMD_EQUIP_MOVE_CS::dwdstobjectid() const {
  return dwdstobjectid_;
}
inline void CMD_EQUIP_MOVE_CS::set_dwdstobjectid(::google::protobuf::uint32 value) {
  set_has_dwdstobjectid();
  dwdstobjectid_ = value;
}

// required sint32 iSrcPos = 3;
inline bool CMD_EQUIP_MOVE_CS::has_isrcpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_EQUIP_MOVE_CS::set_has_isrcpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_EQUIP_MOVE_CS::clear_has_isrcpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_EQUIP_MOVE_CS::clear_isrcpos() {
  isrcpos_ = 0;
  clear_has_isrcpos();
}
inline ::google::protobuf::int32 CMD_EQUIP_MOVE_CS::isrcpos() const {
  return isrcpos_;
}
inline void CMD_EQUIP_MOVE_CS::set_isrcpos(::google::protobuf::int32 value) {
  set_has_isrcpos();
  isrcpos_ = value;
}

// required sint32 iDstPos = 4;
inline bool CMD_EQUIP_MOVE_CS::has_idstpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_EQUIP_MOVE_CS::set_has_idstpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_EQUIP_MOVE_CS::clear_has_idstpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_EQUIP_MOVE_CS::clear_idstpos() {
  idstpos_ = 0;
  clear_has_idstpos();
}
inline ::google::protobuf::int32 CMD_EQUIP_MOVE_CS::idstpos() const {
  return idstpos_;
}
inline void CMD_EQUIP_MOVE_CS::set_idstpos(::google::protobuf::int32 value) {
  set_has_idstpos();
  idstpos_ = value;
}

// -------------------------------------------------------------------

// CMD_EQUIPCONTAINER_CHG_SC

// required uint32 dwObjectID = 1;
inline bool CMD_EQUIPCONTAINER_CHG_SC::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIPCONTAINER_CHG_SC::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIPCONTAINER_CHG_SC::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIPCONTAINER_CHG_SC::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 CMD_EQUIPCONTAINER_CHG_SC::dwobjectid() const {
  return dwobjectid_;
}
inline void CMD_EQUIPCONTAINER_CHG_SC::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// repeated .GSProto.EquipChgItem szChgList = 3;
inline int CMD_EQUIPCONTAINER_CHG_SC::szchglist_size() const {
  return szchglist_.size();
}
inline void CMD_EQUIPCONTAINER_CHG_SC::clear_szchglist() {
  szchglist_.Clear();
}
inline const ::GSProto::EquipChgItem& CMD_EQUIPCONTAINER_CHG_SC::szchglist(int index) const {
  return szchglist_.Get(index);
}
inline ::GSProto::EquipChgItem* CMD_EQUIPCONTAINER_CHG_SC::mutable_szchglist(int index) {
  return szchglist_.Mutable(index);
}
inline ::GSProto::EquipChgItem* CMD_EQUIPCONTAINER_CHG_SC::add_szchglist() {
  return szchglist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::EquipChgItem >&
CMD_EQUIPCONTAINER_CHG_SC::szchglist() const {
  return szchglist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::EquipChgItem >*
CMD_EQUIPCONTAINER_CHG_SC::mutable_szchglist() {
  return &szchglist_;
}

// -------------------------------------------------------------------

// CMD_EQUIP_SELLBYPOS_CS

// required int32 iEquipPos = 1;
inline bool CMD_EQUIP_SELLBYPOS_CS::has_iequippos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_SELLBYPOS_CS::set_has_iequippos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_SELLBYPOS_CS::clear_has_iequippos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_SELLBYPOS_CS::clear_iequippos() {
  iequippos_ = 0;
  clear_has_iequippos();
}
inline ::google::protobuf::int32 CMD_EQUIP_SELLBYPOS_CS::iequippos() const {
  return iequippos_;
}
inline void CMD_EQUIP_SELLBYPOS_CS::set_iequippos(::google::protobuf::int32 value) {
  set_has_iequippos();
  iequippos_ = value;
}

// -------------------------------------------------------------------

// CMD_EQUIP_SELLBYQUALITY_CS

// required bool bSellGreen = 1;
inline bool CMD_EQUIP_SELLBYQUALITY_CS::has_bsellgreen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_SELLBYQUALITY_CS::set_has_bsellgreen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_SELLBYQUALITY_CS::clear_has_bsellgreen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_SELLBYQUALITY_CS::clear_bsellgreen() {
  bsellgreen_ = false;
  clear_has_bsellgreen();
}
inline bool CMD_EQUIP_SELLBYQUALITY_CS::bsellgreen() const {
  return bsellgreen_;
}
inline void CMD_EQUIP_SELLBYQUALITY_CS::set_bsellgreen(bool value) {
  set_has_bsellgreen();
  bsellgreen_ = value;
}

// required bool bSellBlue = 2;
inline bool CMD_EQUIP_SELLBYQUALITY_CS::has_bsellblue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_EQUIP_SELLBYQUALITY_CS::set_has_bsellblue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_EQUIP_SELLBYQUALITY_CS::clear_has_bsellblue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_EQUIP_SELLBYQUALITY_CS::clear_bsellblue() {
  bsellblue_ = false;
  clear_has_bsellblue();
}
inline bool CMD_EQUIP_SELLBYQUALITY_CS::bsellblue() const {
  return bsellblue_;
}
inline void CMD_EQUIP_SELLBYQUALITY_CS::set_bsellblue(bool value) {
  set_has_bsellblue();
  bsellblue_ = value;
}

// required bool bSellPurple = 3;
inline bool CMD_EQUIP_SELLBYQUALITY_CS::has_bsellpurple() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_EQUIP_SELLBYQUALITY_CS::set_has_bsellpurple() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_EQUIP_SELLBYQUALITY_CS::clear_has_bsellpurple() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_EQUIP_SELLBYQUALITY_CS::clear_bsellpurple() {
  bsellpurple_ = false;
  clear_has_bsellpurple();
}
inline bool CMD_EQUIP_SELLBYQUALITY_CS::bsellpurple() const {
  return bsellpurple_;
}
inline void CMD_EQUIP_SELLBYQUALITY_CS::set_bsellpurple(bool value) {
  set_has_bsellpurple();
  bsellpurple_ = value;
}

// -------------------------------------------------------------------

// CMD_EQUIP_COMBINE_CS

// required uint32 dwSrcObjectID = 1;
inline bool CMD_EQUIP_COMBINE_CS::has_dwsrcobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_COMBINE_CS::set_has_dwsrcobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_COMBINE_CS::clear_has_dwsrcobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_COMBINE_CS::clear_dwsrcobjectid() {
  dwsrcobjectid_ = 0u;
  clear_has_dwsrcobjectid();
}
inline ::google::protobuf::uint32 CMD_EQUIP_COMBINE_CS::dwsrcobjectid() const {
  return dwsrcobjectid_;
}
inline void CMD_EQUIP_COMBINE_CS::set_dwsrcobjectid(::google::protobuf::uint32 value) {
  set_has_dwsrcobjectid();
  dwsrcobjectid_ = value;
}

// required int32 iSrcEquipPos = 2;
inline bool CMD_EQUIP_COMBINE_CS::has_isrcequippos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_EQUIP_COMBINE_CS::set_has_isrcequippos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_EQUIP_COMBINE_CS::clear_has_isrcequippos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_EQUIP_COMBINE_CS::clear_isrcequippos() {
  isrcequippos_ = 0;
  clear_has_isrcequippos();
}
inline ::google::protobuf::int32 CMD_EQUIP_COMBINE_CS::isrcequippos() const {
  return isrcequippos_;
}
inline void CMD_EQUIP_COMBINE_CS::set_isrcequippos(::google::protobuf::int32 value) {
  set_has_isrcequippos();
  isrcequippos_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_EQUIPDESC_BYID_CS

// required int32 iEquipID = 1;
inline bool CMD_QUERY_EQUIPDESC_BYID_CS::has_iequipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_EQUIPDESC_BYID_CS::set_has_iequipid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_EQUIPDESC_BYID_CS::clear_has_iequipid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_EQUIPDESC_BYID_CS::clear_iequipid() {
  iequipid_ = 0;
  clear_has_iequipid();
}
inline ::google::protobuf::int32 CMD_QUERY_EQUIPDESC_BYID_CS::iequipid() const {
  return iequipid_;
}
inline void CMD_QUERY_EQUIPDESC_BYID_CS::set_iequipid(::google::protobuf::int32 value) {
  set_has_iequipid();
  iequipid_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_EQUIPDESC_BYID_SC

// required .GSProto.EquipInfo equipData = 1;
inline bool CMD_QUERY_EQUIPDESC_BYID_SC::has_equipdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_EQUIPDESC_BYID_SC::set_has_equipdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_EQUIPDESC_BYID_SC::clear_has_equipdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_EQUIPDESC_BYID_SC::clear_equipdata() {
  if (equipdata_ != NULL) equipdata_->::GSProto::EquipInfo::Clear();
  clear_has_equipdata();
}
inline const ::GSProto::EquipInfo& CMD_QUERY_EQUIPDESC_BYID_SC::equipdata() const {
  return equipdata_ != NULL ? *equipdata_ : *default_instance_->equipdata_;
}
inline ::GSProto::EquipInfo* CMD_QUERY_EQUIPDESC_BYID_SC::mutable_equipdata() {
  set_has_equipdata();
  if (equipdata_ == NULL) equipdata_ = new ::GSProto::EquipInfo;
  return equipdata_;
}
inline ::GSProto::EquipInfo* CMD_QUERY_EQUIPDESC_BYID_SC::release_equipdata() {
  clear_has_equipdata();
  ::GSProto::EquipInfo* temp = equipdata_;
  equipdata_ = NULL;
  return temp;
}
inline void CMD_QUERY_EQUIPDESC_BYID_SC::set_allocated_equipdata(::GSProto::EquipInfo* equipdata) {
  delete equipdata_;
  equipdata_ = equipdata;
  if (equipdata) {
    set_has_equipdata();
  } else {
    clear_has_equipdata();
  }
}

// -------------------------------------------------------------------

// CMD_QUERY_EQUIPSOURCE_CS

// required int32 iEquipID = 1;
inline bool CMD_QUERY_EQUIPSOURCE_CS::has_iequipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_EQUIPSOURCE_CS::set_has_iequipid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_EQUIPSOURCE_CS::clear_has_iequipid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_EQUIPSOURCE_CS::clear_iequipid() {
  iequipid_ = 0;
  clear_has_iequipid();
}
inline ::google::protobuf::int32 CMD_QUERY_EQUIPSOURCE_CS::iequipid() const {
  return iequipid_;
}
inline void CMD_QUERY_EQUIPSOURCE_CS::set_iequipid(::google::protobuf::int32 value) {
  set_has_iequipid();
  iequipid_ = value;
}

// -------------------------------------------------------------------

// EquipSource

// required int32 iSectionID = 1;
inline bool EquipSource::has_isectionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipSource::set_has_isectionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipSource::clear_has_isectionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipSource::clear_isectionid() {
  isectionid_ = 0;
  clear_has_isectionid();
}
inline ::google::protobuf::int32 EquipSource::isectionid() const {
  return isectionid_;
}
inline void EquipSource::set_isectionid(::google::protobuf::int32 value) {
  set_has_isectionid();
  isectionid_ = value;
}

// required int32 iSceneID = 2;
inline bool EquipSource::has_isceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipSource::set_has_isceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipSource::clear_has_isceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipSource::clear_isceneid() {
  isceneid_ = 0;
  clear_has_isceneid();
}
inline ::google::protobuf::int32 EquipSource::isceneid() const {
  return isceneid_;
}
inline void EquipSource::set_isceneid(::google::protobuf::int32 value) {
  set_has_isceneid();
  isceneid_ = value;
}

// required bool bOpened = 3;
inline bool EquipSource::has_bopened() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipSource::set_has_bopened() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipSource::clear_has_bopened() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipSource::clear_bopened() {
  bopened_ = false;
  clear_has_bopened();
}
inline bool EquipSource::bopened() const {
  return bopened_;
}
inline void EquipSource::set_bopened(bool value) {
  set_has_bopened();
  bopened_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_EQUIPSOURCE_SC

// required int32 iEquipID = 1;
inline bool CMD_QUERY_EQUIPSOURCE_SC::has_iequipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_EQUIPSOURCE_SC::set_has_iequipid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_EQUIPSOURCE_SC::clear_has_iequipid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_EQUIPSOURCE_SC::clear_iequipid() {
  iequipid_ = 0;
  clear_has_iequipid();
}
inline ::google::protobuf::int32 CMD_QUERY_EQUIPSOURCE_SC::iequipid() const {
  return iequipid_;
}
inline void CMD_QUERY_EQUIPSOURCE_SC::set_iequipid(::google::protobuf::int32 value) {
  set_has_iequipid();
  iequipid_ = value;
}

// repeated .GSProto.EquipSource szEquipSource = 2;
inline int CMD_QUERY_EQUIPSOURCE_SC::szequipsource_size() const {
  return szequipsource_.size();
}
inline void CMD_QUERY_EQUIPSOURCE_SC::clear_szequipsource() {
  szequipsource_.Clear();
}
inline const ::GSProto::EquipSource& CMD_QUERY_EQUIPSOURCE_SC::szequipsource(int index) const {
  return szequipsource_.Get(index);
}
inline ::GSProto::EquipSource* CMD_QUERY_EQUIPSOURCE_SC::mutable_szequipsource(int index) {
  return szequipsource_.Mutable(index);
}
inline ::GSProto::EquipSource* CMD_QUERY_EQUIPSOURCE_SC::add_szequipsource() {
  return szequipsource_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::EquipSource >&
CMD_QUERY_EQUIPSOURCE_SC::szequipsource() const {
  return szequipsource_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::EquipSource >*
CMD_QUERY_EQUIPSOURCE_SC::mutable_szequipsource() {
  return &szequipsource_;
}

// optional string strSpecialSource = 3;
inline bool CMD_QUERY_EQUIPSOURCE_SC::has_strspecialsource() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_QUERY_EQUIPSOURCE_SC::set_has_strspecialsource() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_QUERY_EQUIPSOURCE_SC::clear_has_strspecialsource() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_QUERY_EQUIPSOURCE_SC::clear_strspecialsource() {
  if (strspecialsource_ != &::google::protobuf::internal::kEmptyString) {
    strspecialsource_->clear();
  }
  clear_has_strspecialsource();
}
inline const ::std::string& CMD_QUERY_EQUIPSOURCE_SC::strspecialsource() const {
  return *strspecialsource_;
}
inline void CMD_QUERY_EQUIPSOURCE_SC::set_strspecialsource(const ::std::string& value) {
  set_has_strspecialsource();
  if (strspecialsource_ == &::google::protobuf::internal::kEmptyString) {
    strspecialsource_ = new ::std::string;
  }
  strspecialsource_->assign(value);
}
inline void CMD_QUERY_EQUIPSOURCE_SC::set_strspecialsource(const char* value) {
  set_has_strspecialsource();
  if (strspecialsource_ == &::google::protobuf::internal::kEmptyString) {
    strspecialsource_ = new ::std::string;
  }
  strspecialsource_->assign(value);
}
inline void CMD_QUERY_EQUIPSOURCE_SC::set_strspecialsource(const char* value, size_t size) {
  set_has_strspecialsource();
  if (strspecialsource_ == &::google::protobuf::internal::kEmptyString) {
    strspecialsource_ = new ::std::string;
  }
  strspecialsource_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_QUERY_EQUIPSOURCE_SC::mutable_strspecialsource() {
  set_has_strspecialsource();
  if (strspecialsource_ == &::google::protobuf::internal::kEmptyString) {
    strspecialsource_ = new ::std::string;
  }
  return strspecialsource_;
}
inline ::std::string* CMD_QUERY_EQUIPSOURCE_SC::release_strspecialsource() {
  clear_has_strspecialsource();
  if (strspecialsource_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strspecialsource_;
    strspecialsource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_QUERY_EQUIPSOURCE_SC::set_allocated_strspecialsource(::std::string* strspecialsource) {
  if (strspecialsource_ != &::google::protobuf::internal::kEmptyString) {
    delete strspecialsource_;
  }
  if (strspecialsource) {
    set_has_strspecialsource();
    strspecialsource_ = strspecialsource;
  } else {
    clear_has_strspecialsource();
    strspecialsource_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_DELETE_HEROS_SC

// repeated int32 szHeroObjecetId = 1;
inline int CMD_DELETE_HEROS_SC::szheroobjecetid_size() const {
  return szheroobjecetid_.size();
}
inline void CMD_DELETE_HEROS_SC::clear_szheroobjecetid() {
  szheroobjecetid_.Clear();
}
inline ::google::protobuf::int32 CMD_DELETE_HEROS_SC::szheroobjecetid(int index) const {
  return szheroobjecetid_.Get(index);
}
inline void CMD_DELETE_HEROS_SC::set_szheroobjecetid(int index, ::google::protobuf::int32 value) {
  szheroobjecetid_.Set(index, value);
}
inline void CMD_DELETE_HEROS_SC::add_szheroobjecetid(::google::protobuf::int32 value) {
  szheroobjecetid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CMD_DELETE_HEROS_SC::szheroobjecetid() const {
  return szheroobjecetid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CMD_DELETE_HEROS_SC::mutable_szheroobjecetid() {
  return &szheroobjecetid_;
}

// -------------------------------------------------------------------

// CMD_EQUIP_QUERYENHANCE_CS

// required uint32 dwHeroObjectID = 1;
inline bool CMD_EQUIP_QUERYENHANCE_CS::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_QUERYENHANCE_CS::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_QUERYENHANCE_CS::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_QUERYENHANCE_CS::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 CMD_EQUIP_QUERYENHANCE_CS::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void CMD_EQUIP_QUERYENHANCE_CS::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// required int32 iEquipPos = 2;
inline bool CMD_EQUIP_QUERYENHANCE_CS::has_iequippos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_EQUIP_QUERYENHANCE_CS::set_has_iequippos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_EQUIP_QUERYENHANCE_CS::clear_has_iequippos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_EQUIP_QUERYENHANCE_CS::clear_iequippos() {
  iequippos_ = 0;
  clear_has_iequippos();
}
inline ::google::protobuf::int32 CMD_EQUIP_QUERYENHANCE_CS::iequippos() const {
  return iequippos_;
}
inline void CMD_EQUIP_QUERYENHANCE_CS::set_iequippos(::google::protobuf::int32 value) {
  set_has_iequippos();
  iequippos_ = value;
}

// -------------------------------------------------------------------

// CMD_EQUIP_QUERYENHANCE_SC

// required uint32 dwHeroObjectID = 1;
inline bool CMD_EQUIP_QUERYENHANCE_SC::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_QUERYENHANCE_SC::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_QUERYENHANCE_SC::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_QUERYENHANCE_SC::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 CMD_EQUIP_QUERYENHANCE_SC::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void CMD_EQUIP_QUERYENHANCE_SC::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// required int32 iEquipPos = 2;
inline bool CMD_EQUIP_QUERYENHANCE_SC::has_iequippos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_EQUIP_QUERYENHANCE_SC::set_has_iequippos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_EQUIP_QUERYENHANCE_SC::clear_has_iequippos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_EQUIP_QUERYENHANCE_SC::clear_iequippos() {
  iequippos_ = 0;
  clear_has_iequippos();
}
inline ::google::protobuf::int32 CMD_EQUIP_QUERYENHANCE_SC::iequippos() const {
  return iequippos_;
}
inline void CMD_EQUIP_QUERYENHANCE_SC::set_iequippos(::google::protobuf::int32 value) {
  set_has_iequippos();
  iequippos_ = value;
}

// required int32 iCurLevel = 3;
inline bool CMD_EQUIP_QUERYENHANCE_SC::has_icurlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_EQUIP_QUERYENHANCE_SC::set_has_icurlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_EQUIP_QUERYENHANCE_SC::clear_has_icurlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_EQUIP_QUERYENHANCE_SC::clear_icurlevel() {
  icurlevel_ = 0;
  clear_has_icurlevel();
}
inline ::google::protobuf::int32 CMD_EQUIP_QUERYENHANCE_SC::icurlevel() const {
  return icurlevel_;
}
inline void CMD_EQUIP_QUERYENHANCE_SC::set_icurlevel(::google::protobuf::int32 value) {
  set_has_icurlevel();
  icurlevel_ = value;
}

// required int32 iNextLevel = 4;
inline bool CMD_EQUIP_QUERYENHANCE_SC::has_inextlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_EQUIP_QUERYENHANCE_SC::set_has_inextlevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_EQUIP_QUERYENHANCE_SC::clear_has_inextlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_EQUIP_QUERYENHANCE_SC::clear_inextlevel() {
  inextlevel_ = 0;
  clear_has_inextlevel();
}
inline ::google::protobuf::int32 CMD_EQUIP_QUERYENHANCE_SC::inextlevel() const {
  return inextlevel_;
}
inline void CMD_EQUIP_QUERYENHANCE_SC::set_inextlevel(::google::protobuf::int32 value) {
  set_has_inextlevel();
  inextlevel_ = value;
}

// repeated .GSProto.PropItem szCurPropList = 5;
inline int CMD_EQUIP_QUERYENHANCE_SC::szcurproplist_size() const {
  return szcurproplist_.size();
}
inline void CMD_EQUIP_QUERYENHANCE_SC::clear_szcurproplist() {
  szcurproplist_.Clear();
}
inline const ::GSProto::PropItem& CMD_EQUIP_QUERYENHANCE_SC::szcurproplist(int index) const {
  return szcurproplist_.Get(index);
}
inline ::GSProto::PropItem* CMD_EQUIP_QUERYENHANCE_SC::mutable_szcurproplist(int index) {
  return szcurproplist_.Mutable(index);
}
inline ::GSProto::PropItem* CMD_EQUIP_QUERYENHANCE_SC::add_szcurproplist() {
  return szcurproplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
CMD_EQUIP_QUERYENHANCE_SC::szcurproplist() const {
  return szcurproplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
CMD_EQUIP_QUERYENHANCE_SC::mutable_szcurproplist() {
  return &szcurproplist_;
}

// repeated .GSProto.PropItem szNextPropList = 6;
inline int CMD_EQUIP_QUERYENHANCE_SC::sznextproplist_size() const {
  return sznextproplist_.size();
}
inline void CMD_EQUIP_QUERYENHANCE_SC::clear_sznextproplist() {
  sznextproplist_.Clear();
}
inline const ::GSProto::PropItem& CMD_EQUIP_QUERYENHANCE_SC::sznextproplist(int index) const {
  return sznextproplist_.Get(index);
}
inline ::GSProto::PropItem* CMD_EQUIP_QUERYENHANCE_SC::mutable_sznextproplist(int index) {
  return sznextproplist_.Mutable(index);
}
inline ::GSProto::PropItem* CMD_EQUIP_QUERYENHANCE_SC::add_sznextproplist() {
  return sznextproplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
CMD_EQUIP_QUERYENHANCE_SC::sznextproplist() const {
  return sznextproplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
CMD_EQUIP_QUERYENHANCE_SC::mutable_sznextproplist() {
  return &sznextproplist_;
}

// required int32 iCostSilver = 7;
inline bool CMD_EQUIP_QUERYENHANCE_SC::has_icostsilver() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMD_EQUIP_QUERYENHANCE_SC::set_has_icostsilver() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMD_EQUIP_QUERYENHANCE_SC::clear_has_icostsilver() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMD_EQUIP_QUERYENHANCE_SC::clear_icostsilver() {
  icostsilver_ = 0;
  clear_has_icostsilver();
}
inline ::google::protobuf::int32 CMD_EQUIP_QUERYENHANCE_SC::icostsilver() const {
  return icostsilver_;
}
inline void CMD_EQUIP_QUERYENHANCE_SC::set_icostsilver(::google::protobuf::int32 value) {
  set_has_icostsilver();
  icostsilver_ = value;
}

// -------------------------------------------------------------------

// CMD_EQUIP_ENHANCE_CS

// required uint32 dwHeroObjectID = 1;
inline bool CMD_EQUIP_ENHANCE_CS::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_ENHANCE_CS::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_ENHANCE_CS::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_ENHANCE_CS::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 CMD_EQUIP_ENHANCE_CS::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void CMD_EQUIP_ENHANCE_CS::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// required int32 iEquipPos = 2;
inline bool CMD_EQUIP_ENHANCE_CS::has_iequippos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_EQUIP_ENHANCE_CS::set_has_iequippos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_EQUIP_ENHANCE_CS::clear_has_iequippos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_EQUIP_ENHANCE_CS::clear_iequippos() {
  iequippos_ = 0;
  clear_has_iequippos();
}
inline ::google::protobuf::int32 CMD_EQUIP_ENHANCE_CS::iequippos() const {
  return iequippos_;
}
inline void CMD_EQUIP_ENHANCE_CS::set_iequippos(::google::protobuf::int32 value) {
  set_has_iequippos();
  iequippos_ = value;
}

// -------------------------------------------------------------------

// CMD_EQUIP_ENHANCE_SC

// required bool bSuccess = 1;
inline bool CMD_EQUIP_ENHANCE_SC::has_bsuccess() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_ENHANCE_SC::set_has_bsuccess() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_ENHANCE_SC::clear_has_bsuccess() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_ENHANCE_SC::clear_bsuccess() {
  bsuccess_ = false;
  clear_has_bsuccess();
}
inline bool CMD_EQUIP_ENHANCE_SC::bsuccess() const {
  return bsuccess_;
}
inline void CMD_EQUIP_ENHANCE_SC::set_bsuccess(bool value) {
  set_has_bsuccess();
  bsuccess_ = value;
}

// optional int32 iAddLevel = 2;
inline bool CMD_EQUIP_ENHANCE_SC::has_iaddlevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_EQUIP_ENHANCE_SC::set_has_iaddlevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_EQUIP_ENHANCE_SC::clear_has_iaddlevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_EQUIP_ENHANCE_SC::clear_iaddlevel() {
  iaddlevel_ = 0;
  clear_has_iaddlevel();
}
inline ::google::protobuf::int32 CMD_EQUIP_ENHANCE_SC::iaddlevel() const {
  return iaddlevel_;
}
inline void CMD_EQUIP_ENHANCE_SC::set_iaddlevel(::google::protobuf::int32 value) {
  set_has_iaddlevel();
  iaddlevel_ = value;
}

// -------------------------------------------------------------------

// CMD_EQUIP_CHIPSELL_CS

// required int32 iEquipCipID = 1;
inline bool CMD_EQUIP_CHIPSELL_CS::has_iequipcipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_CHIPSELL_CS::set_has_iequipcipid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_CHIPSELL_CS::clear_has_iequipcipid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_CHIPSELL_CS::clear_iequipcipid() {
  iequipcipid_ = 0;
  clear_has_iequipcipid();
}
inline ::google::protobuf::int32 CMD_EQUIP_CHIPSELL_CS::iequipcipid() const {
  return iequipcipid_;
}
inline void CMD_EQUIP_CHIPSELL_CS::set_iequipcipid(::google::protobuf::int32 value) {
  set_has_iequipcipid();
  iequipcipid_ = value;
}

// required int32 iCount = 2;
inline bool CMD_EQUIP_CHIPSELL_CS::has_icount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_EQUIP_CHIPSELL_CS::set_has_icount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_EQUIP_CHIPSELL_CS::clear_has_icount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_EQUIP_CHIPSELL_CS::clear_icount() {
  icount_ = 0;
  clear_has_icount();
}
inline ::google::protobuf::int32 CMD_EQUIP_CHIPSELL_CS::icount() const {
  return icount_;
}
inline void CMD_EQUIP_CHIPSELL_CS::set_icount(::google::protobuf::int32 value) {
  set_has_icount();
  icount_ = value;
}

// -------------------------------------------------------------------

// CMD_EQUIP_CHIPCOMBINE_CS

// required int32 iEquipChipID = 1;
inline bool CMD_EQUIP_CHIPCOMBINE_CS::has_iequipchipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_CHIPCOMBINE_CS::set_has_iequipchipid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_CHIPCOMBINE_CS::clear_has_iequipchipid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_CHIPCOMBINE_CS::clear_iequipchipid() {
  iequipchipid_ = 0;
  clear_has_iequipchipid();
}
inline ::google::protobuf::int32 CMD_EQUIP_CHIPCOMBINE_CS::iequipchipid() const {
  return iequipchipid_;
}
inline void CMD_EQUIP_CHIPCOMBINE_CS::set_iequipchipid(::google::protobuf::int32 value) {
  set_has_iequipchipid();
  iequipchipid_ = value;
}

// -------------------------------------------------------------------

// CMD_DUNGEON_SAODANG_CS

// required int32 iSceneID = 1;
inline bool CMD_DUNGEON_SAODANG_CS::has_isceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_DUNGEON_SAODANG_CS::set_has_isceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_DUNGEON_SAODANG_CS::clear_has_isceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_DUNGEON_SAODANG_CS::clear_isceneid() {
  isceneid_ = 0;
  clear_has_isceneid();
}
inline ::google::protobuf::int32 CMD_DUNGEON_SAODANG_CS::isceneid() const {
  return isceneid_;
}
inline void CMD_DUNGEON_SAODANG_CS::set_isceneid(::google::protobuf::int32 value) {
  set_has_isceneid();
  isceneid_ = value;
}

// -------------------------------------------------------------------

// CMD_DUNGEON_SAODANG_SC

// required int32 iSceneID = 1;
inline bool CMD_DUNGEON_SAODANG_SC::has_isceneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_DUNGEON_SAODANG_SC::set_has_isceneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_DUNGEON_SAODANG_SC::clear_has_isceneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_DUNGEON_SAODANG_SC::clear_isceneid() {
  isceneid_ = 0;
  clear_has_isceneid();
}
inline ::google::protobuf::int32 CMD_DUNGEON_SAODANG_SC::isceneid() const {
  return isceneid_;
}
inline void CMD_DUNGEON_SAODANG_SC::set_isceneid(::google::protobuf::int32 value) {
  set_has_isceneid();
  isceneid_ = value;
}

// required .GSProto.FightAwardResult awardInfo = 2;
inline bool CMD_DUNGEON_SAODANG_SC::has_awardinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_DUNGEON_SAODANG_SC::set_has_awardinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_DUNGEON_SAODANG_SC::clear_has_awardinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_DUNGEON_SAODANG_SC::clear_awardinfo() {
  if (awardinfo_ != NULL) awardinfo_->::GSProto::FightAwardResult::Clear();
  clear_has_awardinfo();
}
inline const ::GSProto::FightAwardResult& CMD_DUNGEON_SAODANG_SC::awardinfo() const {
  return awardinfo_ != NULL ? *awardinfo_ : *default_instance_->awardinfo_;
}
inline ::GSProto::FightAwardResult* CMD_DUNGEON_SAODANG_SC::mutable_awardinfo() {
  set_has_awardinfo();
  if (awardinfo_ == NULL) awardinfo_ = new ::GSProto::FightAwardResult;
  return awardinfo_;
}
inline ::GSProto::FightAwardResult* CMD_DUNGEON_SAODANG_SC::release_awardinfo() {
  clear_has_awardinfo();
  ::GSProto::FightAwardResult* temp = awardinfo_;
  awardinfo_ = NULL;
  return temp;
}
inline void CMD_DUNGEON_SAODANG_SC::set_allocated_awardinfo(::GSProto::FightAwardResult* awardinfo) {
  delete awardinfo_;
  awardinfo_ = awardinfo;
  if (awardinfo) {
    set_has_awardinfo();
  } else {
    clear_has_awardinfo();
  }
}

// required int32 iHeroGetExp = 3;
inline bool CMD_DUNGEON_SAODANG_SC::has_iherogetexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_DUNGEON_SAODANG_SC::set_has_iherogetexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_DUNGEON_SAODANG_SC::clear_has_iherogetexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_DUNGEON_SAODANG_SC::clear_iherogetexp() {
  iherogetexp_ = 0;
  clear_has_iherogetexp();
}
inline ::google::protobuf::int32 CMD_DUNGEON_SAODANG_SC::iherogetexp() const {
  return iherogetexp_;
}
inline void CMD_DUNGEON_SAODANG_SC::set_iherogetexp(::google::protobuf::int32 value) {
  set_has_iherogetexp();
  iherogetexp_ = value;
}

// repeated .GSProto.HeroExpAwardDetail szHeroAward = 4;
inline int CMD_DUNGEON_SAODANG_SC::szheroaward_size() const {
  return szheroaward_.size();
}
inline void CMD_DUNGEON_SAODANG_SC::clear_szheroaward() {
  szheroaward_.Clear();
}
inline const ::GSProto::HeroExpAwardDetail& CMD_DUNGEON_SAODANG_SC::szheroaward(int index) const {
  return szheroaward_.Get(index);
}
inline ::GSProto::HeroExpAwardDetail* CMD_DUNGEON_SAODANG_SC::mutable_szheroaward(int index) {
  return szheroaward_.Mutable(index);
}
inline ::GSProto::HeroExpAwardDetail* CMD_DUNGEON_SAODANG_SC::add_szheroaward() {
  return szheroaward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HeroExpAwardDetail >&
CMD_DUNGEON_SAODANG_SC::szheroaward() const {
  return szheroaward_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::HeroExpAwardDetail >*
CMD_DUNGEON_SAODANG_SC::mutable_szheroaward() {
  return &szheroaward_;
}

// optional bool bCanFP = 5;
inline bool CMD_DUNGEON_SAODANG_SC::has_bcanfp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_DUNGEON_SAODANG_SC::set_has_bcanfp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_DUNGEON_SAODANG_SC::clear_has_bcanfp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_DUNGEON_SAODANG_SC::clear_bcanfp() {
  bcanfp_ = false;
  clear_has_bcanfp();
}
inline bool CMD_DUNGEON_SAODANG_SC::bcanfp() const {
  return bcanfp_;
}
inline void CMD_DUNGEON_SAODANG_SC::set_bcanfp(bool value) {
  set_has_bcanfp();
  bcanfp_ = value;
}

// optional int32 iCostGold = 6;
inline bool CMD_DUNGEON_SAODANG_SC::has_icostgold() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMD_DUNGEON_SAODANG_SC::set_has_icostgold() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMD_DUNGEON_SAODANG_SC::clear_has_icostgold() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMD_DUNGEON_SAODANG_SC::clear_icostgold() {
  icostgold_ = 0;
  clear_has_icostgold();
}
inline ::google::protobuf::int32 CMD_DUNGEON_SAODANG_SC::icostgold() const {
  return icostgold_;
}
inline void CMD_DUNGEON_SAODANG_SC::set_icostgold(::google::protobuf::int32 value) {
  set_has_icostgold();
  icostgold_ = value;
}

// required int32 iExtraExp = 7;
inline bool CMD_DUNGEON_SAODANG_SC::has_iextraexp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMD_DUNGEON_SAODANG_SC::set_has_iextraexp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMD_DUNGEON_SAODANG_SC::clear_has_iextraexp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMD_DUNGEON_SAODANG_SC::clear_iextraexp() {
  iextraexp_ = 0;
  clear_has_iextraexp();
}
inline ::google::protobuf::int32 CMD_DUNGEON_SAODANG_SC::iextraexp() const {
  return iextraexp_;
}
inline void CMD_DUNGEON_SAODANG_SC::set_iextraexp(::google::protobuf::int32 value) {
  set_has_iextraexp();
  iextraexp_ = value;
}

// -------------------------------------------------------------------

// MailDetail

// required string strUUID = 1;
inline bool MailDetail::has_struuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailDetail::set_has_struuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailDetail::clear_has_struuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailDetail::clear_struuid() {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    struuid_->clear();
  }
  clear_has_struuid();
}
inline const ::std::string& MailDetail::struuid() const {
  return *struuid_;
}
inline void MailDetail::set_struuid(const ::std::string& value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void MailDetail::set_struuid(const char* value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void MailDetail::set_struuid(const char* value, size_t size) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailDetail::mutable_struuid() {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  return struuid_;
}
inline ::std::string* MailDetail::release_struuid() {
  clear_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = struuid_;
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MailDetail::set_allocated_struuid(::std::string* struuid) {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    delete struuid_;
  }
  if (struuid) {
    set_has_struuid();
    struuid_ = struuid;
  } else {
    clear_has_struuid();
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strMailTitle = 2;
inline bool MailDetail::has_strmailtitle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailDetail::set_has_strmailtitle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailDetail::clear_has_strmailtitle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailDetail::clear_strmailtitle() {
  if (strmailtitle_ != &::google::protobuf::internal::kEmptyString) {
    strmailtitle_->clear();
  }
  clear_has_strmailtitle();
}
inline const ::std::string& MailDetail::strmailtitle() const {
  return *strmailtitle_;
}
inline void MailDetail::set_strmailtitle(const ::std::string& value) {
  set_has_strmailtitle();
  if (strmailtitle_ == &::google::protobuf::internal::kEmptyString) {
    strmailtitle_ = new ::std::string;
  }
  strmailtitle_->assign(value);
}
inline void MailDetail::set_strmailtitle(const char* value) {
  set_has_strmailtitle();
  if (strmailtitle_ == &::google::protobuf::internal::kEmptyString) {
    strmailtitle_ = new ::std::string;
  }
  strmailtitle_->assign(value);
}
inline void MailDetail::set_strmailtitle(const char* value, size_t size) {
  set_has_strmailtitle();
  if (strmailtitle_ == &::google::protobuf::internal::kEmptyString) {
    strmailtitle_ = new ::std::string;
  }
  strmailtitle_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailDetail::mutable_strmailtitle() {
  set_has_strmailtitle();
  if (strmailtitle_ == &::google::protobuf::internal::kEmptyString) {
    strmailtitle_ = new ::std::string;
  }
  return strmailtitle_;
}
inline ::std::string* MailDetail::release_strmailtitle() {
  clear_has_strmailtitle();
  if (strmailtitle_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmailtitle_;
    strmailtitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MailDetail::set_allocated_strmailtitle(::std::string* strmailtitle) {
  if (strmailtitle_ != &::google::protobuf::internal::kEmptyString) {
    delete strmailtitle_;
  }
  if (strmailtitle) {
    set_has_strmailtitle();
    strmailtitle_ = strmailtitle;
  } else {
    clear_has_strmailtitle();
    strmailtitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strMailSender = 3;
inline bool MailDetail::has_strmailsender() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailDetail::set_has_strmailsender() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailDetail::clear_has_strmailsender() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailDetail::clear_strmailsender() {
  if (strmailsender_ != &::google::protobuf::internal::kEmptyString) {
    strmailsender_->clear();
  }
  clear_has_strmailsender();
}
inline const ::std::string& MailDetail::strmailsender() const {
  return *strmailsender_;
}
inline void MailDetail::set_strmailsender(const ::std::string& value) {
  set_has_strmailsender();
  if (strmailsender_ == &::google::protobuf::internal::kEmptyString) {
    strmailsender_ = new ::std::string;
  }
  strmailsender_->assign(value);
}
inline void MailDetail::set_strmailsender(const char* value) {
  set_has_strmailsender();
  if (strmailsender_ == &::google::protobuf::internal::kEmptyString) {
    strmailsender_ = new ::std::string;
  }
  strmailsender_->assign(value);
}
inline void MailDetail::set_strmailsender(const char* value, size_t size) {
  set_has_strmailsender();
  if (strmailsender_ == &::google::protobuf::internal::kEmptyString) {
    strmailsender_ = new ::std::string;
  }
  strmailsender_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailDetail::mutable_strmailsender() {
  set_has_strmailsender();
  if (strmailsender_ == &::google::protobuf::internal::kEmptyString) {
    strmailsender_ = new ::std::string;
  }
  return strmailsender_;
}
inline ::std::string* MailDetail::release_strmailsender() {
  clear_has_strmailsender();
  if (strmailsender_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmailsender_;
    strmailsender_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MailDetail::set_allocated_strmailsender(::std::string* strmailsender) {
  if (strmailsender_ != &::google::protobuf::internal::kEmptyString) {
    delete strmailsender_;
  }
  if (strmailsender) {
    set_has_strmailsender();
    strmailsender_ = strmailsender;
  } else {
    clear_has_strmailsender();
    strmailsender_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 dwSendTime = 4;
inline bool MailDetail::has_dwsendtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailDetail::set_has_dwsendtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailDetail::clear_has_dwsendtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailDetail::clear_dwsendtime() {
  dwsendtime_ = 0u;
  clear_has_dwsendtime();
}
inline ::google::protobuf::uint32 MailDetail::dwsendtime() const {
  return dwsendtime_;
}
inline void MailDetail::set_dwsendtime(::google::protobuf::uint32 value) {
  set_has_dwsendtime();
  dwsendtime_ = value;
}

// required string strContent = 5;
inline bool MailDetail::has_strcontent() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailDetail::set_has_strcontent() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailDetail::clear_has_strcontent() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailDetail::clear_strcontent() {
  if (strcontent_ != &::google::protobuf::internal::kEmptyString) {
    strcontent_->clear();
  }
  clear_has_strcontent();
}
inline const ::std::string& MailDetail::strcontent() const {
  return *strcontent_;
}
inline void MailDetail::set_strcontent(const ::std::string& value) {
  set_has_strcontent();
  if (strcontent_ == &::google::protobuf::internal::kEmptyString) {
    strcontent_ = new ::std::string;
  }
  strcontent_->assign(value);
}
inline void MailDetail::set_strcontent(const char* value) {
  set_has_strcontent();
  if (strcontent_ == &::google::protobuf::internal::kEmptyString) {
    strcontent_ = new ::std::string;
  }
  strcontent_->assign(value);
}
inline void MailDetail::set_strcontent(const char* value, size_t size) {
  set_has_strcontent();
  if (strcontent_ == &::google::protobuf::internal::kEmptyString) {
    strcontent_ = new ::std::string;
  }
  strcontent_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailDetail::mutable_strcontent() {
  set_has_strcontent();
  if (strcontent_ == &::google::protobuf::internal::kEmptyString) {
    strcontent_ = new ::std::string;
  }
  return strcontent_;
}
inline ::std::string* MailDetail::release_strcontent() {
  clear_has_strcontent();
  if (strcontent_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strcontent_;
    strcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MailDetail::set_allocated_strcontent(::std::string* strcontent) {
  if (strcontent_ != &::google::protobuf::internal::kEmptyString) {
    delete strcontent_;
  }
  if (strcontent) {
    set_has_strcontent();
    strcontent_ = strcontent;
  } else {
    clear_has_strcontent();
    strcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iState = 6;
inline bool MailDetail::has_istate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailDetail::set_has_istate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailDetail::clear_has_istate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailDetail::clear_istate() {
  istate_ = 0;
  clear_has_istate();
}
inline ::google::protobuf::int32 MailDetail::istate() const {
  return istate_;
}
inline void MailDetail::set_istate(::google::protobuf::int32 value) {
  set_has_istate();
  istate_ = value;
}

// optional .GSProto.FightAwardResult awardInfo = 7;
inline bool MailDetail::has_awardinfo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MailDetail::set_has_awardinfo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MailDetail::clear_has_awardinfo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MailDetail::clear_awardinfo() {
  if (awardinfo_ != NULL) awardinfo_->::GSProto::FightAwardResult::Clear();
  clear_has_awardinfo();
}
inline const ::GSProto::FightAwardResult& MailDetail::awardinfo() const {
  return awardinfo_ != NULL ? *awardinfo_ : *default_instance_->awardinfo_;
}
inline ::GSProto::FightAwardResult* MailDetail::mutable_awardinfo() {
  set_has_awardinfo();
  if (awardinfo_ == NULL) awardinfo_ = new ::GSProto::FightAwardResult;
  return awardinfo_;
}
inline ::GSProto::FightAwardResult* MailDetail::release_awardinfo() {
  clear_has_awardinfo();
  ::GSProto::FightAwardResult* temp = awardinfo_;
  awardinfo_ = NULL;
  return temp;
}
inline void MailDetail::set_allocated_awardinfo(::GSProto::FightAwardResult* awardinfo) {
  delete awardinfo_;
  awardinfo_ = awardinfo;
  if (awardinfo) {
    set_has_awardinfo();
  } else {
    clear_has_awardinfo();
  }
}

// -------------------------------------------------------------------

// MailShotDesc

// required string strUUID = 1;
inline bool MailShotDesc::has_struuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailShotDesc::set_has_struuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailShotDesc::clear_has_struuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailShotDesc::clear_struuid() {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    struuid_->clear();
  }
  clear_has_struuid();
}
inline const ::std::string& MailShotDesc::struuid() const {
  return *struuid_;
}
inline void MailShotDesc::set_struuid(const ::std::string& value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void MailShotDesc::set_struuid(const char* value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void MailShotDesc::set_struuid(const char* value, size_t size) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailShotDesc::mutable_struuid() {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  return struuid_;
}
inline ::std::string* MailShotDesc::release_struuid() {
  clear_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = struuid_;
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MailShotDesc::set_allocated_struuid(::std::string* struuid) {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    delete struuid_;
  }
  if (struuid) {
    set_has_struuid();
    struuid_ = struuid;
  } else {
    clear_has_struuid();
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strMailTitle = 2;
inline bool MailShotDesc::has_strmailtitle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailShotDesc::set_has_strmailtitle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailShotDesc::clear_has_strmailtitle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailShotDesc::clear_strmailtitle() {
  if (strmailtitle_ != &::google::protobuf::internal::kEmptyString) {
    strmailtitle_->clear();
  }
  clear_has_strmailtitle();
}
inline const ::std::string& MailShotDesc::strmailtitle() const {
  return *strmailtitle_;
}
inline void MailShotDesc::set_strmailtitle(const ::std::string& value) {
  set_has_strmailtitle();
  if (strmailtitle_ == &::google::protobuf::internal::kEmptyString) {
    strmailtitle_ = new ::std::string;
  }
  strmailtitle_->assign(value);
}
inline void MailShotDesc::set_strmailtitle(const char* value) {
  set_has_strmailtitle();
  if (strmailtitle_ == &::google::protobuf::internal::kEmptyString) {
    strmailtitle_ = new ::std::string;
  }
  strmailtitle_->assign(value);
}
inline void MailShotDesc::set_strmailtitle(const char* value, size_t size) {
  set_has_strmailtitle();
  if (strmailtitle_ == &::google::protobuf::internal::kEmptyString) {
    strmailtitle_ = new ::std::string;
  }
  strmailtitle_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailShotDesc::mutable_strmailtitle() {
  set_has_strmailtitle();
  if (strmailtitle_ == &::google::protobuf::internal::kEmptyString) {
    strmailtitle_ = new ::std::string;
  }
  return strmailtitle_;
}
inline ::std::string* MailShotDesc::release_strmailtitle() {
  clear_has_strmailtitle();
  if (strmailtitle_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmailtitle_;
    strmailtitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MailShotDesc::set_allocated_strmailtitle(::std::string* strmailtitle) {
  if (strmailtitle_ != &::google::protobuf::internal::kEmptyString) {
    delete strmailtitle_;
  }
  if (strmailtitle) {
    set_has_strmailtitle();
    strmailtitle_ = strmailtitle;
  } else {
    clear_has_strmailtitle();
    strmailtitle_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strMailSender = 3;
inline bool MailShotDesc::has_strmailsender() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailShotDesc::set_has_strmailsender() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailShotDesc::clear_has_strmailsender() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailShotDesc::clear_strmailsender() {
  if (strmailsender_ != &::google::protobuf::internal::kEmptyString) {
    strmailsender_->clear();
  }
  clear_has_strmailsender();
}
inline const ::std::string& MailShotDesc::strmailsender() const {
  return *strmailsender_;
}
inline void MailShotDesc::set_strmailsender(const ::std::string& value) {
  set_has_strmailsender();
  if (strmailsender_ == &::google::protobuf::internal::kEmptyString) {
    strmailsender_ = new ::std::string;
  }
  strmailsender_->assign(value);
}
inline void MailShotDesc::set_strmailsender(const char* value) {
  set_has_strmailsender();
  if (strmailsender_ == &::google::protobuf::internal::kEmptyString) {
    strmailsender_ = new ::std::string;
  }
  strmailsender_->assign(value);
}
inline void MailShotDesc::set_strmailsender(const char* value, size_t size) {
  set_has_strmailsender();
  if (strmailsender_ == &::google::protobuf::internal::kEmptyString) {
    strmailsender_ = new ::std::string;
  }
  strmailsender_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailShotDesc::mutable_strmailsender() {
  set_has_strmailsender();
  if (strmailsender_ == &::google::protobuf::internal::kEmptyString) {
    strmailsender_ = new ::std::string;
  }
  return strmailsender_;
}
inline ::std::string* MailShotDesc::release_strmailsender() {
  clear_has_strmailsender();
  if (strmailsender_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmailsender_;
    strmailsender_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MailShotDesc::set_allocated_strmailsender(::std::string* strmailsender) {
  if (strmailsender_ != &::google::protobuf::internal::kEmptyString) {
    delete strmailsender_;
  }
  if (strmailsender) {
    set_has_strmailsender();
    strmailsender_ = strmailsender;
  } else {
    clear_has_strmailsender();
    strmailsender_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 dwSendTime = 4;
inline bool MailShotDesc::has_dwsendtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailShotDesc::set_has_dwsendtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailShotDesc::clear_has_dwsendtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailShotDesc::clear_dwsendtime() {
  dwsendtime_ = 0u;
  clear_has_dwsendtime();
}
inline ::google::protobuf::uint32 MailShotDesc::dwsendtime() const {
  return dwsendtime_;
}
inline void MailShotDesc::set_dwsendtime(::google::protobuf::uint32 value) {
  set_has_dwsendtime();
  dwsendtime_ = value;
}

// required int32 iState = 5;
inline bool MailShotDesc::has_istate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailShotDesc::set_has_istate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailShotDesc::clear_has_istate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailShotDesc::clear_istate() {
  istate_ = 0;
  clear_has_istate();
}
inline ::google::protobuf::int32 MailShotDesc::istate() const {
  return istate_;
}
inline void MailShotDesc::set_istate(::google::protobuf::int32 value) {
  set_has_istate();
  istate_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_MAILLIST_SC

// repeated .GSProto.MailShotDesc szMailIndexList = 1;
inline int CMD_QUERY_MAILLIST_SC::szmailindexlist_size() const {
  return szmailindexlist_.size();
}
inline void CMD_QUERY_MAILLIST_SC::clear_szmailindexlist() {
  szmailindexlist_.Clear();
}
inline const ::GSProto::MailShotDesc& CMD_QUERY_MAILLIST_SC::szmailindexlist(int index) const {
  return szmailindexlist_.Get(index);
}
inline ::GSProto::MailShotDesc* CMD_QUERY_MAILLIST_SC::mutable_szmailindexlist(int index) {
  return szmailindexlist_.Mutable(index);
}
inline ::GSProto::MailShotDesc* CMD_QUERY_MAILLIST_SC::add_szmailindexlist() {
  return szmailindexlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::MailShotDesc >&
CMD_QUERY_MAILLIST_SC::szmailindexlist() const {
  return szmailindexlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::MailShotDesc >*
CMD_QUERY_MAILLIST_SC::mutable_szmailindexlist() {
  return &szmailindexlist_;
}

// -------------------------------------------------------------------

// CMD_QUERY_MAILDESC_CS

// required string strUUID = 1;
inline bool CMD_QUERY_MAILDESC_CS::has_struuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_MAILDESC_CS::set_has_struuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_MAILDESC_CS::clear_has_struuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_MAILDESC_CS::clear_struuid() {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    struuid_->clear();
  }
  clear_has_struuid();
}
inline const ::std::string& CMD_QUERY_MAILDESC_CS::struuid() const {
  return *struuid_;
}
inline void CMD_QUERY_MAILDESC_CS::set_struuid(const ::std::string& value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void CMD_QUERY_MAILDESC_CS::set_struuid(const char* value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void CMD_QUERY_MAILDESC_CS::set_struuid(const char* value, size_t size) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_QUERY_MAILDESC_CS::mutable_struuid() {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  return struuid_;
}
inline ::std::string* CMD_QUERY_MAILDESC_CS::release_struuid() {
  clear_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = struuid_;
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_QUERY_MAILDESC_CS::set_allocated_struuid(::std::string* struuid) {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    delete struuid_;
  }
  if (struuid) {
    set_has_struuid();
    struuid_ = struuid;
  } else {
    clear_has_struuid();
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_GET_MAILAWARD_CS

// required string strUUID = 1;
inline bool CMD_GET_MAILAWARD_CS::has_struuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GET_MAILAWARD_CS::set_has_struuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GET_MAILAWARD_CS::clear_has_struuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GET_MAILAWARD_CS::clear_struuid() {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    struuid_->clear();
  }
  clear_has_struuid();
}
inline const ::std::string& CMD_GET_MAILAWARD_CS::struuid() const {
  return *struuid_;
}
inline void CMD_GET_MAILAWARD_CS::set_struuid(const ::std::string& value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void CMD_GET_MAILAWARD_CS::set_struuid(const char* value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void CMD_GET_MAILAWARD_CS::set_struuid(const char* value, size_t size) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_GET_MAILAWARD_CS::mutable_struuid() {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  return struuid_;
}
inline ::std::string* CMD_GET_MAILAWARD_CS::release_struuid() {
  clear_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = struuid_;
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_GET_MAILAWARD_CS::set_allocated_struuid(::std::string* struuid) {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    delete struuid_;
  }
  if (struuid) {
    set_has_struuid();
    struuid_ = struuid;
  } else {
    clear_has_struuid();
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_GET_MAILAWARD_SC

// required string strUUID = 1;
inline bool CMD_GET_MAILAWARD_SC::has_struuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GET_MAILAWARD_SC::set_has_struuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GET_MAILAWARD_SC::clear_has_struuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GET_MAILAWARD_SC::clear_struuid() {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    struuid_->clear();
  }
  clear_has_struuid();
}
inline const ::std::string& CMD_GET_MAILAWARD_SC::struuid() const {
  return *struuid_;
}
inline void CMD_GET_MAILAWARD_SC::set_struuid(const ::std::string& value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void CMD_GET_MAILAWARD_SC::set_struuid(const char* value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void CMD_GET_MAILAWARD_SC::set_struuid(const char* value, size_t size) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_GET_MAILAWARD_SC::mutable_struuid() {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  return struuid_;
}
inline ::std::string* CMD_GET_MAILAWARD_SC::release_struuid() {
  clear_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = struuid_;
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_GET_MAILAWARD_SC::set_allocated_struuid(::std::string* struuid) {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    delete struuid_;
  }
  if (struuid) {
    set_has_struuid();
    struuid_ = struuid;
  } else {
    clear_has_struuid();
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_QUERY_MAILDESC_SC

// required .GSProto.MailDetail mailData = 1;
inline bool CMD_QUERY_MAILDESC_SC::has_maildata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_MAILDESC_SC::set_has_maildata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_MAILDESC_SC::clear_has_maildata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_MAILDESC_SC::clear_maildata() {
  if (maildata_ != NULL) maildata_->::GSProto::MailDetail::Clear();
  clear_has_maildata();
}
inline const ::GSProto::MailDetail& CMD_QUERY_MAILDESC_SC::maildata() const {
  return maildata_ != NULL ? *maildata_ : *default_instance_->maildata_;
}
inline ::GSProto::MailDetail* CMD_QUERY_MAILDESC_SC::mutable_maildata() {
  set_has_maildata();
  if (maildata_ == NULL) maildata_ = new ::GSProto::MailDetail;
  return maildata_;
}
inline ::GSProto::MailDetail* CMD_QUERY_MAILDESC_SC::release_maildata() {
  clear_has_maildata();
  ::GSProto::MailDetail* temp = maildata_;
  maildata_ = NULL;
  return temp;
}
inline void CMD_QUERY_MAILDESC_SC::set_allocated_maildata(::GSProto::MailDetail* maildata) {
  delete maildata_;
  maildata_ = maildata;
  if (maildata) {
    set_has_maildata();
  } else {
    clear_has_maildata();
  }
}

// -------------------------------------------------------------------

// CMD_DREAMLAND_QUERY_SCENEINFO_CS

// required int32 iSectionID = 1;
inline bool CMD_DREAMLAND_QUERY_SCENEINFO_CS::has_isectionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_DREAMLAND_QUERY_SCENEINFO_CS::set_has_isectionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_DREAMLAND_QUERY_SCENEINFO_CS::clear_has_isectionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_DREAMLAND_QUERY_SCENEINFO_CS::clear_isectionid() {
  isectionid_ = 0;
  clear_has_isectionid();
}
inline ::google::protobuf::int32 CMD_DREAMLAND_QUERY_SCENEINFO_CS::isectionid() const {
  return isectionid_;
}
inline void CMD_DREAMLAND_QUERY_SCENEINFO_CS::set_isectionid(::google::protobuf::int32 value) {
  set_has_isectionid();
  isectionid_ = value;
}

// -------------------------------------------------------------------

// CMD_DREAMLAND_OPEN_REQSECTON_SC

// required int32 iOPenCount = 1;
inline bool CMD_DREAMLAND_OPEN_REQSECTON_SC::has_iopencount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_DREAMLAND_OPEN_REQSECTON_SC::set_has_iopencount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_DREAMLAND_OPEN_REQSECTON_SC::clear_has_iopencount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_DREAMLAND_OPEN_REQSECTON_SC::clear_iopencount() {
  iopencount_ = 0;
  clear_has_iopencount();
}
inline ::google::protobuf::int32 CMD_DREAMLAND_OPEN_REQSECTON_SC::iopencount() const {
  return iopencount_;
}
inline void CMD_DREAMLAND_OPEN_REQSECTON_SC::set_iopencount(::google::protobuf::int32 value) {
  set_has_iopencount();
  iopencount_ = value;
}

// required int32 unLockSectionID = 2;
inline bool CMD_DREAMLAND_OPEN_REQSECTON_SC::has_unlocksectionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_DREAMLAND_OPEN_REQSECTON_SC::set_has_unlocksectionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_DREAMLAND_OPEN_REQSECTON_SC::clear_has_unlocksectionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_DREAMLAND_OPEN_REQSECTON_SC::clear_unlocksectionid() {
  unlocksectionid_ = 0;
  clear_has_unlocksectionid();
}
inline ::google::protobuf::int32 CMD_DREAMLAND_OPEN_REQSECTON_SC::unlocksectionid() const {
  return unlocksectionid_;
}
inline void CMD_DREAMLAND_OPEN_REQSECTON_SC::set_unlocksectionid(::google::protobuf::int32 value) {
  set_has_unlocksectionid();
  unlocksectionid_ = value;
}

// required int32 iResetTimes = 3;
inline bool CMD_DREAMLAND_OPEN_REQSECTON_SC::has_iresettimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_DREAMLAND_OPEN_REQSECTON_SC::set_has_iresettimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_DREAMLAND_OPEN_REQSECTON_SC::clear_has_iresettimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_DREAMLAND_OPEN_REQSECTON_SC::clear_iresettimes() {
  iresettimes_ = 0;
  clear_has_iresettimes();
}
inline ::google::protobuf::int32 CMD_DREAMLAND_OPEN_REQSECTON_SC::iresettimes() const {
  return iresettimes_;
}
inline void CMD_DREAMLAND_OPEN_REQSECTON_SC::set_iresettimes(::google::protobuf::int32 value) {
  set_has_iresettimes();
  iresettimes_ = value;
}

// -------------------------------------------------------------------

// SceneDetail

// required int32 iSceneIndex = 1;
inline bool SceneDetail::has_isceneindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SceneDetail::set_has_isceneindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SceneDetail::clear_has_isceneindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SceneDetail::clear_isceneindex() {
  isceneindex_ = 0;
  clear_has_isceneindex();
}
inline ::google::protobuf::int32 SceneDetail::isceneindex() const {
  return isceneindex_;
}
inline void SceneDetail::set_isceneindex(::google::protobuf::int32 value) {
  set_has_isceneindex();
  isceneindex_ = value;
}

// required int32 iSceneId = 2;
inline bool SceneDetail::has_isceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SceneDetail::set_has_isceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SceneDetail::clear_has_isceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SceneDetail::clear_isceneid() {
  isceneid_ = 0;
  clear_has_isceneid();
}
inline ::google::protobuf::int32 SceneDetail::isceneid() const {
  return isceneid_;
}
inline void SceneDetail::set_isceneid(::google::protobuf::int32 value) {
  set_has_isceneid();
  isceneid_ = value;
}

// required int32 iSceneState = 3;
inline bool SceneDetail::has_iscenestate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SceneDetail::set_has_iscenestate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SceneDetail::clear_has_iscenestate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SceneDetail::clear_iscenestate() {
  iscenestate_ = 0;
  clear_has_iscenestate();
}
inline ::google::protobuf::int32 SceneDetail::iscenestate() const {
  return iscenestate_;
}
inline void SceneDetail::set_iscenestate(::google::protobuf::int32 value) {
  set_has_iscenestate();
  iscenestate_ = value;
}

// required bool bHaveGetReward = 4;
inline bool SceneDetail::has_bhavegetreward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SceneDetail::set_has_bhavegetreward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SceneDetail::clear_has_bhavegetreward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SceneDetail::clear_bhavegetreward() {
  bhavegetreward_ = false;
  clear_has_bhavegetreward();
}
inline bool SceneDetail::bhavegetreward() const {
  return bhavegetreward_;
}
inline void SceneDetail::set_bhavegetreward(bool value) {
  set_has_bhavegetreward();
  bhavegetreward_ = value;
}

// -------------------------------------------------------------------

// CMD_DREAMLAND_QUERY_SCENEINFO_SC

// repeated .GSProto.SceneDetail szSceneDetail = 1;
inline int CMD_DREAMLAND_QUERY_SCENEINFO_SC::szscenedetail_size() const {
  return szscenedetail_.size();
}
inline void CMD_DREAMLAND_QUERY_SCENEINFO_SC::clear_szscenedetail() {
  szscenedetail_.Clear();
}
inline const ::GSProto::SceneDetail& CMD_DREAMLAND_QUERY_SCENEINFO_SC::szscenedetail(int index) const {
  return szscenedetail_.Get(index);
}
inline ::GSProto::SceneDetail* CMD_DREAMLAND_QUERY_SCENEINFO_SC::mutable_szscenedetail(int index) {
  return szscenedetail_.Mutable(index);
}
inline ::GSProto::SceneDetail* CMD_DREAMLAND_QUERY_SCENEINFO_SC::add_szscenedetail() {
  return szscenedetail_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::SceneDetail >&
CMD_DREAMLAND_QUERY_SCENEINFO_SC::szscenedetail() const {
  return szscenedetail_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::SceneDetail >*
CMD_DREAMLAND_QUERY_SCENEINFO_SC::mutable_szscenedetail() {
  return &szscenedetail_;
}

// -------------------------------------------------------------------

// DreamLandFormation

// required int32 dwObjcetId = 1;
inline bool DreamLandFormation::has_dwobjcetid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DreamLandFormation::set_has_dwobjcetid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DreamLandFormation::clear_has_dwobjcetid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DreamLandFormation::clear_dwobjcetid() {
  dwobjcetid_ = 0;
  clear_has_dwobjcetid();
}
inline ::google::protobuf::int32 DreamLandFormation::dwobjcetid() const {
  return dwobjcetid_;
}
inline void DreamLandFormation::set_dwobjcetid(::google::protobuf::int32 value) {
  set_has_dwobjcetid();
  dwobjcetid_ = value;
}

// required int32 iPos = 2;
inline bool DreamLandFormation::has_ipos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DreamLandFormation::set_has_ipos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DreamLandFormation::clear_has_ipos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DreamLandFormation::clear_ipos() {
  ipos_ = 0;
  clear_has_ipos();
}
inline ::google::protobuf::int32 DreamLandFormation::ipos() const {
  return ipos_;
}
inline void DreamLandFormation::set_ipos(::google::protobuf::int32 value) {
  set_has_ipos();
  ipos_ = value;
}

// -------------------------------------------------------------------

// DreamLandHeroInfo

// required int32 dwObjcetId = 1;
inline bool DreamLandHeroInfo::has_dwobjcetid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DreamLandHeroInfo::set_has_dwobjcetid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DreamLandHeroInfo::clear_has_dwobjcetid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DreamLandHeroInfo::clear_dwobjcetid() {
  dwobjcetid_ = 0;
  clear_has_dwobjcetid();
}
inline ::google::protobuf::int32 DreamLandHeroInfo::dwobjcetid() const {
  return dwobjcetid_;
}
inline void DreamLandHeroInfo::set_dwobjcetid(::google::protobuf::int32 value) {
  set_has_dwobjcetid();
  dwobjcetid_ = value;
}

// required int32 iBlootPresent = 2;
inline bool DreamLandHeroInfo::has_iblootpresent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DreamLandHeroInfo::set_has_iblootpresent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DreamLandHeroInfo::clear_has_iblootpresent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DreamLandHeroInfo::clear_iblootpresent() {
  iblootpresent_ = 0;
  clear_has_iblootpresent();
}
inline ::google::protobuf::int32 DreamLandHeroInfo::iblootpresent() const {
  return iblootpresent_;
}
inline void DreamLandHeroInfo::set_iblootpresent(::google::protobuf::int32 value) {
  set_has_iblootpresent();
  iblootpresent_ = value;
}

// -------------------------------------------------------------------

// CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC

// repeated .GSProto.DreamLandFormation szDreamLandFormation = 1;
inline int CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC::szdreamlandformation_size() const {
  return szdreamlandformation_.size();
}
inline void CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC::clear_szdreamlandformation() {
  szdreamlandformation_.Clear();
}
inline const ::GSProto::DreamLandFormation& CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC::szdreamlandformation(int index) const {
  return szdreamlandformation_.Get(index);
}
inline ::GSProto::DreamLandFormation* CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC::mutable_szdreamlandformation(int index) {
  return szdreamlandformation_.Mutable(index);
}
inline ::GSProto::DreamLandFormation* CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC::add_szdreamlandformation() {
  return szdreamlandformation_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::DreamLandFormation >&
CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC::szdreamlandformation() const {
  return szdreamlandformation_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::DreamLandFormation >*
CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC::mutable_szdreamlandformation() {
  return &szdreamlandformation_;
}

// required int32 remaindTime = 2;
inline bool CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC::has_remaindtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC::set_has_remaindtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC::clear_has_remaindtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC::clear_remaindtime() {
  remaindtime_ = 0;
  clear_has_remaindtime();
}
inline ::google::protobuf::int32 CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC::remaindtime() const {
  return remaindtime_;
}
inline void CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC::set_remaindtime(::google::protobuf::int32 value) {
  set_has_remaindtime();
  remaindtime_ = value;
}

// repeated .GSProto.DreamLandHeroInfo szHaveBattleHeroInfo = 3;
inline int CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC::szhavebattleheroinfo_size() const {
  return szhavebattleheroinfo_.size();
}
inline void CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC::clear_szhavebattleheroinfo() {
  szhavebattleheroinfo_.Clear();
}
inline const ::GSProto::DreamLandHeroInfo& CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC::szhavebattleheroinfo(int index) const {
  return szhavebattleheroinfo_.Get(index);
}
inline ::GSProto::DreamLandHeroInfo* CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC::mutable_szhavebattleheroinfo(int index) {
  return szhavebattleheroinfo_.Mutable(index);
}
inline ::GSProto::DreamLandHeroInfo* CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC::add_szhavebattleheroinfo() {
  return szhavebattleheroinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::DreamLandHeroInfo >&
CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC::szhavebattleheroinfo() const {
  return szhavebattleheroinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::DreamLandHeroInfo >*
CMD_DREAMLAND_GETACTOR_FORMATION_INFO_SC::mutable_szhavebattleheroinfo() {
  return &szhavebattleheroinfo_;
}

// -------------------------------------------------------------------

// CMD_DREAMLAND_REQUEST_OPENBOX_CS

// required int32 iSectionID = 1;
inline bool CMD_DREAMLAND_REQUEST_OPENBOX_CS::has_isectionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_DREAMLAND_REQUEST_OPENBOX_CS::set_has_isectionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_DREAMLAND_REQUEST_OPENBOX_CS::clear_has_isectionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_DREAMLAND_REQUEST_OPENBOX_CS::clear_isectionid() {
  isectionid_ = 0;
  clear_has_isectionid();
}
inline ::google::protobuf::int32 CMD_DREAMLAND_REQUEST_OPENBOX_CS::isectionid() const {
  return isectionid_;
}
inline void CMD_DREAMLAND_REQUEST_OPENBOX_CS::set_isectionid(::google::protobuf::int32 value) {
  set_has_isectionid();
  isectionid_ = value;
}

// required int32 iSceneId = 2;
inline bool CMD_DREAMLAND_REQUEST_OPENBOX_CS::has_isceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_DREAMLAND_REQUEST_OPENBOX_CS::set_has_isceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_DREAMLAND_REQUEST_OPENBOX_CS::clear_has_isceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_DREAMLAND_REQUEST_OPENBOX_CS::clear_isceneid() {
  isceneid_ = 0;
  clear_has_isceneid();
}
inline ::google::protobuf::int32 CMD_DREAMLAND_REQUEST_OPENBOX_CS::isceneid() const {
  return isceneid_;
}
inline void CMD_DREAMLAND_REQUEST_OPENBOX_CS::set_isceneid(::google::protobuf::int32 value) {
  set_has_isceneid();
  isceneid_ = value;
}

// -------------------------------------------------------------------

// DreamRewardHero

// required int32 iHeroId = 1;
inline bool DreamRewardHero::has_iheroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DreamRewardHero::set_has_iheroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DreamRewardHero::clear_has_iheroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DreamRewardHero::clear_iheroid() {
  iheroid_ = 0;
  clear_has_iheroid();
}
inline ::google::protobuf::int32 DreamRewardHero::iheroid() const {
  return iheroid_;
}
inline void DreamRewardHero::set_iheroid(::google::protobuf::int32 value) {
  set_has_iheroid();
  iheroid_ = value;
}

// required int32 iHeroSoulId = 2;
inline bool DreamRewardHero::has_iherosoulid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DreamRewardHero::set_has_iherosoulid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DreamRewardHero::clear_has_iherosoulid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DreamRewardHero::clear_iherosoulid() {
  iherosoulid_ = 0;
  clear_has_iherosoulid();
}
inline ::google::protobuf::int32 DreamRewardHero::iherosoulid() const {
  return iherosoulid_;
}
inline void DreamRewardHero::set_iherosoulid(::google::protobuf::int32 value) {
  set_has_iherosoulid();
  iherosoulid_ = value;
}

// required int32 iCount = 3;
inline bool DreamRewardHero::has_icount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DreamRewardHero::set_has_icount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DreamRewardHero::clear_has_icount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DreamRewardHero::clear_icount() {
  icount_ = 0;
  clear_has_icount();
}
inline ::google::protobuf::int32 DreamRewardHero::icount() const {
  return icount_;
}
inline void DreamRewardHero::set_icount(::google::protobuf::int32 value) {
  set_has_icount();
  icount_ = value;
}

// -------------------------------------------------------------------

// CMD_DREAMLAND_REQUEST_OPENBOX_SC

// required .GSProto.FightAwardResult awardResoult = 1;
inline bool CMD_DREAMLAND_REQUEST_OPENBOX_SC::has_awardresoult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_DREAMLAND_REQUEST_OPENBOX_SC::set_has_awardresoult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_DREAMLAND_REQUEST_OPENBOX_SC::clear_has_awardresoult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_DREAMLAND_REQUEST_OPENBOX_SC::clear_awardresoult() {
  if (awardresoult_ != NULL) awardresoult_->::GSProto::FightAwardResult::Clear();
  clear_has_awardresoult();
}
inline const ::GSProto::FightAwardResult& CMD_DREAMLAND_REQUEST_OPENBOX_SC::awardresoult() const {
  return awardresoult_ != NULL ? *awardresoult_ : *default_instance_->awardresoult_;
}
inline ::GSProto::FightAwardResult* CMD_DREAMLAND_REQUEST_OPENBOX_SC::mutable_awardresoult() {
  set_has_awardresoult();
  if (awardresoult_ == NULL) awardresoult_ = new ::GSProto::FightAwardResult;
  return awardresoult_;
}
inline ::GSProto::FightAwardResult* CMD_DREAMLAND_REQUEST_OPENBOX_SC::release_awardresoult() {
  clear_has_awardresoult();
  ::GSProto::FightAwardResult* temp = awardresoult_;
  awardresoult_ = NULL;
  return temp;
}
inline void CMD_DREAMLAND_REQUEST_OPENBOX_SC::set_allocated_awardresoult(::GSProto::FightAwardResult* awardresoult) {
  delete awardresoult_;
  awardresoult_ = awardresoult;
  if (awardresoult) {
    set_has_awardresoult();
  } else {
    clear_has_awardresoult();
  }
}

// -------------------------------------------------------------------

// CMD_DREAMLAND_QUERY_BOX_CS

// required int32 iSectionID = 1;
inline bool CMD_DREAMLAND_QUERY_BOX_CS::has_isectionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_DREAMLAND_QUERY_BOX_CS::set_has_isectionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_DREAMLAND_QUERY_BOX_CS::clear_has_isectionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_DREAMLAND_QUERY_BOX_CS::clear_isectionid() {
  isectionid_ = 0;
  clear_has_isectionid();
}
inline ::google::protobuf::int32 CMD_DREAMLAND_QUERY_BOX_CS::isectionid() const {
  return isectionid_;
}
inline void CMD_DREAMLAND_QUERY_BOX_CS::set_isectionid(::google::protobuf::int32 value) {
  set_has_isectionid();
  isectionid_ = value;
}

// required int32 iSceneId = 2;
inline bool CMD_DREAMLAND_QUERY_BOX_CS::has_isceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_DREAMLAND_QUERY_BOX_CS::set_has_isceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_DREAMLAND_QUERY_BOX_CS::clear_has_isceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_DREAMLAND_QUERY_BOX_CS::clear_isceneid() {
  isceneid_ = 0;
  clear_has_isceneid();
}
inline ::google::protobuf::int32 CMD_DREAMLAND_QUERY_BOX_CS::isceneid() const {
  return isceneid_;
}
inline void CMD_DREAMLAND_QUERY_BOX_CS::set_isceneid(::google::protobuf::int32 value) {
  set_has_isceneid();
  isceneid_ = value;
}

// -------------------------------------------------------------------

// CMD_DREAMLAND_QUERY_BOX_SC

// required .GSProto.FightAwardResult awardResoult = 1;
inline bool CMD_DREAMLAND_QUERY_BOX_SC::has_awardresoult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_DREAMLAND_QUERY_BOX_SC::set_has_awardresoult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_DREAMLAND_QUERY_BOX_SC::clear_has_awardresoult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_DREAMLAND_QUERY_BOX_SC::clear_awardresoult() {
  if (awardresoult_ != NULL) awardresoult_->::GSProto::FightAwardResult::Clear();
  clear_has_awardresoult();
}
inline const ::GSProto::FightAwardResult& CMD_DREAMLAND_QUERY_BOX_SC::awardresoult() const {
  return awardresoult_ != NULL ? *awardresoult_ : *default_instance_->awardresoult_;
}
inline ::GSProto::FightAwardResult* CMD_DREAMLAND_QUERY_BOX_SC::mutable_awardresoult() {
  set_has_awardresoult();
  if (awardresoult_ == NULL) awardresoult_ = new ::GSProto::FightAwardResult;
  return awardresoult_;
}
inline ::GSProto::FightAwardResult* CMD_DREAMLAND_QUERY_BOX_SC::release_awardresoult() {
  clear_has_awardresoult();
  ::GSProto::FightAwardResult* temp = awardresoult_;
  awardresoult_ = NULL;
  return temp;
}
inline void CMD_DREAMLAND_QUERY_BOX_SC::set_allocated_awardresoult(::GSProto::FightAwardResult* awardresoult) {
  delete awardresoult_;
  awardresoult_ = awardresoult;
  if (awardresoult) {
    set_has_awardresoult();
  } else {
    clear_has_awardresoult();
  }
}

// required bool bHaveMagic = 2;
inline bool CMD_DREAMLAND_QUERY_BOX_SC::has_bhavemagic() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_DREAMLAND_QUERY_BOX_SC::set_has_bhavemagic() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_DREAMLAND_QUERY_BOX_SC::clear_has_bhavemagic() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_DREAMLAND_QUERY_BOX_SC::clear_bhavemagic() {
  bhavemagic_ = false;
  clear_has_bhavemagic();
}
inline bool CMD_DREAMLAND_QUERY_BOX_SC::bhavemagic() const {
  return bhavemagic_;
}
inline void CMD_DREAMLAND_QUERY_BOX_SC::set_bhavemagic(bool value) {
  set_has_bhavemagic();
  bhavemagic_ = value;
}

// -------------------------------------------------------------------

// CMD_DREAMLAND_FORMATION_CHG_CS

// repeated .GSProto.DreamLandFormation szFormationList = 1;
inline int CMD_DREAMLAND_FORMATION_CHG_CS::szformationlist_size() const {
  return szformationlist_.size();
}
inline void CMD_DREAMLAND_FORMATION_CHG_CS::clear_szformationlist() {
  szformationlist_.Clear();
}
inline const ::GSProto::DreamLandFormation& CMD_DREAMLAND_FORMATION_CHG_CS::szformationlist(int index) const {
  return szformationlist_.Get(index);
}
inline ::GSProto::DreamLandFormation* CMD_DREAMLAND_FORMATION_CHG_CS::mutable_szformationlist(int index) {
  return szformationlist_.Mutable(index);
}
inline ::GSProto::DreamLandFormation* CMD_DREAMLAND_FORMATION_CHG_CS::add_szformationlist() {
  return szformationlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::DreamLandFormation >&
CMD_DREAMLAND_FORMATION_CHG_CS::szformationlist() const {
  return szformationlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::DreamLandFormation >*
CMD_DREAMLAND_FORMATION_CHG_CS::mutable_szformationlist() {
  return &szformationlist_;
}

// -------------------------------------------------------------------

// CMD_DREAMLAND_REQUEST_FIGHT_CS

// required int32 iSectionID = 1;
inline bool CMD_DREAMLAND_REQUEST_FIGHT_CS::has_isectionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_DREAMLAND_REQUEST_FIGHT_CS::set_has_isectionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_DREAMLAND_REQUEST_FIGHT_CS::clear_has_isectionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_DREAMLAND_REQUEST_FIGHT_CS::clear_isectionid() {
  isectionid_ = 0;
  clear_has_isectionid();
}
inline ::google::protobuf::int32 CMD_DREAMLAND_REQUEST_FIGHT_CS::isectionid() const {
  return isectionid_;
}
inline void CMD_DREAMLAND_REQUEST_FIGHT_CS::set_isectionid(::google::protobuf::int32 value) {
  set_has_isectionid();
  isectionid_ = value;
}

// required int32 iSceneId = 2;
inline bool CMD_DREAMLAND_REQUEST_FIGHT_CS::has_isceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_DREAMLAND_REQUEST_FIGHT_CS::set_has_isceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_DREAMLAND_REQUEST_FIGHT_CS::clear_has_isceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_DREAMLAND_REQUEST_FIGHT_CS::clear_isceneid() {
  isceneid_ = 0;
  clear_has_isceneid();
}
inline ::google::protobuf::int32 CMD_DREAMLAND_REQUEST_FIGHT_CS::isceneid() const {
  return isceneid_;
}
inline void CMD_DREAMLAND_REQUEST_FIGHT_CS::set_isceneid(::google::protobuf::int32 value) {
  set_has_isceneid();
  isceneid_ = value;
}

// -------------------------------------------------------------------

// CMD_DREAMLAND_QUERY_SCENEFORMATION_CS

// required int32 iSectionID = 1;
inline bool CMD_DREAMLAND_QUERY_SCENEFORMATION_CS::has_isectionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_CS::set_has_isectionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_CS::clear_has_isectionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_CS::clear_isectionid() {
  isectionid_ = 0;
  clear_has_isectionid();
}
inline ::google::protobuf::int32 CMD_DREAMLAND_QUERY_SCENEFORMATION_CS::isectionid() const {
  return isectionid_;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_CS::set_isectionid(::google::protobuf::int32 value) {
  set_has_isectionid();
  isectionid_ = value;
}

// required int32 iSceneId = 2;
inline bool CMD_DREAMLAND_QUERY_SCENEFORMATION_CS::has_isceneid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_CS::set_has_isceneid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_CS::clear_has_isceneid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_CS::clear_isceneid() {
  isceneid_ = 0;
  clear_has_isceneid();
}
inline ::google::protobuf::int32 CMD_DREAMLAND_QUERY_SCENEFORMATION_CS::isceneid() const {
  return isceneid_;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_CS::set_isceneid(::google::protobuf::int32 value) {
  set_has_isceneid();
  isceneid_ = value;
}

// -------------------------------------------------------------------

// DreamLandFormationItem

// required int32 iPos = 1;
inline bool DreamLandFormationItem::has_ipos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DreamLandFormationItem::set_has_ipos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DreamLandFormationItem::clear_has_ipos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DreamLandFormationItem::clear_ipos() {
  ipos_ = 0;
  clear_has_ipos();
}
inline ::google::protobuf::int32 DreamLandFormationItem::ipos() const {
  return ipos_;
}
inline void DreamLandFormationItem::set_ipos(::google::protobuf::int32 value) {
  set_has_ipos();
  ipos_ = value;
}

// required int32 iBaseId = 2;
inline bool DreamLandFormationItem::has_ibaseid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DreamLandFormationItem::set_has_ibaseid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DreamLandFormationItem::clear_has_ibaseid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DreamLandFormationItem::clear_ibaseid() {
  ibaseid_ = 0;
  clear_has_ibaseid();
}
inline ::google::protobuf::int32 DreamLandFormationItem::ibaseid() const {
  return ibaseid_;
}
inline void DreamLandFormationItem::set_ibaseid(::google::protobuf::int32 value) {
  set_has_ibaseid();
  ibaseid_ = value;
}

// required int32 iLevelStep = 3;
inline bool DreamLandFormationItem::has_ilevelstep() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DreamLandFormationItem::set_has_ilevelstep() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DreamLandFormationItem::clear_has_ilevelstep() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DreamLandFormationItem::clear_ilevelstep() {
  ilevelstep_ = 0;
  clear_has_ilevelstep();
}
inline ::google::protobuf::int32 DreamLandFormationItem::ilevelstep() const {
  return ilevelstep_;
}
inline void DreamLandFormationItem::set_ilevelstep(::google::protobuf::int32 value) {
  set_has_ilevelstep();
  ilevelstep_ = value;
}

// required int32 iLevel = 4;
inline bool DreamLandFormationItem::has_ilevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DreamLandFormationItem::set_has_ilevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DreamLandFormationItem::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DreamLandFormationItem::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 DreamLandFormationItem::ilevel() const {
  return ilevel_;
}
inline void DreamLandFormationItem::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// optional int32 iHp = 5;
inline bool DreamLandFormationItem::has_ihp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DreamLandFormationItem::set_has_ihp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DreamLandFormationItem::clear_has_ihp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DreamLandFormationItem::clear_ihp() {
  ihp_ = 0;
  clear_has_ihp();
}
inline ::google::protobuf::int32 DreamLandFormationItem::ihp() const {
  return ihp_;
}
inline void DreamLandFormationItem::set_ihp(::google::protobuf::int32 value) {
  set_has_ihp();
  ihp_ = value;
}

// optional int32 iMaxHP = 6;
inline bool DreamLandFormationItem::has_imaxhp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DreamLandFormationItem::set_has_imaxhp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DreamLandFormationItem::clear_has_imaxhp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DreamLandFormationItem::clear_imaxhp() {
  imaxhp_ = 0;
  clear_has_imaxhp();
}
inline ::google::protobuf::int32 DreamLandFormationItem::imaxhp() const {
  return imaxhp_;
}
inline void DreamLandFormationItem::set_imaxhp(::google::protobuf::int32 value) {
  set_has_imaxhp();
  imaxhp_ = value;
}

// required bool bIsGodAnimal = 7;
inline bool DreamLandFormationItem::has_bisgodanimal() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DreamLandFormationItem::set_has_bisgodanimal() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DreamLandFormationItem::clear_has_bisgodanimal() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DreamLandFormationItem::clear_bisgodanimal() {
  bisgodanimal_ = false;
  clear_has_bisgodanimal();
}
inline bool DreamLandFormationItem::bisgodanimal() const {
  return bisgodanimal_;
}
inline void DreamLandFormationItem::set_bisgodanimal(bool value) {
  set_has_bisgodanimal();
  bisgodanimal_ = value;
}

// required int32 iQuality = 8;
inline bool DreamLandFormationItem::has_iquality() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DreamLandFormationItem::set_has_iquality() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DreamLandFormationItem::clear_has_iquality() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DreamLandFormationItem::clear_iquality() {
  iquality_ = 0;
  clear_has_iquality();
}
inline ::google::protobuf::int32 DreamLandFormationItem::iquality() const {
  return iquality_;
}
inline void DreamLandFormationItem::set_iquality(::google::protobuf::int32 value) {
  set_has_iquality();
  iquality_ = value;
}

// -------------------------------------------------------------------

// CMD_DREAMLAND_QUERY_SCENEFORMATION_SC

// required string strActorName = 1;
inline bool CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::has_stractorname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::set_has_stractorname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::clear_has_stractorname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::clear_stractorname() {
  if (stractorname_ != &::google::protobuf::internal::kEmptyString) {
    stractorname_->clear();
  }
  clear_has_stractorname();
}
inline const ::std::string& CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::stractorname() const {
  return *stractorname_;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::set_stractorname(const ::std::string& value) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(value);
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::set_stractorname(const char* value) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(value);
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::set_stractorname(const char* value, size_t size) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::mutable_stractorname() {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  return stractorname_;
}
inline ::std::string* CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::release_stractorname() {
  clear_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stractorname_;
    stractorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::set_allocated_stractorname(::std::string* stractorname) {
  if (stractorname_ != &::google::protobuf::internal::kEmptyString) {
    delete stractorname_;
  }
  if (stractorname) {
    set_has_stractorname();
    stractorname_ = stractorname;
  } else {
    clear_has_stractorname();
    stractorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .GSProto.DreamLandFormationItem szFormationItem = 2;
inline int CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::szformationitem_size() const {
  return szformationitem_.size();
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::clear_szformationitem() {
  szformationitem_.Clear();
}
inline const ::GSProto::DreamLandFormationItem& CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::szformationitem(int index) const {
  return szformationitem_.Get(index);
}
inline ::GSProto::DreamLandFormationItem* CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::mutable_szformationitem(int index) {
  return szformationitem_.Mutable(index);
}
inline ::GSProto::DreamLandFormationItem* CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::add_szformationitem() {
  return szformationitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::DreamLandFormationItem >&
CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::szformationitem() const {
  return szformationitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::DreamLandFormationItem >*
CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::mutable_szformationitem() {
  return &szformationitem_;
}

// required int32 iTotalFightVaule = 3;
inline bool CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::has_itotalfightvaule() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::set_has_itotalfightvaule() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::clear_has_itotalfightvaule() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::clear_itotalfightvaule() {
  itotalfightvaule_ = 0;
  clear_has_itotalfightvaule();
}
inline ::google::protobuf::int32 CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::itotalfightvaule() const {
  return itotalfightvaule_;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::set_itotalfightvaule(::google::protobuf::int32 value) {
  set_has_itotalfightvaule();
  itotalfightvaule_ = value;
}

// required int32 iActorHead = 4;
inline bool CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::has_iactorhead() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::set_has_iactorhead() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::clear_has_iactorhead() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::clear_iactorhead() {
  iactorhead_ = 0;
  clear_has_iactorhead();
}
inline ::google::protobuf::int32 CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::iactorhead() const {
  return iactorhead_;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::set_iactorhead(::google::protobuf::int32 value) {
  set_has_iactorhead();
  iactorhead_ = value;
}

// required int32 iActorLevel = 5;
inline bool CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::has_iactorlevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::set_has_iactorlevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::clear_has_iactorlevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::clear_iactorlevel() {
  iactorlevel_ = 0;
  clear_has_iactorlevel();
}
inline ::google::protobuf::int32 CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::iactorlevel() const {
  return iactorlevel_;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::set_iactorlevel(::google::protobuf::int32 value) {
  set_has_iactorlevel();
  iactorlevel_ = value;
}

// optional string strLegionName = 6;
inline bool CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::has_strlegionname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::set_has_strlegionname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::clear_has_strlegionname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::clear_strlegionname() {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    strlegionname_->clear();
  }
  clear_has_strlegionname();
}
inline const ::std::string& CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::strlegionname() const {
  return *strlegionname_;
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::set_strlegionname(const ::std::string& value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::set_strlegionname(const char* value) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(value);
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::set_strlegionname(const char* value, size_t size) {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  strlegionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::mutable_strlegionname() {
  set_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionname_ = new ::std::string;
  }
  return strlegionname_;
}
inline ::std::string* CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::release_strlegionname() {
  clear_has_strlegionname();
  if (strlegionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strlegionname_;
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_DREAMLAND_QUERY_SCENEFORMATION_SC::set_allocated_strlegionname(::std::string* strlegionname) {
  if (strlegionname_ != &::google::protobuf::internal::kEmptyString) {
    delete strlegionname_;
  }
  if (strlegionname) {
    set_has_strlegionname();
    strlegionname_ = strlegionname;
  } else {
    clear_has_strlegionname();
    strlegionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// HeroLevelStepState

// required int32 iLevelStep = 1;
inline bool HeroLevelStepState::has_ilevelstep() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroLevelStepState::set_has_ilevelstep() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroLevelStepState::clear_has_ilevelstep() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroLevelStepState::clear_ilevelstep() {
  ilevelstep_ = 0;
  clear_has_ilevelstep();
}
inline ::google::protobuf::int32 HeroLevelStepState::ilevelstep() const {
  return ilevelstep_;
}
inline void HeroLevelStepState::set_ilevelstep(::google::protobuf::int32 value) {
  set_has_ilevelstep();
  ilevelstep_ = value;
}

// required int32 iHPGrow = 2;
inline bool HeroLevelStepState::has_ihpgrow() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroLevelStepState::set_has_ihpgrow() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroLevelStepState::clear_has_ihpgrow() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroLevelStepState::clear_ihpgrow() {
  ihpgrow_ = 0;
  clear_has_ihpgrow();
}
inline ::google::protobuf::int32 HeroLevelStepState::ihpgrow() const {
  return ihpgrow_;
}
inline void HeroLevelStepState::set_ihpgrow(::google::protobuf::int32 value) {
  set_has_ihpgrow();
  ihpgrow_ = value;
}

// required int32 iAttGrow = 3;
inline bool HeroLevelStepState::has_iattgrow() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroLevelStepState::set_has_iattgrow() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroLevelStepState::clear_has_iattgrow() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroLevelStepState::clear_iattgrow() {
  iattgrow_ = 0;
  clear_has_iattgrow();
}
inline ::google::protobuf::int32 HeroLevelStepState::iattgrow() const {
  return iattgrow_;
}
inline void HeroLevelStepState::set_iattgrow(::google::protobuf::int32 value) {
  set_has_iattgrow();
  iattgrow_ = value;
}

// optional int32 iDefGrow = 4;
inline bool HeroLevelStepState::has_idefgrow() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HeroLevelStepState::set_has_idefgrow() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HeroLevelStepState::clear_has_idefgrow() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HeroLevelStepState::clear_idefgrow() {
  idefgrow_ = 0;
  clear_has_idefgrow();
}
inline ::google::protobuf::int32 HeroLevelStepState::idefgrow() const {
  return idefgrow_;
}
inline void HeroLevelStepState::set_idefgrow(::google::protobuf::int32 value) {
  set_has_idefgrow();
  idefgrow_ = value;
}

// -------------------------------------------------------------------

// CMD_HERO_LEVELSTEPUP_SC

// required uint32 dwHeroObjectID = 1;
inline bool CMD_HERO_LEVELSTEPUP_SC::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_HERO_LEVELSTEPUP_SC::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_HERO_LEVELSTEPUP_SC::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_HERO_LEVELSTEPUP_SC::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 CMD_HERO_LEVELSTEPUP_SC::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void CMD_HERO_LEVELSTEPUP_SC::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// required .GSProto.HeroLevelStepState oldState = 2;
inline bool CMD_HERO_LEVELSTEPUP_SC::has_oldstate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_HERO_LEVELSTEPUP_SC::set_has_oldstate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_HERO_LEVELSTEPUP_SC::clear_has_oldstate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_HERO_LEVELSTEPUP_SC::clear_oldstate() {
  if (oldstate_ != NULL) oldstate_->::GSProto::HeroLevelStepState::Clear();
  clear_has_oldstate();
}
inline const ::GSProto::HeroLevelStepState& CMD_HERO_LEVELSTEPUP_SC::oldstate() const {
  return oldstate_ != NULL ? *oldstate_ : *default_instance_->oldstate_;
}
inline ::GSProto::HeroLevelStepState* CMD_HERO_LEVELSTEPUP_SC::mutable_oldstate() {
  set_has_oldstate();
  if (oldstate_ == NULL) oldstate_ = new ::GSProto::HeroLevelStepState;
  return oldstate_;
}
inline ::GSProto::HeroLevelStepState* CMD_HERO_LEVELSTEPUP_SC::release_oldstate() {
  clear_has_oldstate();
  ::GSProto::HeroLevelStepState* temp = oldstate_;
  oldstate_ = NULL;
  return temp;
}
inline void CMD_HERO_LEVELSTEPUP_SC::set_allocated_oldstate(::GSProto::HeroLevelStepState* oldstate) {
  delete oldstate_;
  oldstate_ = oldstate;
  if (oldstate) {
    set_has_oldstate();
  } else {
    clear_has_oldstate();
  }
}

// required .GSProto.HeroLevelStepState newState = 3;
inline bool CMD_HERO_LEVELSTEPUP_SC::has_newstate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_HERO_LEVELSTEPUP_SC::set_has_newstate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_HERO_LEVELSTEPUP_SC::clear_has_newstate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_HERO_LEVELSTEPUP_SC::clear_newstate() {
  if (newstate_ != NULL) newstate_->::GSProto::HeroLevelStepState::Clear();
  clear_has_newstate();
}
inline const ::GSProto::HeroLevelStepState& CMD_HERO_LEVELSTEPUP_SC::newstate() const {
  return newstate_ != NULL ? *newstate_ : *default_instance_->newstate_;
}
inline ::GSProto::HeroLevelStepState* CMD_HERO_LEVELSTEPUP_SC::mutable_newstate() {
  set_has_newstate();
  if (newstate_ == NULL) newstate_ = new ::GSProto::HeroLevelStepState;
  return newstate_;
}
inline ::GSProto::HeroLevelStepState* CMD_HERO_LEVELSTEPUP_SC::release_newstate() {
  clear_has_newstate();
  ::GSProto::HeroLevelStepState* temp = newstate_;
  newstate_ = NULL;
  return temp;
}
inline void CMD_HERO_LEVELSTEPUP_SC::set_allocated_newstate(::GSProto::HeroLevelStepState* newstate) {
  delete newstate_;
  newstate_ = newstate;
  if (newstate) {
    set_has_newstate();
  } else {
    clear_has_newstate();
  }
}

// required int32 iHPAddValue = 4;
inline bool CMD_HERO_LEVELSTEPUP_SC::has_ihpaddvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_HERO_LEVELSTEPUP_SC::set_has_ihpaddvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_HERO_LEVELSTEPUP_SC::clear_has_ihpaddvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_HERO_LEVELSTEPUP_SC::clear_ihpaddvalue() {
  ihpaddvalue_ = 0;
  clear_has_ihpaddvalue();
}
inline ::google::protobuf::int32 CMD_HERO_LEVELSTEPUP_SC::ihpaddvalue() const {
  return ihpaddvalue_;
}
inline void CMD_HERO_LEVELSTEPUP_SC::set_ihpaddvalue(::google::protobuf::int32 value) {
  set_has_ihpaddvalue();
  ihpaddvalue_ = value;
}

// required int32 iAttAddValue = 5;
inline bool CMD_HERO_LEVELSTEPUP_SC::has_iattaddvalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_HERO_LEVELSTEPUP_SC::set_has_iattaddvalue() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_HERO_LEVELSTEPUP_SC::clear_has_iattaddvalue() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_HERO_LEVELSTEPUP_SC::clear_iattaddvalue() {
  iattaddvalue_ = 0;
  clear_has_iattaddvalue();
}
inline ::google::protobuf::int32 CMD_HERO_LEVELSTEPUP_SC::iattaddvalue() const {
  return iattaddvalue_;
}
inline void CMD_HERO_LEVELSTEPUP_SC::set_iattaddvalue(::google::protobuf::int32 value) {
  set_has_iattaddvalue();
  iattaddvalue_ = value;
}

// optional int32 iDefAddValue = 6;
inline bool CMD_HERO_LEVELSTEPUP_SC::has_idefaddvalue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMD_HERO_LEVELSTEPUP_SC::set_has_idefaddvalue() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMD_HERO_LEVELSTEPUP_SC::clear_has_idefaddvalue() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMD_HERO_LEVELSTEPUP_SC::clear_idefaddvalue() {
  idefaddvalue_ = 0;
  clear_has_idefaddvalue();
}
inline ::google::protobuf::int32 CMD_HERO_LEVELSTEPUP_SC::idefaddvalue() const {
  return idefaddvalue_;
}
inline void CMD_HERO_LEVELSTEPUP_SC::set_idefaddvalue(::google::protobuf::int32 value) {
  set_has_idefaddvalue();
  idefaddvalue_ = value;
}

// -------------------------------------------------------------------

// HeroSoulChg

// required int32 iHeroID = 1;
inline bool HeroSoulChg::has_iheroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeroSoulChg::set_has_iheroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeroSoulChg::clear_has_iheroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeroSoulChg::clear_iheroid() {
  iheroid_ = 0;
  clear_has_iheroid();
}
inline ::google::protobuf::int32 HeroSoulChg::iheroid() const {
  return iheroid_;
}
inline void HeroSoulChg::set_iheroid(::google::protobuf::int32 value) {
  set_has_iheroid();
  iheroid_ = value;
}

// required sint32 iChgCount = 2;
inline bool HeroSoulChg::has_ichgcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeroSoulChg::set_has_ichgcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeroSoulChg::clear_has_ichgcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeroSoulChg::clear_ichgcount() {
  ichgcount_ = 0;
  clear_has_ichgcount();
}
inline ::google::protobuf::int32 HeroSoulChg::ichgcount() const {
  return ichgcount_;
}
inline void HeroSoulChg::set_ichgcount(::google::protobuf::int32 value) {
  set_has_ichgcount();
  ichgcount_ = value;
}

// required int32 iCurCount = 3;
inline bool HeroSoulChg::has_icurcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HeroSoulChg::set_has_icurcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HeroSoulChg::clear_has_icurcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HeroSoulChg::clear_icurcount() {
  icurcount_ = 0;
  clear_has_icurcount();
}
inline ::google::protobuf::int32 HeroSoulChg::icurcount() const {
  return icurcount_;
}
inline void HeroSoulChg::set_icurcount(::google::protobuf::int32 value) {
  set_has_icurcount();
  icurcount_ = value;
}

// -------------------------------------------------------------------

// CMD_HERO_SOULCHG_SC

// repeated .GSProto.HeroSoulChg szChgList = 1;
inline int CMD_HERO_SOULCHG_SC::szchglist_size() const {
  return szchglist_.size();
}
inline void CMD_HERO_SOULCHG_SC::clear_szchglist() {
  szchglist_.Clear();
}
inline const ::GSProto::HeroSoulChg& CMD_HERO_SOULCHG_SC::szchglist(int index) const {
  return szchglist_.Get(index);
}
inline ::GSProto::HeroSoulChg* CMD_HERO_SOULCHG_SC::mutable_szchglist(int index) {
  return szchglist_.Mutable(index);
}
inline ::GSProto::HeroSoulChg* CMD_HERO_SOULCHG_SC::add_szchglist() {
  return szchglist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HeroSoulChg >&
CMD_HERO_SOULCHG_SC::szchglist() const {
  return szchglist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::HeroSoulChg >*
CMD_HERO_SOULCHG_SC::mutable_szchglist() {
  return &szchglist_;
}

// -------------------------------------------------------------------

// CMD_HERO_TALLENT_LEVELUP_CS

// required uint32 dwHeroObjectID = 1;
inline bool CMD_HERO_TALLENT_LEVELUP_CS::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_HERO_TALLENT_LEVELUP_CS::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_HERO_TALLENT_LEVELUP_CS::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_HERO_TALLENT_LEVELUP_CS::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 CMD_HERO_TALLENT_LEVELUP_CS::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void CMD_HERO_TALLENT_LEVELUP_CS::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// required int32 iTallentID = 2;
inline bool CMD_HERO_TALLENT_LEVELUP_CS::has_itallentid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_HERO_TALLENT_LEVELUP_CS::set_has_itallentid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_HERO_TALLENT_LEVELUP_CS::clear_has_itallentid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_HERO_TALLENT_LEVELUP_CS::clear_itallentid() {
  itallentid_ = 0;
  clear_has_itallentid();
}
inline ::google::protobuf::int32 CMD_HERO_TALLENT_LEVELUP_CS::itallentid() const {
  return itallentid_;
}
inline void CMD_HERO_TALLENT_LEVELUP_CS::set_itallentid(::google::protobuf::int32 value) {
  set_has_itallentid();
  itallentid_ = value;
}

// -------------------------------------------------------------------

// CMD_HERO_TALLENT_UPDATE_SC

// required .GSProto.HeroTallent tallentData = 1;
inline bool CMD_HERO_TALLENT_UPDATE_SC::has_tallentdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_HERO_TALLENT_UPDATE_SC::set_has_tallentdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_HERO_TALLENT_UPDATE_SC::clear_has_tallentdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_HERO_TALLENT_UPDATE_SC::clear_tallentdata() {
  if (tallentdata_ != NULL) tallentdata_->::GSProto::HeroTallent::Clear();
  clear_has_tallentdata();
}
inline const ::GSProto::HeroTallent& CMD_HERO_TALLENT_UPDATE_SC::tallentdata() const {
  return tallentdata_ != NULL ? *tallentdata_ : *default_instance_->tallentdata_;
}
inline ::GSProto::HeroTallent* CMD_HERO_TALLENT_UPDATE_SC::mutable_tallentdata() {
  set_has_tallentdata();
  if (tallentdata_ == NULL) tallentdata_ = new ::GSProto::HeroTallent;
  return tallentdata_;
}
inline ::GSProto::HeroTallent* CMD_HERO_TALLENT_UPDATE_SC::release_tallentdata() {
  clear_has_tallentdata();
  ::GSProto::HeroTallent* temp = tallentdata_;
  tallentdata_ = NULL;
  return temp;
}
inline void CMD_HERO_TALLENT_UPDATE_SC::set_allocated_tallentdata(::GSProto::HeroTallent* tallentdata) {
  delete tallentdata_;
  tallentdata_ = tallentdata;
  if (tallentdata) {
    set_has_tallentdata();
  } else {
    clear_has_tallentdata();
  }
}

// optional uint32 dwObjectID = 2;
inline bool CMD_HERO_TALLENT_UPDATE_SC::has_dwobjectid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_HERO_TALLENT_UPDATE_SC::set_has_dwobjectid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_HERO_TALLENT_UPDATE_SC::clear_has_dwobjectid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_HERO_TALLENT_UPDATE_SC::clear_dwobjectid() {
  dwobjectid_ = 0u;
  clear_has_dwobjectid();
}
inline ::google::protobuf::uint32 CMD_HERO_TALLENT_UPDATE_SC::dwobjectid() const {
  return dwobjectid_;
}
inline void CMD_HERO_TALLENT_UPDATE_SC::set_dwobjectid(::google::protobuf::uint32 value) {
  set_has_dwobjectid();
  dwobjectid_ = value;
}

// -------------------------------------------------------------------

// CMD_ITEM_SELLITEM_CS

// required int32 iItemBaseId = 1;
inline bool CMD_ITEM_SELLITEM_CS::has_iitembaseid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_ITEM_SELLITEM_CS::set_has_iitembaseid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_ITEM_SELLITEM_CS::clear_has_iitembaseid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_ITEM_SELLITEM_CS::clear_iitembaseid() {
  iitembaseid_ = 0;
  clear_has_iitembaseid();
}
inline ::google::protobuf::int32 CMD_ITEM_SELLITEM_CS::iitembaseid() const {
  return iitembaseid_;
}
inline void CMD_ITEM_SELLITEM_CS::set_iitembaseid(::google::protobuf::int32 value) {
  set_has_iitembaseid();
  iitembaseid_ = value;
}

// required int32 iItemCount = 2;
inline bool CMD_ITEM_SELLITEM_CS::has_iitemcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_ITEM_SELLITEM_CS::set_has_iitemcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_ITEM_SELLITEM_CS::clear_has_iitemcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_ITEM_SELLITEM_CS::clear_iitemcount() {
  iitemcount_ = 0;
  clear_has_iitemcount();
}
inline ::google::protobuf::int32 CMD_ITEM_SELLITEM_CS::iitemcount() const {
  return iitemcount_;
}
inline void CMD_ITEM_SELLITEM_CS::set_iitemcount(::google::protobuf::int32 value) {
  set_has_iitemcount();
  iitemcount_ = value;
}

// -------------------------------------------------------------------

// GodAnimalLevelStepState

// required int32 iGodAnimalLevelStep = 1;
inline bool GodAnimalLevelStepState::has_igodanimallevelstep() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GodAnimalLevelStepState::set_has_igodanimallevelstep() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GodAnimalLevelStepState::clear_has_igodanimallevelstep() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GodAnimalLevelStepState::clear_igodanimallevelstep() {
  igodanimallevelstep_ = 0;
  clear_has_igodanimallevelstep();
}
inline ::google::protobuf::int32 GodAnimalLevelStepState::igodanimallevelstep() const {
  return igodanimallevelstep_;
}
inline void GodAnimalLevelStepState::set_igodanimallevelstep(::google::protobuf::int32 value) {
  set_has_igodanimallevelstep();
  igodanimallevelstep_ = value;
}

// required int32 iHpGrow = 2;
inline bool GodAnimalLevelStepState::has_ihpgrow() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GodAnimalLevelStepState::set_has_ihpgrow() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GodAnimalLevelStepState::clear_has_ihpgrow() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GodAnimalLevelStepState::clear_ihpgrow() {
  ihpgrow_ = 0;
  clear_has_ihpgrow();
}
inline ::google::protobuf::int32 GodAnimalLevelStepState::ihpgrow() const {
  return ihpgrow_;
}
inline void GodAnimalLevelStepState::set_ihpgrow(::google::protobuf::int32 value) {
  set_has_ihpgrow();
  ihpgrow_ = value;
}

// required int32 iAttGrow = 3;
inline bool GodAnimalLevelStepState::has_iattgrow() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GodAnimalLevelStepState::set_has_iattgrow() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GodAnimalLevelStepState::clear_has_iattgrow() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GodAnimalLevelStepState::clear_iattgrow() {
  iattgrow_ = 0;
  clear_has_iattgrow();
}
inline ::google::protobuf::int32 GodAnimalLevelStepState::iattgrow() const {
  return iattgrow_;
}
inline void GodAnimalLevelStepState::set_iattgrow(::google::protobuf::int32 value) {
  set_has_iattgrow();
  iattgrow_ = value;
}

// -------------------------------------------------------------------

// CMD_GODANIMAL_EXELEVELSTEPUP_SC

// required uint32 dwNewGodAnimalObjectId = 1;
inline bool CMD_GODANIMAL_EXELEVELSTEPUP_SC::has_dwnewgodanimalobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GODANIMAL_EXELEVELSTEPUP_SC::set_has_dwnewgodanimalobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GODANIMAL_EXELEVELSTEPUP_SC::clear_has_dwnewgodanimalobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GODANIMAL_EXELEVELSTEPUP_SC::clear_dwnewgodanimalobjectid() {
  dwnewgodanimalobjectid_ = 0u;
  clear_has_dwnewgodanimalobjectid();
}
inline ::google::protobuf::uint32 CMD_GODANIMAL_EXELEVELSTEPUP_SC::dwnewgodanimalobjectid() const {
  return dwnewgodanimalobjectid_;
}
inline void CMD_GODANIMAL_EXELEVELSTEPUP_SC::set_dwnewgodanimalobjectid(::google::protobuf::uint32 value) {
  set_has_dwnewgodanimalobjectid();
  dwnewgodanimalobjectid_ = value;
}

// required .GSProto.GodAnimalLevelStepState oldState = 2;
inline bool CMD_GODANIMAL_EXELEVELSTEPUP_SC::has_oldstate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_GODANIMAL_EXELEVELSTEPUP_SC::set_has_oldstate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_GODANIMAL_EXELEVELSTEPUP_SC::clear_has_oldstate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_GODANIMAL_EXELEVELSTEPUP_SC::clear_oldstate() {
  if (oldstate_ != NULL) oldstate_->::GSProto::GodAnimalLevelStepState::Clear();
  clear_has_oldstate();
}
inline const ::GSProto::GodAnimalLevelStepState& CMD_GODANIMAL_EXELEVELSTEPUP_SC::oldstate() const {
  return oldstate_ != NULL ? *oldstate_ : *default_instance_->oldstate_;
}
inline ::GSProto::GodAnimalLevelStepState* CMD_GODANIMAL_EXELEVELSTEPUP_SC::mutable_oldstate() {
  set_has_oldstate();
  if (oldstate_ == NULL) oldstate_ = new ::GSProto::GodAnimalLevelStepState;
  return oldstate_;
}
inline ::GSProto::GodAnimalLevelStepState* CMD_GODANIMAL_EXELEVELSTEPUP_SC::release_oldstate() {
  clear_has_oldstate();
  ::GSProto::GodAnimalLevelStepState* temp = oldstate_;
  oldstate_ = NULL;
  return temp;
}
inline void CMD_GODANIMAL_EXELEVELSTEPUP_SC::set_allocated_oldstate(::GSProto::GodAnimalLevelStepState* oldstate) {
  delete oldstate_;
  oldstate_ = oldstate;
  if (oldstate) {
    set_has_oldstate();
  } else {
    clear_has_oldstate();
  }
}

// required .GSProto.GodAnimalLevelStepState newState = 3;
inline bool CMD_GODANIMAL_EXELEVELSTEPUP_SC::has_newstate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_GODANIMAL_EXELEVELSTEPUP_SC::set_has_newstate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_GODANIMAL_EXELEVELSTEPUP_SC::clear_has_newstate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_GODANIMAL_EXELEVELSTEPUP_SC::clear_newstate() {
  if (newstate_ != NULL) newstate_->::GSProto::GodAnimalLevelStepState::Clear();
  clear_has_newstate();
}
inline const ::GSProto::GodAnimalLevelStepState& CMD_GODANIMAL_EXELEVELSTEPUP_SC::newstate() const {
  return newstate_ != NULL ? *newstate_ : *default_instance_->newstate_;
}
inline ::GSProto::GodAnimalLevelStepState* CMD_GODANIMAL_EXELEVELSTEPUP_SC::mutable_newstate() {
  set_has_newstate();
  if (newstate_ == NULL) newstate_ = new ::GSProto::GodAnimalLevelStepState;
  return newstate_;
}
inline ::GSProto::GodAnimalLevelStepState* CMD_GODANIMAL_EXELEVELSTEPUP_SC::release_newstate() {
  clear_has_newstate();
  ::GSProto::GodAnimalLevelStepState* temp = newstate_;
  newstate_ = NULL;
  return temp;
}
inline void CMD_GODANIMAL_EXELEVELSTEPUP_SC::set_allocated_newstate(::GSProto::GodAnimalLevelStepState* newstate) {
  delete newstate_;
  newstate_ = newstate;
  if (newstate) {
    set_has_newstate();
  } else {
    clear_has_newstate();
  }
}

// required int32 iHPAddValue = 4;
inline bool CMD_GODANIMAL_EXELEVELSTEPUP_SC::has_ihpaddvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_GODANIMAL_EXELEVELSTEPUP_SC::set_has_ihpaddvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_GODANIMAL_EXELEVELSTEPUP_SC::clear_has_ihpaddvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_GODANIMAL_EXELEVELSTEPUP_SC::clear_ihpaddvalue() {
  ihpaddvalue_ = 0;
  clear_has_ihpaddvalue();
}
inline ::google::protobuf::int32 CMD_GODANIMAL_EXELEVELSTEPUP_SC::ihpaddvalue() const {
  return ihpaddvalue_;
}
inline void CMD_GODANIMAL_EXELEVELSTEPUP_SC::set_ihpaddvalue(::google::protobuf::int32 value) {
  set_has_ihpaddvalue();
  ihpaddvalue_ = value;
}

// required int32 iAttAddValue = 5;
inline bool CMD_GODANIMAL_EXELEVELSTEPUP_SC::has_iattaddvalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_GODANIMAL_EXELEVELSTEPUP_SC::set_has_iattaddvalue() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_GODANIMAL_EXELEVELSTEPUP_SC::clear_has_iattaddvalue() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_GODANIMAL_EXELEVELSTEPUP_SC::clear_iattaddvalue() {
  iattaddvalue_ = 0;
  clear_has_iattaddvalue();
}
inline ::google::protobuf::int32 CMD_GODANIMAL_EXELEVELSTEPUP_SC::iattaddvalue() const {
  return iattaddvalue_;
}
inline void CMD_GODANIMAL_EXELEVELSTEPUP_SC::set_iattaddvalue(::google::protobuf::int32 value) {
  set_has_iattaddvalue();
  iattaddvalue_ = value;
}

// -------------------------------------------------------------------

// CMD_COMMON_GETHERO_SC

// required int32 iHeroBaseId = 1;
inline bool CMD_COMMON_GETHERO_SC::has_iherobaseid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_COMMON_GETHERO_SC::set_has_iherobaseid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_COMMON_GETHERO_SC::clear_has_iherobaseid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_COMMON_GETHERO_SC::clear_iherobaseid() {
  iherobaseid_ = 0;
  clear_has_iherobaseid();
}
inline ::google::protobuf::int32 CMD_COMMON_GETHERO_SC::iherobaseid() const {
  return iherobaseid_;
}
inline void CMD_COMMON_GETHERO_SC::set_iherobaseid(::google::protobuf::int32 value) {
  set_has_iherobaseid();
  iherobaseid_ = value;
}

// required int32 iGetHeroSoul = 2;
inline bool CMD_COMMON_GETHERO_SC::has_igetherosoul() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_COMMON_GETHERO_SC::set_has_igetherosoul() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_COMMON_GETHERO_SC::clear_has_igetherosoul() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_COMMON_GETHERO_SC::clear_igetherosoul() {
  igetherosoul_ = 0;
  clear_has_igetherosoul();
}
inline ::google::protobuf::int32 CMD_COMMON_GETHERO_SC::igetherosoul() const {
  return igetherosoul_;
}
inline void CMD_COMMON_GETHERO_SC::set_igetherosoul(::google::protobuf::int32 value) {
  set_has_igetherosoul();
  igetherosoul_ = value;
}

// required int32 iHeroOldStep = 3;
inline bool CMD_COMMON_GETHERO_SC::has_iherooldstep() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_COMMON_GETHERO_SC::set_has_iherooldstep() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_COMMON_GETHERO_SC::clear_has_iherooldstep() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_COMMON_GETHERO_SC::clear_iherooldstep() {
  iherooldstep_ = 0;
  clear_has_iherooldstep();
}
inline ::google::protobuf::int32 CMD_COMMON_GETHERO_SC::iherooldstep() const {
  return iherooldstep_;
}
inline void CMD_COMMON_GETHERO_SC::set_iherooldstep(::google::protobuf::int32 value) {
  set_has_iherooldstep();
  iherooldstep_ = value;
}

// required int32 iHeroNewStep = 4;
inline bool CMD_COMMON_GETHERO_SC::has_iheronewstep() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_COMMON_GETHERO_SC::set_has_iheronewstep() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_COMMON_GETHERO_SC::clear_has_iheronewstep() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_COMMON_GETHERO_SC::clear_iheronewstep() {
  iheronewstep_ = 0;
  clear_has_iheronewstep();
}
inline ::google::protobuf::int32 CMD_COMMON_GETHERO_SC::iheronewstep() const {
  return iheronewstep_;
}
inline void CMD_COMMON_GETHERO_SC::set_iheronewstep(::google::protobuf::int32 value) {
  set_has_iheronewstep();
  iheronewstep_ = value;
}

// -------------------------------------------------------------------

// CMD_CHG_ACTOR_HEAD_CS

// required .GSProto.enHeadType enHeadType = 1;
inline bool CMD_CHG_ACTOR_HEAD_CS::has_enheadtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_CHG_ACTOR_HEAD_CS::set_has_enheadtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_CHG_ACTOR_HEAD_CS::clear_has_enheadtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_CHG_ACTOR_HEAD_CS::clear_enheadtype() {
  enheadtype_ = 0;
  clear_has_enheadtype();
}
inline ::GSProto::enHeadType CMD_CHG_ACTOR_HEAD_CS::enheadtype() const {
  return static_cast< ::GSProto::enHeadType >(enheadtype_);
}
inline void CMD_CHG_ACTOR_HEAD_CS::set_enheadtype(::GSProto::enHeadType value) {
  assert(::GSProto::enHeadType_IsValid(value));
  set_has_enheadtype();
  enheadtype_ = value;
}

// required int32 iHeadId = 2;
inline bool CMD_CHG_ACTOR_HEAD_CS::has_iheadid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_CHG_ACTOR_HEAD_CS::set_has_iheadid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_CHG_ACTOR_HEAD_CS::clear_has_iheadid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_CHG_ACTOR_HEAD_CS::clear_iheadid() {
  iheadid_ = 0;
  clear_has_iheadid();
}
inline ::google::protobuf::int32 CMD_CHG_ACTOR_HEAD_CS::iheadid() const {
  return iheadid_;
}
inline void CMD_CHG_ACTOR_HEAD_CS::set_iheadid(::google::protobuf::int32 value) {
  set_has_iheadid();
  iheadid_ = value;
}

// -------------------------------------------------------------------

// CMD_EQUIP_RONGLIAN_CS

// repeated int32 equipPosList = 1;
inline int CMD_EQUIP_RONGLIAN_CS::equipposlist_size() const {
  return equipposlist_.size();
}
inline void CMD_EQUIP_RONGLIAN_CS::clear_equipposlist() {
  equipposlist_.Clear();
}
inline ::google::protobuf::int32 CMD_EQUIP_RONGLIAN_CS::equipposlist(int index) const {
  return equipposlist_.Get(index);
}
inline void CMD_EQUIP_RONGLIAN_CS::set_equipposlist(int index, ::google::protobuf::int32 value) {
  equipposlist_.Set(index, value);
}
inline void CMD_EQUIP_RONGLIAN_CS::add_equipposlist(::google::protobuf::int32 value) {
  equipposlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CMD_EQUIP_RONGLIAN_CS::equipposlist() const {
  return equipposlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CMD_EQUIP_RONGLIAN_CS::mutable_equipposlist() {
  return &equipposlist_;
}

// -------------------------------------------------------------------

// CMD_EQUIP_RONGLIAN_SC

// required int32 retCode = 1;
inline bool CMD_EQUIP_RONGLIAN_SC::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_RONGLIAN_SC::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_RONGLIAN_SC::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_RONGLIAN_SC::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 CMD_EQUIP_RONGLIAN_SC::retcode() const {
  return retcode_;
}
inline void CMD_EQUIP_RONGLIAN_SC::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// optional .GSProto.EquipInfo equipData = 2;
inline bool CMD_EQUIP_RONGLIAN_SC::has_equipdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_EQUIP_RONGLIAN_SC::set_has_equipdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_EQUIP_RONGLIAN_SC::clear_has_equipdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_EQUIP_RONGLIAN_SC::clear_equipdata() {
  if (equipdata_ != NULL) equipdata_->::GSProto::EquipInfo::Clear();
  clear_has_equipdata();
}
inline const ::GSProto::EquipInfo& CMD_EQUIP_RONGLIAN_SC::equipdata() const {
  return equipdata_ != NULL ? *equipdata_ : *default_instance_->equipdata_;
}
inline ::GSProto::EquipInfo* CMD_EQUIP_RONGLIAN_SC::mutable_equipdata() {
  set_has_equipdata();
  if (equipdata_ == NULL) equipdata_ = new ::GSProto::EquipInfo;
  return equipdata_;
}
inline ::GSProto::EquipInfo* CMD_EQUIP_RONGLIAN_SC::release_equipdata() {
  clear_has_equipdata();
  ::GSProto::EquipInfo* temp = equipdata_;
  equipdata_ = NULL;
  return temp;
}
inline void CMD_EQUIP_RONGLIAN_SC::set_allocated_equipdata(::GSProto::EquipInfo* equipdata) {
  delete equipdata_;
  equipdata_ = equipdata;
  if (equipdata) {
    set_has_equipdata();
  } else {
    clear_has_equipdata();
  }
}

// -------------------------------------------------------------------

// CMD_EQUIP_XILIAN_DATA_SC

// required uint32 objId = 1;
inline bool CMD_EQUIP_XILIAN_DATA_SC::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_XILIAN_DATA_SC::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_XILIAN_DATA_SC::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_XILIAN_DATA_SC::clear_objid() {
  objid_ = 0u;
  clear_has_objid();
}
inline ::google::protobuf::uint32 CMD_EQUIP_XILIAN_DATA_SC::objid() const {
  return objid_;
}
inline void CMD_EQUIP_XILIAN_DATA_SC::set_objid(::google::protobuf::uint32 value) {
  set_has_objid();
  objid_ = value;
}

// repeated .GSProto.PropItem propList = 2;
inline int CMD_EQUIP_XILIAN_DATA_SC::proplist_size() const {
  return proplist_.size();
}
inline void CMD_EQUIP_XILIAN_DATA_SC::clear_proplist() {
  proplist_.Clear();
}
inline const ::GSProto::PropItem& CMD_EQUIP_XILIAN_DATA_SC::proplist(int index) const {
  return proplist_.Get(index);
}
inline ::GSProto::PropItem* CMD_EQUIP_XILIAN_DATA_SC::mutable_proplist(int index) {
  return proplist_.Mutable(index);
}
inline ::GSProto::PropItem* CMD_EQUIP_XILIAN_DATA_SC::add_proplist() {
  return proplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
CMD_EQUIP_XILIAN_DATA_SC::proplist() const {
  return proplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
CMD_EQUIP_XILIAN_DATA_SC::mutable_proplist() {
  return &proplist_;
}

// -------------------------------------------------------------------

// CMD_EQUIP_XILIAN_GEN_CS

// required uint32 cobjid = 1;
inline bool CMD_EQUIP_XILIAN_GEN_CS::has_cobjid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_XILIAN_GEN_CS::set_has_cobjid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_XILIAN_GEN_CS::clear_has_cobjid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_XILIAN_GEN_CS::clear_cobjid() {
  cobjid_ = 0u;
  clear_has_cobjid();
}
inline ::google::protobuf::uint32 CMD_EQUIP_XILIAN_GEN_CS::cobjid() const {
  return cobjid_;
}
inline void CMD_EQUIP_XILIAN_GEN_CS::set_cobjid(::google::protobuf::uint32 value) {
  set_has_cobjid();
  cobjid_ = value;
}

// required int32 pos = 2;
inline bool CMD_EQUIP_XILIAN_GEN_CS::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_EQUIP_XILIAN_GEN_CS::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_EQUIP_XILIAN_GEN_CS::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_EQUIP_XILIAN_GEN_CS::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 CMD_EQUIP_XILIAN_GEN_CS::pos() const {
  return pos_;
}
inline void CMD_EQUIP_XILIAN_GEN_CS::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// repeated int32 lockPosList = 3;
inline int CMD_EQUIP_XILIAN_GEN_CS::lockposlist_size() const {
  return lockposlist_.size();
}
inline void CMD_EQUIP_XILIAN_GEN_CS::clear_lockposlist() {
  lockposlist_.Clear();
}
inline ::google::protobuf::int32 CMD_EQUIP_XILIAN_GEN_CS::lockposlist(int index) const {
  return lockposlist_.Get(index);
}
inline void CMD_EQUIP_XILIAN_GEN_CS::set_lockposlist(int index, ::google::protobuf::int32 value) {
  lockposlist_.Set(index, value);
}
inline void CMD_EQUIP_XILIAN_GEN_CS::add_lockposlist(::google::protobuf::int32 value) {
  lockposlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CMD_EQUIP_XILIAN_GEN_CS::lockposlist() const {
  return lockposlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CMD_EQUIP_XILIAN_GEN_CS::mutable_lockposlist() {
  return &lockposlist_;
}

// -------------------------------------------------------------------

// CMD_EQUIP_XILIAN_GEN_SC

// required int32 retCode = 1;
inline bool CMD_EQUIP_XILIAN_GEN_SC::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_XILIAN_GEN_SC::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_XILIAN_GEN_SC::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_XILIAN_GEN_SC::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 CMD_EQUIP_XILIAN_GEN_SC::retcode() const {
  return retcode_;
}
inline void CMD_EQUIP_XILIAN_GEN_SC::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// required uint32 objId = 2;
inline bool CMD_EQUIP_XILIAN_GEN_SC::has_objid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_EQUIP_XILIAN_GEN_SC::set_has_objid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_EQUIP_XILIAN_GEN_SC::clear_has_objid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_EQUIP_XILIAN_GEN_SC::clear_objid() {
  objid_ = 0u;
  clear_has_objid();
}
inline ::google::protobuf::uint32 CMD_EQUIP_XILIAN_GEN_SC::objid() const {
  return objid_;
}
inline void CMD_EQUIP_XILIAN_GEN_SC::set_objid(::google::protobuf::uint32 value) {
  set_has_objid();
  objid_ = value;
}

// repeated .GSProto.PropItem propList = 3;
inline int CMD_EQUIP_XILIAN_GEN_SC::proplist_size() const {
  return proplist_.size();
}
inline void CMD_EQUIP_XILIAN_GEN_SC::clear_proplist() {
  proplist_.Clear();
}
inline const ::GSProto::PropItem& CMD_EQUIP_XILIAN_GEN_SC::proplist(int index) const {
  return proplist_.Get(index);
}
inline ::GSProto::PropItem* CMD_EQUIP_XILIAN_GEN_SC::mutable_proplist(int index) {
  return proplist_.Mutable(index);
}
inline ::GSProto::PropItem* CMD_EQUIP_XILIAN_GEN_SC::add_proplist() {
  return proplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
CMD_EQUIP_XILIAN_GEN_SC::proplist() const {
  return proplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
CMD_EQUIP_XILIAN_GEN_SC::mutable_proplist() {
  return &proplist_;
}

// -------------------------------------------------------------------

// CMD_EQUIP_XILIAN_REPLACE_CS

// required uint32 cobjid = 1;
inline bool CMD_EQUIP_XILIAN_REPLACE_CS::has_cobjid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_XILIAN_REPLACE_CS::set_has_cobjid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_XILIAN_REPLACE_CS::clear_has_cobjid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_XILIAN_REPLACE_CS::clear_cobjid() {
  cobjid_ = 0u;
  clear_has_cobjid();
}
inline ::google::protobuf::uint32 CMD_EQUIP_XILIAN_REPLACE_CS::cobjid() const {
  return cobjid_;
}
inline void CMD_EQUIP_XILIAN_REPLACE_CS::set_cobjid(::google::protobuf::uint32 value) {
  set_has_cobjid();
  cobjid_ = value;
}

// required int32 pos = 2;
inline bool CMD_EQUIP_XILIAN_REPLACE_CS::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_EQUIP_XILIAN_REPLACE_CS::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_EQUIP_XILIAN_REPLACE_CS::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_EQUIP_XILIAN_REPLACE_CS::clear_pos() {
  pos_ = 0;
  clear_has_pos();
}
inline ::google::protobuf::int32 CMD_EQUIP_XILIAN_REPLACE_CS::pos() const {
  return pos_;
}
inline void CMD_EQUIP_XILIAN_REPLACE_CS::set_pos(::google::protobuf::int32 value) {
  set_has_pos();
  pos_ = value;
}

// -------------------------------------------------------------------

// CMD_EQUIP_XILIAN_REPLACE_SC

// required int32 retCode = 1;
inline bool CMD_EQUIP_XILIAN_REPLACE_SC::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_XILIAN_REPLACE_SC::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_XILIAN_REPLACE_SC::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_XILIAN_REPLACE_SC::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 CMD_EQUIP_XILIAN_REPLACE_SC::retcode() const {
  return retcode_;
}
inline void CMD_EQUIP_XILIAN_REPLACE_SC::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// CMD_EQUIP_XILIAN_TRANSFER_CS

// required uint32 srcCObjId = 1;
inline bool CMD_EQUIP_XILIAN_TRANSFER_CS::has_srccobjid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_XILIAN_TRANSFER_CS::set_has_srccobjid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_XILIAN_TRANSFER_CS::clear_has_srccobjid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_XILIAN_TRANSFER_CS::clear_srccobjid() {
  srccobjid_ = 0u;
  clear_has_srccobjid();
}
inline ::google::protobuf::uint32 CMD_EQUIP_XILIAN_TRANSFER_CS::srccobjid() const {
  return srccobjid_;
}
inline void CMD_EQUIP_XILIAN_TRANSFER_CS::set_srccobjid(::google::protobuf::uint32 value) {
  set_has_srccobjid();
  srccobjid_ = value;
}

// required uint32 dstCObjId = 2;
inline bool CMD_EQUIP_XILIAN_TRANSFER_CS::has_dstcobjid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_EQUIP_XILIAN_TRANSFER_CS::set_has_dstcobjid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_EQUIP_XILIAN_TRANSFER_CS::clear_has_dstcobjid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_EQUIP_XILIAN_TRANSFER_CS::clear_dstcobjid() {
  dstcobjid_ = 0u;
  clear_has_dstcobjid();
}
inline ::google::protobuf::uint32 CMD_EQUIP_XILIAN_TRANSFER_CS::dstcobjid() const {
  return dstcobjid_;
}
inline void CMD_EQUIP_XILIAN_TRANSFER_CS::set_dstcobjid(::google::protobuf::uint32 value) {
  set_has_dstcobjid();
  dstcobjid_ = value;
}

// required int32 srcPos = 3;
inline bool CMD_EQUIP_XILIAN_TRANSFER_CS::has_srcpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_EQUIP_XILIAN_TRANSFER_CS::set_has_srcpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_EQUIP_XILIAN_TRANSFER_CS::clear_has_srcpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_EQUIP_XILIAN_TRANSFER_CS::clear_srcpos() {
  srcpos_ = 0;
  clear_has_srcpos();
}
inline ::google::protobuf::int32 CMD_EQUIP_XILIAN_TRANSFER_CS::srcpos() const {
  return srcpos_;
}
inline void CMD_EQUIP_XILIAN_TRANSFER_CS::set_srcpos(::google::protobuf::int32 value) {
  set_has_srcpos();
  srcpos_ = value;
}

// required int32 dstPos = 4;
inline bool CMD_EQUIP_XILIAN_TRANSFER_CS::has_dstpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_EQUIP_XILIAN_TRANSFER_CS::set_has_dstpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_EQUIP_XILIAN_TRANSFER_CS::clear_has_dstpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_EQUIP_XILIAN_TRANSFER_CS::clear_dstpos() {
  dstpos_ = 0;
  clear_has_dstpos();
}
inline ::google::protobuf::int32 CMD_EQUIP_XILIAN_TRANSFER_CS::dstpos() const {
  return dstpos_;
}
inline void CMD_EQUIP_XILIAN_TRANSFER_CS::set_dstpos(::google::protobuf::int32 value) {
  set_has_dstpos();
  dstpos_ = value;
}

// -------------------------------------------------------------------

// CMD_EQUIP_XILIAN_BUYLOCK_CS

// required uint32 count = 1;
inline bool CMD_EQUIP_XILIAN_BUYLOCK_CS::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_XILIAN_BUYLOCK_CS::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_XILIAN_BUYLOCK_CS::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_XILIAN_BUYLOCK_CS::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 CMD_EQUIP_XILIAN_BUYLOCK_CS::count() const {
  return count_;
}
inline void CMD_EQUIP_XILIAN_BUYLOCK_CS::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// CMD_EQUIP_XILIAN_BUYLOCK_SC

// required int32 retCode = 1;
inline bool CMD_EQUIP_XILIAN_BUYLOCK_SC::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_XILIAN_BUYLOCK_SC::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_XILIAN_BUYLOCK_SC::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_XILIAN_BUYLOCK_SC::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 CMD_EQUIP_XILIAN_BUYLOCK_SC::retcode() const {
  return retcode_;
}
inline void CMD_EQUIP_XILIAN_BUYLOCK_SC::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// CMD_EQUIP_XILIAN_TRANSFER_SC

// required int32 retCode = 1;
inline bool CMD_EQUIP_XILIAN_TRANSFER_SC::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_EQUIP_XILIAN_TRANSFER_SC::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_EQUIP_XILIAN_TRANSFER_SC::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_EQUIP_XILIAN_TRANSFER_SC::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 CMD_EQUIP_XILIAN_TRANSFER_SC::retcode() const {
  return retcode_;
}
inline void CMD_EQUIP_XILIAN_TRANSFER_SC::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
}

// -------------------------------------------------------------------

// ManorResDetail

// required int32 iResId = 1;
inline bool ManorResDetail::has_iresid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManorResDetail::set_has_iresid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManorResDetail::clear_has_iresid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManorResDetail::clear_iresid() {
  iresid_ = 0;
  clear_has_iresid();
}
inline ::google::protobuf::int32 ManorResDetail::iresid() const {
  return iresid_;
}
inline void ManorResDetail::set_iresid(::google::protobuf::int32 value) {
  set_has_iresid();
  iresid_ = value;
}

// required int32 iResLevel = 2;
inline bool ManorResDetail::has_ireslevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManorResDetail::set_has_ireslevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManorResDetail::clear_has_ireslevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManorResDetail::clear_ireslevel() {
  ireslevel_ = 0;
  clear_has_ireslevel();
}
inline ::google::protobuf::int32 ManorResDetail::ireslevel() const {
  return ireslevel_;
}
inline void ManorResDetail::set_ireslevel(::google::protobuf::int32 value) {
  set_has_ireslevel();
  ireslevel_ = value;
}

// required bool bResInBuild = 3;
inline bool ManorResDetail::has_bresinbuild() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManorResDetail::set_has_bresinbuild() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManorResDetail::clear_has_bresinbuild() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManorResDetail::clear_bresinbuild() {
  bresinbuild_ = false;
  clear_has_bresinbuild();
}
inline bool ManorResDetail::bresinbuild() const {
  return bresinbuild_;
}
inline void ManorResDetail::set_bresinbuild(bool value) {
  set_has_bresinbuild();
  bresinbuild_ = value;
}

// optional int32 iRemainSecond = 4;
inline bool ManorResDetail::has_iremainsecond() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ManorResDetail::set_has_iremainsecond() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ManorResDetail::clear_has_iremainsecond() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ManorResDetail::clear_iremainsecond() {
  iremainsecond_ = 0;
  clear_has_iremainsecond();
}
inline ::google::protobuf::int32 ManorResDetail::iremainsecond() const {
  return iremainsecond_;
}
inline void ManorResDetail::set_iremainsecond(::google::protobuf::int32 value) {
  set_has_iremainsecond();
  iremainsecond_ = value;
}

// optional bool bCanHarvest = 5;
inline bool ManorResDetail::has_bcanharvest() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ManorResDetail::set_has_bcanharvest() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ManorResDetail::clear_has_bcanharvest() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ManorResDetail::clear_bcanharvest() {
  bcanharvest_ = false;
  clear_has_bcanharvest();
}
inline bool ManorResDetail::bcanharvest() const {
  return bcanharvest_;
}
inline void ManorResDetail::set_bcanharvest(bool value) {
  set_has_bcanharvest();
  bcanharvest_ = value;
}

// required .GSProto.ManorResType iResType = 6;
inline bool ManorResDetail::has_irestype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ManorResDetail::set_has_irestype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ManorResDetail::clear_has_irestype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ManorResDetail::clear_irestype() {
  irestype_ = 0;
  clear_has_irestype();
}
inline ::GSProto::ManorResType ManorResDetail::irestype() const {
  return static_cast< ::GSProto::ManorResType >(irestype_);
}
inline void ManorResDetail::set_irestype(::GSProto::ManorResType value) {
  assert(::GSProto::ManorResType_IsValid(value));
  set_has_irestype();
  irestype_ = value;
}

// -------------------------------------------------------------------

// CMD_MANOR_QUERY_SC

// repeated .GSProto.ManorResDetail szManorSilverResDetail = 1;
inline int CMD_MANOR_QUERY_SC::szmanorsilverresdetail_size() const {
  return szmanorsilverresdetail_.size();
}
inline void CMD_MANOR_QUERY_SC::clear_szmanorsilverresdetail() {
  szmanorsilverresdetail_.Clear();
}
inline const ::GSProto::ManorResDetail& CMD_MANOR_QUERY_SC::szmanorsilverresdetail(int index) const {
  return szmanorsilverresdetail_.Get(index);
}
inline ::GSProto::ManorResDetail* CMD_MANOR_QUERY_SC::mutable_szmanorsilverresdetail(int index) {
  return szmanorsilverresdetail_.Mutable(index);
}
inline ::GSProto::ManorResDetail* CMD_MANOR_QUERY_SC::add_szmanorsilverresdetail() {
  return szmanorsilverresdetail_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ManorResDetail >&
CMD_MANOR_QUERY_SC::szmanorsilverresdetail() const {
  return szmanorsilverresdetail_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::ManorResDetail >*
CMD_MANOR_QUERY_SC::mutable_szmanorsilverresdetail() {
  return &szmanorsilverresdetail_;
}

// repeated .GSProto.ManorResDetail szManorHeroExpResDetail = 2;
inline int CMD_MANOR_QUERY_SC::szmanorheroexpresdetail_size() const {
  return szmanorheroexpresdetail_.size();
}
inline void CMD_MANOR_QUERY_SC::clear_szmanorheroexpresdetail() {
  szmanorheroexpresdetail_.Clear();
}
inline const ::GSProto::ManorResDetail& CMD_MANOR_QUERY_SC::szmanorheroexpresdetail(int index) const {
  return szmanorheroexpresdetail_.Get(index);
}
inline ::GSProto::ManorResDetail* CMD_MANOR_QUERY_SC::mutable_szmanorheroexpresdetail(int index) {
  return szmanorheroexpresdetail_.Mutable(index);
}
inline ::GSProto::ManorResDetail* CMD_MANOR_QUERY_SC::add_szmanorheroexpresdetail() {
  return szmanorheroexpresdetail_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ManorResDetail >&
CMD_MANOR_QUERY_SC::szmanorheroexpresdetail() const {
  return szmanorheroexpresdetail_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::ManorResDetail >*
CMD_MANOR_QUERY_SC::mutable_szmanorheroexpresdetail() {
  return &szmanorheroexpresdetail_;
}

// required int32 iSilverProductSpeed = 3;
inline bool CMD_MANOR_QUERY_SC::has_isilverproductspeed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_MANOR_QUERY_SC::set_has_isilverproductspeed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_MANOR_QUERY_SC::clear_has_isilverproductspeed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_MANOR_QUERY_SC::clear_isilverproductspeed() {
  isilverproductspeed_ = 0;
  clear_has_isilverproductspeed();
}
inline ::google::protobuf::int32 CMD_MANOR_QUERY_SC::isilverproductspeed() const {
  return isilverproductspeed_;
}
inline void CMD_MANOR_QUERY_SC::set_isilverproductspeed(::google::protobuf::int32 value) {
  set_has_isilverproductspeed();
  isilverproductspeed_ = value;
}

// required int32 iHeroExpProductSpeed = 4;
inline bool CMD_MANOR_QUERY_SC::has_iheroexpproductspeed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_MANOR_QUERY_SC::set_has_iheroexpproductspeed() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_MANOR_QUERY_SC::clear_has_iheroexpproductspeed() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_MANOR_QUERY_SC::clear_iheroexpproductspeed() {
  iheroexpproductspeed_ = 0;
  clear_has_iheroexpproductspeed();
}
inline ::google::protobuf::int32 CMD_MANOR_QUERY_SC::iheroexpproductspeed() const {
  return iheroexpproductspeed_;
}
inline void CMD_MANOR_QUERY_SC::set_iheroexpproductspeed(::google::protobuf::int32 value) {
  set_has_iheroexpproductspeed();
  iheroexpproductspeed_ = value;
}

// required int32 iSilverTotalProduct = 5;
inline bool CMD_MANOR_QUERY_SC::has_isilvertotalproduct() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_MANOR_QUERY_SC::set_has_isilvertotalproduct() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_MANOR_QUERY_SC::clear_has_isilvertotalproduct() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_MANOR_QUERY_SC::clear_isilvertotalproduct() {
  isilvertotalproduct_ = 0;
  clear_has_isilvertotalproduct();
}
inline ::google::protobuf::int32 CMD_MANOR_QUERY_SC::isilvertotalproduct() const {
  return isilvertotalproduct_;
}
inline void CMD_MANOR_QUERY_SC::set_isilvertotalproduct(::google::protobuf::int32 value) {
  set_has_isilvertotalproduct();
  isilvertotalproduct_ = value;
}

// required int32 iHeroExpTotalProduct = 6;
inline bool CMD_MANOR_QUERY_SC::has_iheroexptotalproduct() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMD_MANOR_QUERY_SC::set_has_iheroexptotalproduct() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMD_MANOR_QUERY_SC::clear_has_iheroexptotalproduct() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMD_MANOR_QUERY_SC::clear_iheroexptotalproduct() {
  iheroexptotalproduct_ = 0;
  clear_has_iheroexptotalproduct();
}
inline ::google::protobuf::int32 CMD_MANOR_QUERY_SC::iheroexptotalproduct() const {
  return iheroexptotalproduct_;
}
inline void CMD_MANOR_QUERY_SC::set_iheroexptotalproduct(::google::protobuf::int32 value) {
  set_has_iheroexptotalproduct();
  iheroexptotalproduct_ = value;
}

// required .GSProto.ManorResDetail TieJiangPuDetail = 7;
inline bool CMD_MANOR_QUERY_SC::has_tiejiangpudetail() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMD_MANOR_QUERY_SC::set_has_tiejiangpudetail() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMD_MANOR_QUERY_SC::clear_has_tiejiangpudetail() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMD_MANOR_QUERY_SC::clear_tiejiangpudetail() {
  if (tiejiangpudetail_ != NULL) tiejiangpudetail_->::GSProto::ManorResDetail::Clear();
  clear_has_tiejiangpudetail();
}
inline const ::GSProto::ManorResDetail& CMD_MANOR_QUERY_SC::tiejiangpudetail() const {
  return tiejiangpudetail_ != NULL ? *tiejiangpudetail_ : *default_instance_->tiejiangpudetail_;
}
inline ::GSProto::ManorResDetail* CMD_MANOR_QUERY_SC::mutable_tiejiangpudetail() {
  set_has_tiejiangpudetail();
  if (tiejiangpudetail_ == NULL) tiejiangpudetail_ = new ::GSProto::ManorResDetail;
  return tiejiangpudetail_;
}
inline ::GSProto::ManorResDetail* CMD_MANOR_QUERY_SC::release_tiejiangpudetail() {
  clear_has_tiejiangpudetail();
  ::GSProto::ManorResDetail* temp = tiejiangpudetail_;
  tiejiangpudetail_ = NULL;
  return temp;
}
inline void CMD_MANOR_QUERY_SC::set_allocated_tiejiangpudetail(::GSProto::ManorResDetail* tiejiangpudetail) {
  delete tiejiangpudetail_;
  tiejiangpudetail_ = tiejiangpudetail;
  if (tiejiangpudetail) {
    set_has_tiejiangpudetail();
  } else {
    clear_has_tiejiangpudetail();
  }
}

// required .GSProto.ManorResDetail WuHunDianDetail = 8;
inline bool CMD_MANOR_QUERY_SC::has_wuhundiandetail() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMD_MANOR_QUERY_SC::set_has_wuhundiandetail() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMD_MANOR_QUERY_SC::clear_has_wuhundiandetail() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMD_MANOR_QUERY_SC::clear_wuhundiandetail() {
  if (wuhundiandetail_ != NULL) wuhundiandetail_->::GSProto::ManorResDetail::Clear();
  clear_has_wuhundiandetail();
}
inline const ::GSProto::ManorResDetail& CMD_MANOR_QUERY_SC::wuhundiandetail() const {
  return wuhundiandetail_ != NULL ? *wuhundiandetail_ : *default_instance_->wuhundiandetail_;
}
inline ::GSProto::ManorResDetail* CMD_MANOR_QUERY_SC::mutable_wuhundiandetail() {
  set_has_wuhundiandetail();
  if (wuhundiandetail_ == NULL) wuhundiandetail_ = new ::GSProto::ManorResDetail;
  return wuhundiandetail_;
}
inline ::GSProto::ManorResDetail* CMD_MANOR_QUERY_SC::release_wuhundiandetail() {
  clear_has_wuhundiandetail();
  ::GSProto::ManorResDetail* temp = wuhundiandetail_;
  wuhundiandetail_ = NULL;
  return temp;
}
inline void CMD_MANOR_QUERY_SC::set_allocated_wuhundiandetail(::GSProto::ManorResDetail* wuhundiandetail) {
  delete wuhundiandetail_;
  wuhundiandetail_ = wuhundiandetail;
  if (wuhundiandetail) {
    set_has_wuhundiandetail();
  } else {
    clear_has_wuhundiandetail();
  }
}

// required int32 iNowBulidTeams = 9;
inline bool CMD_MANOR_QUERY_SC::has_inowbulidteams() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMD_MANOR_QUERY_SC::set_has_inowbulidteams() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMD_MANOR_QUERY_SC::clear_has_inowbulidteams() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMD_MANOR_QUERY_SC::clear_inowbulidteams() {
  inowbulidteams_ = 0;
  clear_has_inowbulidteams();
}
inline ::google::protobuf::int32 CMD_MANOR_QUERY_SC::inowbulidteams() const {
  return inowbulidteams_;
}
inline void CMD_MANOR_QUERY_SC::set_inowbulidteams(::google::protobuf::int32 value) {
  set_has_inowbulidteams();
  inowbulidteams_ = value;
}

// required int32 iTotalBuildTeams = 10;
inline bool CMD_MANOR_QUERY_SC::has_itotalbuildteams() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMD_MANOR_QUERY_SC::set_has_itotalbuildteams() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMD_MANOR_QUERY_SC::clear_has_itotalbuildteams() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMD_MANOR_QUERY_SC::clear_itotalbuildteams() {
  itotalbuildteams_ = 0;
  clear_has_itotalbuildteams();
}
inline ::google::protobuf::int32 CMD_MANOR_QUERY_SC::itotalbuildteams() const {
  return itotalbuildteams_;
}
inline void CMD_MANOR_QUERY_SC::set_itotalbuildteams(::google::protobuf::int32 value) {
  set_has_itotalbuildteams();
  itotalbuildteams_ = value;
}

// required int32 iCurSilverPutOut = 11;
inline bool CMD_MANOR_QUERY_SC::has_icursilverputout() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMD_MANOR_QUERY_SC::set_has_icursilverputout() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMD_MANOR_QUERY_SC::clear_has_icursilverputout() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMD_MANOR_QUERY_SC::clear_icursilverputout() {
  icursilverputout_ = 0;
  clear_has_icursilverputout();
}
inline ::google::protobuf::int32 CMD_MANOR_QUERY_SC::icursilverputout() const {
  return icursilverputout_;
}
inline void CMD_MANOR_QUERY_SC::set_icursilverputout(::google::protobuf::int32 value) {
  set_has_icursilverputout();
  icursilverputout_ = value;
}

// required int32 iCurHeroExpPutOut = 12;
inline bool CMD_MANOR_QUERY_SC::has_icurheroexpputout() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMD_MANOR_QUERY_SC::set_has_icurheroexpputout() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMD_MANOR_QUERY_SC::clear_has_icurheroexpputout() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMD_MANOR_QUERY_SC::clear_icurheroexpputout() {
  icurheroexpputout_ = 0;
  clear_has_icurheroexpputout();
}
inline ::google::protobuf::int32 CMD_MANOR_QUERY_SC::icurheroexpputout() const {
  return icurheroexpputout_;
}
inline void CMD_MANOR_QUERY_SC::set_icurheroexpputout(::google::protobuf::int32 value) {
  set_has_icurheroexpputout();
  icurheroexpputout_ = value;
}

// required int32 iCurCanHavestTimes = 13;
inline bool CMD_MANOR_QUERY_SC::has_icurcanhavesttimes() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMD_MANOR_QUERY_SC::set_has_icurcanhavesttimes() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMD_MANOR_QUERY_SC::clear_has_icurcanhavesttimes() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMD_MANOR_QUERY_SC::clear_icurcanhavesttimes() {
  icurcanhavesttimes_ = 0;
  clear_has_icurcanhavesttimes();
}
inline ::google::protobuf::int32 CMD_MANOR_QUERY_SC::icurcanhavesttimes() const {
  return icurcanhavesttimes_;
}
inline void CMD_MANOR_QUERY_SC::set_icurcanhavesttimes(::google::protobuf::int32 value) {
  set_has_icurcanhavesttimes();
  icurcanhavesttimes_ = value;
}

// required int32 iTotalHavestTimes = 14;
inline bool CMD_MANOR_QUERY_SC::has_itotalhavesttimes() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMD_MANOR_QUERY_SC::set_has_itotalhavesttimes() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMD_MANOR_QUERY_SC::clear_has_itotalhavesttimes() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMD_MANOR_QUERY_SC::clear_itotalhavesttimes() {
  itotalhavesttimes_ = 0;
  clear_has_itotalhavesttimes();
}
inline ::google::protobuf::int32 CMD_MANOR_QUERY_SC::itotalhavesttimes() const {
  return itotalhavesttimes_;
}
inline void CMD_MANOR_QUERY_SC::set_itotalhavesttimes(::google::protobuf::int32 value) {
  set_has_itotalhavesttimes();
  itotalhavesttimes_ = value;
}

// required int32 iRemaindProtectSecond = 16;
inline bool CMD_MANOR_QUERY_SC::has_iremaindprotectsecond() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMD_MANOR_QUERY_SC::set_has_iremaindprotectsecond() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMD_MANOR_QUERY_SC::clear_has_iremaindprotectsecond() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMD_MANOR_QUERY_SC::clear_iremaindprotectsecond() {
  iremaindprotectsecond_ = 0;
  clear_has_iremaindprotectsecond();
}
inline ::google::protobuf::int32 CMD_MANOR_QUERY_SC::iremaindprotectsecond() const {
  return iremaindprotectsecond_;
}
inline void CMD_MANOR_QUERY_SC::set_iremaindprotectsecond(::google::protobuf::int32 value) {
  set_has_iremaindprotectsecond();
  iremaindprotectsecond_ = value;
}

// required int32 iSearchCost = 17;
inline bool CMD_MANOR_QUERY_SC::has_isearchcost() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMD_MANOR_QUERY_SC::set_has_isearchcost() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMD_MANOR_QUERY_SC::clear_has_isearchcost() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMD_MANOR_QUERY_SC::clear_isearchcost() {
  isearchcost_ = 0;
  clear_has_isearchcost();
}
inline ::google::protobuf::int32 CMD_MANOR_QUERY_SC::isearchcost() const {
  return isearchcost_;
}
inline void CMD_MANOR_QUERY_SC::set_isearchcost(::google::protobuf::int32 value) {
  set_has_isearchcost();
  isearchcost_ = value;
}

// -------------------------------------------------------------------

// CMD_MANOR_RES_USE_GOLD_LEVELUP_CS

// required int32 iResId = 1;
inline bool CMD_MANOR_RES_USE_GOLD_LEVELUP_CS::has_iresid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_MANOR_RES_USE_GOLD_LEVELUP_CS::set_has_iresid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_MANOR_RES_USE_GOLD_LEVELUP_CS::clear_has_iresid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_MANOR_RES_USE_GOLD_LEVELUP_CS::clear_iresid() {
  iresid_ = 0;
  clear_has_iresid();
}
inline ::google::protobuf::int32 CMD_MANOR_RES_USE_GOLD_LEVELUP_CS::iresid() const {
  return iresid_;
}
inline void CMD_MANOR_RES_USE_GOLD_LEVELUP_CS::set_iresid(::google::protobuf::int32 value) {
  set_has_iresid();
  iresid_ = value;
}

// required .GSProto.ManorResType iResType = 2;
inline bool CMD_MANOR_RES_USE_GOLD_LEVELUP_CS::has_irestype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_MANOR_RES_USE_GOLD_LEVELUP_CS::set_has_irestype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_MANOR_RES_USE_GOLD_LEVELUP_CS::clear_has_irestype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_MANOR_RES_USE_GOLD_LEVELUP_CS::clear_irestype() {
  irestype_ = 0;
  clear_has_irestype();
}
inline ::GSProto::ManorResType CMD_MANOR_RES_USE_GOLD_LEVELUP_CS::irestype() const {
  return static_cast< ::GSProto::ManorResType >(irestype_);
}
inline void CMD_MANOR_RES_USE_GOLD_LEVELUP_CS::set_irestype(::GSProto::ManorResType value) {
  assert(::GSProto::ManorResType_IsValid(value));
  set_has_irestype();
  irestype_ = value;
}

// -------------------------------------------------------------------

// CMD_MANOR_RES_COMMON_LEVELUP_CS

// required int32 iResId = 1;
inline bool CMD_MANOR_RES_COMMON_LEVELUP_CS::has_iresid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_MANOR_RES_COMMON_LEVELUP_CS::set_has_iresid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_MANOR_RES_COMMON_LEVELUP_CS::clear_has_iresid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_MANOR_RES_COMMON_LEVELUP_CS::clear_iresid() {
  iresid_ = 0;
  clear_has_iresid();
}
inline ::google::protobuf::int32 CMD_MANOR_RES_COMMON_LEVELUP_CS::iresid() const {
  return iresid_;
}
inline void CMD_MANOR_RES_COMMON_LEVELUP_CS::set_iresid(::google::protobuf::int32 value) {
  set_has_iresid();
  iresid_ = value;
}

// required .GSProto.ManorResType iResType = 2;
inline bool CMD_MANOR_RES_COMMON_LEVELUP_CS::has_irestype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_MANOR_RES_COMMON_LEVELUP_CS::set_has_irestype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_MANOR_RES_COMMON_LEVELUP_CS::clear_has_irestype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_MANOR_RES_COMMON_LEVELUP_CS::clear_irestype() {
  irestype_ = 0;
  clear_has_irestype();
}
inline ::GSProto::ManorResType CMD_MANOR_RES_COMMON_LEVELUP_CS::irestype() const {
  return static_cast< ::GSProto::ManorResType >(irestype_);
}
inline void CMD_MANOR_RES_COMMON_LEVELUP_CS::set_irestype(::GSProto::ManorResType value) {
  assert(::GSProto::ManorResType_IsValid(value));
  set_has_irestype();
  irestype_ = value;
}

// -------------------------------------------------------------------

// MonerHeroSoulDetail

// required int32 iHeroSoulId = 1;
inline bool MonerHeroSoulDetail::has_iherosoulid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonerHeroSoulDetail::set_has_iherosoulid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonerHeroSoulDetail::clear_has_iherosoulid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonerHeroSoulDetail::clear_iherosoulid() {
  iherosoulid_ = 0;
  clear_has_iherosoulid();
}
inline ::google::protobuf::int32 MonerHeroSoulDetail::iherosoulid() const {
  return iherosoulid_;
}
inline void MonerHeroSoulDetail::set_iherosoulid(::google::protobuf::int32 value) {
  set_has_iherosoulid();
  iherosoulid_ = value;
}

// required bool bHeroIsWuXieKeJi = 2;
inline bool MonerHeroSoulDetail::has_bheroiswuxiekeji() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MonerHeroSoulDetail::set_has_bheroiswuxiekeji() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MonerHeroSoulDetail::clear_has_bheroiswuxiekeji() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MonerHeroSoulDetail::clear_bheroiswuxiekeji() {
  bheroiswuxiekeji_ = false;
  clear_has_bheroiswuxiekeji();
}
inline bool MonerHeroSoulDetail::bheroiswuxiekeji() const {
  return bheroiswuxiekeji_;
}
inline void MonerHeroSoulDetail::set_bheroiswuxiekeji(bool value) {
  set_has_bheroiswuxiekeji();
  bheroiswuxiekeji_ = value;
}

// required int32 iHeroSoulCount = 3;
inline bool MonerHeroSoulDetail::has_iherosoulcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MonerHeroSoulDetail::set_has_iherosoulcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MonerHeroSoulDetail::clear_has_iherosoulcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MonerHeroSoulDetail::clear_iherosoulcount() {
  iherosoulcount_ = 0;
  clear_has_iherosoulcount();
}
inline ::google::protobuf::int32 MonerHeroSoulDetail::iherosoulcount() const {
  return iherosoulcount_;
}
inline void MonerHeroSoulDetail::set_iherosoulcount(::google::protobuf::int32 value) {
  set_has_iherosoulcount();
  iherosoulcount_ = value;
}

// required int32 iHeroHaveSoulLootCount = 4;
inline bool MonerHeroSoulDetail::has_iherohavesoullootcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MonerHeroSoulDetail::set_has_iherohavesoullootcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MonerHeroSoulDetail::clear_has_iherohavesoullootcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MonerHeroSoulDetail::clear_iherohavesoullootcount() {
  iherohavesoullootcount_ = 0;
  clear_has_iherohavesoullootcount();
}
inline ::google::protobuf::int32 MonerHeroSoulDetail::iherohavesoullootcount() const {
  return iherohavesoullootcount_;
}
inline void MonerHeroSoulDetail::set_iherohavesoullootcount(::google::protobuf::int32 value) {
  set_has_iherohavesoullootcount();
  iherohavesoullootcount_ = value;
}

// -------------------------------------------------------------------

// ManorHeroSoulBox

// required bool bIsOpen = 1;
inline bool ManorHeroSoulBox::has_bisopen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManorHeroSoulBox::set_has_bisopen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManorHeroSoulBox::clear_has_bisopen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManorHeroSoulBox::clear_bisopen() {
  bisopen_ = false;
  clear_has_bisopen();
}
inline bool ManorHeroSoulBox::bisopen() const {
  return bisopen_;
}
inline void ManorHeroSoulBox::set_bisopen(bool value) {
  set_has_bisopen();
  bisopen_ = value;
}

// optional int32 iBoxOpenLevel = 2;
inline bool ManorHeroSoulBox::has_iboxopenlevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManorHeroSoulBox::set_has_iboxopenlevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManorHeroSoulBox::clear_has_iboxopenlevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManorHeroSoulBox::clear_iboxopenlevel() {
  iboxopenlevel_ = 0;
  clear_has_iboxopenlevel();
}
inline ::google::protobuf::int32 ManorHeroSoulBox::iboxopenlevel() const {
  return iboxopenlevel_;
}
inline void ManorHeroSoulBox::set_iboxopenlevel(::google::protobuf::int32 value) {
  set_has_iboxopenlevel();
  iboxopenlevel_ = value;
}

// optional .GSProto.MonerHeroSoulDetail detail = 3;
inline bool ManorHeroSoulBox::has_detail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManorHeroSoulBox::set_has_detail() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManorHeroSoulBox::clear_has_detail() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManorHeroSoulBox::clear_detail() {
  if (detail_ != NULL) detail_->::GSProto::MonerHeroSoulDetail::Clear();
  clear_has_detail();
}
inline const ::GSProto::MonerHeroSoulDetail& ManorHeroSoulBox::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::GSProto::MonerHeroSoulDetail* ManorHeroSoulBox::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) detail_ = new ::GSProto::MonerHeroSoulDetail;
  return detail_;
}
inline ::GSProto::MonerHeroSoulDetail* ManorHeroSoulBox::release_detail() {
  clear_has_detail();
  ::GSProto::MonerHeroSoulDetail* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void ManorHeroSoulBox::set_allocated_detail(::GSProto::MonerHeroSoulDetail* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
}

// required int32 iBoxIndex = 4;
inline bool ManorHeroSoulBox::has_iboxindex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ManorHeroSoulBox::set_has_iboxindex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ManorHeroSoulBox::clear_has_iboxindex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ManorHeroSoulBox::clear_iboxindex() {
  iboxindex_ = 0;
  clear_has_iboxindex();
}
inline ::google::protobuf::int32 ManorHeroSoulBox::iboxindex() const {
  return iboxindex_;
}
inline void ManorHeroSoulBox::set_iboxindex(::google::protobuf::int32 value) {
  set_has_iboxindex();
  iboxindex_ = value;
}

// -------------------------------------------------------------------

// CMD_MANOR_WUHUNDIAN_QUERY_SC

// required bool bIsBulid = 1;
inline bool CMD_MANOR_WUHUNDIAN_QUERY_SC::has_bisbulid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::set_has_bisbulid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::clear_has_bisbulid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::clear_bisbulid() {
  bisbulid_ = false;
  clear_has_bisbulid();
}
inline bool CMD_MANOR_WUHUNDIAN_QUERY_SC::bisbulid() const {
  return bisbulid_;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::set_bisbulid(bool value) {
  set_has_bisbulid();
  bisbulid_ = value;
}

// optional int32 iBulidRemainSecond = 2;
inline bool CMD_MANOR_WUHUNDIAN_QUERY_SC::has_ibulidremainsecond() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::set_has_ibulidremainsecond() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::clear_has_ibulidremainsecond() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::clear_ibulidremainsecond() {
  ibulidremainsecond_ = 0;
  clear_has_ibulidremainsecond();
}
inline ::google::protobuf::int32 CMD_MANOR_WUHUNDIAN_QUERY_SC::ibulidremainsecond() const {
  return ibulidremainsecond_;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::set_ibulidremainsecond(::google::protobuf::int32 value) {
  set_has_ibulidremainsecond();
  ibulidremainsecond_ = value;
}

// repeated .GSProto.ManorHeroSoulBox szManorHeroSoulBox = 3;
inline int CMD_MANOR_WUHUNDIAN_QUERY_SC::szmanorherosoulbox_size() const {
  return szmanorherosoulbox_.size();
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::clear_szmanorherosoulbox() {
  szmanorherosoulbox_.Clear();
}
inline const ::GSProto::ManorHeroSoulBox& CMD_MANOR_WUHUNDIAN_QUERY_SC::szmanorherosoulbox(int index) const {
  return szmanorherosoulbox_.Get(index);
}
inline ::GSProto::ManorHeroSoulBox* CMD_MANOR_WUHUNDIAN_QUERY_SC::mutable_szmanorherosoulbox(int index) {
  return szmanorherosoulbox_.Mutable(index);
}
inline ::GSProto::ManorHeroSoulBox* CMD_MANOR_WUHUNDIAN_QUERY_SC::add_szmanorherosoulbox() {
  return szmanorherosoulbox_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ManorHeroSoulBox >&
CMD_MANOR_WUHUNDIAN_QUERY_SC::szmanorherosoulbox() const {
  return szmanorherosoulbox_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::ManorHeroSoulBox >*
CMD_MANOR_WUHUNDIAN_QUERY_SC::mutable_szmanorherosoulbox() {
  return &szmanorherosoulbox_;
}

// required bool bIsProduct = 4;
inline bool CMD_MANOR_WUHUNDIAN_QUERY_SC::has_bisproduct() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::set_has_bisproduct() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::clear_has_bisproduct() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::clear_bisproduct() {
  bisproduct_ = false;
  clear_has_bisproduct();
}
inline bool CMD_MANOR_WUHUNDIAN_QUERY_SC::bisproduct() const {
  return bisproduct_;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::set_bisproduct(bool value) {
  set_has_bisproduct();
  bisproduct_ = value;
}

// optional int32 iRefreshCost = 5;
inline bool CMD_MANOR_WUHUNDIAN_QUERY_SC::has_irefreshcost() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::set_has_irefreshcost() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::clear_has_irefreshcost() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::clear_irefreshcost() {
  irefreshcost_ = 0;
  clear_has_irefreshcost();
}
inline ::google::protobuf::int32 CMD_MANOR_WUHUNDIAN_QUERY_SC::irefreshcost() const {
  return irefreshcost_;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::set_irefreshcost(::google::protobuf::int32 value) {
  set_has_irefreshcost();
  irefreshcost_ = value;
}

// optional int32 iProductReaminSecond = 6;
inline bool CMD_MANOR_WUHUNDIAN_QUERY_SC::has_iproductreaminsecond() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::set_has_iproductreaminsecond() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::clear_has_iproductreaminsecond() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::clear_iproductreaminsecond() {
  iproductreaminsecond_ = 0;
  clear_has_iproductreaminsecond();
}
inline ::google::protobuf::int32 CMD_MANOR_WUHUNDIAN_QUERY_SC::iproductreaminsecond() const {
  return iproductreaminsecond_;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::set_iproductreaminsecond(::google::protobuf::int32 value) {
  set_has_iproductreaminsecond();
  iproductreaminsecond_ = value;
}

// optional int32 iRemianRefreshTimes = 7;
inline bool CMD_MANOR_WUHUNDIAN_QUERY_SC::has_iremianrefreshtimes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::set_has_iremianrefreshtimes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::clear_has_iremianrefreshtimes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::clear_iremianrefreshtimes() {
  iremianrefreshtimes_ = 0;
  clear_has_iremianrefreshtimes();
}
inline ::google::protobuf::int32 CMD_MANOR_WUHUNDIAN_QUERY_SC::iremianrefreshtimes() const {
  return iremianrefreshtimes_;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::set_iremianrefreshtimes(::google::protobuf::int32 value) {
  set_has_iremianrefreshtimes();
  iremianrefreshtimes_ = value;
}

// optional int32 iTotalRemainRefreshTimes = 8;
inline bool CMD_MANOR_WUHUNDIAN_QUERY_SC::has_itotalremainrefreshtimes() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::set_has_itotalremainrefreshtimes() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::clear_has_itotalremainrefreshtimes() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::clear_itotalremainrefreshtimes() {
  itotalremainrefreshtimes_ = 0;
  clear_has_itotalremainrefreshtimes();
}
inline ::google::protobuf::int32 CMD_MANOR_WUHUNDIAN_QUERY_SC::itotalremainrefreshtimes() const {
  return itotalremainrefreshtimes_;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::set_itotalremainrefreshtimes(::google::protobuf::int32 value) {
  set_has_itotalremainrefreshtimes();
  itotalremainrefreshtimes_ = value;
}

// required int32 iLevelID = 9;
inline bool CMD_MANOR_WUHUNDIAN_QUERY_SC::has_ilevelid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::set_has_ilevelid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::clear_has_ilevelid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::clear_ilevelid() {
  ilevelid_ = 0;
  clear_has_ilevelid();
}
inline ::google::protobuf::int32 CMD_MANOR_WUHUNDIAN_QUERY_SC::ilevelid() const {
  return ilevelid_;
}
inline void CMD_MANOR_WUHUNDIAN_QUERY_SC::set_ilevelid(::google::protobuf::int32 value) {
  set_has_ilevelid();
  ilevelid_ = value;
}

// -------------------------------------------------------------------

// CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS

// required int32 iBoxIndex = 1;
inline bool CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS::has_iboxindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS::set_has_iboxindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS::clear_has_iboxindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS::clear_iboxindex() {
  iboxindex_ = 0;
  clear_has_iboxindex();
}
inline ::google::protobuf::int32 CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS::iboxindex() const {
  return iboxindex_;
}
inline void CMD_MANOR_WUHUNDIAN_WUXIEKEJIE_CS::set_iboxindex(::google::protobuf::int32 value) {
  set_has_iboxindex();
  iboxindex_ = value;
}

// -------------------------------------------------------------------

// ManorTieJiangPuItemDetail

// required int32 iItemId = 1;
inline bool ManorTieJiangPuItemDetail::has_iitemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManorTieJiangPuItemDetail::set_has_iitemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManorTieJiangPuItemDetail::clear_has_iitemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManorTieJiangPuItemDetail::clear_iitemid() {
  iitemid_ = 0;
  clear_has_iitemid();
}
inline ::google::protobuf::int32 ManorTieJiangPuItemDetail::iitemid() const {
  return iitemid_;
}
inline void ManorTieJiangPuItemDetail::set_iitemid(::google::protobuf::int32 value) {
  set_has_iitemid();
  iitemid_ = value;
}

// required bool bItemIsWuXieKeJi = 2;
inline bool ManorTieJiangPuItemDetail::has_bitemiswuxiekeji() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManorTieJiangPuItemDetail::set_has_bitemiswuxiekeji() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManorTieJiangPuItemDetail::clear_has_bitemiswuxiekeji() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManorTieJiangPuItemDetail::clear_bitemiswuxiekeji() {
  bitemiswuxiekeji_ = false;
  clear_has_bitemiswuxiekeji();
}
inline bool ManorTieJiangPuItemDetail::bitemiswuxiekeji() const {
  return bitemiswuxiekeji_;
}
inline void ManorTieJiangPuItemDetail::set_bitemiswuxiekeji(bool value) {
  set_has_bitemiswuxiekeji();
  bitemiswuxiekeji_ = value;
}

// required int32 iItemCount = 3;
inline bool ManorTieJiangPuItemDetail::has_iitemcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManorTieJiangPuItemDetail::set_has_iitemcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManorTieJiangPuItemDetail::clear_has_iitemcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManorTieJiangPuItemDetail::clear_iitemcount() {
  iitemcount_ = 0;
  clear_has_iitemcount();
}
inline ::google::protobuf::int32 ManorTieJiangPuItemDetail::iitemcount() const {
  return iitemcount_;
}
inline void ManorTieJiangPuItemDetail::set_iitemcount(::google::protobuf::int32 value) {
  set_has_iitemcount();
  iitemcount_ = value;
}

// required int32 iItemHaveLootCount = 4;
inline bool ManorTieJiangPuItemDetail::has_iitemhavelootcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ManorTieJiangPuItemDetail::set_has_iitemhavelootcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ManorTieJiangPuItemDetail::clear_has_iitemhavelootcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ManorTieJiangPuItemDetail::clear_iitemhavelootcount() {
  iitemhavelootcount_ = 0;
  clear_has_iitemhavelootcount();
}
inline ::google::protobuf::int32 ManorTieJiangPuItemDetail::iitemhavelootcount() const {
  return iitemhavelootcount_;
}
inline void ManorTieJiangPuItemDetail::set_iitemhavelootcount(::google::protobuf::int32 value) {
  set_has_iitemhavelootcount();
  iitemhavelootcount_ = value;
}

// -------------------------------------------------------------------

// ManorTieJiangPuItemBox

// required bool bIsOpen = 1;
inline bool ManorTieJiangPuItemBox::has_bisopen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManorTieJiangPuItemBox::set_has_bisopen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManorTieJiangPuItemBox::clear_has_bisopen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManorTieJiangPuItemBox::clear_bisopen() {
  bisopen_ = false;
  clear_has_bisopen();
}
inline bool ManorTieJiangPuItemBox::bisopen() const {
  return bisopen_;
}
inline void ManorTieJiangPuItemBox::set_bisopen(bool value) {
  set_has_bisopen();
  bisopen_ = value;
}

// optional .GSProto.ManorTieJiangPuItemDetail itemDetail = 2;
inline bool ManorTieJiangPuItemBox::has_itemdetail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManorTieJiangPuItemBox::set_has_itemdetail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManorTieJiangPuItemBox::clear_has_itemdetail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManorTieJiangPuItemBox::clear_itemdetail() {
  if (itemdetail_ != NULL) itemdetail_->::GSProto::ManorTieJiangPuItemDetail::Clear();
  clear_has_itemdetail();
}
inline const ::GSProto::ManorTieJiangPuItemDetail& ManorTieJiangPuItemBox::itemdetail() const {
  return itemdetail_ != NULL ? *itemdetail_ : *default_instance_->itemdetail_;
}
inline ::GSProto::ManorTieJiangPuItemDetail* ManorTieJiangPuItemBox::mutable_itemdetail() {
  set_has_itemdetail();
  if (itemdetail_ == NULL) itemdetail_ = new ::GSProto::ManorTieJiangPuItemDetail;
  return itemdetail_;
}
inline ::GSProto::ManorTieJiangPuItemDetail* ManorTieJiangPuItemBox::release_itemdetail() {
  clear_has_itemdetail();
  ::GSProto::ManorTieJiangPuItemDetail* temp = itemdetail_;
  itemdetail_ = NULL;
  return temp;
}
inline void ManorTieJiangPuItemBox::set_allocated_itemdetail(::GSProto::ManorTieJiangPuItemDetail* itemdetail) {
  delete itemdetail_;
  itemdetail_ = itemdetail;
  if (itemdetail) {
    set_has_itemdetail();
  } else {
    clear_has_itemdetail();
  }
}

// required int32 iBoxIndex = 3;
inline bool ManorTieJiangPuItemBox::has_iboxindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManorTieJiangPuItemBox::set_has_iboxindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManorTieJiangPuItemBox::clear_has_iboxindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManorTieJiangPuItemBox::clear_iboxindex() {
  iboxindex_ = 0;
  clear_has_iboxindex();
}
inline ::google::protobuf::int32 ManorTieJiangPuItemBox::iboxindex() const {
  return iboxindex_;
}
inline void ManorTieJiangPuItemBox::set_iboxindex(::google::protobuf::int32 value) {
  set_has_iboxindex();
  iboxindex_ = value;
}

// -------------------------------------------------------------------

// CMD_MANOR_TIEJIANGPU_QUERY_SC

// required bool bIsBulid = 1;
inline bool CMD_MANOR_TIEJIANGPU_QUERY_SC::has_bisbulid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::set_has_bisbulid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::clear_has_bisbulid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::clear_bisbulid() {
  bisbulid_ = false;
  clear_has_bisbulid();
}
inline bool CMD_MANOR_TIEJIANGPU_QUERY_SC::bisbulid() const {
  return bisbulid_;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::set_bisbulid(bool value) {
  set_has_bisbulid();
  bisbulid_ = value;
}

// optional int32 iBulidRemainSecond = 2;
inline bool CMD_MANOR_TIEJIANGPU_QUERY_SC::has_ibulidremainsecond() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::set_has_ibulidremainsecond() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::clear_has_ibulidremainsecond() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::clear_ibulidremainsecond() {
  ibulidremainsecond_ = 0;
  clear_has_ibulidremainsecond();
}
inline ::google::protobuf::int32 CMD_MANOR_TIEJIANGPU_QUERY_SC::ibulidremainsecond() const {
  return ibulidremainsecond_;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::set_ibulidremainsecond(::google::protobuf::int32 value) {
  set_has_ibulidremainsecond();
  ibulidremainsecond_ = value;
}

// repeated .GSProto.ManorTieJiangPuItemBox szManorTieJiangPuItemBox = 3;
inline int CMD_MANOR_TIEJIANGPU_QUERY_SC::szmanortiejiangpuitembox_size() const {
  return szmanortiejiangpuitembox_.size();
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::clear_szmanortiejiangpuitembox() {
  szmanortiejiangpuitembox_.Clear();
}
inline const ::GSProto::ManorTieJiangPuItemBox& CMD_MANOR_TIEJIANGPU_QUERY_SC::szmanortiejiangpuitembox(int index) const {
  return szmanortiejiangpuitembox_.Get(index);
}
inline ::GSProto::ManorTieJiangPuItemBox* CMD_MANOR_TIEJIANGPU_QUERY_SC::mutable_szmanortiejiangpuitembox(int index) {
  return szmanortiejiangpuitembox_.Mutable(index);
}
inline ::GSProto::ManorTieJiangPuItemBox* CMD_MANOR_TIEJIANGPU_QUERY_SC::add_szmanortiejiangpuitembox() {
  return szmanortiejiangpuitembox_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ManorTieJiangPuItemBox >&
CMD_MANOR_TIEJIANGPU_QUERY_SC::szmanortiejiangpuitembox() const {
  return szmanortiejiangpuitembox_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::ManorTieJiangPuItemBox >*
CMD_MANOR_TIEJIANGPU_QUERY_SC::mutable_szmanortiejiangpuitembox() {
  return &szmanortiejiangpuitembox_;
}

// required bool bIsProduct = 4;
inline bool CMD_MANOR_TIEJIANGPU_QUERY_SC::has_bisproduct() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::set_has_bisproduct() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::clear_has_bisproduct() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::clear_bisproduct() {
  bisproduct_ = false;
  clear_has_bisproduct();
}
inline bool CMD_MANOR_TIEJIANGPU_QUERY_SC::bisproduct() const {
  return bisproduct_;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::set_bisproduct(bool value) {
  set_has_bisproduct();
  bisproduct_ = value;
}

// optional int32 iRefreshCost = 5;
inline bool CMD_MANOR_TIEJIANGPU_QUERY_SC::has_irefreshcost() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::set_has_irefreshcost() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::clear_has_irefreshcost() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::clear_irefreshcost() {
  irefreshcost_ = 0;
  clear_has_irefreshcost();
}
inline ::google::protobuf::int32 CMD_MANOR_TIEJIANGPU_QUERY_SC::irefreshcost() const {
  return irefreshcost_;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::set_irefreshcost(::google::protobuf::int32 value) {
  set_has_irefreshcost();
  irefreshcost_ = value;
}

// optional int32 iProductReaminSecond = 6;
inline bool CMD_MANOR_TIEJIANGPU_QUERY_SC::has_iproductreaminsecond() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::set_has_iproductreaminsecond() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::clear_has_iproductreaminsecond() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::clear_iproductreaminsecond() {
  iproductreaminsecond_ = 0;
  clear_has_iproductreaminsecond();
}
inline ::google::protobuf::int32 CMD_MANOR_TIEJIANGPU_QUERY_SC::iproductreaminsecond() const {
  return iproductreaminsecond_;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::set_iproductreaminsecond(::google::protobuf::int32 value) {
  set_has_iproductreaminsecond();
  iproductreaminsecond_ = value;
}

// optional int32 iRemianRefreshTimes = 7;
inline bool CMD_MANOR_TIEJIANGPU_QUERY_SC::has_iremianrefreshtimes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::set_has_iremianrefreshtimes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::clear_has_iremianrefreshtimes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::clear_iremianrefreshtimes() {
  iremianrefreshtimes_ = 0;
  clear_has_iremianrefreshtimes();
}
inline ::google::protobuf::int32 CMD_MANOR_TIEJIANGPU_QUERY_SC::iremianrefreshtimes() const {
  return iremianrefreshtimes_;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::set_iremianrefreshtimes(::google::protobuf::int32 value) {
  set_has_iremianrefreshtimes();
  iremianrefreshtimes_ = value;
}

// optional int32 iTotalRemainRefreshTimes = 8;
inline bool CMD_MANOR_TIEJIANGPU_QUERY_SC::has_itotalremainrefreshtimes() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::set_has_itotalremainrefreshtimes() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::clear_has_itotalremainrefreshtimes() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::clear_itotalremainrefreshtimes() {
  itotalremainrefreshtimes_ = 0;
  clear_has_itotalremainrefreshtimes();
}
inline ::google::protobuf::int32 CMD_MANOR_TIEJIANGPU_QUERY_SC::itotalremainrefreshtimes() const {
  return itotalremainrefreshtimes_;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::set_itotalremainrefreshtimes(::google::protobuf::int32 value) {
  set_has_itotalremainrefreshtimes();
  itotalremainrefreshtimes_ = value;
}

// required int32 iLevelID = 9;
inline bool CMD_MANOR_TIEJIANGPU_QUERY_SC::has_ilevelid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::set_has_ilevelid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::clear_has_ilevelid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::clear_ilevelid() {
  ilevelid_ = 0;
  clear_has_ilevelid();
}
inline ::google::protobuf::int32 CMD_MANOR_TIEJIANGPU_QUERY_SC::ilevelid() const {
  return ilevelid_;
}
inline void CMD_MANOR_TIEJIANGPU_QUERY_SC::set_ilevelid(::google::protobuf::int32 value) {
  set_has_ilevelid();
  ilevelid_ = value;
}

// -------------------------------------------------------------------

// CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS

// required int32 iBoxIndex = 1;
inline bool CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS::has_iboxindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS::set_has_iboxindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS::clear_has_iboxindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS::clear_iboxindex() {
  iboxindex_ = 0;
  clear_has_iboxindex();
}
inline ::google::protobuf::int32 CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS::iboxindex() const {
  return iboxindex_;
}
inline void CMD_MANOR_TIEJIANGPU_WUXIEKEJI_CS::set_iboxindex(::google::protobuf::int32 value) {
  set_has_iboxindex();
  iboxindex_ = value;
}

// -------------------------------------------------------------------

// ManorLootLog

// required .GSProto.PBPkRole attacker = 1;
inline bool ManorLootLog::has_attacker() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManorLootLog::set_has_attacker() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManorLootLog::clear_has_attacker() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManorLootLog::clear_attacker() {
  if (attacker_ != NULL) attacker_->::GSProto::PBPkRole::Clear();
  clear_has_attacker();
}
inline const ::GSProto::PBPkRole& ManorLootLog::attacker() const {
  return attacker_ != NULL ? *attacker_ : *default_instance_->attacker_;
}
inline ::GSProto::PBPkRole* ManorLootLog::mutable_attacker() {
  set_has_attacker();
  if (attacker_ == NULL) attacker_ = new ::GSProto::PBPkRole;
  return attacker_;
}
inline ::GSProto::PBPkRole* ManorLootLog::release_attacker() {
  clear_has_attacker();
  ::GSProto::PBPkRole* temp = attacker_;
  attacker_ = NULL;
  return temp;
}
inline void ManorLootLog::set_allocated_attacker(::GSProto::PBPkRole* attacker) {
  delete attacker_;
  attacker_ = attacker;
  if (attacker) {
    set_has_attacker();
  } else {
    clear_has_attacker();
  }
}

// required int32 bAttackerWin = 2;
inline bool ManorLootLog::has_battackerwin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManorLootLog::set_has_battackerwin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManorLootLog::clear_has_battackerwin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManorLootLog::clear_battackerwin() {
  battackerwin_ = 0;
  clear_has_battackerwin();
}
inline ::google::protobuf::int32 ManorLootLog::battackerwin() const {
  return battackerwin_;
}
inline void ManorLootLog::set_battackerwin(::google::protobuf::int32 value) {
  set_has_battackerwin();
  battackerwin_ = value;
}

// required string strAttackerName = 3;
inline bool ManorLootLog::has_strattackername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManorLootLog::set_has_strattackername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManorLootLog::clear_has_strattackername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManorLootLog::clear_strattackername() {
  if (strattackername_ != &::google::protobuf::internal::kEmptyString) {
    strattackername_->clear();
  }
  clear_has_strattackername();
}
inline const ::std::string& ManorLootLog::strattackername() const {
  return *strattackername_;
}
inline void ManorLootLog::set_strattackername(const ::std::string& value) {
  set_has_strattackername();
  if (strattackername_ == &::google::protobuf::internal::kEmptyString) {
    strattackername_ = new ::std::string;
  }
  strattackername_->assign(value);
}
inline void ManorLootLog::set_strattackername(const char* value) {
  set_has_strattackername();
  if (strattackername_ == &::google::protobuf::internal::kEmptyString) {
    strattackername_ = new ::std::string;
  }
  strattackername_->assign(value);
}
inline void ManorLootLog::set_strattackername(const char* value, size_t size) {
  set_has_strattackername();
  if (strattackername_ == &::google::protobuf::internal::kEmptyString) {
    strattackername_ = new ::std::string;
  }
  strattackername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ManorLootLog::mutable_strattackername() {
  set_has_strattackername();
  if (strattackername_ == &::google::protobuf::internal::kEmptyString) {
    strattackername_ = new ::std::string;
  }
  return strattackername_;
}
inline ::std::string* ManorLootLog::release_strattackername() {
  clear_has_strattackername();
  if (strattackername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strattackername_;
    strattackername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ManorLootLog::set_allocated_strattackername(::std::string* strattackername) {
  if (strattackername_ != &::google::protobuf::internal::kEmptyString) {
    delete strattackername_;
  }
  if (strattackername) {
    set_has_strattackername();
    strattackername_ = strattackername;
  } else {
    clear_has_strattackername();
    strattackername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .GSProto.FightAwardResult award = 4;
inline bool ManorLootLog::has_award() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ManorLootLog::set_has_award() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ManorLootLog::clear_has_award() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ManorLootLog::clear_award() {
  if (award_ != NULL) award_->::GSProto::FightAwardResult::Clear();
  clear_has_award();
}
inline const ::GSProto::FightAwardResult& ManorLootLog::award() const {
  return award_ != NULL ? *award_ : *default_instance_->award_;
}
inline ::GSProto::FightAwardResult* ManorLootLog::mutable_award() {
  set_has_award();
  if (award_ == NULL) award_ = new ::GSProto::FightAwardResult;
  return award_;
}
inline ::GSProto::FightAwardResult* ManorLootLog::release_award() {
  clear_has_award();
  ::GSProto::FightAwardResult* temp = award_;
  award_ = NULL;
  return temp;
}
inline void ManorLootLog::set_allocated_award(::GSProto::FightAwardResult* award) {
  delete award_;
  award_ = award;
  if (award) {
    set_has_award();
  } else {
    clear_has_award();
  }
}

// -------------------------------------------------------------------

// CMD_MANOR_QUERY_LOG_SC

// repeated .GSProto.ManorLootLog szManorLootLog = 1;
inline int CMD_MANOR_QUERY_LOG_SC::szmanorlootlog_size() const {
  return szmanorlootlog_.size();
}
inline void CMD_MANOR_QUERY_LOG_SC::clear_szmanorlootlog() {
  szmanorlootlog_.Clear();
}
inline const ::GSProto::ManorLootLog& CMD_MANOR_QUERY_LOG_SC::szmanorlootlog(int index) const {
  return szmanorlootlog_.Get(index);
}
inline ::GSProto::ManorLootLog* CMD_MANOR_QUERY_LOG_SC::mutable_szmanorlootlog(int index) {
  return szmanorlootlog_.Mutable(index);
}
inline ::GSProto::ManorLootLog* CMD_MANOR_QUERY_LOG_SC::add_szmanorlootlog() {
  return szmanorlootlog_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ManorLootLog >&
CMD_MANOR_QUERY_LOG_SC::szmanorlootlog() const {
  return szmanorlootlog_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::ManorLootLog >*
CMD_MANOR_QUERY_LOG_SC::mutable_szmanorlootlog() {
  return &szmanorlootlog_;
}

// -------------------------------------------------------------------

// CMD_MANOR_REVENGE_CS

// required .GSProto.PBPkRole enemy = 1;
inline bool CMD_MANOR_REVENGE_CS::has_enemy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_MANOR_REVENGE_CS::set_has_enemy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_MANOR_REVENGE_CS::clear_has_enemy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_MANOR_REVENGE_CS::clear_enemy() {
  if (enemy_ != NULL) enemy_->::GSProto::PBPkRole::Clear();
  clear_has_enemy();
}
inline const ::GSProto::PBPkRole& CMD_MANOR_REVENGE_CS::enemy() const {
  return enemy_ != NULL ? *enemy_ : *default_instance_->enemy_;
}
inline ::GSProto::PBPkRole* CMD_MANOR_REVENGE_CS::mutable_enemy() {
  set_has_enemy();
  if (enemy_ == NULL) enemy_ = new ::GSProto::PBPkRole;
  return enemy_;
}
inline ::GSProto::PBPkRole* CMD_MANOR_REVENGE_CS::release_enemy() {
  clear_has_enemy();
  ::GSProto::PBPkRole* temp = enemy_;
  enemy_ = NULL;
  return temp;
}
inline void CMD_MANOR_REVENGE_CS::set_allocated_enemy(::GSProto::PBPkRole* enemy) {
  delete enemy_;
  enemy_ = enemy;
  if (enemy) {
    set_has_enemy();
  } else {
    clear_has_enemy();
  }
}

// -------------------------------------------------------------------

// BeLootActorInfo

// required string strActorName = 1;
inline bool BeLootActorInfo::has_stractorname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeLootActorInfo::set_has_stractorname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeLootActorInfo::clear_has_stractorname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeLootActorInfo::clear_stractorname() {
  if (stractorname_ != &::google::protobuf::internal::kEmptyString) {
    stractorname_->clear();
  }
  clear_has_stractorname();
}
inline const ::std::string& BeLootActorInfo::stractorname() const {
  return *stractorname_;
}
inline void BeLootActorInfo::set_stractorname(const ::std::string& value) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(value);
}
inline void BeLootActorInfo::set_stractorname(const char* value) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(value);
}
inline void BeLootActorInfo::set_stractorname(const char* value, size_t size) {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  stractorname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BeLootActorInfo::mutable_stractorname() {
  set_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    stractorname_ = new ::std::string;
  }
  return stractorname_;
}
inline ::std::string* BeLootActorInfo::release_stractorname() {
  clear_has_stractorname();
  if (stractorname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stractorname_;
    stractorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BeLootActorInfo::set_allocated_stractorname(::std::string* stractorname) {
  if (stractorname_ != &::google::protobuf::internal::kEmptyString) {
    delete stractorname_;
  }
  if (stractorname) {
    set_has_stractorname();
    stractorname_ = stractorname;
  } else {
    clear_has_stractorname();
    stractorname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iActorLevel = 2;
inline bool BeLootActorInfo::has_iactorlevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BeLootActorInfo::set_has_iactorlevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BeLootActorInfo::clear_has_iactorlevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BeLootActorInfo::clear_iactorlevel() {
  iactorlevel_ = 0;
  clear_has_iactorlevel();
}
inline ::google::protobuf::int32 BeLootActorInfo::iactorlevel() const {
  return iactorlevel_;
}
inline void BeLootActorInfo::set_iactorlevel(::google::protobuf::int32 value) {
  set_has_iactorlevel();
  iactorlevel_ = value;
}

// required int32 iFightValue = 3;
inline bool BeLootActorInfo::has_ifightvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BeLootActorInfo::set_has_ifightvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BeLootActorInfo::clear_has_ifightvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BeLootActorInfo::clear_ifightvalue() {
  ifightvalue_ = 0;
  clear_has_ifightvalue();
}
inline ::google::protobuf::int32 BeLootActorInfo::ifightvalue() const {
  return ifightvalue_;
}
inline void BeLootActorInfo::set_ifightvalue(::google::protobuf::int32 value) {
  set_has_ifightvalue();
  ifightvalue_ = value;
}

// required int32 iHeadID = 4;
inline bool BeLootActorInfo::has_iheadid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BeLootActorInfo::set_has_iheadid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BeLootActorInfo::clear_has_iheadid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BeLootActorInfo::clear_iheadid() {
  iheadid_ = 0;
  clear_has_iheadid();
}
inline ::google::protobuf::int32 BeLootActorInfo::iheadid() const {
  return iheadid_;
}
inline void BeLootActorInfo::set_iheadid(::google::protobuf::int32 value) {
  set_has_iheadid();
  iheadid_ = value;
}

// required string legionName = 5;
inline bool BeLootActorInfo::has_legionname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BeLootActorInfo::set_has_legionname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BeLootActorInfo::clear_has_legionname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BeLootActorInfo::clear_legionname() {
  if (legionname_ != &::google::protobuf::internal::kEmptyString) {
    legionname_->clear();
  }
  clear_has_legionname();
}
inline const ::std::string& BeLootActorInfo::legionname() const {
  return *legionname_;
}
inline void BeLootActorInfo::set_legionname(const ::std::string& value) {
  set_has_legionname();
  if (legionname_ == &::google::protobuf::internal::kEmptyString) {
    legionname_ = new ::std::string;
  }
  legionname_->assign(value);
}
inline void BeLootActorInfo::set_legionname(const char* value) {
  set_has_legionname();
  if (legionname_ == &::google::protobuf::internal::kEmptyString) {
    legionname_ = new ::std::string;
  }
  legionname_->assign(value);
}
inline void BeLootActorInfo::set_legionname(const char* value, size_t size) {
  set_has_legionname();
  if (legionname_ == &::google::protobuf::internal::kEmptyString) {
    legionname_ = new ::std::string;
  }
  legionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BeLootActorInfo::mutable_legionname() {
  set_has_legionname();
  if (legionname_ == &::google::protobuf::internal::kEmptyString) {
    legionname_ = new ::std::string;
  }
  return legionname_;
}
inline ::std::string* BeLootActorInfo::release_legionname() {
  clear_has_legionname();
  if (legionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = legionname_;
    legionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BeLootActorInfo::set_allocated_legionname(::std::string* legionname) {
  if (legionname_ != &::google::protobuf::internal::kEmptyString) {
    delete legionname_;
  }
  if (legionname) {
    set_has_legionname();
    legionname_ = legionname;
  } else {
    clear_has_legionname();
    legionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ManorEnemyHeroFormation

// required int32 iPos = 1;
inline bool ManorEnemyHeroFormation::has_ipos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManorEnemyHeroFormation::set_has_ipos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManorEnemyHeroFormation::clear_has_ipos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManorEnemyHeroFormation::clear_ipos() {
  ipos_ = 0;
  clear_has_ipos();
}
inline ::google::protobuf::int32 ManorEnemyHeroFormation::ipos() const {
  return ipos_;
}
inline void ManorEnemyHeroFormation::set_ipos(::google::protobuf::int32 value) {
  set_has_ipos();
  ipos_ = value;
}

// required int32 iBaseId = 2;
inline bool ManorEnemyHeroFormation::has_ibaseid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManorEnemyHeroFormation::set_has_ibaseid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManorEnemyHeroFormation::clear_has_ibaseid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManorEnemyHeroFormation::clear_ibaseid() {
  ibaseid_ = 0;
  clear_has_ibaseid();
}
inline ::google::protobuf::int32 ManorEnemyHeroFormation::ibaseid() const {
  return ibaseid_;
}
inline void ManorEnemyHeroFormation::set_ibaseid(::google::protobuf::int32 value) {
  set_has_ibaseid();
  ibaseid_ = value;
}

// required int32 iLevelStep = 3;
inline bool ManorEnemyHeroFormation::has_ilevelstep() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManorEnemyHeroFormation::set_has_ilevelstep() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManorEnemyHeroFormation::clear_has_ilevelstep() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManorEnemyHeroFormation::clear_ilevelstep() {
  ilevelstep_ = 0;
  clear_has_ilevelstep();
}
inline ::google::protobuf::int32 ManorEnemyHeroFormation::ilevelstep() const {
  return ilevelstep_;
}
inline void ManorEnemyHeroFormation::set_ilevelstep(::google::protobuf::int32 value) {
  set_has_ilevelstep();
  ilevelstep_ = value;
}

// required int32 iLevel = 4;
inline bool ManorEnemyHeroFormation::has_ilevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ManorEnemyHeroFormation::set_has_ilevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ManorEnemyHeroFormation::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ManorEnemyHeroFormation::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 ManorEnemyHeroFormation::ilevel() const {
  return ilevel_;
}
inline void ManorEnemyHeroFormation::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// required int32 iquality = 5;
inline bool ManorEnemyHeroFormation::has_iquality() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ManorEnemyHeroFormation::set_has_iquality() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ManorEnemyHeroFormation::clear_has_iquality() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ManorEnemyHeroFormation::clear_iquality() {
  iquality_ = 0;
  clear_has_iquality();
}
inline ::google::protobuf::int32 ManorEnemyHeroFormation::iquality() const {
  return iquality_;
}
inline void ManorEnemyHeroFormation::set_iquality(::google::protobuf::int32 value) {
  set_has_iquality();
  iquality_ = value;
}

// -------------------------------------------------------------------

// OtherManorResDetail

// required int32 iResId = 1;
inline bool OtherManorResDetail::has_iresid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OtherManorResDetail::set_has_iresid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OtherManorResDetail::clear_has_iresid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OtherManorResDetail::clear_iresid() {
  iresid_ = 0;
  clear_has_iresid();
}
inline ::google::protobuf::int32 OtherManorResDetail::iresid() const {
  return iresid_;
}
inline void OtherManorResDetail::set_iresid(::google::protobuf::int32 value) {
  set_has_iresid();
  iresid_ = value;
}

// required int32 iResLevel = 2;
inline bool OtherManorResDetail::has_ireslevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OtherManorResDetail::set_has_ireslevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OtherManorResDetail::clear_has_ireslevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OtherManorResDetail::clear_ireslevel() {
  ireslevel_ = 0;
  clear_has_ireslevel();
}
inline ::google::protobuf::int32 OtherManorResDetail::ireslevel() const {
  return ireslevel_;
}
inline void OtherManorResDetail::set_ireslevel(::google::protobuf::int32 value) {
  set_has_ireslevel();
  ireslevel_ = value;
}

// -------------------------------------------------------------------

// CMD_MANOR_REQUEST_LOOT_SC

// required .GSProto.BeLootActorInfo beLootActorInfo = 1;
inline bool CMD_MANOR_REQUEST_LOOT_SC::has_belootactorinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::set_has_belootactorinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::clear_has_belootactorinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::clear_belootactorinfo() {
  if (belootactorinfo_ != NULL) belootactorinfo_->::GSProto::BeLootActorInfo::Clear();
  clear_has_belootactorinfo();
}
inline const ::GSProto::BeLootActorInfo& CMD_MANOR_REQUEST_LOOT_SC::belootactorinfo() const {
  return belootactorinfo_ != NULL ? *belootactorinfo_ : *default_instance_->belootactorinfo_;
}
inline ::GSProto::BeLootActorInfo* CMD_MANOR_REQUEST_LOOT_SC::mutable_belootactorinfo() {
  set_has_belootactorinfo();
  if (belootactorinfo_ == NULL) belootactorinfo_ = new ::GSProto::BeLootActorInfo;
  return belootactorinfo_;
}
inline ::GSProto::BeLootActorInfo* CMD_MANOR_REQUEST_LOOT_SC::release_belootactorinfo() {
  clear_has_belootactorinfo();
  ::GSProto::BeLootActorInfo* temp = belootactorinfo_;
  belootactorinfo_ = NULL;
  return temp;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::set_allocated_belootactorinfo(::GSProto::BeLootActorInfo* belootactorinfo) {
  delete belootactorinfo_;
  belootactorinfo_ = belootactorinfo;
  if (belootactorinfo) {
    set_has_belootactorinfo();
  } else {
    clear_has_belootactorinfo();
  }
}

// required int32 iCanLootSilver = 2;
inline bool CMD_MANOR_REQUEST_LOOT_SC::has_icanlootsilver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::set_has_icanlootsilver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::clear_has_icanlootsilver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::clear_icanlootsilver() {
  icanlootsilver_ = 0;
  clear_has_icanlootsilver();
}
inline ::google::protobuf::int32 CMD_MANOR_REQUEST_LOOT_SC::icanlootsilver() const {
  return icanlootsilver_;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::set_icanlootsilver(::google::protobuf::int32 value) {
  set_has_icanlootsilver();
  icanlootsilver_ = value;
}

// required int32 iCanLootHeroExp = 3;
inline bool CMD_MANOR_REQUEST_LOOT_SC::has_icanlootheroexp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::set_has_icanlootheroexp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::clear_has_icanlootheroexp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::clear_icanlootheroexp() {
  icanlootheroexp_ = 0;
  clear_has_icanlootheroexp();
}
inline ::google::protobuf::int32 CMD_MANOR_REQUEST_LOOT_SC::icanlootheroexp() const {
  return icanlootheroexp_;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::set_icanlootheroexp(::google::protobuf::int32 value) {
  set_has_icanlootheroexp();
  icanlootheroexp_ = value;
}

// repeated .GSProto.ManorEnemyHeroFormation szEnemyHeroFormation = 4;
inline int CMD_MANOR_REQUEST_LOOT_SC::szenemyheroformation_size() const {
  return szenemyheroformation_.size();
}
inline void CMD_MANOR_REQUEST_LOOT_SC::clear_szenemyheroformation() {
  szenemyheroformation_.Clear();
}
inline const ::GSProto::ManorEnemyHeroFormation& CMD_MANOR_REQUEST_LOOT_SC::szenemyheroformation(int index) const {
  return szenemyheroformation_.Get(index);
}
inline ::GSProto::ManorEnemyHeroFormation* CMD_MANOR_REQUEST_LOOT_SC::mutable_szenemyheroformation(int index) {
  return szenemyheroformation_.Mutable(index);
}
inline ::GSProto::ManorEnemyHeroFormation* CMD_MANOR_REQUEST_LOOT_SC::add_szenemyheroformation() {
  return szenemyheroformation_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ManorEnemyHeroFormation >&
CMD_MANOR_REQUEST_LOOT_SC::szenemyheroformation() const {
  return szenemyheroformation_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::ManorEnemyHeroFormation >*
CMD_MANOR_REQUEST_LOOT_SC::mutable_szenemyheroformation() {
  return &szenemyheroformation_;
}

// required int32 iRefreshCost = 5;
inline bool CMD_MANOR_REQUEST_LOOT_SC::has_irefreshcost() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::set_has_irefreshcost() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::clear_has_irefreshcost() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::clear_irefreshcost() {
  irefreshcost_ = 0;
  clear_has_irefreshcost();
}
inline ::google::protobuf::int32 CMD_MANOR_REQUEST_LOOT_SC::irefreshcost() const {
  return irefreshcost_;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::set_irefreshcost(::google::protobuf::int32 value) {
  set_has_irefreshcost();
  irefreshcost_ = value;
}

// required int32 iLootCostVigor = 6;
inline bool CMD_MANOR_REQUEST_LOOT_SC::has_ilootcostvigor() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::set_has_ilootcostvigor() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::clear_has_ilootcostvigor() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::clear_ilootcostvigor() {
  ilootcostvigor_ = 0;
  clear_has_ilootcostvigor();
}
inline ::google::protobuf::int32 CMD_MANOR_REQUEST_LOOT_SC::ilootcostvigor() const {
  return ilootcostvigor_;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::set_ilootcostvigor(::google::protobuf::int32 value) {
  set_has_ilootcostvigor();
  ilootcostvigor_ = value;
}

// required .GSProto.PBPkRole enemy = 7;
inline bool CMD_MANOR_REQUEST_LOOT_SC::has_enemy() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::set_has_enemy() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::clear_has_enemy() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::clear_enemy() {
  if (enemy_ != NULL) enemy_->::GSProto::PBPkRole::Clear();
  clear_has_enemy();
}
inline const ::GSProto::PBPkRole& CMD_MANOR_REQUEST_LOOT_SC::enemy() const {
  return enemy_ != NULL ? *enemy_ : *default_instance_->enemy_;
}
inline ::GSProto::PBPkRole* CMD_MANOR_REQUEST_LOOT_SC::mutable_enemy() {
  set_has_enemy();
  if (enemy_ == NULL) enemy_ = new ::GSProto::PBPkRole;
  return enemy_;
}
inline ::GSProto::PBPkRole* CMD_MANOR_REQUEST_LOOT_SC::release_enemy() {
  clear_has_enemy();
  ::GSProto::PBPkRole* temp = enemy_;
  enemy_ = NULL;
  return temp;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::set_allocated_enemy(::GSProto::PBPkRole* enemy) {
  delete enemy_;
  enemy_ = enemy;
  if (enemy) {
    set_has_enemy();
  } else {
    clear_has_enemy();
  }
}

// repeated .GSProto.OtherManorResDetail silverRes = 8;
inline int CMD_MANOR_REQUEST_LOOT_SC::silverres_size() const {
  return silverres_.size();
}
inline void CMD_MANOR_REQUEST_LOOT_SC::clear_silverres() {
  silverres_.Clear();
}
inline const ::GSProto::OtherManorResDetail& CMD_MANOR_REQUEST_LOOT_SC::silverres(int index) const {
  return silverres_.Get(index);
}
inline ::GSProto::OtherManorResDetail* CMD_MANOR_REQUEST_LOOT_SC::mutable_silverres(int index) {
  return silverres_.Mutable(index);
}
inline ::GSProto::OtherManorResDetail* CMD_MANOR_REQUEST_LOOT_SC::add_silverres() {
  return silverres_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::OtherManorResDetail >&
CMD_MANOR_REQUEST_LOOT_SC::silverres() const {
  return silverres_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::OtherManorResDetail >*
CMD_MANOR_REQUEST_LOOT_SC::mutable_silverres() {
  return &silverres_;
}

// repeated .GSProto.OtherManorResDetail heroExpRes = 9;
inline int CMD_MANOR_REQUEST_LOOT_SC::heroexpres_size() const {
  return heroexpres_.size();
}
inline void CMD_MANOR_REQUEST_LOOT_SC::clear_heroexpres() {
  heroexpres_.Clear();
}
inline const ::GSProto::OtherManorResDetail& CMD_MANOR_REQUEST_LOOT_SC::heroexpres(int index) const {
  return heroexpres_.Get(index);
}
inline ::GSProto::OtherManorResDetail* CMD_MANOR_REQUEST_LOOT_SC::mutable_heroexpres(int index) {
  return heroexpres_.Mutable(index);
}
inline ::GSProto::OtherManorResDetail* CMD_MANOR_REQUEST_LOOT_SC::add_heroexpres() {
  return heroexpres_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::OtherManorResDetail >&
CMD_MANOR_REQUEST_LOOT_SC::heroexpres() const {
  return heroexpres_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::OtherManorResDetail >*
CMD_MANOR_REQUEST_LOOT_SC::mutable_heroexpres() {
  return &heroexpres_;
}

// required .GSProto.OtherManorResDetail tieJiangyPu = 10;
inline bool CMD_MANOR_REQUEST_LOOT_SC::has_tiejiangypu() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::set_has_tiejiangypu() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::clear_has_tiejiangypu() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::clear_tiejiangypu() {
  if (tiejiangypu_ != NULL) tiejiangypu_->::GSProto::OtherManorResDetail::Clear();
  clear_has_tiejiangypu();
}
inline const ::GSProto::OtherManorResDetail& CMD_MANOR_REQUEST_LOOT_SC::tiejiangypu() const {
  return tiejiangypu_ != NULL ? *tiejiangypu_ : *default_instance_->tiejiangypu_;
}
inline ::GSProto::OtherManorResDetail* CMD_MANOR_REQUEST_LOOT_SC::mutable_tiejiangypu() {
  set_has_tiejiangypu();
  if (tiejiangypu_ == NULL) tiejiangypu_ = new ::GSProto::OtherManorResDetail;
  return tiejiangypu_;
}
inline ::GSProto::OtherManorResDetail* CMD_MANOR_REQUEST_LOOT_SC::release_tiejiangypu() {
  clear_has_tiejiangypu();
  ::GSProto::OtherManorResDetail* temp = tiejiangypu_;
  tiejiangypu_ = NULL;
  return temp;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::set_allocated_tiejiangypu(::GSProto::OtherManorResDetail* tiejiangypu) {
  delete tiejiangypu_;
  tiejiangypu_ = tiejiangypu;
  if (tiejiangypu) {
    set_has_tiejiangypu();
  } else {
    clear_has_tiejiangypu();
  }
}

// required .GSProto.OtherManorResDetail wuHunDian = 11;
inline bool CMD_MANOR_REQUEST_LOOT_SC::has_wuhundian() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::set_has_wuhundian() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::clear_has_wuhundian() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::clear_wuhundian() {
  if (wuhundian_ != NULL) wuhundian_->::GSProto::OtherManorResDetail::Clear();
  clear_has_wuhundian();
}
inline const ::GSProto::OtherManorResDetail& CMD_MANOR_REQUEST_LOOT_SC::wuhundian() const {
  return wuhundian_ != NULL ? *wuhundian_ : *default_instance_->wuhundian_;
}
inline ::GSProto::OtherManorResDetail* CMD_MANOR_REQUEST_LOOT_SC::mutable_wuhundian() {
  set_has_wuhundian();
  if (wuhundian_ == NULL) wuhundian_ = new ::GSProto::OtherManorResDetail;
  return wuhundian_;
}
inline ::GSProto::OtherManorResDetail* CMD_MANOR_REQUEST_LOOT_SC::release_wuhundian() {
  clear_has_wuhundian();
  ::GSProto::OtherManorResDetail* temp = wuhundian_;
  wuhundian_ = NULL;
  return temp;
}
inline void CMD_MANOR_REQUEST_LOOT_SC::set_allocated_wuhundian(::GSProto::OtherManorResDetail* wuhundian) {
  delete wuhundian_;
  wuhundian_ = wuhundian;
  if (wuhundian) {
    set_has_wuhundian();
  } else {
    clear_has_wuhundian();
  }
}

// -------------------------------------------------------------------

// CMD_MANOR_REQUEST_LOOT_BATTLE_CS

// required .GSProto.PBPkRole enemy = 1;
inline bool CMD_MANOR_REQUEST_LOOT_BATTLE_CS::has_enemy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_MANOR_REQUEST_LOOT_BATTLE_CS::set_has_enemy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_MANOR_REQUEST_LOOT_BATTLE_CS::clear_has_enemy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_MANOR_REQUEST_LOOT_BATTLE_CS::clear_enemy() {
  if (enemy_ != NULL) enemy_->::GSProto::PBPkRole::Clear();
  clear_has_enemy();
}
inline const ::GSProto::PBPkRole& CMD_MANOR_REQUEST_LOOT_BATTLE_CS::enemy() const {
  return enemy_ != NULL ? *enemy_ : *default_instance_->enemy_;
}
inline ::GSProto::PBPkRole* CMD_MANOR_REQUEST_LOOT_BATTLE_CS::mutable_enemy() {
  set_has_enemy();
  if (enemy_ == NULL) enemy_ = new ::GSProto::PBPkRole;
  return enemy_;
}
inline ::GSProto::PBPkRole* CMD_MANOR_REQUEST_LOOT_BATTLE_CS::release_enemy() {
  clear_has_enemy();
  ::GSProto::PBPkRole* temp = enemy_;
  enemy_ = NULL;
  return temp;
}
inline void CMD_MANOR_REQUEST_LOOT_BATTLE_CS::set_allocated_enemy(::GSProto::PBPkRole* enemy) {
  delete enemy_;
  enemy_ = enemy;
  if (enemy) {
    set_has_enemy();
  } else {
    clear_has_enemy();
  }
}

// -------------------------------------------------------------------

// CMD_HERO_CALLHERO_CS

// required int32 iHeorID = 1;
inline bool CMD_HERO_CALLHERO_CS::has_iheorid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_HERO_CALLHERO_CS::set_has_iheorid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_HERO_CALLHERO_CS::clear_has_iheorid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_HERO_CALLHERO_CS::clear_iheorid() {
  iheorid_ = 0;
  clear_has_iheorid();
}
inline ::google::protobuf::int32 CMD_HERO_CALLHERO_CS::iheorid() const {
  return iheorid_;
}
inline void CMD_HERO_CALLHERO_CS::set_iheorid(::google::protobuf::int32 value) {
  set_has_iheorid();
  iheorid_ = value;
}

// -------------------------------------------------------------------

// CMD_HERO_CALLHERO_SC

// required int32 iHeroID = 1;
inline bool CMD_HERO_CALLHERO_SC::has_iheroid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_HERO_CALLHERO_SC::set_has_iheroid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_HERO_CALLHERO_SC::clear_has_iheroid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_HERO_CALLHERO_SC::clear_iheroid() {
  iheroid_ = 0;
  clear_has_iheroid();
}
inline ::google::protobuf::int32 CMD_HERO_CALLHERO_SC::iheroid() const {
  return iheroid_;
}
inline void CMD_HERO_CALLHERO_SC::set_iheroid(::google::protobuf::int32 value) {
  set_has_iheroid();
  iheroid_ = value;
}

// required uint32 dwNewHeroID = 2;
inline bool CMD_HERO_CALLHERO_SC::has_dwnewheroid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_HERO_CALLHERO_SC::set_has_dwnewheroid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_HERO_CALLHERO_SC::clear_has_dwnewheroid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_HERO_CALLHERO_SC::clear_dwnewheroid() {
  dwnewheroid_ = 0u;
  clear_has_dwnewheroid();
}
inline ::google::protobuf::uint32 CMD_HERO_CALLHERO_SC::dwnewheroid() const {
  return dwnewheroid_;
}
inline void CMD_HERO_CALLHERO_SC::set_dwnewheroid(::google::protobuf::uint32 value) {
  set_has_dwnewheroid();
  dwnewheroid_ = value;
}

// -------------------------------------------------------------------

// CMD_HERO_EQUIP_FAVORITE_CS

// required uint32 dwHeroObjectID = 1;
inline bool CMD_HERO_EQUIP_FAVORITE_CS::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_HERO_EQUIP_FAVORITE_CS::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_HERO_EQUIP_FAVORITE_CS::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_HERO_EQUIP_FAVORITE_CS::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 CMD_HERO_EQUIP_FAVORITE_CS::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void CMD_HERO_EQUIP_FAVORITE_CS::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// required int32 iItemID = 2;
inline bool CMD_HERO_EQUIP_FAVORITE_CS::has_iitemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_HERO_EQUIP_FAVORITE_CS::set_has_iitemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_HERO_EQUIP_FAVORITE_CS::clear_has_iitemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_HERO_EQUIP_FAVORITE_CS::clear_iitemid() {
  iitemid_ = 0;
  clear_has_iitemid();
}
inline ::google::protobuf::int32 CMD_HERO_EQUIP_FAVORITE_CS::iitemid() const {
  return iitemid_;
}
inline void CMD_HERO_EQUIP_FAVORITE_CS::set_iitemid(::google::protobuf::int32 value) {
  set_has_iitemid();
  iitemid_ = value;
}

// required int32 iPos = 3;
inline bool CMD_HERO_EQUIP_FAVORITE_CS::has_ipos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_HERO_EQUIP_FAVORITE_CS::set_has_ipos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_HERO_EQUIP_FAVORITE_CS::clear_has_ipos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_HERO_EQUIP_FAVORITE_CS::clear_ipos() {
  ipos_ = 0;
  clear_has_ipos();
}
inline ::google::protobuf::int32 CMD_HERO_EQUIP_FAVORITE_CS::ipos() const {
  return ipos_;
}
inline void CMD_HERO_EQUIP_FAVORITE_CS::set_ipos(::google::protobuf::int32 value) {
  set_has_ipos();
  ipos_ = value;
}

// -------------------------------------------------------------------

// CMD_HERO_EQUIP_FAVORITE_SC

// required uint32 dwHeroObjectID = 1;
inline bool CMD_HERO_EQUIP_FAVORITE_SC::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_HERO_EQUIP_FAVORITE_SC::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_HERO_EQUIP_FAVORITE_SC::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_HERO_EQUIP_FAVORITE_SC::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 CMD_HERO_EQUIP_FAVORITE_SC::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void CMD_HERO_EQUIP_FAVORITE_SC::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// required bool bResult = 2;
inline bool CMD_HERO_EQUIP_FAVORITE_SC::has_bresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_HERO_EQUIP_FAVORITE_SC::set_has_bresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_HERO_EQUIP_FAVORITE_SC::clear_has_bresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_HERO_EQUIP_FAVORITE_SC::clear_bresult() {
  bresult_ = false;
  clear_has_bresult();
}
inline bool CMD_HERO_EQUIP_FAVORITE_SC::bresult() const {
  return bresult_;
}
inline void CMD_HERO_EQUIP_FAVORITE_SC::set_bresult(bool value) {
  set_has_bresult();
  bresult_ = value;
}

// required int32 iItemID = 3;
inline bool CMD_HERO_EQUIP_FAVORITE_SC::has_iitemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_HERO_EQUIP_FAVORITE_SC::set_has_iitemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_HERO_EQUIP_FAVORITE_SC::clear_has_iitemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_HERO_EQUIP_FAVORITE_SC::clear_iitemid() {
  iitemid_ = 0;
  clear_has_iitemid();
}
inline ::google::protobuf::int32 CMD_HERO_EQUIP_FAVORITE_SC::iitemid() const {
  return iitemid_;
}
inline void CMD_HERO_EQUIP_FAVORITE_SC::set_iitemid(::google::protobuf::int32 value) {
  set_has_iitemid();
  iitemid_ = value;
}

// required int32 iPos = 4;
inline bool CMD_HERO_EQUIP_FAVORITE_SC::has_ipos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_HERO_EQUIP_FAVORITE_SC::set_has_ipos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_HERO_EQUIP_FAVORITE_SC::clear_has_ipos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_HERO_EQUIP_FAVORITE_SC::clear_ipos() {
  ipos_ = 0;
  clear_has_ipos();
}
inline ::google::protobuf::int32 CMD_HERO_EQUIP_FAVORITE_SC::ipos() const {
  return ipos_;
}
inline void CMD_HERO_EQUIP_FAVORITE_SC::set_ipos(::google::protobuf::int32 value) {
  set_has_ipos();
  ipos_ = value;
}

// -------------------------------------------------------------------

// CMD_HERO_COMBINE_FAVORITE_CS

// required int32 iItemID = 1;
inline bool CMD_HERO_COMBINE_FAVORITE_CS::has_iitemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_HERO_COMBINE_FAVORITE_CS::set_has_iitemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_HERO_COMBINE_FAVORITE_CS::clear_has_iitemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_HERO_COMBINE_FAVORITE_CS::clear_iitemid() {
  iitemid_ = 0;
  clear_has_iitemid();
}
inline ::google::protobuf::int32 CMD_HERO_COMBINE_FAVORITE_CS::iitemid() const {
  return iitemid_;
}
inline void CMD_HERO_COMBINE_FAVORITE_CS::set_iitemid(::google::protobuf::int32 value) {
  set_has_iitemid();
  iitemid_ = value;
}

// -------------------------------------------------------------------

// CMD_HERO_COMBINE_FAVORITE_SC

// required bool bResult = 1;
inline bool CMD_HERO_COMBINE_FAVORITE_SC::has_bresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_HERO_COMBINE_FAVORITE_SC::set_has_bresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_HERO_COMBINE_FAVORITE_SC::clear_has_bresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_HERO_COMBINE_FAVORITE_SC::clear_bresult() {
  bresult_ = false;
  clear_has_bresult();
}
inline bool CMD_HERO_COMBINE_FAVORITE_SC::bresult() const {
  return bresult_;
}
inline void CMD_HERO_COMBINE_FAVORITE_SC::set_bresult(bool value) {
  set_has_bresult();
  bresult_ = value;
}

// required int32 iItemID = 2;
inline bool CMD_HERO_COMBINE_FAVORITE_SC::has_iitemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_HERO_COMBINE_FAVORITE_SC::set_has_iitemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_HERO_COMBINE_FAVORITE_SC::clear_has_iitemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_HERO_COMBINE_FAVORITE_SC::clear_iitemid() {
  iitemid_ = 0;
  clear_has_iitemid();
}
inline ::google::protobuf::int32 CMD_HERO_COMBINE_FAVORITE_SC::iitemid() const {
  return iitemid_;
}
inline void CMD_HERO_COMBINE_FAVORITE_SC::set_iitemid(::google::protobuf::int32 value) {
  set_has_iitemid();
  iitemid_ = value;
}

// -------------------------------------------------------------------

// CMD_HERO_QUALITY_UP_CS

// required uint32 dwHeroObjectID = 1;
inline bool CMD_HERO_QUALITY_UP_CS::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_HERO_QUALITY_UP_CS::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_HERO_QUALITY_UP_CS::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_HERO_QUALITY_UP_CS::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 CMD_HERO_QUALITY_UP_CS::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void CMD_HERO_QUALITY_UP_CS::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// -------------------------------------------------------------------

// CMD_HERO_QUALITY_UP_SC

// required uint32 dwHeroObjectID = 1;
inline bool CMD_HERO_QUALITY_UP_SC::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_HERO_QUALITY_UP_SC::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_HERO_QUALITY_UP_SC::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_HERO_QUALITY_UP_SC::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 CMD_HERO_QUALITY_UP_SC::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void CMD_HERO_QUALITY_UP_SC::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// repeated .GSProto.PropItem szPropAddValueList = 2;
inline int CMD_HERO_QUALITY_UP_SC::szpropaddvaluelist_size() const {
  return szpropaddvaluelist_.size();
}
inline void CMD_HERO_QUALITY_UP_SC::clear_szpropaddvaluelist() {
  szpropaddvaluelist_.Clear();
}
inline const ::GSProto::PropItem& CMD_HERO_QUALITY_UP_SC::szpropaddvaluelist(int index) const {
  return szpropaddvaluelist_.Get(index);
}
inline ::GSProto::PropItem* CMD_HERO_QUALITY_UP_SC::mutable_szpropaddvaluelist(int index) {
  return szpropaddvaluelist_.Mutable(index);
}
inline ::GSProto::PropItem* CMD_HERO_QUALITY_UP_SC::add_szpropaddvaluelist() {
  return szpropaddvaluelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
CMD_HERO_QUALITY_UP_SC::szpropaddvaluelist() const {
  return szpropaddvaluelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
CMD_HERO_QUALITY_UP_SC::mutable_szpropaddvaluelist() {
  return &szpropaddvaluelist_;
}

// -------------------------------------------------------------------

// CMD_SHOPSYSTEM_RANDITEMORHERO_CS

// required .GSProto.RandomType enType = 1;
inline bool CMD_SHOPSYSTEM_RANDITEMORHERO_CS::has_entype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_SHOPSYSTEM_RANDITEMORHERO_CS::set_has_entype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_SHOPSYSTEM_RANDITEMORHERO_CS::clear_has_entype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_SHOPSYSTEM_RANDITEMORHERO_CS::clear_entype() {
  entype_ = 0;
  clear_has_entype();
}
inline ::GSProto::RandomType CMD_SHOPSYSTEM_RANDITEMORHERO_CS::entype() const {
  return static_cast< ::GSProto::RandomType >(entype_);
}
inline void CMD_SHOPSYSTEM_RANDITEMORHERO_CS::set_entype(::GSProto::RandomType value) {
  assert(::GSProto::RandomType_IsValid(value));
  set_has_entype();
  entype_ = value;
}

// -------------------------------------------------------------------

// RandReturnUnit

// required .GSProto.enRandReturnType enType = 1;
inline bool RandReturnUnit::has_entype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RandReturnUnit::set_has_entype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RandReturnUnit::clear_has_entype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RandReturnUnit::clear_entype() {
  entype_ = 0;
  clear_has_entype();
}
inline ::GSProto::enRandReturnType RandReturnUnit::entype() const {
  return static_cast< ::GSProto::enRandReturnType >(entype_);
}
inline void RandReturnUnit::set_entype(::GSProto::enRandReturnType value) {
  assert(::GSProto::enRandReturnType_IsValid(value));
  set_has_entype();
  entype_ = value;
}

// required int32 id = 2;
inline bool RandReturnUnit::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RandReturnUnit::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RandReturnUnit::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RandReturnUnit::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 RandReturnUnit::id() const {
  return id_;
}
inline void RandReturnUnit::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 iCount = 3;
inline bool RandReturnUnit::has_icount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RandReturnUnit::set_has_icount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RandReturnUnit::clear_has_icount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RandReturnUnit::clear_icount() {
  icount_ = 0;
  clear_has_icount();
}
inline ::google::protobuf::int32 RandReturnUnit::icount() const {
  return icount_;
}
inline void RandReturnUnit::set_icount(::google::protobuf::int32 value) {
  set_has_icount();
  icount_ = value;
}

// optional int32 iLevelUp = 4;
inline bool RandReturnUnit::has_ilevelup() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RandReturnUnit::set_has_ilevelup() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RandReturnUnit::clear_has_ilevelup() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RandReturnUnit::clear_ilevelup() {
  ilevelup_ = 0;
  clear_has_ilevelup();
}
inline ::google::protobuf::int32 RandReturnUnit::ilevelup() const {
  return ilevelup_;
}
inline void RandReturnUnit::set_ilevelup(::google::protobuf::int32 value) {
  set_has_ilevelup();
  ilevelup_ = value;
}

// optional int32 iHeroId = 5;
inline bool RandReturnUnit::has_iheroid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RandReturnUnit::set_has_iheroid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RandReturnUnit::clear_has_iheroid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RandReturnUnit::clear_iheroid() {
  iheroid_ = 0;
  clear_has_iheroid();
}
inline ::google::protobuf::int32 RandReturnUnit::iheroid() const {
  return iheroid_;
}
inline void RandReturnUnit::set_iheroid(::google::protobuf::int32 value) {
  set_has_iheroid();
  iheroid_ = value;
}

// -------------------------------------------------------------------

// CMD_SHOPSYSTEM_RANDITEMORHERO_SC

// repeated .GSProto.RandReturnUnit szReturn = 1;
inline int CMD_SHOPSYSTEM_RANDITEMORHERO_SC::szreturn_size() const {
  return szreturn_.size();
}
inline void CMD_SHOPSYSTEM_RANDITEMORHERO_SC::clear_szreturn() {
  szreturn_.Clear();
}
inline const ::GSProto::RandReturnUnit& CMD_SHOPSYSTEM_RANDITEMORHERO_SC::szreturn(int index) const {
  return szreturn_.Get(index);
}
inline ::GSProto::RandReturnUnit* CMD_SHOPSYSTEM_RANDITEMORHERO_SC::mutable_szreturn(int index) {
  return szreturn_.Mutable(index);
}
inline ::GSProto::RandReturnUnit* CMD_SHOPSYSTEM_RANDITEMORHERO_SC::add_szreturn() {
  return szreturn_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::RandReturnUnit >&
CMD_SHOPSYSTEM_RANDITEMORHERO_SC::szreturn() const {
  return szreturn_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::RandReturnUnit >*
CMD_SHOPSYSTEM_RANDITEMORHERO_SC::mutable_szreturn() {
  return &szreturn_;
}

// -------------------------------------------------------------------

// HonerGoodDetail

// required int32 iGoodId = 1;
inline bool HonerGoodDetail::has_igoodid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HonerGoodDetail::set_has_igoodid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HonerGoodDetail::clear_has_igoodid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HonerGoodDetail::clear_igoodid() {
  igoodid_ = 0;
  clear_has_igoodid();
}
inline ::google::protobuf::int32 HonerGoodDetail::igoodid() const {
  return igoodid_;
}
inline void HonerGoodDetail::set_igoodid(::google::protobuf::int32 value) {
  set_has_igoodid();
  igoodid_ = value;
}

// required bool bIsSale = 2;
inline bool HonerGoodDetail::has_bissale() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HonerGoodDetail::set_has_bissale() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HonerGoodDetail::clear_has_bissale() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HonerGoodDetail::clear_bissale() {
  bissale_ = false;
  clear_has_bissale();
}
inline bool HonerGoodDetail::bissale() const {
  return bissale_;
}
inline void HonerGoodDetail::set_bissale(bool value) {
  set_has_bissale();
  bissale_ = value;
}

// required int32 iIndex = 3;
inline bool HonerGoodDetail::has_iindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HonerGoodDetail::set_has_iindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HonerGoodDetail::clear_has_iindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HonerGoodDetail::clear_iindex() {
  iindex_ = 0;
  clear_has_iindex();
}
inline ::google::protobuf::int32 HonerGoodDetail::iindex() const {
  return iindex_;
}
inline void HonerGoodDetail::set_iindex(::google::protobuf::int32 value) {
  set_has_iindex();
  iindex_ = value;
}

// -------------------------------------------------------------------

// CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC

// repeated .GSProto.HonerGoodDetail szGoodList = 1;
inline int CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC::szgoodlist_size() const {
  return szgoodlist_.size();
}
inline void CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC::clear_szgoodlist() {
  szgoodlist_.Clear();
}
inline const ::GSProto::HonerGoodDetail& CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC::szgoodlist(int index) const {
  return szgoodlist_.Get(index);
}
inline ::GSProto::HonerGoodDetail* CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC::mutable_szgoodlist(int index) {
  return szgoodlist_.Mutable(index);
}
inline ::GSProto::HonerGoodDetail* CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC::add_szgoodlist() {
  return szgoodlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::HonerGoodDetail >&
CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC::szgoodlist() const {
  return szgoodlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::HonerGoodDetail >*
CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC::mutable_szgoodlist() {
  return &szgoodlist_;
}

// required bool bIsToday = 2;
inline bool CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC::has_bistoday() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC::set_has_bistoday() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC::clear_has_bistoday() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC::clear_bistoday() {
  bistoday_ = false;
  clear_has_bistoday();
}
inline bool CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC::bistoday() const {
  return bistoday_;
}
inline void CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC::set_bistoday(bool value) {
  set_has_bistoday();
  bistoday_ = value;
}

// required int32 iUpdateMoment = 3;
inline bool CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC::has_iupdatemoment() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC::set_has_iupdatemoment() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC::clear_has_iupdatemoment() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC::clear_iupdatemoment() {
  iupdatemoment_ = 0;
  clear_has_iupdatemoment();
}
inline ::google::protobuf::int32 CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC::iupdatemoment() const {
  return iupdatemoment_;
}
inline void CMD_SHOPSYSTEM_HONORCONVERT_QUERY_SC::set_iupdatemoment(::google::protobuf::int32 value) {
  set_has_iupdatemoment();
  iupdatemoment_ = value;
}

// -------------------------------------------------------------------

// CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS

// required int32 iIndex = 1;
inline bool CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS::has_iindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS::set_has_iindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS::clear_has_iindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS::clear_iindex() {
  iindex_ = 0;
  clear_has_iindex();
}
inline ::google::protobuf::int32 CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS::iindex() const {
  return iindex_;
}
inline void CMD_SHOPSYSTEM_HONORCONVERT_CONVERT_CS::set_iindex(::google::protobuf::int32 value) {
  set_has_iindex();
  iindex_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_SANGONG_CS

// required uint32 dwHeroObjectID = 1;
inline bool CMD_QUERY_SANGONG_CS::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_SANGONG_CS::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_SANGONG_CS::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_SANGONG_CS::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 CMD_QUERY_SANGONG_CS::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void CMD_QUERY_SANGONG_CS::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_SANGONG_SC

// required uint32 dwHeroObjectID = 1;
inline bool CMD_QUERY_SANGONG_SC::has_dwheroobjectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_SANGONG_SC::set_has_dwheroobjectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_SANGONG_SC::clear_has_dwheroobjectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_SANGONG_SC::clear_dwheroobjectid() {
  dwheroobjectid_ = 0u;
  clear_has_dwheroobjectid();
}
inline ::google::protobuf::uint32 CMD_QUERY_SANGONG_SC::dwheroobjectid() const {
  return dwheroobjectid_;
}
inline void CMD_QUERY_SANGONG_SC::set_dwheroobjectid(::google::protobuf::uint32 value) {
  set_has_dwheroobjectid();
  dwheroobjectid_ = value;
}

// required int32 iSilver = 2;
inline bool CMD_QUERY_SANGONG_SC::has_isilver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_QUERY_SANGONG_SC::set_has_isilver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_QUERY_SANGONG_SC::clear_has_isilver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_QUERY_SANGONG_SC::clear_isilver() {
  isilver_ = 0;
  clear_has_isilver();
}
inline ::google::protobuf::int32 CMD_QUERY_SANGONG_SC::isilver() const {
  return isilver_;
}
inline void CMD_QUERY_SANGONG_SC::set_isilver(::google::protobuf::int32 value) {
  set_has_isilver();
  isilver_ = value;
}

// -------------------------------------------------------------------

// CMD_CHAT_CHANNEL_QUERY_SC

// required int32 iRemaindTimes = 1;
inline bool CMD_CHAT_CHANNEL_QUERY_SC::has_iremaindtimes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_CHAT_CHANNEL_QUERY_SC::set_has_iremaindtimes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_CHAT_CHANNEL_QUERY_SC::clear_has_iremaindtimes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_CHAT_CHANNEL_QUERY_SC::clear_iremaindtimes() {
  iremaindtimes_ = 0;
  clear_has_iremaindtimes();
}
inline ::google::protobuf::int32 CMD_CHAT_CHANNEL_QUERY_SC::iremaindtimes() const {
  return iremaindtimes_;
}
inline void CMD_CHAT_CHANNEL_QUERY_SC::set_iremaindtimes(::google::protobuf::int32 value) {
  set_has_iremaindtimes();
  iremaindtimes_ = value;
}

// optional int32 iTotalTimes = 2;
inline bool CMD_CHAT_CHANNEL_QUERY_SC::has_itotaltimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_CHAT_CHANNEL_QUERY_SC::set_has_itotaltimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_CHAT_CHANNEL_QUERY_SC::clear_has_itotaltimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_CHAT_CHANNEL_QUERY_SC::clear_itotaltimes() {
  itotaltimes_ = 0;
  clear_has_itotaltimes();
}
inline ::google::protobuf::int32 CMD_CHAT_CHANNEL_QUERY_SC::itotaltimes() const {
  return itotaltimes_;
}
inline void CMD_CHAT_CHANNEL_QUERY_SC::set_itotaltimes(::google::protobuf::int32 value) {
  set_has_itotaltimes();
  itotaltimes_ = value;
}

// optional int32 iCost = 3;
inline bool CMD_CHAT_CHANNEL_QUERY_SC::has_icost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_CHAT_CHANNEL_QUERY_SC::set_has_icost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_CHAT_CHANNEL_QUERY_SC::clear_has_icost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_CHAT_CHANNEL_QUERY_SC::clear_icost() {
  icost_ = 0;
  clear_has_icost();
}
inline ::google::protobuf::int32 CMD_CHAT_CHANNEL_QUERY_SC::icost() const {
  return icost_;
}
inline void CMD_CHAT_CHANNEL_QUERY_SC::set_icost(::google::protobuf::int32 value) {
  set_has_icost();
  icost_ = value;
}

// -------------------------------------------------------------------

// CMD_COINTREE_SHAKE_QUERY_CS

// required .GSProto.CoinTreeShakeType enType = 1;
inline bool CMD_COINTREE_SHAKE_QUERY_CS::has_entype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_COINTREE_SHAKE_QUERY_CS::set_has_entype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_COINTREE_SHAKE_QUERY_CS::clear_has_entype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_COINTREE_SHAKE_QUERY_CS::clear_entype() {
  entype_ = 1;
  clear_has_entype();
}
inline ::GSProto::CoinTreeShakeType CMD_COINTREE_SHAKE_QUERY_CS::entype() const {
  return static_cast< ::GSProto::CoinTreeShakeType >(entype_);
}
inline void CMD_COINTREE_SHAKE_QUERY_CS::set_entype(::GSProto::CoinTreeShakeType value) {
  assert(::GSProto::CoinTreeShakeType_IsValid(value));
  set_has_entype();
  entype_ = value;
}

// -------------------------------------------------------------------

// CMD_COINTREE_SHAKE_QUERY_SC

// required .GSProto.CoinTreeDetail detail = 1;
inline bool CMD_COINTREE_SHAKE_QUERY_SC::has_detail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_COINTREE_SHAKE_QUERY_SC::set_has_detail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_COINTREE_SHAKE_QUERY_SC::clear_has_detail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_COINTREE_SHAKE_QUERY_SC::clear_detail() {
  if (detail_ != NULL) detail_->::GSProto::CoinTreeDetail::Clear();
  clear_has_detail();
}
inline const ::GSProto::CoinTreeDetail& CMD_COINTREE_SHAKE_QUERY_SC::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::GSProto::CoinTreeDetail* CMD_COINTREE_SHAKE_QUERY_SC::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) detail_ = new ::GSProto::CoinTreeDetail;
  return detail_;
}
inline ::GSProto::CoinTreeDetail* CMD_COINTREE_SHAKE_QUERY_SC::release_detail() {
  clear_has_detail();
  ::GSProto::CoinTreeDetail* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void CMD_COINTREE_SHAKE_QUERY_SC::set_allocated_detail(::GSProto::CoinTreeDetail* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
}

// optional int32 iCanShakeTimes = 2;
inline bool CMD_COINTREE_SHAKE_QUERY_SC::has_icanshaketimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_COINTREE_SHAKE_QUERY_SC::set_has_icanshaketimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_COINTREE_SHAKE_QUERY_SC::clear_has_icanshaketimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_COINTREE_SHAKE_QUERY_SC::clear_icanshaketimes() {
  icanshaketimes_ = 0;
  clear_has_icanshaketimes();
}
inline ::google::protobuf::int32 CMD_COINTREE_SHAKE_QUERY_SC::icanshaketimes() const {
  return icanshaketimes_;
}
inline void CMD_COINTREE_SHAKE_QUERY_SC::set_icanshaketimes(::google::protobuf::int32 value) {
  set_has_icanshaketimes();
  icanshaketimes_ = value;
}

// -------------------------------------------------------------------

// CoinTreeShakeResoult

// required int32 iCost = 1;
inline bool CoinTreeShakeResoult::has_icost() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CoinTreeShakeResoult::set_has_icost() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CoinTreeShakeResoult::clear_has_icost() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CoinTreeShakeResoult::clear_icost() {
  icost_ = 0;
  clear_has_icost();
}
inline ::google::protobuf::int32 CoinTreeShakeResoult::icost() const {
  return icost_;
}
inline void CoinTreeShakeResoult::set_icost(::google::protobuf::int32 value) {
  set_has_icost();
  icost_ = value;
}

// required int32 iGet = 2;
inline bool CoinTreeShakeResoult::has_iget() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CoinTreeShakeResoult::set_has_iget() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CoinTreeShakeResoult::clear_has_iget() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CoinTreeShakeResoult::clear_iget() {
  iget_ = 0;
  clear_has_iget();
}
inline ::google::protobuf::int32 CoinTreeShakeResoult::iget() const {
  return iget_;
}
inline void CoinTreeShakeResoult::set_iget(::google::protobuf::int32 value) {
  set_has_iget();
  iget_ = value;
}

// required int32 iKnock = 3;
inline bool CoinTreeShakeResoult::has_iknock() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CoinTreeShakeResoult::set_has_iknock() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CoinTreeShakeResoult::clear_has_iknock() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CoinTreeShakeResoult::clear_iknock() {
  iknock_ = 0;
  clear_has_iknock();
}
inline ::google::protobuf::int32 CoinTreeShakeResoult::iknock() const {
  return iknock_;
}
inline void CoinTreeShakeResoult::set_iknock(::google::protobuf::int32 value) {
  set_has_iknock();
  iknock_ = value;
}

// -------------------------------------------------------------------

// CoinTreeDetail

// required .GSProto.CoinTreeShakeType enType = 1;
inline bool CoinTreeDetail::has_entype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CoinTreeDetail::set_has_entype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CoinTreeDetail::clear_has_entype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CoinTreeDetail::clear_entype() {
  entype_ = 1;
  clear_has_entype();
}
inline ::GSProto::CoinTreeShakeType CoinTreeDetail::entype() const {
  return static_cast< ::GSProto::CoinTreeShakeType >(entype_);
}
inline void CoinTreeDetail::set_entype(::GSProto::CoinTreeShakeType value) {
  assert(::GSProto::CoinTreeShakeType_IsValid(value));
  set_has_entype();
  entype_ = value;
}

// optional int32 iRemaindShakeTimes = 2;
inline bool CoinTreeDetail::has_iremaindshaketimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CoinTreeDetail::set_has_iremaindshaketimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CoinTreeDetail::clear_has_iremaindshaketimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CoinTreeDetail::clear_iremaindshaketimes() {
  iremaindshaketimes_ = 0;
  clear_has_iremaindshaketimes();
}
inline ::google::protobuf::int32 CoinTreeDetail::iremaindshaketimes() const {
  return iremaindshaketimes_;
}
inline void CoinTreeDetail::set_iremaindshaketimes(::google::protobuf::int32 value) {
  set_has_iremaindshaketimes();
  iremaindshaketimes_ = value;
}

// optional int32 iTotalShakeTimes = 3;
inline bool CoinTreeDetail::has_itotalshaketimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CoinTreeDetail::set_has_itotalshaketimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CoinTreeDetail::clear_has_itotalshaketimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CoinTreeDetail::clear_itotalshaketimes() {
  itotalshaketimes_ = 0;
  clear_has_itotalshaketimes();
}
inline ::google::protobuf::int32 CoinTreeDetail::itotalshaketimes() const {
  return itotalshaketimes_;
}
inline void CoinTreeDetail::set_itotalshaketimes(::google::protobuf::int32 value) {
  set_has_itotalshaketimes();
  itotalshaketimes_ = value;
}

// required int32 iCost = 4;
inline bool CoinTreeDetail::has_icost() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CoinTreeDetail::set_has_icost() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CoinTreeDetail::clear_has_icost() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CoinTreeDetail::clear_icost() {
  icost_ = 0;
  clear_has_icost();
}
inline ::google::protobuf::int32 CoinTreeDetail::icost() const {
  return icost_;
}
inline void CoinTreeDetail::set_icost(::google::protobuf::int32 value) {
  set_has_icost();
  icost_ = value;
}

// required int32 iGet = 5;
inline bool CoinTreeDetail::has_iget() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CoinTreeDetail::set_has_iget() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CoinTreeDetail::clear_has_iget() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CoinTreeDetail::clear_iget() {
  iget_ = 0;
  clear_has_iget();
}
inline ::google::protobuf::int32 CoinTreeDetail::iget() const {
  return iget_;
}
inline void CoinTreeDetail::set_iget(::google::protobuf::int32 value) {
  set_has_iget();
  iget_ = value;
}

// -------------------------------------------------------------------

// CMD_COINTREE_SHAKE_SC

// required .GSProto.CoinTreeDetail detail = 1;
inline bool CMD_COINTREE_SHAKE_SC::has_detail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_COINTREE_SHAKE_SC::set_has_detail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_COINTREE_SHAKE_SC::clear_has_detail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_COINTREE_SHAKE_SC::clear_detail() {
  if (detail_ != NULL) detail_->::GSProto::CoinTreeDetail::Clear();
  clear_has_detail();
}
inline const ::GSProto::CoinTreeDetail& CMD_COINTREE_SHAKE_SC::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::GSProto::CoinTreeDetail* CMD_COINTREE_SHAKE_SC::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) detail_ = new ::GSProto::CoinTreeDetail;
  return detail_;
}
inline ::GSProto::CoinTreeDetail* CMD_COINTREE_SHAKE_SC::release_detail() {
  clear_has_detail();
  ::GSProto::CoinTreeDetail* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void CMD_COINTREE_SHAKE_SC::set_allocated_detail(::GSProto::CoinTreeDetail* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
}

// repeated .GSProto.CoinTreeShakeResoult szShakeResoult = 2;
inline int CMD_COINTREE_SHAKE_SC::szshakeresoult_size() const {
  return szshakeresoult_.size();
}
inline void CMD_COINTREE_SHAKE_SC::clear_szshakeresoult() {
  szshakeresoult_.Clear();
}
inline const ::GSProto::CoinTreeShakeResoult& CMD_COINTREE_SHAKE_SC::szshakeresoult(int index) const {
  return szshakeresoult_.Get(index);
}
inline ::GSProto::CoinTreeShakeResoult* CMD_COINTREE_SHAKE_SC::mutable_szshakeresoult(int index) {
  return szshakeresoult_.Mutable(index);
}
inline ::GSProto::CoinTreeShakeResoult* CMD_COINTREE_SHAKE_SC::add_szshakeresoult() {
  return szshakeresoult_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::CoinTreeShakeResoult >&
CMD_COINTREE_SHAKE_SC::szshakeresoult() const {
  return szshakeresoult_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::CoinTreeShakeResoult >*
CMD_COINTREE_SHAKE_SC::mutable_szshakeresoult() {
  return &szshakeresoult_;
}

// -------------------------------------------------------------------

// CMD_COINTREE_SHAKE_CS

// required .GSProto.CoinTreeShakeType enType = 1;
inline bool CMD_COINTREE_SHAKE_CS::has_entype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_COINTREE_SHAKE_CS::set_has_entype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_COINTREE_SHAKE_CS::clear_has_entype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_COINTREE_SHAKE_CS::clear_entype() {
  entype_ = 1;
  clear_has_entype();
}
inline ::GSProto::CoinTreeShakeType CMD_COINTREE_SHAKE_CS::entype() const {
  return static_cast< ::GSProto::CoinTreeShakeType >(entype_);
}
inline void CMD_COINTREE_SHAKE_CS::set_entype(::GSProto::CoinTreeShakeType value) {
  assert(::GSProto::CoinTreeShakeType_IsValid(value));
  set_has_entype();
  entype_ = value;
}

// -------------------------------------------------------------------

// CMD_MANOR_TIEJIANGPU_LEVELUP_SC

// required int32 iNeedActorLevel = 1;
inline bool CMD_MANOR_TIEJIANGPU_LEVELUP_SC::has_ineedactorlevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_MANOR_TIEJIANGPU_LEVELUP_SC::set_has_ineedactorlevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_MANOR_TIEJIANGPU_LEVELUP_SC::clear_has_ineedactorlevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_MANOR_TIEJIANGPU_LEVELUP_SC::clear_ineedactorlevel() {
  ineedactorlevel_ = 0;
  clear_has_ineedactorlevel();
}
inline ::google::protobuf::int32 CMD_MANOR_TIEJIANGPU_LEVELUP_SC::ineedactorlevel() const {
  return ineedactorlevel_;
}
inline void CMD_MANOR_TIEJIANGPU_LEVELUP_SC::set_ineedactorlevel(::google::protobuf::int32 value) {
  set_has_ineedactorlevel();
  ineedactorlevel_ = value;
}

// -------------------------------------------------------------------

// CMD_MANOR_WUHUNDIAN_LEVELUP_SC

// required int32 iNeedActorLevel = 1;
inline bool CMD_MANOR_WUHUNDIAN_LEVELUP_SC::has_ineedactorlevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_MANOR_WUHUNDIAN_LEVELUP_SC::set_has_ineedactorlevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_MANOR_WUHUNDIAN_LEVELUP_SC::clear_has_ineedactorlevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_MANOR_WUHUNDIAN_LEVELUP_SC::clear_ineedactorlevel() {
  ineedactorlevel_ = 0;
  clear_has_ineedactorlevel();
}
inline ::google::protobuf::int32 CMD_MANOR_WUHUNDIAN_LEVELUP_SC::ineedactorlevel() const {
  return ineedactorlevel_;
}
inline void CMD_MANOR_WUHUNDIAN_LEVELUP_SC::set_ineedactorlevel(::google::protobuf::int32 value) {
  set_has_ineedactorlevel();
  ineedactorlevel_ = value;
}

// -------------------------------------------------------------------

// CMD_MANOR_RES_COMMON_LEVELUP_SC

// required int32 iNeedActorLevel = 1;
inline bool CMD_MANOR_RES_COMMON_LEVELUP_SC::has_ineedactorlevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_MANOR_RES_COMMON_LEVELUP_SC::set_has_ineedactorlevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_MANOR_RES_COMMON_LEVELUP_SC::clear_has_ineedactorlevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_MANOR_RES_COMMON_LEVELUP_SC::clear_ineedactorlevel() {
  ineedactorlevel_ = 0;
  clear_has_ineedactorlevel();
}
inline ::google::protobuf::int32 CMD_MANOR_RES_COMMON_LEVELUP_SC::ineedactorlevel() const {
  return ineedactorlevel_;
}
inline void CMD_MANOR_RES_COMMON_LEVELUP_SC::set_ineedactorlevel(::google::protobuf::int32 value) {
  set_has_ineedactorlevel();
  ineedactorlevel_ = value;
}

// -------------------------------------------------------------------

// CMD_SEND_COVERT_CODE_CS

// required string strCovertCode = 1;
inline bool CMD_SEND_COVERT_CODE_CS::has_strcovertcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_SEND_COVERT_CODE_CS::set_has_strcovertcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_SEND_COVERT_CODE_CS::clear_has_strcovertcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_SEND_COVERT_CODE_CS::clear_strcovertcode() {
  if (strcovertcode_ != &::google::protobuf::internal::kEmptyString) {
    strcovertcode_->clear();
  }
  clear_has_strcovertcode();
}
inline const ::std::string& CMD_SEND_COVERT_CODE_CS::strcovertcode() const {
  return *strcovertcode_;
}
inline void CMD_SEND_COVERT_CODE_CS::set_strcovertcode(const ::std::string& value) {
  set_has_strcovertcode();
  if (strcovertcode_ == &::google::protobuf::internal::kEmptyString) {
    strcovertcode_ = new ::std::string;
  }
  strcovertcode_->assign(value);
}
inline void CMD_SEND_COVERT_CODE_CS::set_strcovertcode(const char* value) {
  set_has_strcovertcode();
  if (strcovertcode_ == &::google::protobuf::internal::kEmptyString) {
    strcovertcode_ = new ::std::string;
  }
  strcovertcode_->assign(value);
}
inline void CMD_SEND_COVERT_CODE_CS::set_strcovertcode(const char* value, size_t size) {
  set_has_strcovertcode();
  if (strcovertcode_ == &::google::protobuf::internal::kEmptyString) {
    strcovertcode_ = new ::std::string;
  }
  strcovertcode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_SEND_COVERT_CODE_CS::mutable_strcovertcode() {
  set_has_strcovertcode();
  if (strcovertcode_ == &::google::protobuf::internal::kEmptyString) {
    strcovertcode_ = new ::std::string;
  }
  return strcovertcode_;
}
inline ::std::string* CMD_SEND_COVERT_CODE_CS::release_strcovertcode() {
  clear_has_strcovertcode();
  if (strcovertcode_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strcovertcode_;
    strcovertcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_SEND_COVERT_CODE_CS::set_allocated_strcovertcode(::std::string* strcovertcode) {
  if (strcovertcode_ != &::google::protobuf::internal::kEmptyString) {
    delete strcovertcode_;
  }
  if (strcovertcode) {
    set_has_strcovertcode();
    strcovertcode_ = strcovertcode;
  } else {
    clear_has_strcovertcode();
    strcovertcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_SEND_COVERT_CODE_SC

// required .GSProto.FightAwardResult converResoult = 1;
inline bool CMD_SEND_COVERT_CODE_SC::has_converresoult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_SEND_COVERT_CODE_SC::set_has_converresoult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_SEND_COVERT_CODE_SC::clear_has_converresoult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_SEND_COVERT_CODE_SC::clear_converresoult() {
  if (converresoult_ != NULL) converresoult_->::GSProto::FightAwardResult::Clear();
  clear_has_converresoult();
}
inline const ::GSProto::FightAwardResult& CMD_SEND_COVERT_CODE_SC::converresoult() const {
  return converresoult_ != NULL ? *converresoult_ : *default_instance_->converresoult_;
}
inline ::GSProto::FightAwardResult* CMD_SEND_COVERT_CODE_SC::mutable_converresoult() {
  set_has_converresoult();
  if (converresoult_ == NULL) converresoult_ = new ::GSProto::FightAwardResult;
  return converresoult_;
}
inline ::GSProto::FightAwardResult* CMD_SEND_COVERT_CODE_SC::release_converresoult() {
  clear_has_converresoult();
  ::GSProto::FightAwardResult* temp = converresoult_;
  converresoult_ = NULL;
  return temp;
}
inline void CMD_SEND_COVERT_CODE_SC::set_allocated_converresoult(::GSProto::FightAwardResult* converresoult) {
  delete converresoult_;
  converresoult_ = converresoult;
  if (converresoult) {
    set_has_converresoult();
  } else {
    clear_has_converresoult();
  }
}

// -------------------------------------------------------------------

// CMD_QUERY_CANSAVEMONEY_SC

// required int32 iZoneID = 1;
inline bool CMD_QUERY_CANSAVEMONEY_SC::has_izoneid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_CANSAVEMONEY_SC::set_has_izoneid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_CANSAVEMONEY_SC::clear_has_izoneid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_CANSAVEMONEY_SC::clear_izoneid() {
  izoneid_ = 0;
  clear_has_izoneid();
}
inline ::google::protobuf::int32 CMD_QUERY_CANSAVEMONEY_SC::izoneid() const {
  return izoneid_;
}
inline void CMD_QUERY_CANSAVEMONEY_SC::set_izoneid(::google::protobuf::int32 value) {
  set_has_izoneid();
  izoneid_ = value;
}

// -------------------------------------------------------------------

// CMD_TBT_GETUUID_SC

// required string strUUId = 1;
inline bool CMD_TBT_GETUUID_SC::has_struuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_TBT_GETUUID_SC::set_has_struuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_TBT_GETUUID_SC::clear_has_struuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_TBT_GETUUID_SC::clear_struuid() {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    struuid_->clear();
  }
  clear_has_struuid();
}
inline const ::std::string& CMD_TBT_GETUUID_SC::struuid() const {
  return *struuid_;
}
inline void CMD_TBT_GETUUID_SC::set_struuid(const ::std::string& value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void CMD_TBT_GETUUID_SC::set_struuid(const char* value) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(value);
}
inline void CMD_TBT_GETUUID_SC::set_struuid(const char* value, size_t size) {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  struuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_TBT_GETUUID_SC::mutable_struuid() {
  set_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    struuid_ = new ::std::string;
  }
  return struuid_;
}
inline ::std::string* CMD_TBT_GETUUID_SC::release_struuid() {
  clear_has_struuid();
  if (struuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = struuid_;
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_TBT_GETUUID_SC::set_allocated_struuid(::std::string* struuid) {
  if (struuid_ != &::google::protobuf::internal::kEmptyString) {
    delete struuid_;
  }
  if (struuid) {
    set_has_struuid();
    struuid_ = struuid;
  } else {
    clear_has_struuid();
    struuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_LEGION_APPOINT_CS

// required string strLegionMemName = 1;
inline bool CMD_LEGION_APPOINT_CS::has_strlegionmemname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_LEGION_APPOINT_CS::set_has_strlegionmemname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_LEGION_APPOINT_CS::clear_has_strlegionmemname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_LEGION_APPOINT_CS::clear_strlegionmemname() {
  if (strlegionmemname_ != &::google::protobuf::internal::kEmptyString) {
    strlegionmemname_->clear();
  }
  clear_has_strlegionmemname();
}
inline const ::std::string& CMD_LEGION_APPOINT_CS::strlegionmemname() const {
  return *strlegionmemname_;
}
inline void CMD_LEGION_APPOINT_CS::set_strlegionmemname(const ::std::string& value) {
  set_has_strlegionmemname();
  if (strlegionmemname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionmemname_ = new ::std::string;
  }
  strlegionmemname_->assign(value);
}
inline void CMD_LEGION_APPOINT_CS::set_strlegionmemname(const char* value) {
  set_has_strlegionmemname();
  if (strlegionmemname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionmemname_ = new ::std::string;
  }
  strlegionmemname_->assign(value);
}
inline void CMD_LEGION_APPOINT_CS::set_strlegionmemname(const char* value, size_t size) {
  set_has_strlegionmemname();
  if (strlegionmemname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionmemname_ = new ::std::string;
  }
  strlegionmemname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_LEGION_APPOINT_CS::mutable_strlegionmemname() {
  set_has_strlegionmemname();
  if (strlegionmemname_ == &::google::protobuf::internal::kEmptyString) {
    strlegionmemname_ = new ::std::string;
  }
  return strlegionmemname_;
}
inline ::std::string* CMD_LEGION_APPOINT_CS::release_strlegionmemname() {
  clear_has_strlegionmemname();
  if (strlegionmemname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strlegionmemname_;
    strlegionmemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_LEGION_APPOINT_CS::set_allocated_strlegionmemname(::std::string* strlegionmemname) {
  if (strlegionmemname_ != &::google::protobuf::internal::kEmptyString) {
    delete strlegionmemname_;
  }
  if (strlegionmemname) {
    set_has_strlegionmemname();
    strlegionmemname_ = strlegionmemname;
  } else {
    clear_has_strlegionmemname();
    strlegionmemname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bool bIsAppoint = 2;
inline bool CMD_LEGION_APPOINT_CS::has_bisappoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_LEGION_APPOINT_CS::set_has_bisappoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_LEGION_APPOINT_CS::clear_has_bisappoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_LEGION_APPOINT_CS::clear_bisappoint() {
  bisappoint_ = false;
  clear_has_bisappoint();
}
inline bool CMD_LEGION_APPOINT_CS::bisappoint() const {
  return bisappoint_;
}
inline void CMD_LEGION_APPOINT_CS::set_bisappoint(bool value) {
  set_has_bisappoint();
  bisappoint_ = value;
}

// -------------------------------------------------------------------

// CMD_LEGION_QUERY_WORSHIP_SC

// required int32 iRemainWorshipTimes = 1;
inline bool CMD_LEGION_QUERY_WORSHIP_SC::has_iremainworshiptimes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_LEGION_QUERY_WORSHIP_SC::set_has_iremainworshiptimes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_LEGION_QUERY_WORSHIP_SC::clear_has_iremainworshiptimes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_LEGION_QUERY_WORSHIP_SC::clear_iremainworshiptimes() {
  iremainworshiptimes_ = 0;
  clear_has_iremainworshiptimes();
}
inline ::google::protobuf::int32 CMD_LEGION_QUERY_WORSHIP_SC::iremainworshiptimes() const {
  return iremainworshiptimes_;
}
inline void CMD_LEGION_QUERY_WORSHIP_SC::set_iremainworshiptimes(::google::protobuf::int32 value) {
  set_has_iremainworshiptimes();
  iremainworshiptimes_ = value;
}

// required int32 iTotalWorshipTimes = 2;
inline bool CMD_LEGION_QUERY_WORSHIP_SC::has_itotalworshiptimes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_LEGION_QUERY_WORSHIP_SC::set_has_itotalworshiptimes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_LEGION_QUERY_WORSHIP_SC::clear_has_itotalworshiptimes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_LEGION_QUERY_WORSHIP_SC::clear_itotalworshiptimes() {
  itotalworshiptimes_ = 0;
  clear_has_itotalworshiptimes();
}
inline ::google::protobuf::int32 CMD_LEGION_QUERY_WORSHIP_SC::itotalworshiptimes() const {
  return itotalworshiptimes_;
}
inline void CMD_LEGION_QUERY_WORSHIP_SC::set_itotalworshiptimes(::google::protobuf::int32 value) {
  set_has_itotalworshiptimes();
  itotalworshiptimes_ = value;
}

// required int32 iCanGetWorshipReward = 3;
inline bool CMD_LEGION_QUERY_WORSHIP_SC::has_icangetworshipreward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_LEGION_QUERY_WORSHIP_SC::set_has_icangetworshipreward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_LEGION_QUERY_WORSHIP_SC::clear_has_icangetworshipreward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_LEGION_QUERY_WORSHIP_SC::clear_icangetworshipreward() {
  icangetworshipreward_ = 0;
  clear_has_icangetworshipreward();
}
inline ::google::protobuf::int32 CMD_LEGION_QUERY_WORSHIP_SC::icangetworshipreward() const {
  return icangetworshipreward_;
}
inline void CMD_LEGION_QUERY_WORSHIP_SC::set_icangetworshipreward(::google::protobuf::int32 value) {
  set_has_icangetworshipreward();
  icangetworshipreward_ = value;
}

// required int32 iActorContribute = 4;
inline bool CMD_LEGION_QUERY_WORSHIP_SC::has_iactorcontribute() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_LEGION_QUERY_WORSHIP_SC::set_has_iactorcontribute() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_LEGION_QUERY_WORSHIP_SC::clear_has_iactorcontribute() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_LEGION_QUERY_WORSHIP_SC::clear_iactorcontribute() {
  iactorcontribute_ = 0;
  clear_has_iactorcontribute();
}
inline ::google::protobuf::int32 CMD_LEGION_QUERY_WORSHIP_SC::iactorcontribute() const {
  return iactorcontribute_;
}
inline void CMD_LEGION_QUERY_WORSHIP_SC::set_iactorcontribute(::google::protobuf::int32 value) {
  set_has_iactorcontribute();
  iactorcontribute_ = value;
}

// -------------------------------------------------------------------

// CMD_LEGION_WORSHIP_MEMBER_CS

// required string strMemberName = 1;
inline bool CMD_LEGION_WORSHIP_MEMBER_CS::has_strmembername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_LEGION_WORSHIP_MEMBER_CS::set_has_strmembername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_LEGION_WORSHIP_MEMBER_CS::clear_has_strmembername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_LEGION_WORSHIP_MEMBER_CS::clear_strmembername() {
  if (strmembername_ != &::google::protobuf::internal::kEmptyString) {
    strmembername_->clear();
  }
  clear_has_strmembername();
}
inline const ::std::string& CMD_LEGION_WORSHIP_MEMBER_CS::strmembername() const {
  return *strmembername_;
}
inline void CMD_LEGION_WORSHIP_MEMBER_CS::set_strmembername(const ::std::string& value) {
  set_has_strmembername();
  if (strmembername_ == &::google::protobuf::internal::kEmptyString) {
    strmembername_ = new ::std::string;
  }
  strmembername_->assign(value);
}
inline void CMD_LEGION_WORSHIP_MEMBER_CS::set_strmembername(const char* value) {
  set_has_strmembername();
  if (strmembername_ == &::google::protobuf::internal::kEmptyString) {
    strmembername_ = new ::std::string;
  }
  strmembername_->assign(value);
}
inline void CMD_LEGION_WORSHIP_MEMBER_CS::set_strmembername(const char* value, size_t size) {
  set_has_strmembername();
  if (strmembername_ == &::google::protobuf::internal::kEmptyString) {
    strmembername_ = new ::std::string;
  }
  strmembername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_LEGION_WORSHIP_MEMBER_CS::mutable_strmembername() {
  set_has_strmembername();
  if (strmembername_ == &::google::protobuf::internal::kEmptyString) {
    strmembername_ = new ::std::string;
  }
  return strmembername_;
}
inline ::std::string* CMD_LEGION_WORSHIP_MEMBER_CS::release_strmembername() {
  clear_has_strmembername();
  if (strmembername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strmembername_;
    strmembername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_LEGION_WORSHIP_MEMBER_CS::set_allocated_strmembername(::std::string* strmembername) {
  if (strmembername_ != &::google::protobuf::internal::kEmptyString) {
    delete strmembername_;
  }
  if (strmembername) {
    set_has_strmembername();
    strmembername_ = strmembername;
  } else {
    clear_has_strmembername();
    strmembername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 worshipType = 2;
inline bool CMD_LEGION_WORSHIP_MEMBER_CS::has_worshiptype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_LEGION_WORSHIP_MEMBER_CS::set_has_worshiptype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_LEGION_WORSHIP_MEMBER_CS::clear_has_worshiptype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_LEGION_WORSHIP_MEMBER_CS::clear_worshiptype() {
  worshiptype_ = 0u;
  clear_has_worshiptype();
}
inline ::google::protobuf::uint32 CMD_LEGION_WORSHIP_MEMBER_CS::worshiptype() const {
  return worshiptype_;
}
inline void CMD_LEGION_WORSHIP_MEMBER_CS::set_worshiptype(::google::protobuf::uint32 value) {
  set_has_worshiptype();
  worshiptype_ = value;
}

// -------------------------------------------------------------------

// CMD_LEAVE_LEGION_SC

// required int32 iGetContribute = 1;
inline bool CMD_LEAVE_LEGION_SC::has_igetcontribute() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_LEAVE_LEGION_SC::set_has_igetcontribute() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_LEAVE_LEGION_SC::clear_has_igetcontribute() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_LEAVE_LEGION_SC::clear_igetcontribute() {
  igetcontribute_ = 0;
  clear_has_igetcontribute();
}
inline ::google::protobuf::int32 CMD_LEAVE_LEGION_SC::igetcontribute() const {
  return igetcontribute_;
}
inline void CMD_LEAVE_LEGION_SC::set_igetcontribute(::google::protobuf::int32 value) {
  set_has_igetcontribute();
  igetcontribute_ = value;
}

// -------------------------------------------------------------------

// CMD_SHOPSYSTEM_QUERY_SC

// required bool bTokenHaveFreeTimes = 1;
inline bool CMD_SHOPSYSTEM_QUERY_SC::has_btokenhavefreetimes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::set_has_btokenhavefreetimes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::clear_has_btokenhavefreetimes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::clear_btokenhavefreetimes() {
  btokenhavefreetimes_ = false;
  clear_has_btokenhavefreetimes();
}
inline bool CMD_SHOPSYSTEM_QUERY_SC::btokenhavefreetimes() const {
  return btokenhavefreetimes_;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::set_btokenhavefreetimes(bool value) {
  set_has_btokenhavefreetimes();
  btokenhavefreetimes_ = value;
}

// optional bool bHaveTime = 2;
inline bool CMD_SHOPSYSTEM_QUERY_SC::has_bhavetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::set_has_bhavetime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::clear_has_bhavetime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::clear_bhavetime() {
  bhavetime_ = false;
  clear_has_bhavetime();
}
inline bool CMD_SHOPSYSTEM_QUERY_SC::bhavetime() const {
  return bhavetime_;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::set_bhavetime(bool value) {
  set_has_bhavetime();
  bhavetime_ = value;
}

// optional uint32 iSecond = 3;
inline bool CMD_SHOPSYSTEM_QUERY_SC::has_isecond() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::set_has_isecond() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::clear_has_isecond() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::clear_isecond() {
  isecond_ = 0u;
  clear_has_isecond();
}
inline ::google::protobuf::uint32 CMD_SHOPSYSTEM_QUERY_SC::isecond() const {
  return isecond_;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::set_isecond(::google::protobuf::uint32 value) {
  set_has_isecond();
  isecond_ = value;
}

// optional int32 iTotalFreeTimes = 4;
inline bool CMD_SHOPSYSTEM_QUERY_SC::has_itotalfreetimes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::set_has_itotalfreetimes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::clear_has_itotalfreetimes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::clear_itotalfreetimes() {
  itotalfreetimes_ = 0;
  clear_has_itotalfreetimes();
}
inline ::google::protobuf::int32 CMD_SHOPSYSTEM_QUERY_SC::itotalfreetimes() const {
  return itotalfreetimes_;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::set_itotalfreetimes(::google::protobuf::int32 value) {
  set_has_itotalfreetimes();
  itotalfreetimes_ = value;
}

// optional int32 iRemaindFreeTimes = 5;
inline bool CMD_SHOPSYSTEM_QUERY_SC::has_iremaindfreetimes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::set_has_iremaindfreetimes() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::clear_has_iremaindfreetimes() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::clear_iremaindfreetimes() {
  iremaindfreetimes_ = 0;
  clear_has_iremaindfreetimes();
}
inline ::google::protobuf::int32 CMD_SHOPSYSTEM_QUERY_SC::iremaindfreetimes() const {
  return iremaindfreetimes_;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::set_iremaindfreetimes(::google::protobuf::int32 value) {
  set_has_iremaindfreetimes();
  iremaindfreetimes_ = value;
}

// required bool bGoldCanFree = 6;
inline bool CMD_SHOPSYSTEM_QUERY_SC::has_bgoldcanfree() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::set_has_bgoldcanfree() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::clear_has_bgoldcanfree() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::clear_bgoldcanfree() {
  bgoldcanfree_ = false;
  clear_has_bgoldcanfree();
}
inline bool CMD_SHOPSYSTEM_QUERY_SC::bgoldcanfree() const {
  return bgoldcanfree_;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::set_bgoldcanfree(bool value) {
  set_has_bgoldcanfree();
  bgoldcanfree_ = value;
}

// optional uint32 iRemainSecond = 7;
inline bool CMD_SHOPSYSTEM_QUERY_SC::has_iremainsecond() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::set_has_iremainsecond() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::clear_has_iremainsecond() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::clear_iremainsecond() {
  iremainsecond_ = 0u;
  clear_has_iremainsecond();
}
inline ::google::protobuf::uint32 CMD_SHOPSYSTEM_QUERY_SC::iremainsecond() const {
  return iremainsecond_;
}
inline void CMD_SHOPSYSTEM_QUERY_SC::set_iremainsecond(::google::protobuf::uint32 value) {
  set_has_iremainsecond();
  iremainsecond_ = value;
}

// -------------------------------------------------------------------

// CMD_PAYMENT_FIRST_PAY_SC

// required .GSProto.FightAwardResult resoult = 1;
inline bool CMD_PAYMENT_FIRST_PAY_SC::has_resoult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_PAYMENT_FIRST_PAY_SC::set_has_resoult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_PAYMENT_FIRST_PAY_SC::clear_has_resoult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_PAYMENT_FIRST_PAY_SC::clear_resoult() {
  if (resoult_ != NULL) resoult_->::GSProto::FightAwardResult::Clear();
  clear_has_resoult();
}
inline const ::GSProto::FightAwardResult& CMD_PAYMENT_FIRST_PAY_SC::resoult() const {
  return resoult_ != NULL ? *resoult_ : *default_instance_->resoult_;
}
inline ::GSProto::FightAwardResult* CMD_PAYMENT_FIRST_PAY_SC::mutable_resoult() {
  set_has_resoult();
  if (resoult_ == NULL) resoult_ = new ::GSProto::FightAwardResult;
  return resoult_;
}
inline ::GSProto::FightAwardResult* CMD_PAYMENT_FIRST_PAY_SC::release_resoult() {
  clear_has_resoult();
  ::GSProto::FightAwardResult* temp = resoult_;
  resoult_ = NULL;
  return temp;
}
inline void CMD_PAYMENT_FIRST_PAY_SC::set_allocated_resoult(::GSProto::FightAwardResult* resoult) {
  delete resoult_;
  resoult_ = resoult;
  if (resoult) {
    set_has_resoult();
  } else {
    clear_has_resoult();
  }
}

// -------------------------------------------------------------------

// CMD_OPERATESYSTEM_QUERY_CHECKIN_SC

// required int32 iHaveCheckInCount = 1;
inline bool CMD_OPERATESYSTEM_QUERY_CHECKIN_SC::has_ihavecheckincount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_OPERATESYSTEM_QUERY_CHECKIN_SC::set_has_ihavecheckincount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_OPERATESYSTEM_QUERY_CHECKIN_SC::clear_has_ihavecheckincount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_OPERATESYSTEM_QUERY_CHECKIN_SC::clear_ihavecheckincount() {
  ihavecheckincount_ = 0;
  clear_has_ihavecheckincount();
}
inline ::google::protobuf::int32 CMD_OPERATESYSTEM_QUERY_CHECKIN_SC::ihavecheckincount() const {
  return ihavecheckincount_;
}
inline void CMD_OPERATESYSTEM_QUERY_CHECKIN_SC::set_ihavecheckincount(::google::protobuf::int32 value) {
  set_has_ihavecheckincount();
  ihavecheckincount_ = value;
}

// optional bool bLastCanClick = 2;
inline bool CMD_OPERATESYSTEM_QUERY_CHECKIN_SC::has_blastcanclick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_OPERATESYSTEM_QUERY_CHECKIN_SC::set_has_blastcanclick() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_OPERATESYSTEM_QUERY_CHECKIN_SC::clear_has_blastcanclick() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_OPERATESYSTEM_QUERY_CHECKIN_SC::clear_blastcanclick() {
  blastcanclick_ = false;
  clear_has_blastcanclick();
}
inline bool CMD_OPERATESYSTEM_QUERY_CHECKIN_SC::blastcanclick() const {
  return blastcanclick_;
}
inline void CMD_OPERATESYSTEM_QUERY_CHECKIN_SC::set_blastcanclick(bool value) {
  set_has_blastcanclick();
  blastcanclick_ = value;
}

// optional int32 iHaveClickTimes = 3;
inline bool CMD_OPERATESYSTEM_QUERY_CHECKIN_SC::has_ihaveclicktimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_OPERATESYSTEM_QUERY_CHECKIN_SC::set_has_ihaveclicktimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_OPERATESYSTEM_QUERY_CHECKIN_SC::clear_has_ihaveclicktimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_OPERATESYSTEM_QUERY_CHECKIN_SC::clear_ihaveclicktimes() {
  ihaveclicktimes_ = 0;
  clear_has_ihaveclicktimes();
}
inline ::google::protobuf::int32 CMD_OPERATESYSTEM_QUERY_CHECKIN_SC::ihaveclicktimes() const {
  return ihaveclicktimes_;
}
inline void CMD_OPERATESYSTEM_QUERY_CHECKIN_SC::set_ihaveclicktimes(::google::protobuf::int32 value) {
  set_has_ihaveclicktimes();
  ihaveclicktimes_ = value;
}

// -------------------------------------------------------------------

// CMD_OPERATESYSTEM_CHECKIN_CS

// required int32 iWillCheckInID = 1;
inline bool CMD_OPERATESYSTEM_CHECKIN_CS::has_iwillcheckinid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_OPERATESYSTEM_CHECKIN_CS::set_has_iwillcheckinid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_OPERATESYSTEM_CHECKIN_CS::clear_has_iwillcheckinid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_OPERATESYSTEM_CHECKIN_CS::clear_iwillcheckinid() {
  iwillcheckinid_ = 0;
  clear_has_iwillcheckinid();
}
inline ::google::protobuf::int32 CMD_OPERATESYSTEM_CHECKIN_CS::iwillcheckinid() const {
  return iwillcheckinid_;
}
inline void CMD_OPERATESYSTEM_CHECKIN_CS::set_iwillcheckinid(::google::protobuf::int32 value) {
  set_has_iwillcheckinid();
  iwillcheckinid_ = value;
}

// -------------------------------------------------------------------

// CMD_OPERATESYSTEM_CHECKIN_SC

// repeated .GSProto.PropItem szAwardPropList = 1;
inline int CMD_OPERATESYSTEM_CHECKIN_SC::szawardproplist_size() const {
  return szawardproplist_.size();
}
inline void CMD_OPERATESYSTEM_CHECKIN_SC::clear_szawardproplist() {
  szawardproplist_.Clear();
}
inline const ::GSProto::PropItem& CMD_OPERATESYSTEM_CHECKIN_SC::szawardproplist(int index) const {
  return szawardproplist_.Get(index);
}
inline ::GSProto::PropItem* CMD_OPERATESYSTEM_CHECKIN_SC::mutable_szawardproplist(int index) {
  return szawardproplist_.Mutable(index);
}
inline ::GSProto::PropItem* CMD_OPERATESYSTEM_CHECKIN_SC::add_szawardproplist() {
  return szawardproplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >&
CMD_OPERATESYSTEM_CHECKIN_SC::szawardproplist() const {
  return szawardproplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::PropItem >*
CMD_OPERATESYSTEM_CHECKIN_SC::mutable_szawardproplist() {
  return &szawardproplist_;
}

// repeated .GSProto.FightAwardItem szAwardItemList = 2;
inline int CMD_OPERATESYSTEM_CHECKIN_SC::szawarditemlist_size() const {
  return szawarditemlist_.size();
}
inline void CMD_OPERATESYSTEM_CHECKIN_SC::clear_szawarditemlist() {
  szawarditemlist_.Clear();
}
inline const ::GSProto::FightAwardItem& CMD_OPERATESYSTEM_CHECKIN_SC::szawarditemlist(int index) const {
  return szawarditemlist_.Get(index);
}
inline ::GSProto::FightAwardItem* CMD_OPERATESYSTEM_CHECKIN_SC::mutable_szawarditemlist(int index) {
  return szawarditemlist_.Mutable(index);
}
inline ::GSProto::FightAwardItem* CMD_OPERATESYSTEM_CHECKIN_SC::add_szawarditemlist() {
  return szawarditemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::FightAwardItem >&
CMD_OPERATESYSTEM_CHECKIN_SC::szawarditemlist() const {
  return szawarditemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::FightAwardItem >*
CMD_OPERATESYSTEM_CHECKIN_SC::mutable_szawarditemlist() {
  return &szawarditemlist_;
}

// repeated .GSProto.DreamRewardHero szAwardHeroList = 3;
inline int CMD_OPERATESYSTEM_CHECKIN_SC::szawardherolist_size() const {
  return szawardherolist_.size();
}
inline void CMD_OPERATESYSTEM_CHECKIN_SC::clear_szawardherolist() {
  szawardherolist_.Clear();
}
inline const ::GSProto::DreamRewardHero& CMD_OPERATESYSTEM_CHECKIN_SC::szawardherolist(int index) const {
  return szawardherolist_.Get(index);
}
inline ::GSProto::DreamRewardHero* CMD_OPERATESYSTEM_CHECKIN_SC::mutable_szawardherolist(int index) {
  return szawardherolist_.Mutable(index);
}
inline ::GSProto::DreamRewardHero* CMD_OPERATESYSTEM_CHECKIN_SC::add_szawardherolist() {
  return szawardherolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::DreamRewardHero >&
CMD_OPERATESYSTEM_CHECKIN_SC::szawardherolist() const {
  return szawardherolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::DreamRewardHero >*
CMD_OPERATESYSTEM_CHECKIN_SC::mutable_szawardherolist() {
  return &szawardherolist_;
}

// -------------------------------------------------------------------

// CMD_PAYMENT_QUERY_SC

// repeated int32 iId = 1;
inline int CMD_PAYMENT_QUERY_SC::iid_size() const {
  return iid_.size();
}
inline void CMD_PAYMENT_QUERY_SC::clear_iid() {
  iid_.Clear();
}
inline ::google::protobuf::int32 CMD_PAYMENT_QUERY_SC::iid(int index) const {
  return iid_.Get(index);
}
inline void CMD_PAYMENT_QUERY_SC::set_iid(int index, ::google::protobuf::int32 value) {
  iid_.Set(index, value);
}
inline void CMD_PAYMENT_QUERY_SC::add_iid(::google::protobuf::int32 value) {
  iid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CMD_PAYMENT_QUERY_SC::iid() const {
  return iid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CMD_PAYMENT_QUERY_SC::mutable_iid() {
  return &iid_;
}

// required int32 iMonthCardRemaind = 2;
inline bool CMD_PAYMENT_QUERY_SC::has_imonthcardremaind() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_PAYMENT_QUERY_SC::set_has_imonthcardremaind() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_PAYMENT_QUERY_SC::clear_has_imonthcardremaind() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_PAYMENT_QUERY_SC::clear_imonthcardremaind() {
  imonthcardremaind_ = 0;
  clear_has_imonthcardremaind();
}
inline ::google::protobuf::int32 CMD_PAYMENT_QUERY_SC::imonthcardremaind() const {
  return imonthcardremaind_;
}
inline void CMD_PAYMENT_QUERY_SC::set_imonthcardremaind(::google::protobuf::int32 value) {
  set_has_imonthcardremaind();
  imonthcardremaind_ = value;
}

// -------------------------------------------------------------------

// CMD_PAYMENT_FIRST_QUERY_SC

// required .GSProto.FightAwardResult resoult = 1;
inline bool CMD_PAYMENT_FIRST_QUERY_SC::has_resoult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_PAYMENT_FIRST_QUERY_SC::set_has_resoult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_PAYMENT_FIRST_QUERY_SC::clear_has_resoult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_PAYMENT_FIRST_QUERY_SC::clear_resoult() {
  if (resoult_ != NULL) resoult_->::GSProto::FightAwardResult::Clear();
  clear_has_resoult();
}
inline const ::GSProto::FightAwardResult& CMD_PAYMENT_FIRST_QUERY_SC::resoult() const {
  return resoult_ != NULL ? *resoult_ : *default_instance_->resoult_;
}
inline ::GSProto::FightAwardResult* CMD_PAYMENT_FIRST_QUERY_SC::mutable_resoult() {
  set_has_resoult();
  if (resoult_ == NULL) resoult_ = new ::GSProto::FightAwardResult;
  return resoult_;
}
inline ::GSProto::FightAwardResult* CMD_PAYMENT_FIRST_QUERY_SC::release_resoult() {
  clear_has_resoult();
  ::GSProto::FightAwardResult* temp = resoult_;
  resoult_ = NULL;
  return temp;
}
inline void CMD_PAYMENT_FIRST_QUERY_SC::set_allocated_resoult(::GSProto::FightAwardResult* resoult) {
  delete resoult_;
  resoult_ = resoult;
  if (resoult) {
    set_has_resoult();
  } else {
    clear_has_resoult();
  }
}

// required bool bCanGet = 2;
inline bool CMD_PAYMENT_FIRST_QUERY_SC::has_bcanget() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_PAYMENT_FIRST_QUERY_SC::set_has_bcanget() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_PAYMENT_FIRST_QUERY_SC::clear_has_bcanget() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_PAYMENT_FIRST_QUERY_SC::clear_bcanget() {
  bcanget_ = false;
  clear_has_bcanget();
}
inline bool CMD_PAYMENT_FIRST_QUERY_SC::bcanget() const {
  return bcanget_;
}
inline void CMD_PAYMENT_FIRST_QUERY_SC::set_bcanget(bool value) {
  set_has_bcanget();
  bcanget_ = value;
}

// -------------------------------------------------------------------

// CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC

// required int32 iNoticeType = 1;
inline bool CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC::has_inoticetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC::set_has_inoticetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC::clear_has_inoticetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC::clear_inoticetype() {
  inoticetype_ = 0;
  clear_has_inoticetype();
}
inline ::google::protobuf::int32 CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC::inoticetype() const {
  return inoticetype_;
}
inline void CMD_NOTICE_LEGOIN_MEMBER_OUTLEGION_SC::set_inoticetype(::google::protobuf::int32 value) {
  set_has_inoticetype();
  inoticetype_ = value;
}

// -------------------------------------------------------------------

// ProtectDetail

// required int32 iProtectId = 1;
inline bool ProtectDetail::has_iprotectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtectDetail::set_has_iprotectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtectDetail::clear_has_iprotectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtectDetail::clear_iprotectid() {
  iprotectid_ = 0;
  clear_has_iprotectid();
}
inline ::google::protobuf::int32 ProtectDetail::iprotectid() const {
  return iprotectid_;
}
inline void ProtectDetail::set_iprotectid(::google::protobuf::int32 value) {
  set_has_iprotectid();
  iprotectid_ = value;
}

// optional int32 iRemaindSecond = 3;
inline bool ProtectDetail::has_iremaindsecond() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtectDetail::set_has_iremaindsecond() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtectDetail::clear_has_iremaindsecond() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtectDetail::clear_iremaindsecond() {
  iremaindsecond_ = 0;
  clear_has_iremaindsecond();
}
inline ::google::protobuf::int32 ProtectDetail::iremaindsecond() const {
  return iremaindsecond_;
}
inline void ProtectDetail::set_iremaindsecond(::google::protobuf::int32 value) {
  set_has_iremaindsecond();
  iremaindsecond_ = value;
}

// -------------------------------------------------------------------

// CMD_MANORSYSTEM_QUERY_PROTECT_SC

// repeated .GSProto.ProtectDetail szProtectDetail = 1;
inline int CMD_MANORSYSTEM_QUERY_PROTECT_SC::szprotectdetail_size() const {
  return szprotectdetail_.size();
}
inline void CMD_MANORSYSTEM_QUERY_PROTECT_SC::clear_szprotectdetail() {
  szprotectdetail_.Clear();
}
inline const ::GSProto::ProtectDetail& CMD_MANORSYSTEM_QUERY_PROTECT_SC::szprotectdetail(int index) const {
  return szprotectdetail_.Get(index);
}
inline ::GSProto::ProtectDetail* CMD_MANORSYSTEM_QUERY_PROTECT_SC::mutable_szprotectdetail(int index) {
  return szprotectdetail_.Mutable(index);
}
inline ::GSProto::ProtectDetail* CMD_MANORSYSTEM_QUERY_PROTECT_SC::add_szprotectdetail() {
  return szprotectdetail_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::ProtectDetail >&
CMD_MANORSYSTEM_QUERY_PROTECT_SC::szprotectdetail() const {
  return szprotectdetail_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::ProtectDetail >*
CMD_MANORSYSTEM_QUERY_PROTECT_SC::mutable_szprotectdetail() {
  return &szprotectdetail_;
}

// -------------------------------------------------------------------

// CMD_MANORSYTEM_BUY_PROTECT_CS

// required int32 iProtectId = 1;
inline bool CMD_MANORSYTEM_BUY_PROTECT_CS::has_iprotectid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_MANORSYTEM_BUY_PROTECT_CS::set_has_iprotectid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_MANORSYTEM_BUY_PROTECT_CS::clear_has_iprotectid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_MANORSYTEM_BUY_PROTECT_CS::clear_iprotectid() {
  iprotectid_ = 0;
  clear_has_iprotectid();
}
inline ::google::protobuf::int32 CMD_MANORSYTEM_BUY_PROTECT_CS::iprotectid() const {
  return iprotectid_;
}
inline void CMD_MANORSYTEM_BUY_PROTECT_CS::set_iprotectid(::google::protobuf::int32 value) {
  set_has_iprotectid();
  iprotectid_ = value;
}

// -------------------------------------------------------------------

// GrowupUnitDetail

// required int32 iId = 1;
inline bool GrowupUnitDetail::has_iid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GrowupUnitDetail::set_has_iid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GrowupUnitDetail::clear_has_iid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GrowupUnitDetail::clear_iid() {
  iid_ = 0;
  clear_has_iid();
}
inline ::google::protobuf::int32 GrowupUnitDetail::iid() const {
  return iid_;
}
inline void GrowupUnitDetail::set_iid(::google::protobuf::int32 value) {
  set_has_iid();
  iid_ = value;
}

// required int32 iGoalLevel = 2;
inline bool GrowupUnitDetail::has_igoallevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GrowupUnitDetail::set_has_igoallevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GrowupUnitDetail::clear_has_igoallevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GrowupUnitDetail::clear_igoallevel() {
  igoallevel_ = 0;
  clear_has_igoallevel();
}
inline ::google::protobuf::int32 GrowupUnitDetail::igoallevel() const {
  return igoallevel_;
}
inline void GrowupUnitDetail::set_igoallevel(::google::protobuf::int32 value) {
  set_has_igoallevel();
  igoallevel_ = value;
}

// required int32 iAward = 3;
inline bool GrowupUnitDetail::has_iaward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GrowupUnitDetail::set_has_iaward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GrowupUnitDetail::clear_has_iaward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GrowupUnitDetail::clear_iaward() {
  iaward_ = 0;
  clear_has_iaward();
}
inline ::google::protobuf::int32 GrowupUnitDetail::iaward() const {
  return iaward_;
}
inline void GrowupUnitDetail::set_iaward(::google::protobuf::int32 value) {
  set_has_iaward();
  iaward_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_GROWUP_DETAIL_SC

// required bool bIsBuy = 1;
inline bool CMD_QUERY_GROWUP_DETAIL_SC::has_bisbuy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_GROWUP_DETAIL_SC::set_has_bisbuy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_GROWUP_DETAIL_SC::clear_has_bisbuy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_GROWUP_DETAIL_SC::clear_bisbuy() {
  bisbuy_ = false;
  clear_has_bisbuy();
}
inline bool CMD_QUERY_GROWUP_DETAIL_SC::bisbuy() const {
  return bisbuy_;
}
inline void CMD_QUERY_GROWUP_DETAIL_SC::set_bisbuy(bool value) {
  set_has_bisbuy();
  bisbuy_ = value;
}

// repeated .GSProto.GrowupUnitDetail szGrowUpDetail = 2;
inline int CMD_QUERY_GROWUP_DETAIL_SC::szgrowupdetail_size() const {
  return szgrowupdetail_.size();
}
inline void CMD_QUERY_GROWUP_DETAIL_SC::clear_szgrowupdetail() {
  szgrowupdetail_.Clear();
}
inline const ::GSProto::GrowupUnitDetail& CMD_QUERY_GROWUP_DETAIL_SC::szgrowupdetail(int index) const {
  return szgrowupdetail_.Get(index);
}
inline ::GSProto::GrowupUnitDetail* CMD_QUERY_GROWUP_DETAIL_SC::mutable_szgrowupdetail(int index) {
  return szgrowupdetail_.Mutable(index);
}
inline ::GSProto::GrowupUnitDetail* CMD_QUERY_GROWUP_DETAIL_SC::add_szgrowupdetail() {
  return szgrowupdetail_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::GrowupUnitDetail >&
CMD_QUERY_GROWUP_DETAIL_SC::szgrowupdetail() const {
  return szgrowupdetail_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::GrowupUnitDetail >*
CMD_QUERY_GROWUP_DETAIL_SC::mutable_szgrowupdetail() {
  return &szgrowupdetail_;
}

// -------------------------------------------------------------------

// CMD_GET_GROWUP_REWARD_CS

// required int32 iId = 1;
inline bool CMD_GET_GROWUP_REWARD_CS::has_iid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GET_GROWUP_REWARD_CS::set_has_iid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GET_GROWUP_REWARD_CS::clear_has_iid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GET_GROWUP_REWARD_CS::clear_iid() {
  iid_ = 0;
  clear_has_iid();
}
inline ::google::protobuf::int32 CMD_GET_GROWUP_REWARD_CS::iid() const {
  return iid_;
}
inline void CMD_GET_GROWUP_REWARD_CS::set_iid(::google::protobuf::int32 value) {
  set_has_iid();
  iid_ = value;
}

// -------------------------------------------------------------------

// AccountUnit

// optional .GSProto.FightAwardResult award = 1;
inline bool AccountUnit::has_award() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountUnit::set_has_award() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountUnit::clear_has_award() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountUnit::clear_award() {
  if (award_ != NULL) award_->::GSProto::FightAwardResult::Clear();
  clear_has_award();
}
inline const ::GSProto::FightAwardResult& AccountUnit::award() const {
  return award_ != NULL ? *award_ : *default_instance_->award_;
}
inline ::GSProto::FightAwardResult* AccountUnit::mutable_award() {
  set_has_award();
  if (award_ == NULL) award_ = new ::GSProto::FightAwardResult;
  return award_;
}
inline ::GSProto::FightAwardResult* AccountUnit::release_award() {
  clear_has_award();
  ::GSProto::FightAwardResult* temp = award_;
  award_ = NULL;
  return temp;
}
inline void AccountUnit::set_allocated_award(::GSProto::FightAwardResult* award) {
  delete award_;
  award_ = award;
  if (award) {
    set_has_award();
  } else {
    clear_has_award();
  }
}

// required int32 iGoal = 2;
inline bool AccountUnit::has_igoal() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccountUnit::set_has_igoal() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccountUnit::clear_has_igoal() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccountUnit::clear_igoal() {
  igoal_ = 0;
  clear_has_igoal();
}
inline ::google::protobuf::int32 AccountUnit::igoal() const {
  return igoal_;
}
inline void AccountUnit::set_igoal(::google::protobuf::int32 value) {
  set_has_igoal();
  igoal_ = value;
}

// required int32 iId = 3;
inline bool AccountUnit::has_iid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AccountUnit::set_has_iid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AccountUnit::clear_has_iid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AccountUnit::clear_iid() {
  iid_ = 0;
  clear_has_iid();
}
inline ::google::protobuf::int32 AccountUnit::iid() const {
  return iid_;
}
inline void AccountUnit::set_iid(::google::protobuf::int32 value) {
  set_has_iid();
  iid_ = value;
}

// -------------------------------------------------------------------

// CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC

// required int32 iActorAccPayment = 1;
inline bool CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC::has_iactoraccpayment() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC::set_has_iactoraccpayment() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC::clear_has_iactoraccpayment() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC::clear_iactoraccpayment() {
  iactoraccpayment_ = 0;
  clear_has_iactoraccpayment();
}
inline ::google::protobuf::int32 CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC::iactoraccpayment() const {
  return iactoraccpayment_;
}
inline void CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC::set_iactoraccpayment(::google::protobuf::int32 value) {
  set_has_iactoraccpayment();
  iactoraccpayment_ = value;
}

// repeated .GSProto.AccountUnit szAccountList = 2;
inline int CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC::szaccountlist_size() const {
  return szaccountlist_.size();
}
inline void CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC::clear_szaccountlist() {
  szaccountlist_.Clear();
}
inline const ::GSProto::AccountUnit& CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC::szaccountlist(int index) const {
  return szaccountlist_.Get(index);
}
inline ::GSProto::AccountUnit* CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC::mutable_szaccountlist(int index) {
  return szaccountlist_.Mutable(index);
}
inline ::GSProto::AccountUnit* CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC::add_szaccountlist() {
  return szaccountlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::AccountUnit >&
CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC::szaccountlist() const {
  return szaccountlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::AccountUnit >*
CMD_QUERY_ACCOUNT_PAYMENT_DETAIL_SC::mutable_szaccountlist() {
  return &szaccountlist_;
}

// -------------------------------------------------------------------

// CMD_QUERY_DAY_PAYMENT_DETAIL_SC

// required int32 paied = 1;
inline bool CMD_QUERY_DAY_PAYMENT_DETAIL_SC::has_paied() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_QUERY_DAY_PAYMENT_DETAIL_SC::set_has_paied() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_QUERY_DAY_PAYMENT_DETAIL_SC::clear_has_paied() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_QUERY_DAY_PAYMENT_DETAIL_SC::clear_paied() {
  paied_ = 0;
  clear_has_paied();
}
inline ::google::protobuf::int32 CMD_QUERY_DAY_PAYMENT_DETAIL_SC::paied() const {
  return paied_;
}
inline void CMD_QUERY_DAY_PAYMENT_DETAIL_SC::set_paied(::google::protobuf::int32 value) {
  set_has_paied();
  paied_ = value;
}

// repeated .GSProto.AccountUnit rewardList = 2;
inline int CMD_QUERY_DAY_PAYMENT_DETAIL_SC::rewardlist_size() const {
  return rewardlist_.size();
}
inline void CMD_QUERY_DAY_PAYMENT_DETAIL_SC::clear_rewardlist() {
  rewardlist_.Clear();
}
inline const ::GSProto::AccountUnit& CMD_QUERY_DAY_PAYMENT_DETAIL_SC::rewardlist(int index) const {
  return rewardlist_.Get(index);
}
inline ::GSProto::AccountUnit* CMD_QUERY_DAY_PAYMENT_DETAIL_SC::mutable_rewardlist(int index) {
  return rewardlist_.Mutable(index);
}
inline ::GSProto::AccountUnit* CMD_QUERY_DAY_PAYMENT_DETAIL_SC::add_rewardlist() {
  return rewardlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GSProto::AccountUnit >&
CMD_QUERY_DAY_PAYMENT_DETAIL_SC::rewardlist() const {
  return rewardlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::GSProto::AccountUnit >*
CMD_QUERY_DAY_PAYMENT_DETAIL_SC::mutable_rewardlist() {
  return &rewardlist_;
}

// repeated int32 fetched = 3;
inline int CMD_QUERY_DAY_PAYMENT_DETAIL_SC::fetched_size() const {
  return fetched_.size();
}
inline void CMD_QUERY_DAY_PAYMENT_DETAIL_SC::clear_fetched() {
  fetched_.Clear();
}
inline ::google::protobuf::int32 CMD_QUERY_DAY_PAYMENT_DETAIL_SC::fetched(int index) const {
  return fetched_.Get(index);
}
inline void CMD_QUERY_DAY_PAYMENT_DETAIL_SC::set_fetched(int index, ::google::protobuf::int32 value) {
  fetched_.Set(index, value);
}
inline void CMD_QUERY_DAY_PAYMENT_DETAIL_SC::add_fetched(::google::protobuf::int32 value) {
  fetched_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CMD_QUERY_DAY_PAYMENT_DETAIL_SC::fetched() const {
  return fetched_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CMD_QUERY_DAY_PAYMENT_DETAIL_SC::mutable_fetched() {
  return &fetched_;
}

// -------------------------------------------------------------------

// CMD_GET_DAY_PAYMENT_REWARD_CS

// required int32 rewardId = 1;
inline bool CMD_GET_DAY_PAYMENT_REWARD_CS::has_rewardid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GET_DAY_PAYMENT_REWARD_CS::set_has_rewardid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GET_DAY_PAYMENT_REWARD_CS::clear_has_rewardid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GET_DAY_PAYMENT_REWARD_CS::clear_rewardid() {
  rewardid_ = 0;
  clear_has_rewardid();
}
inline ::google::protobuf::int32 CMD_GET_DAY_PAYMENT_REWARD_CS::rewardid() const {
  return rewardid_;
}
inline void CMD_GET_DAY_PAYMENT_REWARD_CS::set_rewardid(::google::protobuf::int32 value) {
  set_has_rewardid();
  rewardid_ = value;
}

// -------------------------------------------------------------------

// CMD_GET_DAY_PAYMENT_REWARD_SC

// required .GSProto.FightAwardResult reward = 1;
inline bool CMD_GET_DAY_PAYMENT_REWARD_SC::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GET_DAY_PAYMENT_REWARD_SC::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GET_DAY_PAYMENT_REWARD_SC::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GET_DAY_PAYMENT_REWARD_SC::clear_reward() {
  if (reward_ != NULL) reward_->::GSProto::FightAwardResult::Clear();
  clear_has_reward();
}
inline const ::GSProto::FightAwardResult& CMD_GET_DAY_PAYMENT_REWARD_SC::reward() const {
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::GSProto::FightAwardResult* CMD_GET_DAY_PAYMENT_REWARD_SC::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::GSProto::FightAwardResult;
  return reward_;
}
inline ::GSProto::FightAwardResult* CMD_GET_DAY_PAYMENT_REWARD_SC::release_reward() {
  clear_has_reward();
  ::GSProto::FightAwardResult* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void CMD_GET_DAY_PAYMENT_REWARD_SC::set_allocated_reward(::GSProto::FightAwardResult* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
}

// -------------------------------------------------------------------

// CMD_GET_ACCOUNT_PAYMENT_REWARD_CS

// required int32 iId = 1;
inline bool CMD_GET_ACCOUNT_PAYMENT_REWARD_CS::has_iid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GET_ACCOUNT_PAYMENT_REWARD_CS::set_has_iid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GET_ACCOUNT_PAYMENT_REWARD_CS::clear_has_iid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GET_ACCOUNT_PAYMENT_REWARD_CS::clear_iid() {
  iid_ = 0;
  clear_has_iid();
}
inline ::google::protobuf::int32 CMD_GET_ACCOUNT_PAYMENT_REWARD_CS::iid() const {
  return iid_;
}
inline void CMD_GET_ACCOUNT_PAYMENT_REWARD_CS::set_iid(::google::protobuf::int32 value) {
  set_has_iid();
  iid_ = value;
}

// -------------------------------------------------------------------

// CMD_GET_ACCOUNT_PAYMENT_REWARD_SC

// required .GSProto.FightAwardResult reward = 1;
inline bool CMD_GET_ACCOUNT_PAYMENT_REWARD_SC::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GET_ACCOUNT_PAYMENT_REWARD_SC::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GET_ACCOUNT_PAYMENT_REWARD_SC::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GET_ACCOUNT_PAYMENT_REWARD_SC::clear_reward() {
  if (reward_ != NULL) reward_->::GSProto::FightAwardResult::Clear();
  clear_has_reward();
}
inline const ::GSProto::FightAwardResult& CMD_GET_ACCOUNT_PAYMENT_REWARD_SC::reward() const {
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::GSProto::FightAwardResult* CMD_GET_ACCOUNT_PAYMENT_REWARD_SC::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::GSProto::FightAwardResult;
  return reward_;
}
inline ::GSProto::FightAwardResult* CMD_GET_ACCOUNT_PAYMENT_REWARD_SC::release_reward() {
  clear_has_reward();
  ::GSProto::FightAwardResult* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void CMD_GET_ACCOUNT_PAYMENT_REWARD_SC::set_allocated_reward(::GSProto::FightAwardResult* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
}

// -------------------------------------------------------------------

// CMD_QUERY_OPERATE_ACTIVE_SC

// repeated int32 szOpenActive = 1;
inline int CMD_QUERY_OPERATE_ACTIVE_SC::szopenactive_size() const {
  return szopenactive_.size();
}
inline void CMD_QUERY_OPERATE_ACTIVE_SC::clear_szopenactive() {
  szopenactive_.Clear();
}
inline ::google::protobuf::int32 CMD_QUERY_OPERATE_ACTIVE_SC::szopenactive(int index) const {
  return szopenactive_.Get(index);
}
inline void CMD_QUERY_OPERATE_ACTIVE_SC::set_szopenactive(int index, ::google::protobuf::int32 value) {
  szopenactive_.Set(index, value);
}
inline void CMD_QUERY_OPERATE_ACTIVE_SC::add_szopenactive(::google::protobuf::int32 value) {
  szopenactive_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CMD_QUERY_OPERATE_ACTIVE_SC::szopenactive() const {
  return szopenactive_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CMD_QUERY_OPERATE_ACTIVE_SC::mutable_szopenactive() {
  return &szopenactive_;
}

// -------------------------------------------------------------------

// CMD_OPERATE_TELPHONE_STREAM_CS

// required string strTelPhoneNum = 1;
inline bool CMD_OPERATE_TELPHONE_STREAM_CS::has_strtelphonenum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_OPERATE_TELPHONE_STREAM_CS::set_has_strtelphonenum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_OPERATE_TELPHONE_STREAM_CS::clear_has_strtelphonenum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_OPERATE_TELPHONE_STREAM_CS::clear_strtelphonenum() {
  if (strtelphonenum_ != &::google::protobuf::internal::kEmptyString) {
    strtelphonenum_->clear();
  }
  clear_has_strtelphonenum();
}
inline const ::std::string& CMD_OPERATE_TELPHONE_STREAM_CS::strtelphonenum() const {
  return *strtelphonenum_;
}
inline void CMD_OPERATE_TELPHONE_STREAM_CS::set_strtelphonenum(const ::std::string& value) {
  set_has_strtelphonenum();
  if (strtelphonenum_ == &::google::protobuf::internal::kEmptyString) {
    strtelphonenum_ = new ::std::string;
  }
  strtelphonenum_->assign(value);
}
inline void CMD_OPERATE_TELPHONE_STREAM_CS::set_strtelphonenum(const char* value) {
  set_has_strtelphonenum();
  if (strtelphonenum_ == &::google::protobuf::internal::kEmptyString) {
    strtelphonenum_ = new ::std::string;
  }
  strtelphonenum_->assign(value);
}
inline void CMD_OPERATE_TELPHONE_STREAM_CS::set_strtelphonenum(const char* value, size_t size) {
  set_has_strtelphonenum();
  if (strtelphonenum_ == &::google::protobuf::internal::kEmptyString) {
    strtelphonenum_ = new ::std::string;
  }
  strtelphonenum_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_OPERATE_TELPHONE_STREAM_CS::mutable_strtelphonenum() {
  set_has_strtelphonenum();
  if (strtelphonenum_ == &::google::protobuf::internal::kEmptyString) {
    strtelphonenum_ = new ::std::string;
  }
  return strtelphonenum_;
}
inline ::std::string* CMD_OPERATE_TELPHONE_STREAM_CS::release_strtelphonenum() {
  clear_has_strtelphonenum();
  if (strtelphonenum_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strtelphonenum_;
    strtelphonenum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_OPERATE_TELPHONE_STREAM_CS::set_allocated_strtelphonenum(::std::string* strtelphonenum) {
  if (strtelphonenum_ != &::google::protobuf::internal::kEmptyString) {
    delete strtelphonenum_;
  }
  if (strtelphonenum) {
    set_has_strtelphonenum();
    strtelphonenum_ = strtelphonenum;
  } else {
    clear_has_strtelphonenum();
    strtelphonenum_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_QUERY_ACCOUNT_LOGIN_IN_SC

// repeated int32 szAccount = 1;
inline int CMD_QUERY_ACCOUNT_LOGIN_IN_SC::szaccount_size() const {
  return szaccount_.size();
}
inline void CMD_QUERY_ACCOUNT_LOGIN_IN_SC::clear_szaccount() {
  szaccount_.Clear();
}
inline ::google::protobuf::int32 CMD_QUERY_ACCOUNT_LOGIN_IN_SC::szaccount(int index) const {
  return szaccount_.Get(index);
}
inline void CMD_QUERY_ACCOUNT_LOGIN_IN_SC::set_szaccount(int index, ::google::protobuf::int32 value) {
  szaccount_.Set(index, value);
}
inline void CMD_QUERY_ACCOUNT_LOGIN_IN_SC::add_szaccount(::google::protobuf::int32 value) {
  szaccount_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CMD_QUERY_ACCOUNT_LOGIN_IN_SC::szaccount() const {
  return szaccount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CMD_QUERY_ACCOUNT_LOGIN_IN_SC::mutable_szaccount() {
  return &szaccount_;
}

// required int32 iAccLoginCount = 2;
inline bool CMD_QUERY_ACCOUNT_LOGIN_IN_SC::has_iacclogincount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_QUERY_ACCOUNT_LOGIN_IN_SC::set_has_iacclogincount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_QUERY_ACCOUNT_LOGIN_IN_SC::clear_has_iacclogincount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_QUERY_ACCOUNT_LOGIN_IN_SC::clear_iacclogincount() {
  iacclogincount_ = 0;
  clear_has_iacclogincount();
}
inline ::google::protobuf::int32 CMD_QUERY_ACCOUNT_LOGIN_IN_SC::iacclogincount() const {
  return iacclogincount_;
}
inline void CMD_QUERY_ACCOUNT_LOGIN_IN_SC::set_iacclogincount(::google::protobuf::int32 value) {
  set_has_iacclogincount();
  iacclogincount_ = value;
}

// -------------------------------------------------------------------

// CMD_GET_ACCOUNT_REWARD_CS

// required int32 iAccountTimes = 1;
inline bool CMD_GET_ACCOUNT_REWARD_CS::has_iaccounttimes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GET_ACCOUNT_REWARD_CS::set_has_iaccounttimes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GET_ACCOUNT_REWARD_CS::clear_has_iaccounttimes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GET_ACCOUNT_REWARD_CS::clear_iaccounttimes() {
  iaccounttimes_ = 0;
  clear_has_iaccounttimes();
}
inline ::google::protobuf::int32 CMD_GET_ACCOUNT_REWARD_CS::iaccounttimes() const {
  return iaccounttimes_;
}
inline void CMD_GET_ACCOUNT_REWARD_CS::set_iaccounttimes(::google::protobuf::int32 value) {
  set_has_iaccounttimes();
  iaccounttimes_ = value;
}

// -------------------------------------------------------------------

// CMD_GET_ACCOUNT_REWARD_SC

// required .GSProto.FightAwardResult reward = 1;
inline bool CMD_GET_ACCOUNT_REWARD_SC::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_GET_ACCOUNT_REWARD_SC::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_GET_ACCOUNT_REWARD_SC::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_GET_ACCOUNT_REWARD_SC::clear_reward() {
  if (reward_ != NULL) reward_->::GSProto::FightAwardResult::Clear();
  clear_has_reward();
}
inline const ::GSProto::FightAwardResult& CMD_GET_ACCOUNT_REWARD_SC::reward() const {
  return reward_ != NULL ? *reward_ : *default_instance_->reward_;
}
inline ::GSProto::FightAwardResult* CMD_GET_ACCOUNT_REWARD_SC::mutable_reward() {
  set_has_reward();
  if (reward_ == NULL) reward_ = new ::GSProto::FightAwardResult;
  return reward_;
}
inline ::GSProto::FightAwardResult* CMD_GET_ACCOUNT_REWARD_SC::release_reward() {
  clear_has_reward();
  ::GSProto::FightAwardResult* temp = reward_;
  reward_ = NULL;
  return temp;
}
inline void CMD_GET_ACCOUNT_REWARD_SC::set_allocated_reward(::GSProto::FightAwardResult* reward) {
  delete reward_;
  reward_ = reward;
  if (reward) {
    set_has_reward();
  } else {
    clear_has_reward();
  }
}

// -------------------------------------------------------------------

// CMD_VIVO_ALOGIN_CS

// required string strToken = 1;
inline bool CMD_VIVO_ALOGIN_CS::has_strtoken() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_VIVO_ALOGIN_CS::set_has_strtoken() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_VIVO_ALOGIN_CS::clear_has_strtoken() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_VIVO_ALOGIN_CS::clear_strtoken() {
  if (strtoken_ != &::google::protobuf::internal::kEmptyString) {
    strtoken_->clear();
  }
  clear_has_strtoken();
}
inline const ::std::string& CMD_VIVO_ALOGIN_CS::strtoken() const {
  return *strtoken_;
}
inline void CMD_VIVO_ALOGIN_CS::set_strtoken(const ::std::string& value) {
  set_has_strtoken();
  if (strtoken_ == &::google::protobuf::internal::kEmptyString) {
    strtoken_ = new ::std::string;
  }
  strtoken_->assign(value);
}
inline void CMD_VIVO_ALOGIN_CS::set_strtoken(const char* value) {
  set_has_strtoken();
  if (strtoken_ == &::google::protobuf::internal::kEmptyString) {
    strtoken_ = new ::std::string;
  }
  strtoken_->assign(value);
}
inline void CMD_VIVO_ALOGIN_CS::set_strtoken(const char* value, size_t size) {
  set_has_strtoken();
  if (strtoken_ == &::google::protobuf::internal::kEmptyString) {
    strtoken_ = new ::std::string;
  }
  strtoken_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_VIVO_ALOGIN_CS::mutable_strtoken() {
  set_has_strtoken();
  if (strtoken_ == &::google::protobuf::internal::kEmptyString) {
    strtoken_ = new ::std::string;
  }
  return strtoken_;
}
inline ::std::string* CMD_VIVO_ALOGIN_CS::release_strtoken() {
  clear_has_strtoken();
  if (strtoken_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strtoken_;
    strtoken_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_VIVO_ALOGIN_CS::set_allocated_strtoken(::std::string* strtoken) {
  if (strtoken_ != &::google::protobuf::internal::kEmptyString) {
    delete strtoken_;
  }
  if (strtoken) {
    set_has_strtoken();
    strtoken_ = strtoken;
  } else {
    clear_has_strtoken();
    strtoken_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_VIVO_ALOGIN_SC

// required string struid = 1;
inline bool CMD_VIVO_ALOGIN_SC::has_struid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_VIVO_ALOGIN_SC::set_has_struid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_VIVO_ALOGIN_SC::clear_has_struid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_VIVO_ALOGIN_SC::clear_struid() {
  if (struid_ != &::google::protobuf::internal::kEmptyString) {
    struid_->clear();
  }
  clear_has_struid();
}
inline const ::std::string& CMD_VIVO_ALOGIN_SC::struid() const {
  return *struid_;
}
inline void CMD_VIVO_ALOGIN_SC::set_struid(const ::std::string& value) {
  set_has_struid();
  if (struid_ == &::google::protobuf::internal::kEmptyString) {
    struid_ = new ::std::string;
  }
  struid_->assign(value);
}
inline void CMD_VIVO_ALOGIN_SC::set_struid(const char* value) {
  set_has_struid();
  if (struid_ == &::google::protobuf::internal::kEmptyString) {
    struid_ = new ::std::string;
  }
  struid_->assign(value);
}
inline void CMD_VIVO_ALOGIN_SC::set_struid(const char* value, size_t size) {
  set_has_struid();
  if (struid_ == &::google::protobuf::internal::kEmptyString) {
    struid_ = new ::std::string;
  }
  struid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_VIVO_ALOGIN_SC::mutable_struid() {
  set_has_struid();
  if (struid_ == &::google::protobuf::internal::kEmptyString) {
    struid_ = new ::std::string;
  }
  return struid_;
}
inline ::std::string* CMD_VIVO_ALOGIN_SC::release_struid() {
  clear_has_struid();
  if (struid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = struid_;
    struid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_VIVO_ALOGIN_SC::set_allocated_struid(::std::string* struid) {
  if (struid_ != &::google::protobuf::internal::kEmptyString) {
    delete struid_;
  }
  if (struid) {
    set_has_struid();
    struid_ = struid;
  } else {
    clear_has_struid();
    struid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_VIVO_BUY_GOOD_CS

// required int32 iPrice = 1;
inline bool CMD_VIVO_BUY_GOOD_CS::has_iprice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_VIVO_BUY_GOOD_CS::set_has_iprice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_VIVO_BUY_GOOD_CS::clear_has_iprice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_VIVO_BUY_GOOD_CS::clear_iprice() {
  iprice_ = 0;
  clear_has_iprice();
}
inline ::google::protobuf::int32 CMD_VIVO_BUY_GOOD_CS::iprice() const {
  return iprice_;
}
inline void CMD_VIVO_BUY_GOOD_CS::set_iprice(::google::protobuf::int32 value) {
  set_has_iprice();
  iprice_ = value;
}

// -------------------------------------------------------------------

// CMD_VIVO_BUY_GOOD_SC

// required int32 iPrice = 1;
inline bool CMD_VIVO_BUY_GOOD_SC::has_iprice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_VIVO_BUY_GOOD_SC::set_has_iprice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_VIVO_BUY_GOOD_SC::clear_has_iprice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_VIVO_BUY_GOOD_SC::clear_iprice() {
  iprice_ = 0;
  clear_has_iprice();
}
inline ::google::protobuf::int32 CMD_VIVO_BUY_GOOD_SC::iprice() const {
  return iprice_;
}
inline void CMD_VIVO_BUY_GOOD_SC::set_iprice(::google::protobuf::int32 value) {
  set_has_iprice();
  iprice_ = value;
}

// required string orderNumber = 2;
inline bool CMD_VIVO_BUY_GOOD_SC::has_ordernumber() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_VIVO_BUY_GOOD_SC::set_has_ordernumber() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_VIVO_BUY_GOOD_SC::clear_has_ordernumber() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_VIVO_BUY_GOOD_SC::clear_ordernumber() {
  if (ordernumber_ != &::google::protobuf::internal::kEmptyString) {
    ordernumber_->clear();
  }
  clear_has_ordernumber();
}
inline const ::std::string& CMD_VIVO_BUY_GOOD_SC::ordernumber() const {
  return *ordernumber_;
}
inline void CMD_VIVO_BUY_GOOD_SC::set_ordernumber(const ::std::string& value) {
  set_has_ordernumber();
  if (ordernumber_ == &::google::protobuf::internal::kEmptyString) {
    ordernumber_ = new ::std::string;
  }
  ordernumber_->assign(value);
}
inline void CMD_VIVO_BUY_GOOD_SC::set_ordernumber(const char* value) {
  set_has_ordernumber();
  if (ordernumber_ == &::google::protobuf::internal::kEmptyString) {
    ordernumber_ = new ::std::string;
  }
  ordernumber_->assign(value);
}
inline void CMD_VIVO_BUY_GOOD_SC::set_ordernumber(const char* value, size_t size) {
  set_has_ordernumber();
  if (ordernumber_ == &::google::protobuf::internal::kEmptyString) {
    ordernumber_ = new ::std::string;
  }
  ordernumber_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_VIVO_BUY_GOOD_SC::mutable_ordernumber() {
  set_has_ordernumber();
  if (ordernumber_ == &::google::protobuf::internal::kEmptyString) {
    ordernumber_ = new ::std::string;
  }
  return ordernumber_;
}
inline ::std::string* CMD_VIVO_BUY_GOOD_SC::release_ordernumber() {
  clear_has_ordernumber();
  if (ordernumber_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ordernumber_;
    ordernumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_VIVO_BUY_GOOD_SC::set_allocated_ordernumber(::std::string* ordernumber) {
  if (ordernumber_ != &::google::protobuf::internal::kEmptyString) {
    delete ordernumber_;
  }
  if (ordernumber) {
    set_has_ordernumber();
    ordernumber_ = ordernumber;
  } else {
    clear_has_ordernumber();
    ordernumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string accessKey = 3;
inline bool CMD_VIVO_BUY_GOOD_SC::has_accesskey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_VIVO_BUY_GOOD_SC::set_has_accesskey() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_VIVO_BUY_GOOD_SC::clear_has_accesskey() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_VIVO_BUY_GOOD_SC::clear_accesskey() {
  if (accesskey_ != &::google::protobuf::internal::kEmptyString) {
    accesskey_->clear();
  }
  clear_has_accesskey();
}
inline const ::std::string& CMD_VIVO_BUY_GOOD_SC::accesskey() const {
  return *accesskey_;
}
inline void CMD_VIVO_BUY_GOOD_SC::set_accesskey(const ::std::string& value) {
  set_has_accesskey();
  if (accesskey_ == &::google::protobuf::internal::kEmptyString) {
    accesskey_ = new ::std::string;
  }
  accesskey_->assign(value);
}
inline void CMD_VIVO_BUY_GOOD_SC::set_accesskey(const char* value) {
  set_has_accesskey();
  if (accesskey_ == &::google::protobuf::internal::kEmptyString) {
    accesskey_ = new ::std::string;
  }
  accesskey_->assign(value);
}
inline void CMD_VIVO_BUY_GOOD_SC::set_accesskey(const char* value, size_t size) {
  set_has_accesskey();
  if (accesskey_ == &::google::protobuf::internal::kEmptyString) {
    accesskey_ = new ::std::string;
  }
  accesskey_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_VIVO_BUY_GOOD_SC::mutable_accesskey() {
  set_has_accesskey();
  if (accesskey_ == &::google::protobuf::internal::kEmptyString) {
    accesskey_ = new ::std::string;
  }
  return accesskey_;
}
inline ::std::string* CMD_VIVO_BUY_GOOD_SC::release_accesskey() {
  clear_has_accesskey();
  if (accesskey_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = accesskey_;
    accesskey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_VIVO_BUY_GOOD_SC::set_allocated_accesskey(::std::string* accesskey) {
  if (accesskey_ != &::google::protobuf::internal::kEmptyString) {
    delete accesskey_;
  }
  if (accesskey) {
    set_has_accesskey();
    accesskey_ = accesskey;
  } else {
    clear_has_accesskey();
    accesskey_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string appId = 4;
inline bool CMD_VIVO_BUY_GOOD_SC::has_appid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_VIVO_BUY_GOOD_SC::set_has_appid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_VIVO_BUY_GOOD_SC::clear_has_appid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_VIVO_BUY_GOOD_SC::clear_appid() {
  if (appid_ != &::google::protobuf::internal::kEmptyString) {
    appid_->clear();
  }
  clear_has_appid();
}
inline const ::std::string& CMD_VIVO_BUY_GOOD_SC::appid() const {
  return *appid_;
}
inline void CMD_VIVO_BUY_GOOD_SC::set_appid(const ::std::string& value) {
  set_has_appid();
  if (appid_ == &::google::protobuf::internal::kEmptyString) {
    appid_ = new ::std::string;
  }
  appid_->assign(value);
}
inline void CMD_VIVO_BUY_GOOD_SC::set_appid(const char* value) {
  set_has_appid();
  if (appid_ == &::google::protobuf::internal::kEmptyString) {
    appid_ = new ::std::string;
  }
  appid_->assign(value);
}
inline void CMD_VIVO_BUY_GOOD_SC::set_appid(const char* value, size_t size) {
  set_has_appid();
  if (appid_ == &::google::protobuf::internal::kEmptyString) {
    appid_ = new ::std::string;
  }
  appid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_VIVO_BUY_GOOD_SC::mutable_appid() {
  set_has_appid();
  if (appid_ == &::google::protobuf::internal::kEmptyString) {
    appid_ = new ::std::string;
  }
  return appid_;
}
inline ::std::string* CMD_VIVO_BUY_GOOD_SC::release_appid() {
  clear_has_appid();
  if (appid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = appid_;
    appid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_VIVO_BUY_GOOD_SC::set_allocated_appid(::std::string* appid) {
  if (appid_ != &::google::protobuf::internal::kEmptyString) {
    delete appid_;
  }
  if (appid) {
    set_has_appid();
    appid_ = appid;
  } else {
    clear_has_appid();
    appid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_IOS_BUY_GOODS_CS

// required int32 iPrice = 1;
inline bool CMD_IOS_BUY_GOODS_CS::has_iprice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_IOS_BUY_GOODS_CS::set_has_iprice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_IOS_BUY_GOODS_CS::clear_has_iprice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_IOS_BUY_GOODS_CS::clear_iprice() {
  iprice_ = 0;
  clear_has_iprice();
}
inline ::google::protobuf::int32 CMD_IOS_BUY_GOODS_CS::iprice() const {
  return iprice_;
}
inline void CMD_IOS_BUY_GOODS_CS::set_iprice(::google::protobuf::int32 value) {
  set_has_iprice();
  iprice_ = value;
}

// required string receipt = 2;
inline bool CMD_IOS_BUY_GOODS_CS::has_receipt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_IOS_BUY_GOODS_CS::set_has_receipt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_IOS_BUY_GOODS_CS::clear_has_receipt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_IOS_BUY_GOODS_CS::clear_receipt() {
  if (receipt_ != &::google::protobuf::internal::kEmptyString) {
    receipt_->clear();
  }
  clear_has_receipt();
}
inline const ::std::string& CMD_IOS_BUY_GOODS_CS::receipt() const {
  return *receipt_;
}
inline void CMD_IOS_BUY_GOODS_CS::set_receipt(const ::std::string& value) {
  set_has_receipt();
  if (receipt_ == &::google::protobuf::internal::kEmptyString) {
    receipt_ = new ::std::string;
  }
  receipt_->assign(value);
}
inline void CMD_IOS_BUY_GOODS_CS::set_receipt(const char* value) {
  set_has_receipt();
  if (receipt_ == &::google::protobuf::internal::kEmptyString) {
    receipt_ = new ::std::string;
  }
  receipt_->assign(value);
}
inline void CMD_IOS_BUY_GOODS_CS::set_receipt(const char* value, size_t size) {
  set_has_receipt();
  if (receipt_ == &::google::protobuf::internal::kEmptyString) {
    receipt_ = new ::std::string;
  }
  receipt_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_IOS_BUY_GOODS_CS::mutable_receipt() {
  set_has_receipt();
  if (receipt_ == &::google::protobuf::internal::kEmptyString) {
    receipt_ = new ::std::string;
  }
  return receipt_;
}
inline ::std::string* CMD_IOS_BUY_GOODS_CS::release_receipt() {
  clear_has_receipt();
  if (receipt_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = receipt_;
    receipt_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_IOS_BUY_GOODS_CS::set_allocated_receipt(::std::string* receipt) {
  if (receipt_ != &::google::protobuf::internal::kEmptyString) {
    delete receipt_;
  }
  if (receipt) {
    set_has_receipt();
    receipt_ = receipt;
  } else {
    clear_has_receipt();
    receipt_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_IOS_BUY_GOODS_SC

// required int32 iPrice = 1;
inline bool CMD_IOS_BUY_GOODS_SC::has_iprice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_IOS_BUY_GOODS_SC::set_has_iprice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_IOS_BUY_GOODS_SC::clear_has_iprice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_IOS_BUY_GOODS_SC::clear_iprice() {
  iprice_ = 0;
  clear_has_iprice();
}
inline ::google::protobuf::int32 CMD_IOS_BUY_GOODS_SC::iprice() const {
  return iprice_;
}
inline void CMD_IOS_BUY_GOODS_SC::set_iprice(::google::protobuf::int32 value) {
  set_has_iprice();
  iprice_ = value;
}

// required string receipt = 2;
inline bool CMD_IOS_BUY_GOODS_SC::has_receipt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_IOS_BUY_GOODS_SC::set_has_receipt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_IOS_BUY_GOODS_SC::clear_has_receipt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_IOS_BUY_GOODS_SC::clear_receipt() {
  if (receipt_ != &::google::protobuf::internal::kEmptyString) {
    receipt_->clear();
  }
  clear_has_receipt();
}
inline const ::std::string& CMD_IOS_BUY_GOODS_SC::receipt() const {
  return *receipt_;
}
inline void CMD_IOS_BUY_GOODS_SC::set_receipt(const ::std::string& value) {
  set_has_receipt();
  if (receipt_ == &::google::protobuf::internal::kEmptyString) {
    receipt_ = new ::std::string;
  }
  receipt_->assign(value);
}
inline void CMD_IOS_BUY_GOODS_SC::set_receipt(const char* value) {
  set_has_receipt();
  if (receipt_ == &::google::protobuf::internal::kEmptyString) {
    receipt_ = new ::std::string;
  }
  receipt_->assign(value);
}
inline void CMD_IOS_BUY_GOODS_SC::set_receipt(const char* value, size_t size) {
  set_has_receipt();
  if (receipt_ == &::google::protobuf::internal::kEmptyString) {
    receipt_ = new ::std::string;
  }
  receipt_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMD_IOS_BUY_GOODS_SC::mutable_receipt() {
  set_has_receipt();
  if (receipt_ == &::google::protobuf::internal::kEmptyString) {
    receipt_ = new ::std::string;
  }
  return receipt_;
}
inline ::std::string* CMD_IOS_BUY_GOODS_SC::release_receipt() {
  clear_has_receipt();
  if (receipt_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = receipt_;
    receipt_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMD_IOS_BUY_GOODS_SC::set_allocated_receipt(::std::string* receipt) {
  if (receipt_ != &::google::protobuf::internal::kEmptyString) {
    delete receipt_;
  }
  if (receipt) {
    set_has_receipt();
    receipt_ = receipt;
  } else {
    clear_has_receipt();
    receipt_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 errorCode = 3;
inline bool CMD_IOS_BUY_GOODS_SC::has_errorcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_IOS_BUY_GOODS_SC::set_has_errorcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_IOS_BUY_GOODS_SC::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_IOS_BUY_GOODS_SC::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 CMD_IOS_BUY_GOODS_SC::errorcode() const {
  return errorcode_;
}
inline void CMD_IOS_BUY_GOODS_SC::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace GSProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::EntityType>() {
  return ::GSProto::EntityType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::SexType>() {
  return ::GSProto::SexType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::CommonDef>() {
  return ::GSProto::CommonDef_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::KickOffReason>() {
  return ::GSProto::KickOffReason_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::GameServerCMD>() {
  return ::GSProto::GameServerCMD_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::LoginResult>() {
  return ::GSProto::LoginResult_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::NewRoleResult>() {
  return ::GSProto::NewRoleResult_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::GetRoleResult>() {
  return ::GSProto::GetRoleResult_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::BagChgType>() {
  return ::GSProto::BagChgType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::SkillHitResult>() {
  return ::GSProto::SkillHitResult_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::FightType>() {
  return ::GSProto::FightType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::ItemType>() {
  return ::GSProto::ItemType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::BagType>() {
  return ::GSProto::BagType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::CommQuality>() {
  return ::GSProto::CommQuality_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::ErrorCodeType>() {
  return ::GSProto::ErrorCodeType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::enHeadType>() {
  return ::GSProto::enHeadType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::FightActionType>() {
  return ::GSProto::FightActionType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::FightResultType>() {
  return ::GSProto::FightResultType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::Shop_CostType>() {
  return ::GSProto::Shop_CostType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::Shop_GoodType>() {
  return ::GSProto::Shop_GoodType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::Section_Type>() {
  return ::GSProto::Section_Type_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::LifeAtt>() {
  return ::GSProto::LifeAtt_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::enNoticeGuid>() {
  return ::GSProto::enNoticeGuid_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::enFunction>() {
  return ::GSProto::enFunction_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::ActorSkillDefine>() {
  return ::GSProto::ActorSkillDefine_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::DungeonSceneStar>() {
  return ::GSProto::DungeonSceneStar_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::en_FSPracticeGrade>() {
  return ::GSProto::en_FSPracticeGrade_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::en_PracticeMode>() {
  return ::GSProto::en_PracticeMode_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::en_FSContainerType>() {
  return ::GSProto::en_FSContainerType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::CreateConsumeReason>() {
  return ::GSProto::CreateConsumeReason_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::MonsterType>() {
  return ::GSProto::MonsterType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::MaidPlayState>() {
  return ::GSProto::MaidPlayState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::enLegionOccupation>() {
  return ::GSProto::enLegionOccupation_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::enLegionPayType>() {
  return ::GSProto::enLegionPayType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::enLegionShopItemType>() {
  return ::GSProto::enLegionShopItemType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::enLegionShopType>() {
  return ::GSProto::enLegionShopType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::enChatChannel>() {
  return ::GSProto::enChatChannel_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::ArenaAppendState>() {
  return ::GSProto::ArenaAppendState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::ArenaRankChgType>() {
  return ::GSProto::ArenaRankChgType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::CampBattleResoultType>() {
  return ::GSProto::CampBattleResoultType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::PhyStrengthType>() {
  return ::GSProto::PhyStrengthType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::marQueueType>() {
  return ::GSProto::marQueueType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::TaskState>() {
  return ::GSProto::TaskState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::enTaskType>() {
  return ::GSProto::enTaskType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::EquipSellType>() {
  return ::GSProto::EquipSellType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::EquipContainerType>() {
  return ::GSProto::EquipContainerType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::EquipPos>() {
  return ::GSProto::EquipPos_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::COVERHEROVIEM>() {
  return ::GSProto::COVERHEROVIEM_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::enMailType>() {
  return ::GSProto::enMailType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::MailState>() {
  return ::GSProto::MailState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::enDreamLandSceneState>() {
  return ::GSProto::enDreamLandSceneState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::ManorResType>() {
  return ::GSProto::ManorResType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::RandomType>() {
  return ::GSProto::RandomType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::enRandReturnType>() {
  return ::GSProto::enRandReturnType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::CoinTreeShakeType>() {
  return ::GSProto::CoinTreeShakeType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::enWorshipType>() {
  return ::GSProto::enWorshipType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GSProto::enSpecialActiveId>() {
  return ::GSProto::enSpecialActiveId_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GameServer_2eproto__INCLUDED
