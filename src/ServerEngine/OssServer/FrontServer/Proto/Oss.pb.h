// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Oss.proto

#ifndef PROTOBUF_Oss_2eproto__INCLUDED
#define PROTOBUF_Oss_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Oss {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Oss_2eproto();
void protobuf_AssignDesc_Oss_2eproto();
void protobuf_ShutdownFile_Oss_2eproto();

class SCMessage;
class CSMessage;
class ServerDesc;
class CMD_OSS_GETSERVERLIST_SC;
class CMD_OSS_QUERYONLINE_CS;
class OnlineOverAllItem;
class OnlineDescItem;
class CMD_OSS_QUERYONLINE_SC;
class CMD_OSS_QUERYOVERALL_CS;
class OssOverAllItem;
class CMD_OSS_QUERYOVERALL_SC;
class CMD_OSS_QUERYRETAIN_CS;
class RetainItem;
class CMD_OSS_QUERYRETAIN_SC;
class CMD_OSS_QUERYLOSEPLAYER_CS;
class LosePlayerItem;
class CMD_OSS_QUERYLOSEPLAYER_SC;
class CMD_OSS_QUERYGAMECOIN_CS;
class GameCoinItem;
class CMD_OSS_QUERYGAMECOIN_SC;
class CMD_OSS_QUERYFIRSTCONSUME_CS;
class CMD_OSS_QUERYFIRSTCONSUME_SC;

enum Cmd {
  CMD_OSS_GETSERVERLIST = 10001,
  CMD_OSS_QUERYOVERALL = 10002,
  CMD_OSS_QUERYONLINE = 10003,
  CMD_OSS_QUERYRETAIN = 1004,
  CMD_OSS_QUERYLOSEPLAYER = 1005,
  CMD_OSS_QUERYGAMECOIN = 1006,
  CMD_OSS_QUERYFIRSTCONSUME = 1007
};
bool Cmd_IsValid(int value);
const Cmd Cmd_MIN = CMD_OSS_QUERYRETAIN;
const Cmd Cmd_MAX = CMD_OSS_QUERYONLINE;
const int Cmd_ARRAYSIZE = Cmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* Cmd_descriptor();
inline const ::std::string& Cmd_Name(Cmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    Cmd_descriptor(), value);
}
inline bool Cmd_Parse(
    const ::std::string& name, Cmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Cmd>(
    Cmd_descriptor(), name, value);
}
enum GameCoinType {
  en_GameCoin_Sliver = 1,
  en_GameCoin_Gold = 2
};
bool GameCoinType_IsValid(int value);
const GameCoinType GameCoinType_MIN = en_GameCoin_Sliver;
const GameCoinType GameCoinType_MAX = en_GameCoin_Gold;
const int GameCoinType_ARRAYSIZE = GameCoinType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GameCoinType_descriptor();
inline const ::std::string& GameCoinType_Name(GameCoinType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GameCoinType_descriptor(), value);
}
inline bool GameCoinType_Parse(
    const ::std::string& name, GameCoinType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GameCoinType>(
    GameCoinType_descriptor(), name, value);
}
// ===================================================================

class SCMessage : public ::google::protobuf::Message {
 public:
  SCMessage();
  virtual ~SCMessage();

  SCMessage(const SCMessage& from);

  inline SCMessage& operator=(const SCMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SCMessage& default_instance();

  void Swap(SCMessage* other);

  // implements Message ----------------------------------------------

  SCMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SCMessage& from);
  void MergeFrom(const SCMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCmd = 1;
  inline bool has_icmd() const;
  inline void clear_icmd();
  static const int kICmdFieldNumber = 1;
  inline ::google::protobuf::int32 icmd() const;
  inline void set_icmd(::google::protobuf::int32 value);

  // optional .Oss.CMD_OSS_GETSERVERLIST_SC scServerList = 2;
  inline bool has_scserverlist() const;
  inline void clear_scserverlist();
  static const int kScServerListFieldNumber = 2;
  inline const ::Oss::CMD_OSS_GETSERVERLIST_SC& scserverlist() const;
  inline ::Oss::CMD_OSS_GETSERVERLIST_SC* mutable_scserverlist();
  inline ::Oss::CMD_OSS_GETSERVERLIST_SC* release_scserverlist();
  inline void set_allocated_scserverlist(::Oss::CMD_OSS_GETSERVERLIST_SC* scserverlist);

  // optional .Oss.CMD_OSS_QUERYOVERALL_SC scQueryOverAll = 3;
  inline bool has_scqueryoverall() const;
  inline void clear_scqueryoverall();
  static const int kScQueryOverAllFieldNumber = 3;
  inline const ::Oss::CMD_OSS_QUERYOVERALL_SC& scqueryoverall() const;
  inline ::Oss::CMD_OSS_QUERYOVERALL_SC* mutable_scqueryoverall();
  inline ::Oss::CMD_OSS_QUERYOVERALL_SC* release_scqueryoverall();
  inline void set_allocated_scqueryoverall(::Oss::CMD_OSS_QUERYOVERALL_SC* scqueryoverall);

  // optional .Oss.CMD_OSS_QUERYONLINE_SC scQueryOnline = 4;
  inline bool has_scqueryonline() const;
  inline void clear_scqueryonline();
  static const int kScQueryOnlineFieldNumber = 4;
  inline const ::Oss::CMD_OSS_QUERYONLINE_SC& scqueryonline() const;
  inline ::Oss::CMD_OSS_QUERYONLINE_SC* mutable_scqueryonline();
  inline ::Oss::CMD_OSS_QUERYONLINE_SC* release_scqueryonline();
  inline void set_allocated_scqueryonline(::Oss::CMD_OSS_QUERYONLINE_SC* scqueryonline);

  // optional .Oss.CMD_OSS_QUERYRETAIN_SC scRetain = 5;
  inline bool has_scretain() const;
  inline void clear_scretain();
  static const int kScRetainFieldNumber = 5;
  inline const ::Oss::CMD_OSS_QUERYRETAIN_SC& scretain() const;
  inline ::Oss::CMD_OSS_QUERYRETAIN_SC* mutable_scretain();
  inline ::Oss::CMD_OSS_QUERYRETAIN_SC* release_scretain();
  inline void set_allocated_scretain(::Oss::CMD_OSS_QUERYRETAIN_SC* scretain);

  // optional .Oss.CMD_OSS_QUERYLOSEPLAYER_SC scLosePlayer = 6;
  inline bool has_scloseplayer() const;
  inline void clear_scloseplayer();
  static const int kScLosePlayerFieldNumber = 6;
  inline const ::Oss::CMD_OSS_QUERYLOSEPLAYER_SC& scloseplayer() const;
  inline ::Oss::CMD_OSS_QUERYLOSEPLAYER_SC* mutable_scloseplayer();
  inline ::Oss::CMD_OSS_QUERYLOSEPLAYER_SC* release_scloseplayer();
  inline void set_allocated_scloseplayer(::Oss::CMD_OSS_QUERYLOSEPLAYER_SC* scloseplayer);

  // optional .Oss.CMD_OSS_QUERYGAMECOIN_SC scGameCoin = 7;
  inline bool has_scgamecoin() const;
  inline void clear_scgamecoin();
  static const int kScGameCoinFieldNumber = 7;
  inline const ::Oss::CMD_OSS_QUERYGAMECOIN_SC& scgamecoin() const;
  inline ::Oss::CMD_OSS_QUERYGAMECOIN_SC* mutable_scgamecoin();
  inline ::Oss::CMD_OSS_QUERYGAMECOIN_SC* release_scgamecoin();
  inline void set_allocated_scgamecoin(::Oss::CMD_OSS_QUERYGAMECOIN_SC* scgamecoin);

  // optional .Oss.CMD_OSS_QUERYFIRSTCONSUME_SC scFirstConsume = 8;
  inline bool has_scfirstconsume() const;
  inline void clear_scfirstconsume();
  static const int kScFirstConsumeFieldNumber = 8;
  inline const ::Oss::CMD_OSS_QUERYFIRSTCONSUME_SC& scfirstconsume() const;
  inline ::Oss::CMD_OSS_QUERYFIRSTCONSUME_SC* mutable_scfirstconsume();
  inline ::Oss::CMD_OSS_QUERYFIRSTCONSUME_SC* release_scfirstconsume();
  inline void set_allocated_scfirstconsume(::Oss::CMD_OSS_QUERYFIRSTCONSUME_SC* scfirstconsume);

  // @@protoc_insertion_point(class_scope:Oss.SCMessage)
 private:
  inline void set_has_icmd();
  inline void clear_has_icmd();
  inline void set_has_scserverlist();
  inline void clear_has_scserverlist();
  inline void set_has_scqueryoverall();
  inline void clear_has_scqueryoverall();
  inline void set_has_scqueryonline();
  inline void clear_has_scqueryonline();
  inline void set_has_scretain();
  inline void clear_has_scretain();
  inline void set_has_scloseplayer();
  inline void clear_has_scloseplayer();
  inline void set_has_scgamecoin();
  inline void clear_has_scgamecoin();
  inline void set_has_scfirstconsume();
  inline void clear_has_scfirstconsume();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Oss::CMD_OSS_GETSERVERLIST_SC* scserverlist_;
  ::Oss::CMD_OSS_QUERYOVERALL_SC* scqueryoverall_;
  ::Oss::CMD_OSS_QUERYONLINE_SC* scqueryonline_;
  ::Oss::CMD_OSS_QUERYRETAIN_SC* scretain_;
  ::Oss::CMD_OSS_QUERYLOSEPLAYER_SC* scloseplayer_;
  ::Oss::CMD_OSS_QUERYGAMECOIN_SC* scgamecoin_;
  ::Oss::CMD_OSS_QUERYFIRSTCONSUME_SC* scfirstconsume_;
  ::google::protobuf::int32 icmd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static SCMessage* default_instance_;
};
// -------------------------------------------------------------------

class CSMessage : public ::google::protobuf::Message {
 public:
  CSMessage();
  virtual ~CSMessage();

  CSMessage(const CSMessage& from);

  inline CSMessage& operator=(const CSMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSMessage& default_instance();

  void Swap(CSMessage* other);

  // implements Message ----------------------------------------------

  CSMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CSMessage& from);
  void MergeFrom(const CSMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iCmd = 1;
  inline bool has_icmd() const;
  inline void clear_icmd();
  static const int kICmdFieldNumber = 1;
  inline ::google::protobuf::int32 icmd() const;
  inline void set_icmd(::google::protobuf::int32 value);

  // optional .Oss.CMD_OSS_QUERYOVERALL_CS csQueryOverAll = 2;
  inline bool has_csqueryoverall() const;
  inline void clear_csqueryoverall();
  static const int kCsQueryOverAllFieldNumber = 2;
  inline const ::Oss::CMD_OSS_QUERYOVERALL_CS& csqueryoverall() const;
  inline ::Oss::CMD_OSS_QUERYOVERALL_CS* mutable_csqueryoverall();
  inline ::Oss::CMD_OSS_QUERYOVERALL_CS* release_csqueryoverall();
  inline void set_allocated_csqueryoverall(::Oss::CMD_OSS_QUERYOVERALL_CS* csqueryoverall);

  // optional .Oss.CMD_OSS_QUERYONLINE_CS csQueryOnline = 3;
  inline bool has_csqueryonline() const;
  inline void clear_csqueryonline();
  static const int kCsQueryOnlineFieldNumber = 3;
  inline const ::Oss::CMD_OSS_QUERYONLINE_CS& csqueryonline() const;
  inline ::Oss::CMD_OSS_QUERYONLINE_CS* mutable_csqueryonline();
  inline ::Oss::CMD_OSS_QUERYONLINE_CS* release_csqueryonline();
  inline void set_allocated_csqueryonline(::Oss::CMD_OSS_QUERYONLINE_CS* csqueryonline);

  // optional .Oss.CMD_OSS_QUERYRETAIN_CS csQueryRetain = 4;
  inline bool has_csqueryretain() const;
  inline void clear_csqueryretain();
  static const int kCsQueryRetainFieldNumber = 4;
  inline const ::Oss::CMD_OSS_QUERYRETAIN_CS& csqueryretain() const;
  inline ::Oss::CMD_OSS_QUERYRETAIN_CS* mutable_csqueryretain();
  inline ::Oss::CMD_OSS_QUERYRETAIN_CS* release_csqueryretain();
  inline void set_allocated_csqueryretain(::Oss::CMD_OSS_QUERYRETAIN_CS* csqueryretain);

  // optional .Oss.CMD_OSS_QUERYLOSEPLAYER_CS csQueryLosePlayer = 5;
  inline bool has_csqueryloseplayer() const;
  inline void clear_csqueryloseplayer();
  static const int kCsQueryLosePlayerFieldNumber = 5;
  inline const ::Oss::CMD_OSS_QUERYLOSEPLAYER_CS& csqueryloseplayer() const;
  inline ::Oss::CMD_OSS_QUERYLOSEPLAYER_CS* mutable_csqueryloseplayer();
  inline ::Oss::CMD_OSS_QUERYLOSEPLAYER_CS* release_csqueryloseplayer();
  inline void set_allocated_csqueryloseplayer(::Oss::CMD_OSS_QUERYLOSEPLAYER_CS* csqueryloseplayer);

  // optional .Oss.CMD_OSS_QUERYGAMECOIN_CS csGameCoin = 6;
  inline bool has_csgamecoin() const;
  inline void clear_csgamecoin();
  static const int kCsGameCoinFieldNumber = 6;
  inline const ::Oss::CMD_OSS_QUERYGAMECOIN_CS& csgamecoin() const;
  inline ::Oss::CMD_OSS_QUERYGAMECOIN_CS* mutable_csgamecoin();
  inline ::Oss::CMD_OSS_QUERYGAMECOIN_CS* release_csgamecoin();
  inline void set_allocated_csgamecoin(::Oss::CMD_OSS_QUERYGAMECOIN_CS* csgamecoin);

  // optional .Oss.CMD_OSS_QUERYFIRSTCONSUME_CS csFirstConsume = 7;
  inline bool has_csfirstconsume() const;
  inline void clear_csfirstconsume();
  static const int kCsFirstConsumeFieldNumber = 7;
  inline const ::Oss::CMD_OSS_QUERYFIRSTCONSUME_CS& csfirstconsume() const;
  inline ::Oss::CMD_OSS_QUERYFIRSTCONSUME_CS* mutable_csfirstconsume();
  inline ::Oss::CMD_OSS_QUERYFIRSTCONSUME_CS* release_csfirstconsume();
  inline void set_allocated_csfirstconsume(::Oss::CMD_OSS_QUERYFIRSTCONSUME_CS* csfirstconsume);

  // @@protoc_insertion_point(class_scope:Oss.CSMessage)
 private:
  inline void set_has_icmd();
  inline void clear_has_icmd();
  inline void set_has_csqueryoverall();
  inline void clear_has_csqueryoverall();
  inline void set_has_csqueryonline();
  inline void clear_has_csqueryonline();
  inline void set_has_csqueryretain();
  inline void clear_has_csqueryretain();
  inline void set_has_csqueryloseplayer();
  inline void clear_has_csqueryloseplayer();
  inline void set_has_csgamecoin();
  inline void clear_has_csgamecoin();
  inline void set_has_csfirstconsume();
  inline void clear_has_csfirstconsume();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::Oss::CMD_OSS_QUERYOVERALL_CS* csqueryoverall_;
  ::Oss::CMD_OSS_QUERYONLINE_CS* csqueryonline_;
  ::Oss::CMD_OSS_QUERYRETAIN_CS* csqueryretain_;
  ::Oss::CMD_OSS_QUERYLOSEPLAYER_CS* csqueryloseplayer_;
  ::Oss::CMD_OSS_QUERYGAMECOIN_CS* csgamecoin_;
  ::Oss::CMD_OSS_QUERYFIRSTCONSUME_CS* csfirstconsume_;
  ::google::protobuf::int32 icmd_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static CSMessage* default_instance_;
};
// -------------------------------------------------------------------

class ServerDesc : public ::google::protobuf::Message {
 public:
  ServerDesc();
  virtual ~ServerDesc();

  ServerDesc(const ServerDesc& from);

  inline ServerDesc& operator=(const ServerDesc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerDesc& default_instance();

  void Swap(ServerDesc* other);

  // implements Message ----------------------------------------------

  ServerDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerDesc& from);
  void MergeFrom(const ServerDesc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iWorldID = 1;
  inline bool has_iworldid() const;
  inline void clear_iworldid();
  static const int kIWorldIDFieldNumber = 1;
  inline ::google::protobuf::int32 iworldid() const;
  inline void set_iworldid(::google::protobuf::int32 value);

  // required string strServerName = 2;
  inline bool has_strservername() const;
  inline void clear_strservername();
  static const int kStrServerNameFieldNumber = 2;
  inline const ::std::string& strservername() const;
  inline void set_strservername(const ::std::string& value);
  inline void set_strservername(const char* value);
  inline void set_strservername(const char* value, size_t size);
  inline ::std::string* mutable_strservername();
  inline ::std::string* release_strservername();
  inline void set_allocated_strservername(::std::string* strservername);

  // @@protoc_insertion_point(class_scope:Oss.ServerDesc)
 private:
  inline void set_has_iworldid();
  inline void clear_has_iworldid();
  inline void set_has_strservername();
  inline void clear_has_strservername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* strservername_;
  ::google::protobuf::int32 iworldid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static ServerDesc* default_instance_;
};
// -------------------------------------------------------------------

class CMD_OSS_GETSERVERLIST_SC : public ::google::protobuf::Message {
 public:
  CMD_OSS_GETSERVERLIST_SC();
  virtual ~CMD_OSS_GETSERVERLIST_SC();

  CMD_OSS_GETSERVERLIST_SC(const CMD_OSS_GETSERVERLIST_SC& from);

  inline CMD_OSS_GETSERVERLIST_SC& operator=(const CMD_OSS_GETSERVERLIST_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_OSS_GETSERVERLIST_SC& default_instance();

  void Swap(CMD_OSS_GETSERVERLIST_SC* other);

  // implements Message ----------------------------------------------

  CMD_OSS_GETSERVERLIST_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_OSS_GETSERVERLIST_SC& from);
  void MergeFrom(const CMD_OSS_GETSERVERLIST_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Oss.ServerDesc szServerList = 1;
  inline int szserverlist_size() const;
  inline void clear_szserverlist();
  static const int kSzServerListFieldNumber = 1;
  inline const ::Oss::ServerDesc& szserverlist(int index) const;
  inline ::Oss::ServerDesc* mutable_szserverlist(int index);
  inline ::Oss::ServerDesc* add_szserverlist();
  inline const ::google::protobuf::RepeatedPtrField< ::Oss::ServerDesc >&
      szserverlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::Oss::ServerDesc >*
      mutable_szserverlist();

  // @@protoc_insertion_point(class_scope:Oss.CMD_OSS_GETSERVERLIST_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Oss::ServerDesc > szserverlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static CMD_OSS_GETSERVERLIST_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_OSS_QUERYONLINE_CS : public ::google::protobuf::Message {
 public:
  CMD_OSS_QUERYONLINE_CS();
  virtual ~CMD_OSS_QUERYONLINE_CS();

  CMD_OSS_QUERYONLINE_CS(const CMD_OSS_QUERYONLINE_CS& from);

  inline CMD_OSS_QUERYONLINE_CS& operator=(const CMD_OSS_QUERYONLINE_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_OSS_QUERYONLINE_CS& default_instance();

  void Swap(CMD_OSS_QUERYONLINE_CS* other);

  // implements Message ----------------------------------------------

  CMD_OSS_QUERYONLINE_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_OSS_QUERYONLINE_CS& from);
  void MergeFrom(const CMD_OSS_QUERYONLINE_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwBeginDate = 1;
  inline bool has_dwbegindate() const;
  inline void clear_dwbegindate();
  static const int kDwBeginDateFieldNumber = 1;
  inline ::google::protobuf::int32 dwbegindate() const;
  inline void set_dwbegindate(::google::protobuf::int32 value);

  // required int32 dwEndDate = 2;
  inline bool has_dwenddate() const;
  inline void clear_dwenddate();
  static const int kDwEndDateFieldNumber = 2;
  inline ::google::protobuf::int32 dwenddate() const;
  inline void set_dwenddate(::google::protobuf::int32 value);

  // required int32 iWorldID = 3;
  inline bool has_iworldid() const;
  inline void clear_iworldid();
  static const int kIWorldIDFieldNumber = 3;
  inline ::google::protobuf::int32 iworldid() const;
  inline void set_iworldid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Oss.CMD_OSS_QUERYONLINE_CS)
 private:
  inline void set_has_dwbegindate();
  inline void clear_has_dwbegindate();
  inline void set_has_dwenddate();
  inline void clear_has_dwenddate();
  inline void set_has_iworldid();
  inline void clear_has_iworldid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwbegindate_;
  ::google::protobuf::int32 dwenddate_;
  ::google::protobuf::int32 iworldid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static CMD_OSS_QUERYONLINE_CS* default_instance_;
};
// -------------------------------------------------------------------

class OnlineOverAllItem : public ::google::protobuf::Message {
 public:
  OnlineOverAllItem();
  virtual ~OnlineOverAllItem();

  OnlineOverAllItem(const OnlineOverAllItem& from);

  inline OnlineOverAllItem& operator=(const OnlineOverAllItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnlineOverAllItem& default_instance();

  void Swap(OnlineOverAllItem* other);

  // implements Message ----------------------------------------------

  OnlineOverAllItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OnlineOverAllItem& from);
  void MergeFrom(const OnlineOverAllItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwDateTime = 1;
  inline bool has_dwdatetime() const;
  inline void clear_dwdatetime();
  static const int kDwDateTimeFieldNumber = 1;
  inline ::google::protobuf::int32 dwdatetime() const;
  inline void set_dwdatetime(::google::protobuf::int32 value);

  // required int32 iMaxOnline = 2;
  inline bool has_imaxonline() const;
  inline void clear_imaxonline();
  static const int kIMaxOnlineFieldNumber = 2;
  inline ::google::protobuf::int32 imaxonline() const;
  inline void set_imaxonline(::google::protobuf::int32 value);

  // required int32 iAvgOnline = 3;
  inline bool has_iavgonline() const;
  inline void clear_iavgonline();
  static const int kIAvgOnlineFieldNumber = 3;
  inline ::google::protobuf::int32 iavgonline() const;
  inline void set_iavgonline(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Oss.OnlineOverAllItem)
 private:
  inline void set_has_dwdatetime();
  inline void clear_has_dwdatetime();
  inline void set_has_imaxonline();
  inline void clear_has_imaxonline();
  inline void set_has_iavgonline();
  inline void clear_has_iavgonline();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwdatetime_;
  ::google::protobuf::int32 imaxonline_;
  ::google::protobuf::int32 iavgonline_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static OnlineOverAllItem* default_instance_;
};
// -------------------------------------------------------------------

class OnlineDescItem : public ::google::protobuf::Message {
 public:
  OnlineDescItem();
  virtual ~OnlineDescItem();

  OnlineDescItem(const OnlineDescItem& from);

  inline OnlineDescItem& operator=(const OnlineDescItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnlineDescItem& default_instance();

  void Swap(OnlineDescItem* other);

  // implements Message ----------------------------------------------

  OnlineDescItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OnlineDescItem& from);
  void MergeFrom(const OnlineDescItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwDateTime = 1;
  inline bool has_dwdatetime() const;
  inline void clear_dwdatetime();
  static const int kDwDateTimeFieldNumber = 1;
  inline ::google::protobuf::int32 dwdatetime() const;
  inline void set_dwdatetime(::google::protobuf::int32 value);

  // required int32 iOnlineCount = 2;
  inline bool has_ionlinecount() const;
  inline void clear_ionlinecount();
  static const int kIOnlineCountFieldNumber = 2;
  inline ::google::protobuf::int32 ionlinecount() const;
  inline void set_ionlinecount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Oss.OnlineDescItem)
 private:
  inline void set_has_dwdatetime();
  inline void clear_has_dwdatetime();
  inline void set_has_ionlinecount();
  inline void clear_has_ionlinecount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwdatetime_;
  ::google::protobuf::int32 ionlinecount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static OnlineDescItem* default_instance_;
};
// -------------------------------------------------------------------

class CMD_OSS_QUERYONLINE_SC : public ::google::protobuf::Message {
 public:
  CMD_OSS_QUERYONLINE_SC();
  virtual ~CMD_OSS_QUERYONLINE_SC();

  CMD_OSS_QUERYONLINE_SC(const CMD_OSS_QUERYONLINE_SC& from);

  inline CMD_OSS_QUERYONLINE_SC& operator=(const CMD_OSS_QUERYONLINE_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_OSS_QUERYONLINE_SC& default_instance();

  void Swap(CMD_OSS_QUERYONLINE_SC* other);

  // implements Message ----------------------------------------------

  CMD_OSS_QUERYONLINE_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_OSS_QUERYONLINE_SC& from);
  void MergeFrom(const CMD_OSS_QUERYONLINE_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Oss.OnlineOverAllItem szOnlineOverAll = 1;
  inline int szonlineoverall_size() const;
  inline void clear_szonlineoverall();
  static const int kSzOnlineOverAllFieldNumber = 1;
  inline const ::Oss::OnlineOverAllItem& szonlineoverall(int index) const;
  inline ::Oss::OnlineOverAllItem* mutable_szonlineoverall(int index);
  inline ::Oss::OnlineOverAllItem* add_szonlineoverall();
  inline const ::google::protobuf::RepeatedPtrField< ::Oss::OnlineOverAllItem >&
      szonlineoverall() const;
  inline ::google::protobuf::RepeatedPtrField< ::Oss::OnlineOverAllItem >*
      mutable_szonlineoverall();

  // repeated .Oss.OnlineDescItem szOnlineDescItem = 2;
  inline int szonlinedescitem_size() const;
  inline void clear_szonlinedescitem();
  static const int kSzOnlineDescItemFieldNumber = 2;
  inline const ::Oss::OnlineDescItem& szonlinedescitem(int index) const;
  inline ::Oss::OnlineDescItem* mutable_szonlinedescitem(int index);
  inline ::Oss::OnlineDescItem* add_szonlinedescitem();
  inline const ::google::protobuf::RepeatedPtrField< ::Oss::OnlineDescItem >&
      szonlinedescitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Oss::OnlineDescItem >*
      mutable_szonlinedescitem();

  // @@protoc_insertion_point(class_scope:Oss.CMD_OSS_QUERYONLINE_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Oss::OnlineOverAllItem > szonlineoverall_;
  ::google::protobuf::RepeatedPtrField< ::Oss::OnlineDescItem > szonlinedescitem_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static CMD_OSS_QUERYONLINE_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_OSS_QUERYOVERALL_CS : public ::google::protobuf::Message {
 public:
  CMD_OSS_QUERYOVERALL_CS();
  virtual ~CMD_OSS_QUERYOVERALL_CS();

  CMD_OSS_QUERYOVERALL_CS(const CMD_OSS_QUERYOVERALL_CS& from);

  inline CMD_OSS_QUERYOVERALL_CS& operator=(const CMD_OSS_QUERYOVERALL_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_OSS_QUERYOVERALL_CS& default_instance();

  void Swap(CMD_OSS_QUERYOVERALL_CS* other);

  // implements Message ----------------------------------------------

  CMD_OSS_QUERYOVERALL_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_OSS_QUERYOVERALL_CS& from);
  void MergeFrom(const CMD_OSS_QUERYOVERALL_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwBeginDate = 1;
  inline bool has_dwbegindate() const;
  inline void clear_dwbegindate();
  static const int kDwBeginDateFieldNumber = 1;
  inline ::google::protobuf::int32 dwbegindate() const;
  inline void set_dwbegindate(::google::protobuf::int32 value);

  // required int32 dwEndDate = 2;
  inline bool has_dwenddate() const;
  inline void clear_dwenddate();
  static const int kDwEndDateFieldNumber = 2;
  inline ::google::protobuf::int32 dwenddate() const;
  inline void set_dwenddate(::google::protobuf::int32 value);

  // required int32 iWorldID = 3;
  inline bool has_iworldid() const;
  inline void clear_iworldid();
  static const int kIWorldIDFieldNumber = 3;
  inline ::google::protobuf::int32 iworldid() const;
  inline void set_iworldid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Oss.CMD_OSS_QUERYOVERALL_CS)
 private:
  inline void set_has_dwbegindate();
  inline void clear_has_dwbegindate();
  inline void set_has_dwenddate();
  inline void clear_has_dwenddate();
  inline void set_has_iworldid();
  inline void clear_has_iworldid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwbegindate_;
  ::google::protobuf::int32 dwenddate_;
  ::google::protobuf::int32 iworldid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static CMD_OSS_QUERYOVERALL_CS* default_instance_;
};
// -------------------------------------------------------------------

class OssOverAllItem : public ::google::protobuf::Message {
 public:
  OssOverAllItem();
  virtual ~OssOverAllItem();

  OssOverAllItem(const OssOverAllItem& from);

  inline OssOverAllItem& operator=(const OssOverAllItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OssOverAllItem& default_instance();

  void Swap(OssOverAllItem* other);

  // implements Message ----------------------------------------------

  OssOverAllItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OssOverAllItem& from);
  void MergeFrom(const OssOverAllItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwDateTime = 1;
  inline bool has_dwdatetime() const;
  inline void clear_dwdatetime();
  static const int kDwDateTimeFieldNumber = 1;
  inline ::google::protobuf::int32 dwdatetime() const;
  inline void set_dwdatetime(::google::protobuf::int32 value);

  // required int32 iMoney = 2;
  inline bool has_imoney() const;
  inline void clear_imoney();
  static const int kIMoneyFieldNumber = 2;
  inline ::google::protobuf::int32 imoney() const;
  inline void set_imoney(::google::protobuf::int32 value);

  // required int32 iLoginAccount = 3;
  inline bool has_iloginaccount() const;
  inline void clear_iloginaccount();
  static const int kILoginAccountFieldNumber = 3;
  inline ::google::protobuf::int32 iloginaccount() const;
  inline void set_iloginaccount(::google::protobuf::int32 value);

  // required int32 iNewAccount = 4;
  inline bool has_inewaccount() const;
  inline void clear_inewaccount();
  static const int kINewAccountFieldNumber = 4;
  inline ::google::protobuf::int32 inewaccount() const;
  inline void set_inewaccount(::google::protobuf::int32 value);

  // required int32 iPayAccount = 5;
  inline bool has_ipayaccount() const;
  inline void clear_ipayaccount();
  static const int kIPayAccountFieldNumber = 5;
  inline ::google::protobuf::int32 ipayaccount() const;
  inline void set_ipayaccount(::google::protobuf::int32 value);

  // required int32 iNewPayAccount = 6;
  inline bool has_inewpayaccount() const;
  inline void clear_inewpayaccount();
  static const int kINewPayAccountFieldNumber = 6;
  inline ::google::protobuf::int32 inewpayaccount() const;
  inline void set_inewpayaccount(::google::protobuf::int32 value);

  // required int32 iWorldID = 7;
  inline bool has_iworldid() const;
  inline void clear_iworldid();
  static const int kIWorldIDFieldNumber = 7;
  inline ::google::protobuf::int32 iworldid() const;
  inline void set_iworldid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Oss.OssOverAllItem)
 private:
  inline void set_has_dwdatetime();
  inline void clear_has_dwdatetime();
  inline void set_has_imoney();
  inline void clear_has_imoney();
  inline void set_has_iloginaccount();
  inline void clear_has_iloginaccount();
  inline void set_has_inewaccount();
  inline void clear_has_inewaccount();
  inline void set_has_ipayaccount();
  inline void clear_has_ipayaccount();
  inline void set_has_inewpayaccount();
  inline void clear_has_inewpayaccount();
  inline void set_has_iworldid();
  inline void clear_has_iworldid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwdatetime_;
  ::google::protobuf::int32 imoney_;
  ::google::protobuf::int32 iloginaccount_;
  ::google::protobuf::int32 inewaccount_;
  ::google::protobuf::int32 ipayaccount_;
  ::google::protobuf::int32 inewpayaccount_;
  ::google::protobuf::int32 iworldid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static OssOverAllItem* default_instance_;
};
// -------------------------------------------------------------------

class CMD_OSS_QUERYOVERALL_SC : public ::google::protobuf::Message {
 public:
  CMD_OSS_QUERYOVERALL_SC();
  virtual ~CMD_OSS_QUERYOVERALL_SC();

  CMD_OSS_QUERYOVERALL_SC(const CMD_OSS_QUERYOVERALL_SC& from);

  inline CMD_OSS_QUERYOVERALL_SC& operator=(const CMD_OSS_QUERYOVERALL_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_OSS_QUERYOVERALL_SC& default_instance();

  void Swap(CMD_OSS_QUERYOVERALL_SC* other);

  // implements Message ----------------------------------------------

  CMD_OSS_QUERYOVERALL_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_OSS_QUERYOVERALL_SC& from);
  void MergeFrom(const CMD_OSS_QUERYOVERALL_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Oss.OssOverAllItem szOverAllItem = 1;
  inline int szoverallitem_size() const;
  inline void clear_szoverallitem();
  static const int kSzOverAllItemFieldNumber = 1;
  inline const ::Oss::OssOverAllItem& szoverallitem(int index) const;
  inline ::Oss::OssOverAllItem* mutable_szoverallitem(int index);
  inline ::Oss::OssOverAllItem* add_szoverallitem();
  inline const ::google::protobuf::RepeatedPtrField< ::Oss::OssOverAllItem >&
      szoverallitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::Oss::OssOverAllItem >*
      mutable_szoverallitem();

  // @@protoc_insertion_point(class_scope:Oss.CMD_OSS_QUERYOVERALL_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Oss::OssOverAllItem > szoverallitem_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static CMD_OSS_QUERYOVERALL_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_OSS_QUERYRETAIN_CS : public ::google::protobuf::Message {
 public:
  CMD_OSS_QUERYRETAIN_CS();
  virtual ~CMD_OSS_QUERYRETAIN_CS();

  CMD_OSS_QUERYRETAIN_CS(const CMD_OSS_QUERYRETAIN_CS& from);

  inline CMD_OSS_QUERYRETAIN_CS& operator=(const CMD_OSS_QUERYRETAIN_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_OSS_QUERYRETAIN_CS& default_instance();

  void Swap(CMD_OSS_QUERYRETAIN_CS* other);

  // implements Message ----------------------------------------------

  CMD_OSS_QUERYRETAIN_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_OSS_QUERYRETAIN_CS& from);
  void MergeFrom(const CMD_OSS_QUERYRETAIN_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwBeginDate = 1;
  inline bool has_dwbegindate() const;
  inline void clear_dwbegindate();
  static const int kDwBeginDateFieldNumber = 1;
  inline ::google::protobuf::int32 dwbegindate() const;
  inline void set_dwbegindate(::google::protobuf::int32 value);

  // required int32 dwEndDate = 2;
  inline bool has_dwenddate() const;
  inline void clear_dwenddate();
  static const int kDwEndDateFieldNumber = 2;
  inline ::google::protobuf::int32 dwenddate() const;
  inline void set_dwenddate(::google::protobuf::int32 value);

  // required int32 iWorldID = 3;
  inline bool has_iworldid() const;
  inline void clear_iworldid();
  static const int kIWorldIDFieldNumber = 3;
  inline ::google::protobuf::int32 iworldid() const;
  inline void set_iworldid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Oss.CMD_OSS_QUERYRETAIN_CS)
 private:
  inline void set_has_dwbegindate();
  inline void clear_has_dwbegindate();
  inline void set_has_dwenddate();
  inline void clear_has_dwenddate();
  inline void set_has_iworldid();
  inline void clear_has_iworldid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwbegindate_;
  ::google::protobuf::int32 dwenddate_;
  ::google::protobuf::int32 iworldid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static CMD_OSS_QUERYRETAIN_CS* default_instance_;
};
// -------------------------------------------------------------------

class RetainItem : public ::google::protobuf::Message {
 public:
  RetainItem();
  virtual ~RetainItem();

  RetainItem(const RetainItem& from);

  inline RetainItem& operator=(const RetainItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RetainItem& default_instance();

  void Swap(RetainItem* other);

  // implements Message ----------------------------------------------

  RetainItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RetainItem& from);
  void MergeFrom(const RetainItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwDateTime = 1;
  inline bool has_dwdatetime() const;
  inline void clear_dwdatetime();
  static const int kDwDateTimeFieldNumber = 1;
  inline ::google::protobuf::int32 dwdatetime() const;
  inline void set_dwdatetime(::google::protobuf::int32 value);

  // required int32 iWorldID = 2;
  inline bool has_iworldid() const;
  inline void clear_iworldid();
  static const int kIWorldIDFieldNumber = 2;
  inline ::google::protobuf::int32 iworldid() const;
  inline void set_iworldid(::google::protobuf::int32 value);

  // required int32 iLoginCount = 3;
  inline bool has_ilogincount() const;
  inline void clear_ilogincount();
  static const int kILoginCountFieldNumber = 3;
  inline ::google::protobuf::int32 ilogincount() const;
  inline void set_ilogincount(::google::protobuf::int32 value);

  // required int32 iNewCount = 4;
  inline bool has_inewcount() const;
  inline void clear_inewcount();
  static const int kINewCountFieldNumber = 4;
  inline ::google::protobuf::int32 inewcount() const;
  inline void set_inewcount(::google::protobuf::int32 value);

  // repeated string szRetain = 5;
  inline int szretain_size() const;
  inline void clear_szretain();
  static const int kSzRetainFieldNumber = 5;
  inline const ::std::string& szretain(int index) const;
  inline ::std::string* mutable_szretain(int index);
  inline void set_szretain(int index, const ::std::string& value);
  inline void set_szretain(int index, const char* value);
  inline void set_szretain(int index, const char* value, size_t size);
  inline ::std::string* add_szretain();
  inline void add_szretain(const ::std::string& value);
  inline void add_szretain(const char* value);
  inline void add_szretain(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& szretain() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_szretain();

  // @@protoc_insertion_point(class_scope:Oss.RetainItem)
 private:
  inline void set_has_dwdatetime();
  inline void clear_has_dwdatetime();
  inline void set_has_iworldid();
  inline void clear_has_iworldid();
  inline void set_has_ilogincount();
  inline void clear_has_ilogincount();
  inline void set_has_inewcount();
  inline void clear_has_inewcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwdatetime_;
  ::google::protobuf::int32 iworldid_;
  ::google::protobuf::int32 ilogincount_;
  ::google::protobuf::int32 inewcount_;
  ::google::protobuf::RepeatedPtrField< ::std::string> szretain_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static RetainItem* default_instance_;
};
// -------------------------------------------------------------------

class CMD_OSS_QUERYRETAIN_SC : public ::google::protobuf::Message {
 public:
  CMD_OSS_QUERYRETAIN_SC();
  virtual ~CMD_OSS_QUERYRETAIN_SC();

  CMD_OSS_QUERYRETAIN_SC(const CMD_OSS_QUERYRETAIN_SC& from);

  inline CMD_OSS_QUERYRETAIN_SC& operator=(const CMD_OSS_QUERYRETAIN_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_OSS_QUERYRETAIN_SC& default_instance();

  void Swap(CMD_OSS_QUERYRETAIN_SC* other);

  // implements Message ----------------------------------------------

  CMD_OSS_QUERYRETAIN_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_OSS_QUERYRETAIN_SC& from);
  void MergeFrom(const CMD_OSS_QUERYRETAIN_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Oss.RetainItem szRetainList = 1;
  inline int szretainlist_size() const;
  inline void clear_szretainlist();
  static const int kSzRetainListFieldNumber = 1;
  inline const ::Oss::RetainItem& szretainlist(int index) const;
  inline ::Oss::RetainItem* mutable_szretainlist(int index);
  inline ::Oss::RetainItem* add_szretainlist();
  inline const ::google::protobuf::RepeatedPtrField< ::Oss::RetainItem >&
      szretainlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::Oss::RetainItem >*
      mutable_szretainlist();

  // @@protoc_insertion_point(class_scope:Oss.CMD_OSS_QUERYRETAIN_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Oss::RetainItem > szretainlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static CMD_OSS_QUERYRETAIN_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_OSS_QUERYLOSEPLAYER_CS : public ::google::protobuf::Message {
 public:
  CMD_OSS_QUERYLOSEPLAYER_CS();
  virtual ~CMD_OSS_QUERYLOSEPLAYER_CS();

  CMD_OSS_QUERYLOSEPLAYER_CS(const CMD_OSS_QUERYLOSEPLAYER_CS& from);

  inline CMD_OSS_QUERYLOSEPLAYER_CS& operator=(const CMD_OSS_QUERYLOSEPLAYER_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_OSS_QUERYLOSEPLAYER_CS& default_instance();

  void Swap(CMD_OSS_QUERYLOSEPLAYER_CS* other);

  // implements Message ----------------------------------------------

  CMD_OSS_QUERYLOSEPLAYER_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_OSS_QUERYLOSEPLAYER_CS& from);
  void MergeFrom(const CMD_OSS_QUERYLOSEPLAYER_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwBeginDate = 1;
  inline bool has_dwbegindate() const;
  inline void clear_dwbegindate();
  static const int kDwBeginDateFieldNumber = 1;
  inline ::google::protobuf::int32 dwbegindate() const;
  inline void set_dwbegindate(::google::protobuf::int32 value);

  // required int32 dwEndDate = 2;
  inline bool has_dwenddate() const;
  inline void clear_dwenddate();
  static const int kDwEndDateFieldNumber = 2;
  inline ::google::protobuf::int32 dwenddate() const;
  inline void set_dwenddate(::google::protobuf::int32 value);

  // required int32 iWorldID = 3;
  inline bool has_iworldid() const;
  inline void clear_iworldid();
  static const int kIWorldIDFieldNumber = 3;
  inline ::google::protobuf::int32 iworldid() const;
  inline void set_iworldid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Oss.CMD_OSS_QUERYLOSEPLAYER_CS)
 private:
  inline void set_has_dwbegindate();
  inline void clear_has_dwbegindate();
  inline void set_has_dwenddate();
  inline void clear_has_dwenddate();
  inline void set_has_iworldid();
  inline void clear_has_iworldid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwbegindate_;
  ::google::protobuf::int32 dwenddate_;
  ::google::protobuf::int32 iworldid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static CMD_OSS_QUERYLOSEPLAYER_CS* default_instance_;
};
// -------------------------------------------------------------------

class LosePlayerItem : public ::google::protobuf::Message {
 public:
  LosePlayerItem();
  virtual ~LosePlayerItem();

  LosePlayerItem(const LosePlayerItem& from);

  inline LosePlayerItem& operator=(const LosePlayerItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LosePlayerItem& default_instance();

  void Swap(LosePlayerItem* other);

  // implements Message ----------------------------------------------

  LosePlayerItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LosePlayerItem& from);
  void MergeFrom(const LosePlayerItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iLevel = 1;
  inline bool has_ilevel() const;
  inline void clear_ilevel();
  static const int kILevelFieldNumber = 1;
  inline ::google::protobuf::int32 ilevel() const;
  inline void set_ilevel(::google::protobuf::int32 value);

  // required int32 iCount = 2;
  inline bool has_icount() const;
  inline void clear_icount();
  static const int kICountFieldNumber = 2;
  inline ::google::protobuf::int32 icount() const;
  inline void set_icount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Oss.LosePlayerItem)
 private:
  inline void set_has_ilevel();
  inline void clear_has_ilevel();
  inline void set_has_icount();
  inline void clear_has_icount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ilevel_;
  ::google::protobuf::int32 icount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static LosePlayerItem* default_instance_;
};
// -------------------------------------------------------------------

class CMD_OSS_QUERYLOSEPLAYER_SC : public ::google::protobuf::Message {
 public:
  CMD_OSS_QUERYLOSEPLAYER_SC();
  virtual ~CMD_OSS_QUERYLOSEPLAYER_SC();

  CMD_OSS_QUERYLOSEPLAYER_SC(const CMD_OSS_QUERYLOSEPLAYER_SC& from);

  inline CMD_OSS_QUERYLOSEPLAYER_SC& operator=(const CMD_OSS_QUERYLOSEPLAYER_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_OSS_QUERYLOSEPLAYER_SC& default_instance();

  void Swap(CMD_OSS_QUERYLOSEPLAYER_SC* other);

  // implements Message ----------------------------------------------

  CMD_OSS_QUERYLOSEPLAYER_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_OSS_QUERYLOSEPLAYER_SC& from);
  void MergeFrom(const CMD_OSS_QUERYLOSEPLAYER_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Oss.LosePlayerItem szLosePlayer = 1;
  inline int szloseplayer_size() const;
  inline void clear_szloseplayer();
  static const int kSzLosePlayerFieldNumber = 1;
  inline const ::Oss::LosePlayerItem& szloseplayer(int index) const;
  inline ::Oss::LosePlayerItem* mutable_szloseplayer(int index);
  inline ::Oss::LosePlayerItem* add_szloseplayer();
  inline const ::google::protobuf::RepeatedPtrField< ::Oss::LosePlayerItem >&
      szloseplayer() const;
  inline ::google::protobuf::RepeatedPtrField< ::Oss::LosePlayerItem >*
      mutable_szloseplayer();

  // required int32 iTotolPlayer = 2;
  inline bool has_itotolplayer() const;
  inline void clear_itotolplayer();
  static const int kITotolPlayerFieldNumber = 2;
  inline ::google::protobuf::int32 itotolplayer() const;
  inline void set_itotolplayer(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Oss.CMD_OSS_QUERYLOSEPLAYER_SC)
 private:
  inline void set_has_itotolplayer();
  inline void clear_has_itotolplayer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Oss::LosePlayerItem > szloseplayer_;
  ::google::protobuf::int32 itotolplayer_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static CMD_OSS_QUERYLOSEPLAYER_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_OSS_QUERYGAMECOIN_CS : public ::google::protobuf::Message {
 public:
  CMD_OSS_QUERYGAMECOIN_CS();
  virtual ~CMD_OSS_QUERYGAMECOIN_CS();

  CMD_OSS_QUERYGAMECOIN_CS(const CMD_OSS_QUERYGAMECOIN_CS& from);

  inline CMD_OSS_QUERYGAMECOIN_CS& operator=(const CMD_OSS_QUERYGAMECOIN_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_OSS_QUERYGAMECOIN_CS& default_instance();

  void Swap(CMD_OSS_QUERYGAMECOIN_CS* other);

  // implements Message ----------------------------------------------

  CMD_OSS_QUERYGAMECOIN_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_OSS_QUERYGAMECOIN_CS& from);
  void MergeFrom(const CMD_OSS_QUERYGAMECOIN_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwBeginDate = 1;
  inline bool has_dwbegindate() const;
  inline void clear_dwbegindate();
  static const int kDwBeginDateFieldNumber = 1;
  inline ::google::protobuf::int32 dwbegindate() const;
  inline void set_dwbegindate(::google::protobuf::int32 value);

  // required int32 dwEndDate = 2;
  inline bool has_dwenddate() const;
  inline void clear_dwenddate();
  static const int kDwEndDateFieldNumber = 2;
  inline ::google::protobuf::int32 dwenddate() const;
  inline void set_dwenddate(::google::protobuf::int32 value);

  // required int32 iWorldID = 3;
  inline bool has_iworldid() const;
  inline void clear_iworldid();
  static const int kIWorldIDFieldNumber = 3;
  inline ::google::protobuf::int32 iworldid() const;
  inline void set_iworldid(::google::protobuf::int32 value);

  // required int32 iGameCoinType = 4;
  inline bool has_igamecointype() const;
  inline void clear_igamecointype();
  static const int kIGameCoinTypeFieldNumber = 4;
  inline ::google::protobuf::int32 igamecointype() const;
  inline void set_igamecointype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Oss.CMD_OSS_QUERYGAMECOIN_CS)
 private:
  inline void set_has_dwbegindate();
  inline void clear_has_dwbegindate();
  inline void set_has_dwenddate();
  inline void clear_has_dwenddate();
  inline void set_has_iworldid();
  inline void clear_has_iworldid();
  inline void set_has_igamecointype();
  inline void clear_has_igamecointype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwbegindate_;
  ::google::protobuf::int32 dwenddate_;
  ::google::protobuf::int32 iworldid_;
  ::google::protobuf::int32 igamecointype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static CMD_OSS_QUERYGAMECOIN_CS* default_instance_;
};
// -------------------------------------------------------------------

class GameCoinItem : public ::google::protobuf::Message {
 public:
  GameCoinItem();
  virtual ~GameCoinItem();

  GameCoinItem(const GameCoinItem& from);

  inline GameCoinItem& operator=(const GameCoinItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameCoinItem& default_instance();

  void Swap(GameCoinItem* other);

  // implements Message ----------------------------------------------

  GameCoinItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameCoinItem& from);
  void MergeFrom(const GameCoinItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string iReasonStr = 1;
  inline bool has_ireasonstr() const;
  inline void clear_ireasonstr();
  static const int kIReasonStrFieldNumber = 1;
  inline const ::std::string& ireasonstr() const;
  inline void set_ireasonstr(const ::std::string& value);
  inline void set_ireasonstr(const char* value);
  inline void set_ireasonstr(const char* value, size_t size);
  inline ::std::string* mutable_ireasonstr();
  inline ::std::string* release_ireasonstr();
  inline void set_allocated_ireasonstr(::std::string* ireasonstr);

  // required int32 iGameCoinCount = 2;
  inline bool has_igamecoincount() const;
  inline void clear_igamecoincount();
  static const int kIGameCoinCountFieldNumber = 2;
  inline ::google::protobuf::int32 igamecoincount() const;
  inline void set_igamecoincount(::google::protobuf::int32 value);

  // required int32 iUseTimes = 3;
  inline bool has_iusetimes() const;
  inline void clear_iusetimes();
  static const int kIUseTimesFieldNumber = 3;
  inline ::google::protobuf::int32 iusetimes() const;
  inline void set_iusetimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Oss.GameCoinItem)
 private:
  inline void set_has_ireasonstr();
  inline void clear_has_ireasonstr();
  inline void set_has_igamecoincount();
  inline void clear_has_igamecoincount();
  inline void set_has_iusetimes();
  inline void clear_has_iusetimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* ireasonstr_;
  ::google::protobuf::int32 igamecoincount_;
  ::google::protobuf::int32 iusetimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static GameCoinItem* default_instance_;
};
// -------------------------------------------------------------------

class CMD_OSS_QUERYGAMECOIN_SC : public ::google::protobuf::Message {
 public:
  CMD_OSS_QUERYGAMECOIN_SC();
  virtual ~CMD_OSS_QUERYGAMECOIN_SC();

  CMD_OSS_QUERYGAMECOIN_SC(const CMD_OSS_QUERYGAMECOIN_SC& from);

  inline CMD_OSS_QUERYGAMECOIN_SC& operator=(const CMD_OSS_QUERYGAMECOIN_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_OSS_QUERYGAMECOIN_SC& default_instance();

  void Swap(CMD_OSS_QUERYGAMECOIN_SC* other);

  // implements Message ----------------------------------------------

  CMD_OSS_QUERYGAMECOIN_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_OSS_QUERYGAMECOIN_SC& from);
  void MergeFrom(const CMD_OSS_QUERYGAMECOIN_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iGameCoinType = 1;
  inline bool has_igamecointype() const;
  inline void clear_igamecointype();
  static const int kIGameCoinTypeFieldNumber = 1;
  inline ::google::protobuf::int32 igamecointype() const;
  inline void set_igamecointype(::google::protobuf::int32 value);

  // repeated .Oss.GameCoinItem szProduct = 2;
  inline int szproduct_size() const;
  inline void clear_szproduct();
  static const int kSzProductFieldNumber = 2;
  inline const ::Oss::GameCoinItem& szproduct(int index) const;
  inline ::Oss::GameCoinItem* mutable_szproduct(int index);
  inline ::Oss::GameCoinItem* add_szproduct();
  inline const ::google::protobuf::RepeatedPtrField< ::Oss::GameCoinItem >&
      szproduct() const;
  inline ::google::protobuf::RepeatedPtrField< ::Oss::GameCoinItem >*
      mutable_szproduct();

  // repeated .Oss.GameCoinItem szConsume = 3;
  inline int szconsume_size() const;
  inline void clear_szconsume();
  static const int kSzConsumeFieldNumber = 3;
  inline const ::Oss::GameCoinItem& szconsume(int index) const;
  inline ::Oss::GameCoinItem* mutable_szconsume(int index);
  inline ::Oss::GameCoinItem* add_szconsume();
  inline const ::google::protobuf::RepeatedPtrField< ::Oss::GameCoinItem >&
      szconsume() const;
  inline ::google::protobuf::RepeatedPtrField< ::Oss::GameCoinItem >*
      mutable_szconsume();

  // @@protoc_insertion_point(class_scope:Oss.CMD_OSS_QUERYGAMECOIN_SC)
 private:
  inline void set_has_igamecointype();
  inline void clear_has_igamecointype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Oss::GameCoinItem > szproduct_;
  ::google::protobuf::RepeatedPtrField< ::Oss::GameCoinItem > szconsume_;
  ::google::protobuf::int32 igamecointype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static CMD_OSS_QUERYGAMECOIN_SC* default_instance_;
};
// -------------------------------------------------------------------

class CMD_OSS_QUERYFIRSTCONSUME_CS : public ::google::protobuf::Message {
 public:
  CMD_OSS_QUERYFIRSTCONSUME_CS();
  virtual ~CMD_OSS_QUERYFIRSTCONSUME_CS();

  CMD_OSS_QUERYFIRSTCONSUME_CS(const CMD_OSS_QUERYFIRSTCONSUME_CS& from);

  inline CMD_OSS_QUERYFIRSTCONSUME_CS& operator=(const CMD_OSS_QUERYFIRSTCONSUME_CS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_OSS_QUERYFIRSTCONSUME_CS& default_instance();

  void Swap(CMD_OSS_QUERYFIRSTCONSUME_CS* other);

  // implements Message ----------------------------------------------

  CMD_OSS_QUERYFIRSTCONSUME_CS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_OSS_QUERYFIRSTCONSUME_CS& from);
  void MergeFrom(const CMD_OSS_QUERYFIRSTCONSUME_CS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dwBeginDate = 1;
  inline bool has_dwbegindate() const;
  inline void clear_dwbegindate();
  static const int kDwBeginDateFieldNumber = 1;
  inline ::google::protobuf::int32 dwbegindate() const;
  inline void set_dwbegindate(::google::protobuf::int32 value);

  // required int32 dwEndDate = 2;
  inline bool has_dwenddate() const;
  inline void clear_dwenddate();
  static const int kDwEndDateFieldNumber = 2;
  inline ::google::protobuf::int32 dwenddate() const;
  inline void set_dwenddate(::google::protobuf::int32 value);

  // required int32 iWorldID = 3;
  inline bool has_iworldid() const;
  inline void clear_iworldid();
  static const int kIWorldIDFieldNumber = 3;
  inline ::google::protobuf::int32 iworldid() const;
  inline void set_iworldid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Oss.CMD_OSS_QUERYFIRSTCONSUME_CS)
 private:
  inline void set_has_dwbegindate();
  inline void clear_has_dwbegindate();
  inline void set_has_dwenddate();
  inline void clear_has_dwenddate();
  inline void set_has_iworldid();
  inline void clear_has_iworldid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dwbegindate_;
  ::google::protobuf::int32 dwenddate_;
  ::google::protobuf::int32 iworldid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static CMD_OSS_QUERYFIRSTCONSUME_CS* default_instance_;
};
// -------------------------------------------------------------------

class CMD_OSS_QUERYFIRSTCONSUME_SC : public ::google::protobuf::Message {
 public:
  CMD_OSS_QUERYFIRSTCONSUME_SC();
  virtual ~CMD_OSS_QUERYFIRSTCONSUME_SC();

  CMD_OSS_QUERYFIRSTCONSUME_SC(const CMD_OSS_QUERYFIRSTCONSUME_SC& from);

  inline CMD_OSS_QUERYFIRSTCONSUME_SC& operator=(const CMD_OSS_QUERYFIRSTCONSUME_SC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMD_OSS_QUERYFIRSTCONSUME_SC& default_instance();

  void Swap(CMD_OSS_QUERYFIRSTCONSUME_SC* other);

  // implements Message ----------------------------------------------

  CMD_OSS_QUERYFIRSTCONSUME_SC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMD_OSS_QUERYFIRSTCONSUME_SC& from);
  void MergeFrom(const CMD_OSS_QUERYFIRSTCONSUME_SC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Oss.GameCoinItem szFirstConsume = 1;
  inline int szfirstconsume_size() const;
  inline void clear_szfirstconsume();
  static const int kSzFirstConsumeFieldNumber = 1;
  inline const ::Oss::GameCoinItem& szfirstconsume(int index) const;
  inline ::Oss::GameCoinItem* mutable_szfirstconsume(int index);
  inline ::Oss::GameCoinItem* add_szfirstconsume();
  inline const ::google::protobuf::RepeatedPtrField< ::Oss::GameCoinItem >&
      szfirstconsume() const;
  inline ::google::protobuf::RepeatedPtrField< ::Oss::GameCoinItem >*
      mutable_szfirstconsume();

  // @@protoc_insertion_point(class_scope:Oss.CMD_OSS_QUERYFIRSTCONSUME_SC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Oss::GameCoinItem > szfirstconsume_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Oss_2eproto();
  friend void protobuf_AssignDesc_Oss_2eproto();
  friend void protobuf_ShutdownFile_Oss_2eproto();

  void InitAsDefaultInstance();
  static CMD_OSS_QUERYFIRSTCONSUME_SC* default_instance_;
};
// ===================================================================


// ===================================================================

// SCMessage

// required int32 iCmd = 1;
inline bool SCMessage::has_icmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SCMessage::set_has_icmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SCMessage::clear_has_icmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SCMessage::clear_icmd() {
  icmd_ = 0;
  clear_has_icmd();
}
inline ::google::protobuf::int32 SCMessage::icmd() const {
  return icmd_;
}
inline void SCMessage::set_icmd(::google::protobuf::int32 value) {
  set_has_icmd();
  icmd_ = value;
}

// optional .Oss.CMD_OSS_GETSERVERLIST_SC scServerList = 2;
inline bool SCMessage::has_scserverlist() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SCMessage::set_has_scserverlist() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SCMessage::clear_has_scserverlist() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SCMessage::clear_scserverlist() {
  if (scserverlist_ != NULL) scserverlist_->::Oss::CMD_OSS_GETSERVERLIST_SC::Clear();
  clear_has_scserverlist();
}
inline const ::Oss::CMD_OSS_GETSERVERLIST_SC& SCMessage::scserverlist() const {
  return scserverlist_ != NULL ? *scserverlist_ : *default_instance_->scserverlist_;
}
inline ::Oss::CMD_OSS_GETSERVERLIST_SC* SCMessage::mutable_scserverlist() {
  set_has_scserverlist();
  if (scserverlist_ == NULL) scserverlist_ = new ::Oss::CMD_OSS_GETSERVERLIST_SC;
  return scserverlist_;
}
inline ::Oss::CMD_OSS_GETSERVERLIST_SC* SCMessage::release_scserverlist() {
  clear_has_scserverlist();
  ::Oss::CMD_OSS_GETSERVERLIST_SC* temp = scserverlist_;
  scserverlist_ = NULL;
  return temp;
}
inline void SCMessage::set_allocated_scserverlist(::Oss::CMD_OSS_GETSERVERLIST_SC* scserverlist) {
  delete scserverlist_;
  scserverlist_ = scserverlist;
  if (scserverlist) {
    set_has_scserverlist();
  } else {
    clear_has_scserverlist();
  }
}

// optional .Oss.CMD_OSS_QUERYOVERALL_SC scQueryOverAll = 3;
inline bool SCMessage::has_scqueryoverall() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SCMessage::set_has_scqueryoverall() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SCMessage::clear_has_scqueryoverall() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SCMessage::clear_scqueryoverall() {
  if (scqueryoverall_ != NULL) scqueryoverall_->::Oss::CMD_OSS_QUERYOVERALL_SC::Clear();
  clear_has_scqueryoverall();
}
inline const ::Oss::CMD_OSS_QUERYOVERALL_SC& SCMessage::scqueryoverall() const {
  return scqueryoverall_ != NULL ? *scqueryoverall_ : *default_instance_->scqueryoverall_;
}
inline ::Oss::CMD_OSS_QUERYOVERALL_SC* SCMessage::mutable_scqueryoverall() {
  set_has_scqueryoverall();
  if (scqueryoverall_ == NULL) scqueryoverall_ = new ::Oss::CMD_OSS_QUERYOVERALL_SC;
  return scqueryoverall_;
}
inline ::Oss::CMD_OSS_QUERYOVERALL_SC* SCMessage::release_scqueryoverall() {
  clear_has_scqueryoverall();
  ::Oss::CMD_OSS_QUERYOVERALL_SC* temp = scqueryoverall_;
  scqueryoverall_ = NULL;
  return temp;
}
inline void SCMessage::set_allocated_scqueryoverall(::Oss::CMD_OSS_QUERYOVERALL_SC* scqueryoverall) {
  delete scqueryoverall_;
  scqueryoverall_ = scqueryoverall;
  if (scqueryoverall) {
    set_has_scqueryoverall();
  } else {
    clear_has_scqueryoverall();
  }
}

// optional .Oss.CMD_OSS_QUERYONLINE_SC scQueryOnline = 4;
inline bool SCMessage::has_scqueryonline() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SCMessage::set_has_scqueryonline() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SCMessage::clear_has_scqueryonline() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SCMessage::clear_scqueryonline() {
  if (scqueryonline_ != NULL) scqueryonline_->::Oss::CMD_OSS_QUERYONLINE_SC::Clear();
  clear_has_scqueryonline();
}
inline const ::Oss::CMD_OSS_QUERYONLINE_SC& SCMessage::scqueryonline() const {
  return scqueryonline_ != NULL ? *scqueryonline_ : *default_instance_->scqueryonline_;
}
inline ::Oss::CMD_OSS_QUERYONLINE_SC* SCMessage::mutable_scqueryonline() {
  set_has_scqueryonline();
  if (scqueryonline_ == NULL) scqueryonline_ = new ::Oss::CMD_OSS_QUERYONLINE_SC;
  return scqueryonline_;
}
inline ::Oss::CMD_OSS_QUERYONLINE_SC* SCMessage::release_scqueryonline() {
  clear_has_scqueryonline();
  ::Oss::CMD_OSS_QUERYONLINE_SC* temp = scqueryonline_;
  scqueryonline_ = NULL;
  return temp;
}
inline void SCMessage::set_allocated_scqueryonline(::Oss::CMD_OSS_QUERYONLINE_SC* scqueryonline) {
  delete scqueryonline_;
  scqueryonline_ = scqueryonline;
  if (scqueryonline) {
    set_has_scqueryonline();
  } else {
    clear_has_scqueryonline();
  }
}

// optional .Oss.CMD_OSS_QUERYRETAIN_SC scRetain = 5;
inline bool SCMessage::has_scretain() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SCMessage::set_has_scretain() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SCMessage::clear_has_scretain() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SCMessage::clear_scretain() {
  if (scretain_ != NULL) scretain_->::Oss::CMD_OSS_QUERYRETAIN_SC::Clear();
  clear_has_scretain();
}
inline const ::Oss::CMD_OSS_QUERYRETAIN_SC& SCMessage::scretain() const {
  return scretain_ != NULL ? *scretain_ : *default_instance_->scretain_;
}
inline ::Oss::CMD_OSS_QUERYRETAIN_SC* SCMessage::mutable_scretain() {
  set_has_scretain();
  if (scretain_ == NULL) scretain_ = new ::Oss::CMD_OSS_QUERYRETAIN_SC;
  return scretain_;
}
inline ::Oss::CMD_OSS_QUERYRETAIN_SC* SCMessage::release_scretain() {
  clear_has_scretain();
  ::Oss::CMD_OSS_QUERYRETAIN_SC* temp = scretain_;
  scretain_ = NULL;
  return temp;
}
inline void SCMessage::set_allocated_scretain(::Oss::CMD_OSS_QUERYRETAIN_SC* scretain) {
  delete scretain_;
  scretain_ = scretain;
  if (scretain) {
    set_has_scretain();
  } else {
    clear_has_scretain();
  }
}

// optional .Oss.CMD_OSS_QUERYLOSEPLAYER_SC scLosePlayer = 6;
inline bool SCMessage::has_scloseplayer() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SCMessage::set_has_scloseplayer() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SCMessage::clear_has_scloseplayer() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SCMessage::clear_scloseplayer() {
  if (scloseplayer_ != NULL) scloseplayer_->::Oss::CMD_OSS_QUERYLOSEPLAYER_SC::Clear();
  clear_has_scloseplayer();
}
inline const ::Oss::CMD_OSS_QUERYLOSEPLAYER_SC& SCMessage::scloseplayer() const {
  return scloseplayer_ != NULL ? *scloseplayer_ : *default_instance_->scloseplayer_;
}
inline ::Oss::CMD_OSS_QUERYLOSEPLAYER_SC* SCMessage::mutable_scloseplayer() {
  set_has_scloseplayer();
  if (scloseplayer_ == NULL) scloseplayer_ = new ::Oss::CMD_OSS_QUERYLOSEPLAYER_SC;
  return scloseplayer_;
}
inline ::Oss::CMD_OSS_QUERYLOSEPLAYER_SC* SCMessage::release_scloseplayer() {
  clear_has_scloseplayer();
  ::Oss::CMD_OSS_QUERYLOSEPLAYER_SC* temp = scloseplayer_;
  scloseplayer_ = NULL;
  return temp;
}
inline void SCMessage::set_allocated_scloseplayer(::Oss::CMD_OSS_QUERYLOSEPLAYER_SC* scloseplayer) {
  delete scloseplayer_;
  scloseplayer_ = scloseplayer;
  if (scloseplayer) {
    set_has_scloseplayer();
  } else {
    clear_has_scloseplayer();
  }
}

// optional .Oss.CMD_OSS_QUERYGAMECOIN_SC scGameCoin = 7;
inline bool SCMessage::has_scgamecoin() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SCMessage::set_has_scgamecoin() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SCMessage::clear_has_scgamecoin() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SCMessage::clear_scgamecoin() {
  if (scgamecoin_ != NULL) scgamecoin_->::Oss::CMD_OSS_QUERYGAMECOIN_SC::Clear();
  clear_has_scgamecoin();
}
inline const ::Oss::CMD_OSS_QUERYGAMECOIN_SC& SCMessage::scgamecoin() const {
  return scgamecoin_ != NULL ? *scgamecoin_ : *default_instance_->scgamecoin_;
}
inline ::Oss::CMD_OSS_QUERYGAMECOIN_SC* SCMessage::mutable_scgamecoin() {
  set_has_scgamecoin();
  if (scgamecoin_ == NULL) scgamecoin_ = new ::Oss::CMD_OSS_QUERYGAMECOIN_SC;
  return scgamecoin_;
}
inline ::Oss::CMD_OSS_QUERYGAMECOIN_SC* SCMessage::release_scgamecoin() {
  clear_has_scgamecoin();
  ::Oss::CMD_OSS_QUERYGAMECOIN_SC* temp = scgamecoin_;
  scgamecoin_ = NULL;
  return temp;
}
inline void SCMessage::set_allocated_scgamecoin(::Oss::CMD_OSS_QUERYGAMECOIN_SC* scgamecoin) {
  delete scgamecoin_;
  scgamecoin_ = scgamecoin;
  if (scgamecoin) {
    set_has_scgamecoin();
  } else {
    clear_has_scgamecoin();
  }
}

// optional .Oss.CMD_OSS_QUERYFIRSTCONSUME_SC scFirstConsume = 8;
inline bool SCMessage::has_scfirstconsume() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SCMessage::set_has_scfirstconsume() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SCMessage::clear_has_scfirstconsume() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SCMessage::clear_scfirstconsume() {
  if (scfirstconsume_ != NULL) scfirstconsume_->::Oss::CMD_OSS_QUERYFIRSTCONSUME_SC::Clear();
  clear_has_scfirstconsume();
}
inline const ::Oss::CMD_OSS_QUERYFIRSTCONSUME_SC& SCMessage::scfirstconsume() const {
  return scfirstconsume_ != NULL ? *scfirstconsume_ : *default_instance_->scfirstconsume_;
}
inline ::Oss::CMD_OSS_QUERYFIRSTCONSUME_SC* SCMessage::mutable_scfirstconsume() {
  set_has_scfirstconsume();
  if (scfirstconsume_ == NULL) scfirstconsume_ = new ::Oss::CMD_OSS_QUERYFIRSTCONSUME_SC;
  return scfirstconsume_;
}
inline ::Oss::CMD_OSS_QUERYFIRSTCONSUME_SC* SCMessage::release_scfirstconsume() {
  clear_has_scfirstconsume();
  ::Oss::CMD_OSS_QUERYFIRSTCONSUME_SC* temp = scfirstconsume_;
  scfirstconsume_ = NULL;
  return temp;
}
inline void SCMessage::set_allocated_scfirstconsume(::Oss::CMD_OSS_QUERYFIRSTCONSUME_SC* scfirstconsume) {
  delete scfirstconsume_;
  scfirstconsume_ = scfirstconsume;
  if (scfirstconsume) {
    set_has_scfirstconsume();
  } else {
    clear_has_scfirstconsume();
  }
}

// -------------------------------------------------------------------

// CSMessage

// required int32 iCmd = 1;
inline bool CSMessage::has_icmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSMessage::set_has_icmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSMessage::clear_has_icmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSMessage::clear_icmd() {
  icmd_ = 0;
  clear_has_icmd();
}
inline ::google::protobuf::int32 CSMessage::icmd() const {
  return icmd_;
}
inline void CSMessage::set_icmd(::google::protobuf::int32 value) {
  set_has_icmd();
  icmd_ = value;
}

// optional .Oss.CMD_OSS_QUERYOVERALL_CS csQueryOverAll = 2;
inline bool CSMessage::has_csqueryoverall() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSMessage::set_has_csqueryoverall() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSMessage::clear_has_csqueryoverall() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSMessage::clear_csqueryoverall() {
  if (csqueryoverall_ != NULL) csqueryoverall_->::Oss::CMD_OSS_QUERYOVERALL_CS::Clear();
  clear_has_csqueryoverall();
}
inline const ::Oss::CMD_OSS_QUERYOVERALL_CS& CSMessage::csqueryoverall() const {
  return csqueryoverall_ != NULL ? *csqueryoverall_ : *default_instance_->csqueryoverall_;
}
inline ::Oss::CMD_OSS_QUERYOVERALL_CS* CSMessage::mutable_csqueryoverall() {
  set_has_csqueryoverall();
  if (csqueryoverall_ == NULL) csqueryoverall_ = new ::Oss::CMD_OSS_QUERYOVERALL_CS;
  return csqueryoverall_;
}
inline ::Oss::CMD_OSS_QUERYOVERALL_CS* CSMessage::release_csqueryoverall() {
  clear_has_csqueryoverall();
  ::Oss::CMD_OSS_QUERYOVERALL_CS* temp = csqueryoverall_;
  csqueryoverall_ = NULL;
  return temp;
}
inline void CSMessage::set_allocated_csqueryoverall(::Oss::CMD_OSS_QUERYOVERALL_CS* csqueryoverall) {
  delete csqueryoverall_;
  csqueryoverall_ = csqueryoverall;
  if (csqueryoverall) {
    set_has_csqueryoverall();
  } else {
    clear_has_csqueryoverall();
  }
}

// optional .Oss.CMD_OSS_QUERYONLINE_CS csQueryOnline = 3;
inline bool CSMessage::has_csqueryonline() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CSMessage::set_has_csqueryonline() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CSMessage::clear_has_csqueryonline() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CSMessage::clear_csqueryonline() {
  if (csqueryonline_ != NULL) csqueryonline_->::Oss::CMD_OSS_QUERYONLINE_CS::Clear();
  clear_has_csqueryonline();
}
inline const ::Oss::CMD_OSS_QUERYONLINE_CS& CSMessage::csqueryonline() const {
  return csqueryonline_ != NULL ? *csqueryonline_ : *default_instance_->csqueryonline_;
}
inline ::Oss::CMD_OSS_QUERYONLINE_CS* CSMessage::mutable_csqueryonline() {
  set_has_csqueryonline();
  if (csqueryonline_ == NULL) csqueryonline_ = new ::Oss::CMD_OSS_QUERYONLINE_CS;
  return csqueryonline_;
}
inline ::Oss::CMD_OSS_QUERYONLINE_CS* CSMessage::release_csqueryonline() {
  clear_has_csqueryonline();
  ::Oss::CMD_OSS_QUERYONLINE_CS* temp = csqueryonline_;
  csqueryonline_ = NULL;
  return temp;
}
inline void CSMessage::set_allocated_csqueryonline(::Oss::CMD_OSS_QUERYONLINE_CS* csqueryonline) {
  delete csqueryonline_;
  csqueryonline_ = csqueryonline;
  if (csqueryonline) {
    set_has_csqueryonline();
  } else {
    clear_has_csqueryonline();
  }
}

// optional .Oss.CMD_OSS_QUERYRETAIN_CS csQueryRetain = 4;
inline bool CSMessage::has_csqueryretain() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CSMessage::set_has_csqueryretain() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CSMessage::clear_has_csqueryretain() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CSMessage::clear_csqueryretain() {
  if (csqueryretain_ != NULL) csqueryretain_->::Oss::CMD_OSS_QUERYRETAIN_CS::Clear();
  clear_has_csqueryretain();
}
inline const ::Oss::CMD_OSS_QUERYRETAIN_CS& CSMessage::csqueryretain() const {
  return csqueryretain_ != NULL ? *csqueryretain_ : *default_instance_->csqueryretain_;
}
inline ::Oss::CMD_OSS_QUERYRETAIN_CS* CSMessage::mutable_csqueryretain() {
  set_has_csqueryretain();
  if (csqueryretain_ == NULL) csqueryretain_ = new ::Oss::CMD_OSS_QUERYRETAIN_CS;
  return csqueryretain_;
}
inline ::Oss::CMD_OSS_QUERYRETAIN_CS* CSMessage::release_csqueryretain() {
  clear_has_csqueryretain();
  ::Oss::CMD_OSS_QUERYRETAIN_CS* temp = csqueryretain_;
  csqueryretain_ = NULL;
  return temp;
}
inline void CSMessage::set_allocated_csqueryretain(::Oss::CMD_OSS_QUERYRETAIN_CS* csqueryretain) {
  delete csqueryretain_;
  csqueryretain_ = csqueryretain;
  if (csqueryretain) {
    set_has_csqueryretain();
  } else {
    clear_has_csqueryretain();
  }
}

// optional .Oss.CMD_OSS_QUERYLOSEPLAYER_CS csQueryLosePlayer = 5;
inline bool CSMessage::has_csqueryloseplayer() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CSMessage::set_has_csqueryloseplayer() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CSMessage::clear_has_csqueryloseplayer() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CSMessage::clear_csqueryloseplayer() {
  if (csqueryloseplayer_ != NULL) csqueryloseplayer_->::Oss::CMD_OSS_QUERYLOSEPLAYER_CS::Clear();
  clear_has_csqueryloseplayer();
}
inline const ::Oss::CMD_OSS_QUERYLOSEPLAYER_CS& CSMessage::csqueryloseplayer() const {
  return csqueryloseplayer_ != NULL ? *csqueryloseplayer_ : *default_instance_->csqueryloseplayer_;
}
inline ::Oss::CMD_OSS_QUERYLOSEPLAYER_CS* CSMessage::mutable_csqueryloseplayer() {
  set_has_csqueryloseplayer();
  if (csqueryloseplayer_ == NULL) csqueryloseplayer_ = new ::Oss::CMD_OSS_QUERYLOSEPLAYER_CS;
  return csqueryloseplayer_;
}
inline ::Oss::CMD_OSS_QUERYLOSEPLAYER_CS* CSMessage::release_csqueryloseplayer() {
  clear_has_csqueryloseplayer();
  ::Oss::CMD_OSS_QUERYLOSEPLAYER_CS* temp = csqueryloseplayer_;
  csqueryloseplayer_ = NULL;
  return temp;
}
inline void CSMessage::set_allocated_csqueryloseplayer(::Oss::CMD_OSS_QUERYLOSEPLAYER_CS* csqueryloseplayer) {
  delete csqueryloseplayer_;
  csqueryloseplayer_ = csqueryloseplayer;
  if (csqueryloseplayer) {
    set_has_csqueryloseplayer();
  } else {
    clear_has_csqueryloseplayer();
  }
}

// optional .Oss.CMD_OSS_QUERYGAMECOIN_CS csGameCoin = 6;
inline bool CSMessage::has_csgamecoin() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CSMessage::set_has_csgamecoin() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CSMessage::clear_has_csgamecoin() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CSMessage::clear_csgamecoin() {
  if (csgamecoin_ != NULL) csgamecoin_->::Oss::CMD_OSS_QUERYGAMECOIN_CS::Clear();
  clear_has_csgamecoin();
}
inline const ::Oss::CMD_OSS_QUERYGAMECOIN_CS& CSMessage::csgamecoin() const {
  return csgamecoin_ != NULL ? *csgamecoin_ : *default_instance_->csgamecoin_;
}
inline ::Oss::CMD_OSS_QUERYGAMECOIN_CS* CSMessage::mutable_csgamecoin() {
  set_has_csgamecoin();
  if (csgamecoin_ == NULL) csgamecoin_ = new ::Oss::CMD_OSS_QUERYGAMECOIN_CS;
  return csgamecoin_;
}
inline ::Oss::CMD_OSS_QUERYGAMECOIN_CS* CSMessage::release_csgamecoin() {
  clear_has_csgamecoin();
  ::Oss::CMD_OSS_QUERYGAMECOIN_CS* temp = csgamecoin_;
  csgamecoin_ = NULL;
  return temp;
}
inline void CSMessage::set_allocated_csgamecoin(::Oss::CMD_OSS_QUERYGAMECOIN_CS* csgamecoin) {
  delete csgamecoin_;
  csgamecoin_ = csgamecoin;
  if (csgamecoin) {
    set_has_csgamecoin();
  } else {
    clear_has_csgamecoin();
  }
}

// optional .Oss.CMD_OSS_QUERYFIRSTCONSUME_CS csFirstConsume = 7;
inline bool CSMessage::has_csfirstconsume() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CSMessage::set_has_csfirstconsume() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CSMessage::clear_has_csfirstconsume() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CSMessage::clear_csfirstconsume() {
  if (csfirstconsume_ != NULL) csfirstconsume_->::Oss::CMD_OSS_QUERYFIRSTCONSUME_CS::Clear();
  clear_has_csfirstconsume();
}
inline const ::Oss::CMD_OSS_QUERYFIRSTCONSUME_CS& CSMessage::csfirstconsume() const {
  return csfirstconsume_ != NULL ? *csfirstconsume_ : *default_instance_->csfirstconsume_;
}
inline ::Oss::CMD_OSS_QUERYFIRSTCONSUME_CS* CSMessage::mutable_csfirstconsume() {
  set_has_csfirstconsume();
  if (csfirstconsume_ == NULL) csfirstconsume_ = new ::Oss::CMD_OSS_QUERYFIRSTCONSUME_CS;
  return csfirstconsume_;
}
inline ::Oss::CMD_OSS_QUERYFIRSTCONSUME_CS* CSMessage::release_csfirstconsume() {
  clear_has_csfirstconsume();
  ::Oss::CMD_OSS_QUERYFIRSTCONSUME_CS* temp = csfirstconsume_;
  csfirstconsume_ = NULL;
  return temp;
}
inline void CSMessage::set_allocated_csfirstconsume(::Oss::CMD_OSS_QUERYFIRSTCONSUME_CS* csfirstconsume) {
  delete csfirstconsume_;
  csfirstconsume_ = csfirstconsume;
  if (csfirstconsume) {
    set_has_csfirstconsume();
  } else {
    clear_has_csfirstconsume();
  }
}

// -------------------------------------------------------------------

// ServerDesc

// required int32 iWorldID = 1;
inline bool ServerDesc::has_iworldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerDesc::set_has_iworldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerDesc::clear_has_iworldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerDesc::clear_iworldid() {
  iworldid_ = 0;
  clear_has_iworldid();
}
inline ::google::protobuf::int32 ServerDesc::iworldid() const {
  return iworldid_;
}
inline void ServerDesc::set_iworldid(::google::protobuf::int32 value) {
  set_has_iworldid();
  iworldid_ = value;
}

// required string strServerName = 2;
inline bool ServerDesc::has_strservername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerDesc::set_has_strservername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerDesc::clear_has_strservername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerDesc::clear_strservername() {
  if (strservername_ != &::google::protobuf::internal::kEmptyString) {
    strservername_->clear();
  }
  clear_has_strservername();
}
inline const ::std::string& ServerDesc::strservername() const {
  return *strservername_;
}
inline void ServerDesc::set_strservername(const ::std::string& value) {
  set_has_strservername();
  if (strservername_ == &::google::protobuf::internal::kEmptyString) {
    strservername_ = new ::std::string;
  }
  strservername_->assign(value);
}
inline void ServerDesc::set_strservername(const char* value) {
  set_has_strservername();
  if (strservername_ == &::google::protobuf::internal::kEmptyString) {
    strservername_ = new ::std::string;
  }
  strservername_->assign(value);
}
inline void ServerDesc::set_strservername(const char* value, size_t size) {
  set_has_strservername();
  if (strservername_ == &::google::protobuf::internal::kEmptyString) {
    strservername_ = new ::std::string;
  }
  strservername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ServerDesc::mutable_strservername() {
  set_has_strservername();
  if (strservername_ == &::google::protobuf::internal::kEmptyString) {
    strservername_ = new ::std::string;
  }
  return strservername_;
}
inline ::std::string* ServerDesc::release_strservername() {
  clear_has_strservername();
  if (strservername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strservername_;
    strservername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ServerDesc::set_allocated_strservername(::std::string* strservername) {
  if (strservername_ != &::google::protobuf::internal::kEmptyString) {
    delete strservername_;
  }
  if (strservername) {
    set_has_strservername();
    strservername_ = strservername;
  } else {
    clear_has_strservername();
    strservername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMD_OSS_GETSERVERLIST_SC

// repeated .Oss.ServerDesc szServerList = 1;
inline int CMD_OSS_GETSERVERLIST_SC::szserverlist_size() const {
  return szserverlist_.size();
}
inline void CMD_OSS_GETSERVERLIST_SC::clear_szserverlist() {
  szserverlist_.Clear();
}
inline const ::Oss::ServerDesc& CMD_OSS_GETSERVERLIST_SC::szserverlist(int index) const {
  return szserverlist_.Get(index);
}
inline ::Oss::ServerDesc* CMD_OSS_GETSERVERLIST_SC::mutable_szserverlist(int index) {
  return szserverlist_.Mutable(index);
}
inline ::Oss::ServerDesc* CMD_OSS_GETSERVERLIST_SC::add_szserverlist() {
  return szserverlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Oss::ServerDesc >&
CMD_OSS_GETSERVERLIST_SC::szserverlist() const {
  return szserverlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::Oss::ServerDesc >*
CMD_OSS_GETSERVERLIST_SC::mutable_szserverlist() {
  return &szserverlist_;
}

// -------------------------------------------------------------------

// CMD_OSS_QUERYONLINE_CS

// required int32 dwBeginDate = 1;
inline bool CMD_OSS_QUERYONLINE_CS::has_dwbegindate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_OSS_QUERYONLINE_CS::set_has_dwbegindate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_OSS_QUERYONLINE_CS::clear_has_dwbegindate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_OSS_QUERYONLINE_CS::clear_dwbegindate() {
  dwbegindate_ = 0;
  clear_has_dwbegindate();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYONLINE_CS::dwbegindate() const {
  return dwbegindate_;
}
inline void CMD_OSS_QUERYONLINE_CS::set_dwbegindate(::google::protobuf::int32 value) {
  set_has_dwbegindate();
  dwbegindate_ = value;
}

// required int32 dwEndDate = 2;
inline bool CMD_OSS_QUERYONLINE_CS::has_dwenddate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_OSS_QUERYONLINE_CS::set_has_dwenddate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_OSS_QUERYONLINE_CS::clear_has_dwenddate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_OSS_QUERYONLINE_CS::clear_dwenddate() {
  dwenddate_ = 0;
  clear_has_dwenddate();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYONLINE_CS::dwenddate() const {
  return dwenddate_;
}
inline void CMD_OSS_QUERYONLINE_CS::set_dwenddate(::google::protobuf::int32 value) {
  set_has_dwenddate();
  dwenddate_ = value;
}

// required int32 iWorldID = 3;
inline bool CMD_OSS_QUERYONLINE_CS::has_iworldid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_OSS_QUERYONLINE_CS::set_has_iworldid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_OSS_QUERYONLINE_CS::clear_has_iworldid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_OSS_QUERYONLINE_CS::clear_iworldid() {
  iworldid_ = 0;
  clear_has_iworldid();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYONLINE_CS::iworldid() const {
  return iworldid_;
}
inline void CMD_OSS_QUERYONLINE_CS::set_iworldid(::google::protobuf::int32 value) {
  set_has_iworldid();
  iworldid_ = value;
}

// -------------------------------------------------------------------

// OnlineOverAllItem

// required int32 dwDateTime = 1;
inline bool OnlineOverAllItem::has_dwdatetime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnlineOverAllItem::set_has_dwdatetime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnlineOverAllItem::clear_has_dwdatetime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnlineOverAllItem::clear_dwdatetime() {
  dwdatetime_ = 0;
  clear_has_dwdatetime();
}
inline ::google::protobuf::int32 OnlineOverAllItem::dwdatetime() const {
  return dwdatetime_;
}
inline void OnlineOverAllItem::set_dwdatetime(::google::protobuf::int32 value) {
  set_has_dwdatetime();
  dwdatetime_ = value;
}

// required int32 iMaxOnline = 2;
inline bool OnlineOverAllItem::has_imaxonline() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OnlineOverAllItem::set_has_imaxonline() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OnlineOverAllItem::clear_has_imaxonline() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OnlineOverAllItem::clear_imaxonline() {
  imaxonline_ = 0;
  clear_has_imaxonline();
}
inline ::google::protobuf::int32 OnlineOverAllItem::imaxonline() const {
  return imaxonline_;
}
inline void OnlineOverAllItem::set_imaxonline(::google::protobuf::int32 value) {
  set_has_imaxonline();
  imaxonline_ = value;
}

// required int32 iAvgOnline = 3;
inline bool OnlineOverAllItem::has_iavgonline() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OnlineOverAllItem::set_has_iavgonline() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OnlineOverAllItem::clear_has_iavgonline() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OnlineOverAllItem::clear_iavgonline() {
  iavgonline_ = 0;
  clear_has_iavgonline();
}
inline ::google::protobuf::int32 OnlineOverAllItem::iavgonline() const {
  return iavgonline_;
}
inline void OnlineOverAllItem::set_iavgonline(::google::protobuf::int32 value) {
  set_has_iavgonline();
  iavgonline_ = value;
}

// -------------------------------------------------------------------

// OnlineDescItem

// required int32 dwDateTime = 1;
inline bool OnlineDescItem::has_dwdatetime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnlineDescItem::set_has_dwdatetime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnlineDescItem::clear_has_dwdatetime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnlineDescItem::clear_dwdatetime() {
  dwdatetime_ = 0;
  clear_has_dwdatetime();
}
inline ::google::protobuf::int32 OnlineDescItem::dwdatetime() const {
  return dwdatetime_;
}
inline void OnlineDescItem::set_dwdatetime(::google::protobuf::int32 value) {
  set_has_dwdatetime();
  dwdatetime_ = value;
}

// required int32 iOnlineCount = 2;
inline bool OnlineDescItem::has_ionlinecount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OnlineDescItem::set_has_ionlinecount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OnlineDescItem::clear_has_ionlinecount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OnlineDescItem::clear_ionlinecount() {
  ionlinecount_ = 0;
  clear_has_ionlinecount();
}
inline ::google::protobuf::int32 OnlineDescItem::ionlinecount() const {
  return ionlinecount_;
}
inline void OnlineDescItem::set_ionlinecount(::google::protobuf::int32 value) {
  set_has_ionlinecount();
  ionlinecount_ = value;
}

// -------------------------------------------------------------------

// CMD_OSS_QUERYONLINE_SC

// repeated .Oss.OnlineOverAllItem szOnlineOverAll = 1;
inline int CMD_OSS_QUERYONLINE_SC::szonlineoverall_size() const {
  return szonlineoverall_.size();
}
inline void CMD_OSS_QUERYONLINE_SC::clear_szonlineoverall() {
  szonlineoverall_.Clear();
}
inline const ::Oss::OnlineOverAllItem& CMD_OSS_QUERYONLINE_SC::szonlineoverall(int index) const {
  return szonlineoverall_.Get(index);
}
inline ::Oss::OnlineOverAllItem* CMD_OSS_QUERYONLINE_SC::mutable_szonlineoverall(int index) {
  return szonlineoverall_.Mutable(index);
}
inline ::Oss::OnlineOverAllItem* CMD_OSS_QUERYONLINE_SC::add_szonlineoverall() {
  return szonlineoverall_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Oss::OnlineOverAllItem >&
CMD_OSS_QUERYONLINE_SC::szonlineoverall() const {
  return szonlineoverall_;
}
inline ::google::protobuf::RepeatedPtrField< ::Oss::OnlineOverAllItem >*
CMD_OSS_QUERYONLINE_SC::mutable_szonlineoverall() {
  return &szonlineoverall_;
}

// repeated .Oss.OnlineDescItem szOnlineDescItem = 2;
inline int CMD_OSS_QUERYONLINE_SC::szonlinedescitem_size() const {
  return szonlinedescitem_.size();
}
inline void CMD_OSS_QUERYONLINE_SC::clear_szonlinedescitem() {
  szonlinedescitem_.Clear();
}
inline const ::Oss::OnlineDescItem& CMD_OSS_QUERYONLINE_SC::szonlinedescitem(int index) const {
  return szonlinedescitem_.Get(index);
}
inline ::Oss::OnlineDescItem* CMD_OSS_QUERYONLINE_SC::mutable_szonlinedescitem(int index) {
  return szonlinedescitem_.Mutable(index);
}
inline ::Oss::OnlineDescItem* CMD_OSS_QUERYONLINE_SC::add_szonlinedescitem() {
  return szonlinedescitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Oss::OnlineDescItem >&
CMD_OSS_QUERYONLINE_SC::szonlinedescitem() const {
  return szonlinedescitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Oss::OnlineDescItem >*
CMD_OSS_QUERYONLINE_SC::mutable_szonlinedescitem() {
  return &szonlinedescitem_;
}

// -------------------------------------------------------------------

// CMD_OSS_QUERYOVERALL_CS

// required int32 dwBeginDate = 1;
inline bool CMD_OSS_QUERYOVERALL_CS::has_dwbegindate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_OSS_QUERYOVERALL_CS::set_has_dwbegindate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_OSS_QUERYOVERALL_CS::clear_has_dwbegindate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_OSS_QUERYOVERALL_CS::clear_dwbegindate() {
  dwbegindate_ = 0;
  clear_has_dwbegindate();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYOVERALL_CS::dwbegindate() const {
  return dwbegindate_;
}
inline void CMD_OSS_QUERYOVERALL_CS::set_dwbegindate(::google::protobuf::int32 value) {
  set_has_dwbegindate();
  dwbegindate_ = value;
}

// required int32 dwEndDate = 2;
inline bool CMD_OSS_QUERYOVERALL_CS::has_dwenddate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_OSS_QUERYOVERALL_CS::set_has_dwenddate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_OSS_QUERYOVERALL_CS::clear_has_dwenddate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_OSS_QUERYOVERALL_CS::clear_dwenddate() {
  dwenddate_ = 0;
  clear_has_dwenddate();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYOVERALL_CS::dwenddate() const {
  return dwenddate_;
}
inline void CMD_OSS_QUERYOVERALL_CS::set_dwenddate(::google::protobuf::int32 value) {
  set_has_dwenddate();
  dwenddate_ = value;
}

// required int32 iWorldID = 3;
inline bool CMD_OSS_QUERYOVERALL_CS::has_iworldid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_OSS_QUERYOVERALL_CS::set_has_iworldid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_OSS_QUERYOVERALL_CS::clear_has_iworldid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_OSS_QUERYOVERALL_CS::clear_iworldid() {
  iworldid_ = 0;
  clear_has_iworldid();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYOVERALL_CS::iworldid() const {
  return iworldid_;
}
inline void CMD_OSS_QUERYOVERALL_CS::set_iworldid(::google::protobuf::int32 value) {
  set_has_iworldid();
  iworldid_ = value;
}

// -------------------------------------------------------------------

// OssOverAllItem

// required int32 dwDateTime = 1;
inline bool OssOverAllItem::has_dwdatetime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OssOverAllItem::set_has_dwdatetime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OssOverAllItem::clear_has_dwdatetime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OssOverAllItem::clear_dwdatetime() {
  dwdatetime_ = 0;
  clear_has_dwdatetime();
}
inline ::google::protobuf::int32 OssOverAllItem::dwdatetime() const {
  return dwdatetime_;
}
inline void OssOverAllItem::set_dwdatetime(::google::protobuf::int32 value) {
  set_has_dwdatetime();
  dwdatetime_ = value;
}

// required int32 iMoney = 2;
inline bool OssOverAllItem::has_imoney() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OssOverAllItem::set_has_imoney() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OssOverAllItem::clear_has_imoney() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OssOverAllItem::clear_imoney() {
  imoney_ = 0;
  clear_has_imoney();
}
inline ::google::protobuf::int32 OssOverAllItem::imoney() const {
  return imoney_;
}
inline void OssOverAllItem::set_imoney(::google::protobuf::int32 value) {
  set_has_imoney();
  imoney_ = value;
}

// required int32 iLoginAccount = 3;
inline bool OssOverAllItem::has_iloginaccount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OssOverAllItem::set_has_iloginaccount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OssOverAllItem::clear_has_iloginaccount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OssOverAllItem::clear_iloginaccount() {
  iloginaccount_ = 0;
  clear_has_iloginaccount();
}
inline ::google::protobuf::int32 OssOverAllItem::iloginaccount() const {
  return iloginaccount_;
}
inline void OssOverAllItem::set_iloginaccount(::google::protobuf::int32 value) {
  set_has_iloginaccount();
  iloginaccount_ = value;
}

// required int32 iNewAccount = 4;
inline bool OssOverAllItem::has_inewaccount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OssOverAllItem::set_has_inewaccount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OssOverAllItem::clear_has_inewaccount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OssOverAllItem::clear_inewaccount() {
  inewaccount_ = 0;
  clear_has_inewaccount();
}
inline ::google::protobuf::int32 OssOverAllItem::inewaccount() const {
  return inewaccount_;
}
inline void OssOverAllItem::set_inewaccount(::google::protobuf::int32 value) {
  set_has_inewaccount();
  inewaccount_ = value;
}

// required int32 iPayAccount = 5;
inline bool OssOverAllItem::has_ipayaccount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OssOverAllItem::set_has_ipayaccount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OssOverAllItem::clear_has_ipayaccount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OssOverAllItem::clear_ipayaccount() {
  ipayaccount_ = 0;
  clear_has_ipayaccount();
}
inline ::google::protobuf::int32 OssOverAllItem::ipayaccount() const {
  return ipayaccount_;
}
inline void OssOverAllItem::set_ipayaccount(::google::protobuf::int32 value) {
  set_has_ipayaccount();
  ipayaccount_ = value;
}

// required int32 iNewPayAccount = 6;
inline bool OssOverAllItem::has_inewpayaccount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OssOverAllItem::set_has_inewpayaccount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OssOverAllItem::clear_has_inewpayaccount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OssOverAllItem::clear_inewpayaccount() {
  inewpayaccount_ = 0;
  clear_has_inewpayaccount();
}
inline ::google::protobuf::int32 OssOverAllItem::inewpayaccount() const {
  return inewpayaccount_;
}
inline void OssOverAllItem::set_inewpayaccount(::google::protobuf::int32 value) {
  set_has_inewpayaccount();
  inewpayaccount_ = value;
}

// required int32 iWorldID = 7;
inline bool OssOverAllItem::has_iworldid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OssOverAllItem::set_has_iworldid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OssOverAllItem::clear_has_iworldid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OssOverAllItem::clear_iworldid() {
  iworldid_ = 0;
  clear_has_iworldid();
}
inline ::google::protobuf::int32 OssOverAllItem::iworldid() const {
  return iworldid_;
}
inline void OssOverAllItem::set_iworldid(::google::protobuf::int32 value) {
  set_has_iworldid();
  iworldid_ = value;
}

// -------------------------------------------------------------------

// CMD_OSS_QUERYOVERALL_SC

// repeated .Oss.OssOverAllItem szOverAllItem = 1;
inline int CMD_OSS_QUERYOVERALL_SC::szoverallitem_size() const {
  return szoverallitem_.size();
}
inline void CMD_OSS_QUERYOVERALL_SC::clear_szoverallitem() {
  szoverallitem_.Clear();
}
inline const ::Oss::OssOverAllItem& CMD_OSS_QUERYOVERALL_SC::szoverallitem(int index) const {
  return szoverallitem_.Get(index);
}
inline ::Oss::OssOverAllItem* CMD_OSS_QUERYOVERALL_SC::mutable_szoverallitem(int index) {
  return szoverallitem_.Mutable(index);
}
inline ::Oss::OssOverAllItem* CMD_OSS_QUERYOVERALL_SC::add_szoverallitem() {
  return szoverallitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Oss::OssOverAllItem >&
CMD_OSS_QUERYOVERALL_SC::szoverallitem() const {
  return szoverallitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::Oss::OssOverAllItem >*
CMD_OSS_QUERYOVERALL_SC::mutable_szoverallitem() {
  return &szoverallitem_;
}

// -------------------------------------------------------------------

// CMD_OSS_QUERYRETAIN_CS

// required int32 dwBeginDate = 1;
inline bool CMD_OSS_QUERYRETAIN_CS::has_dwbegindate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_OSS_QUERYRETAIN_CS::set_has_dwbegindate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_OSS_QUERYRETAIN_CS::clear_has_dwbegindate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_OSS_QUERYRETAIN_CS::clear_dwbegindate() {
  dwbegindate_ = 0;
  clear_has_dwbegindate();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYRETAIN_CS::dwbegindate() const {
  return dwbegindate_;
}
inline void CMD_OSS_QUERYRETAIN_CS::set_dwbegindate(::google::protobuf::int32 value) {
  set_has_dwbegindate();
  dwbegindate_ = value;
}

// required int32 dwEndDate = 2;
inline bool CMD_OSS_QUERYRETAIN_CS::has_dwenddate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_OSS_QUERYRETAIN_CS::set_has_dwenddate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_OSS_QUERYRETAIN_CS::clear_has_dwenddate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_OSS_QUERYRETAIN_CS::clear_dwenddate() {
  dwenddate_ = 0;
  clear_has_dwenddate();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYRETAIN_CS::dwenddate() const {
  return dwenddate_;
}
inline void CMD_OSS_QUERYRETAIN_CS::set_dwenddate(::google::protobuf::int32 value) {
  set_has_dwenddate();
  dwenddate_ = value;
}

// required int32 iWorldID = 3;
inline bool CMD_OSS_QUERYRETAIN_CS::has_iworldid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_OSS_QUERYRETAIN_CS::set_has_iworldid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_OSS_QUERYRETAIN_CS::clear_has_iworldid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_OSS_QUERYRETAIN_CS::clear_iworldid() {
  iworldid_ = 0;
  clear_has_iworldid();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYRETAIN_CS::iworldid() const {
  return iworldid_;
}
inline void CMD_OSS_QUERYRETAIN_CS::set_iworldid(::google::protobuf::int32 value) {
  set_has_iworldid();
  iworldid_ = value;
}

// -------------------------------------------------------------------

// RetainItem

// required int32 dwDateTime = 1;
inline bool RetainItem::has_dwdatetime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RetainItem::set_has_dwdatetime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RetainItem::clear_has_dwdatetime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RetainItem::clear_dwdatetime() {
  dwdatetime_ = 0;
  clear_has_dwdatetime();
}
inline ::google::protobuf::int32 RetainItem::dwdatetime() const {
  return dwdatetime_;
}
inline void RetainItem::set_dwdatetime(::google::protobuf::int32 value) {
  set_has_dwdatetime();
  dwdatetime_ = value;
}

// required int32 iWorldID = 2;
inline bool RetainItem::has_iworldid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RetainItem::set_has_iworldid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RetainItem::clear_has_iworldid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RetainItem::clear_iworldid() {
  iworldid_ = 0;
  clear_has_iworldid();
}
inline ::google::protobuf::int32 RetainItem::iworldid() const {
  return iworldid_;
}
inline void RetainItem::set_iworldid(::google::protobuf::int32 value) {
  set_has_iworldid();
  iworldid_ = value;
}

// required int32 iLoginCount = 3;
inline bool RetainItem::has_ilogincount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RetainItem::set_has_ilogincount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RetainItem::clear_has_ilogincount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RetainItem::clear_ilogincount() {
  ilogincount_ = 0;
  clear_has_ilogincount();
}
inline ::google::protobuf::int32 RetainItem::ilogincount() const {
  return ilogincount_;
}
inline void RetainItem::set_ilogincount(::google::protobuf::int32 value) {
  set_has_ilogincount();
  ilogincount_ = value;
}

// required int32 iNewCount = 4;
inline bool RetainItem::has_inewcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RetainItem::set_has_inewcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RetainItem::clear_has_inewcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RetainItem::clear_inewcount() {
  inewcount_ = 0;
  clear_has_inewcount();
}
inline ::google::protobuf::int32 RetainItem::inewcount() const {
  return inewcount_;
}
inline void RetainItem::set_inewcount(::google::protobuf::int32 value) {
  set_has_inewcount();
  inewcount_ = value;
}

// repeated string szRetain = 5;
inline int RetainItem::szretain_size() const {
  return szretain_.size();
}
inline void RetainItem::clear_szretain() {
  szretain_.Clear();
}
inline const ::std::string& RetainItem::szretain(int index) const {
  return szretain_.Get(index);
}
inline ::std::string* RetainItem::mutable_szretain(int index) {
  return szretain_.Mutable(index);
}
inline void RetainItem::set_szretain(int index, const ::std::string& value) {
  szretain_.Mutable(index)->assign(value);
}
inline void RetainItem::set_szretain(int index, const char* value) {
  szretain_.Mutable(index)->assign(value);
}
inline void RetainItem::set_szretain(int index, const char* value, size_t size) {
  szretain_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RetainItem::add_szretain() {
  return szretain_.Add();
}
inline void RetainItem::add_szretain(const ::std::string& value) {
  szretain_.Add()->assign(value);
}
inline void RetainItem::add_szretain(const char* value) {
  szretain_.Add()->assign(value);
}
inline void RetainItem::add_szretain(const char* value, size_t size) {
  szretain_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RetainItem::szretain() const {
  return szretain_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RetainItem::mutable_szretain() {
  return &szretain_;
}

// -------------------------------------------------------------------

// CMD_OSS_QUERYRETAIN_SC

// repeated .Oss.RetainItem szRetainList = 1;
inline int CMD_OSS_QUERYRETAIN_SC::szretainlist_size() const {
  return szretainlist_.size();
}
inline void CMD_OSS_QUERYRETAIN_SC::clear_szretainlist() {
  szretainlist_.Clear();
}
inline const ::Oss::RetainItem& CMD_OSS_QUERYRETAIN_SC::szretainlist(int index) const {
  return szretainlist_.Get(index);
}
inline ::Oss::RetainItem* CMD_OSS_QUERYRETAIN_SC::mutable_szretainlist(int index) {
  return szretainlist_.Mutable(index);
}
inline ::Oss::RetainItem* CMD_OSS_QUERYRETAIN_SC::add_szretainlist() {
  return szretainlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Oss::RetainItem >&
CMD_OSS_QUERYRETAIN_SC::szretainlist() const {
  return szretainlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::Oss::RetainItem >*
CMD_OSS_QUERYRETAIN_SC::mutable_szretainlist() {
  return &szretainlist_;
}

// -------------------------------------------------------------------

// CMD_OSS_QUERYLOSEPLAYER_CS

// required int32 dwBeginDate = 1;
inline bool CMD_OSS_QUERYLOSEPLAYER_CS::has_dwbegindate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_OSS_QUERYLOSEPLAYER_CS::set_has_dwbegindate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_OSS_QUERYLOSEPLAYER_CS::clear_has_dwbegindate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_OSS_QUERYLOSEPLAYER_CS::clear_dwbegindate() {
  dwbegindate_ = 0;
  clear_has_dwbegindate();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYLOSEPLAYER_CS::dwbegindate() const {
  return dwbegindate_;
}
inline void CMD_OSS_QUERYLOSEPLAYER_CS::set_dwbegindate(::google::protobuf::int32 value) {
  set_has_dwbegindate();
  dwbegindate_ = value;
}

// required int32 dwEndDate = 2;
inline bool CMD_OSS_QUERYLOSEPLAYER_CS::has_dwenddate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_OSS_QUERYLOSEPLAYER_CS::set_has_dwenddate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_OSS_QUERYLOSEPLAYER_CS::clear_has_dwenddate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_OSS_QUERYLOSEPLAYER_CS::clear_dwenddate() {
  dwenddate_ = 0;
  clear_has_dwenddate();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYLOSEPLAYER_CS::dwenddate() const {
  return dwenddate_;
}
inline void CMD_OSS_QUERYLOSEPLAYER_CS::set_dwenddate(::google::protobuf::int32 value) {
  set_has_dwenddate();
  dwenddate_ = value;
}

// required int32 iWorldID = 3;
inline bool CMD_OSS_QUERYLOSEPLAYER_CS::has_iworldid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_OSS_QUERYLOSEPLAYER_CS::set_has_iworldid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_OSS_QUERYLOSEPLAYER_CS::clear_has_iworldid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_OSS_QUERYLOSEPLAYER_CS::clear_iworldid() {
  iworldid_ = 0;
  clear_has_iworldid();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYLOSEPLAYER_CS::iworldid() const {
  return iworldid_;
}
inline void CMD_OSS_QUERYLOSEPLAYER_CS::set_iworldid(::google::protobuf::int32 value) {
  set_has_iworldid();
  iworldid_ = value;
}

// -------------------------------------------------------------------

// LosePlayerItem

// required int32 iLevel = 1;
inline bool LosePlayerItem::has_ilevel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LosePlayerItem::set_has_ilevel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LosePlayerItem::clear_has_ilevel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LosePlayerItem::clear_ilevel() {
  ilevel_ = 0;
  clear_has_ilevel();
}
inline ::google::protobuf::int32 LosePlayerItem::ilevel() const {
  return ilevel_;
}
inline void LosePlayerItem::set_ilevel(::google::protobuf::int32 value) {
  set_has_ilevel();
  ilevel_ = value;
}

// required int32 iCount = 2;
inline bool LosePlayerItem::has_icount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LosePlayerItem::set_has_icount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LosePlayerItem::clear_has_icount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LosePlayerItem::clear_icount() {
  icount_ = 0;
  clear_has_icount();
}
inline ::google::protobuf::int32 LosePlayerItem::icount() const {
  return icount_;
}
inline void LosePlayerItem::set_icount(::google::protobuf::int32 value) {
  set_has_icount();
  icount_ = value;
}

// -------------------------------------------------------------------

// CMD_OSS_QUERYLOSEPLAYER_SC

// repeated .Oss.LosePlayerItem szLosePlayer = 1;
inline int CMD_OSS_QUERYLOSEPLAYER_SC::szloseplayer_size() const {
  return szloseplayer_.size();
}
inline void CMD_OSS_QUERYLOSEPLAYER_SC::clear_szloseplayer() {
  szloseplayer_.Clear();
}
inline const ::Oss::LosePlayerItem& CMD_OSS_QUERYLOSEPLAYER_SC::szloseplayer(int index) const {
  return szloseplayer_.Get(index);
}
inline ::Oss::LosePlayerItem* CMD_OSS_QUERYLOSEPLAYER_SC::mutable_szloseplayer(int index) {
  return szloseplayer_.Mutable(index);
}
inline ::Oss::LosePlayerItem* CMD_OSS_QUERYLOSEPLAYER_SC::add_szloseplayer() {
  return szloseplayer_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Oss::LosePlayerItem >&
CMD_OSS_QUERYLOSEPLAYER_SC::szloseplayer() const {
  return szloseplayer_;
}
inline ::google::protobuf::RepeatedPtrField< ::Oss::LosePlayerItem >*
CMD_OSS_QUERYLOSEPLAYER_SC::mutable_szloseplayer() {
  return &szloseplayer_;
}

// required int32 iTotolPlayer = 2;
inline bool CMD_OSS_QUERYLOSEPLAYER_SC::has_itotolplayer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_OSS_QUERYLOSEPLAYER_SC::set_has_itotolplayer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_OSS_QUERYLOSEPLAYER_SC::clear_has_itotolplayer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_OSS_QUERYLOSEPLAYER_SC::clear_itotolplayer() {
  itotolplayer_ = 0;
  clear_has_itotolplayer();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYLOSEPLAYER_SC::itotolplayer() const {
  return itotolplayer_;
}
inline void CMD_OSS_QUERYLOSEPLAYER_SC::set_itotolplayer(::google::protobuf::int32 value) {
  set_has_itotolplayer();
  itotolplayer_ = value;
}

// -------------------------------------------------------------------

// CMD_OSS_QUERYGAMECOIN_CS

// required int32 dwBeginDate = 1;
inline bool CMD_OSS_QUERYGAMECOIN_CS::has_dwbegindate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_OSS_QUERYGAMECOIN_CS::set_has_dwbegindate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_OSS_QUERYGAMECOIN_CS::clear_has_dwbegindate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_OSS_QUERYGAMECOIN_CS::clear_dwbegindate() {
  dwbegindate_ = 0;
  clear_has_dwbegindate();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYGAMECOIN_CS::dwbegindate() const {
  return dwbegindate_;
}
inline void CMD_OSS_QUERYGAMECOIN_CS::set_dwbegindate(::google::protobuf::int32 value) {
  set_has_dwbegindate();
  dwbegindate_ = value;
}

// required int32 dwEndDate = 2;
inline bool CMD_OSS_QUERYGAMECOIN_CS::has_dwenddate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_OSS_QUERYGAMECOIN_CS::set_has_dwenddate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_OSS_QUERYGAMECOIN_CS::clear_has_dwenddate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_OSS_QUERYGAMECOIN_CS::clear_dwenddate() {
  dwenddate_ = 0;
  clear_has_dwenddate();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYGAMECOIN_CS::dwenddate() const {
  return dwenddate_;
}
inline void CMD_OSS_QUERYGAMECOIN_CS::set_dwenddate(::google::protobuf::int32 value) {
  set_has_dwenddate();
  dwenddate_ = value;
}

// required int32 iWorldID = 3;
inline bool CMD_OSS_QUERYGAMECOIN_CS::has_iworldid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_OSS_QUERYGAMECOIN_CS::set_has_iworldid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_OSS_QUERYGAMECOIN_CS::clear_has_iworldid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_OSS_QUERYGAMECOIN_CS::clear_iworldid() {
  iworldid_ = 0;
  clear_has_iworldid();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYGAMECOIN_CS::iworldid() const {
  return iworldid_;
}
inline void CMD_OSS_QUERYGAMECOIN_CS::set_iworldid(::google::protobuf::int32 value) {
  set_has_iworldid();
  iworldid_ = value;
}

// required int32 iGameCoinType = 4;
inline bool CMD_OSS_QUERYGAMECOIN_CS::has_igamecointype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMD_OSS_QUERYGAMECOIN_CS::set_has_igamecointype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMD_OSS_QUERYGAMECOIN_CS::clear_has_igamecointype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMD_OSS_QUERYGAMECOIN_CS::clear_igamecointype() {
  igamecointype_ = 0;
  clear_has_igamecointype();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYGAMECOIN_CS::igamecointype() const {
  return igamecointype_;
}
inline void CMD_OSS_QUERYGAMECOIN_CS::set_igamecointype(::google::protobuf::int32 value) {
  set_has_igamecointype();
  igamecointype_ = value;
}

// -------------------------------------------------------------------

// GameCoinItem

// required string iReasonStr = 1;
inline bool GameCoinItem::has_ireasonstr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameCoinItem::set_has_ireasonstr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameCoinItem::clear_has_ireasonstr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameCoinItem::clear_ireasonstr() {
  if (ireasonstr_ != &::google::protobuf::internal::kEmptyString) {
    ireasonstr_->clear();
  }
  clear_has_ireasonstr();
}
inline const ::std::string& GameCoinItem::ireasonstr() const {
  return *ireasonstr_;
}
inline void GameCoinItem::set_ireasonstr(const ::std::string& value) {
  set_has_ireasonstr();
  if (ireasonstr_ == &::google::protobuf::internal::kEmptyString) {
    ireasonstr_ = new ::std::string;
  }
  ireasonstr_->assign(value);
}
inline void GameCoinItem::set_ireasonstr(const char* value) {
  set_has_ireasonstr();
  if (ireasonstr_ == &::google::protobuf::internal::kEmptyString) {
    ireasonstr_ = new ::std::string;
  }
  ireasonstr_->assign(value);
}
inline void GameCoinItem::set_ireasonstr(const char* value, size_t size) {
  set_has_ireasonstr();
  if (ireasonstr_ == &::google::protobuf::internal::kEmptyString) {
    ireasonstr_ = new ::std::string;
  }
  ireasonstr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameCoinItem::mutable_ireasonstr() {
  set_has_ireasonstr();
  if (ireasonstr_ == &::google::protobuf::internal::kEmptyString) {
    ireasonstr_ = new ::std::string;
  }
  return ireasonstr_;
}
inline ::std::string* GameCoinItem::release_ireasonstr() {
  clear_has_ireasonstr();
  if (ireasonstr_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ireasonstr_;
    ireasonstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GameCoinItem::set_allocated_ireasonstr(::std::string* ireasonstr) {
  if (ireasonstr_ != &::google::protobuf::internal::kEmptyString) {
    delete ireasonstr_;
  }
  if (ireasonstr) {
    set_has_ireasonstr();
    ireasonstr_ = ireasonstr;
  } else {
    clear_has_ireasonstr();
    ireasonstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 iGameCoinCount = 2;
inline bool GameCoinItem::has_igamecoincount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameCoinItem::set_has_igamecoincount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameCoinItem::clear_has_igamecoincount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameCoinItem::clear_igamecoincount() {
  igamecoincount_ = 0;
  clear_has_igamecoincount();
}
inline ::google::protobuf::int32 GameCoinItem::igamecoincount() const {
  return igamecoincount_;
}
inline void GameCoinItem::set_igamecoincount(::google::protobuf::int32 value) {
  set_has_igamecoincount();
  igamecoincount_ = value;
}

// required int32 iUseTimes = 3;
inline bool GameCoinItem::has_iusetimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameCoinItem::set_has_iusetimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameCoinItem::clear_has_iusetimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameCoinItem::clear_iusetimes() {
  iusetimes_ = 0;
  clear_has_iusetimes();
}
inline ::google::protobuf::int32 GameCoinItem::iusetimes() const {
  return iusetimes_;
}
inline void GameCoinItem::set_iusetimes(::google::protobuf::int32 value) {
  set_has_iusetimes();
  iusetimes_ = value;
}

// -------------------------------------------------------------------

// CMD_OSS_QUERYGAMECOIN_SC

// required int32 iGameCoinType = 1;
inline bool CMD_OSS_QUERYGAMECOIN_SC::has_igamecointype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_OSS_QUERYGAMECOIN_SC::set_has_igamecointype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_OSS_QUERYGAMECOIN_SC::clear_has_igamecointype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_OSS_QUERYGAMECOIN_SC::clear_igamecointype() {
  igamecointype_ = 0;
  clear_has_igamecointype();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYGAMECOIN_SC::igamecointype() const {
  return igamecointype_;
}
inline void CMD_OSS_QUERYGAMECOIN_SC::set_igamecointype(::google::protobuf::int32 value) {
  set_has_igamecointype();
  igamecointype_ = value;
}

// repeated .Oss.GameCoinItem szProduct = 2;
inline int CMD_OSS_QUERYGAMECOIN_SC::szproduct_size() const {
  return szproduct_.size();
}
inline void CMD_OSS_QUERYGAMECOIN_SC::clear_szproduct() {
  szproduct_.Clear();
}
inline const ::Oss::GameCoinItem& CMD_OSS_QUERYGAMECOIN_SC::szproduct(int index) const {
  return szproduct_.Get(index);
}
inline ::Oss::GameCoinItem* CMD_OSS_QUERYGAMECOIN_SC::mutable_szproduct(int index) {
  return szproduct_.Mutable(index);
}
inline ::Oss::GameCoinItem* CMD_OSS_QUERYGAMECOIN_SC::add_szproduct() {
  return szproduct_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Oss::GameCoinItem >&
CMD_OSS_QUERYGAMECOIN_SC::szproduct() const {
  return szproduct_;
}
inline ::google::protobuf::RepeatedPtrField< ::Oss::GameCoinItem >*
CMD_OSS_QUERYGAMECOIN_SC::mutable_szproduct() {
  return &szproduct_;
}

// repeated .Oss.GameCoinItem szConsume = 3;
inline int CMD_OSS_QUERYGAMECOIN_SC::szconsume_size() const {
  return szconsume_.size();
}
inline void CMD_OSS_QUERYGAMECOIN_SC::clear_szconsume() {
  szconsume_.Clear();
}
inline const ::Oss::GameCoinItem& CMD_OSS_QUERYGAMECOIN_SC::szconsume(int index) const {
  return szconsume_.Get(index);
}
inline ::Oss::GameCoinItem* CMD_OSS_QUERYGAMECOIN_SC::mutable_szconsume(int index) {
  return szconsume_.Mutable(index);
}
inline ::Oss::GameCoinItem* CMD_OSS_QUERYGAMECOIN_SC::add_szconsume() {
  return szconsume_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Oss::GameCoinItem >&
CMD_OSS_QUERYGAMECOIN_SC::szconsume() const {
  return szconsume_;
}
inline ::google::protobuf::RepeatedPtrField< ::Oss::GameCoinItem >*
CMD_OSS_QUERYGAMECOIN_SC::mutable_szconsume() {
  return &szconsume_;
}

// -------------------------------------------------------------------

// CMD_OSS_QUERYFIRSTCONSUME_CS

// required int32 dwBeginDate = 1;
inline bool CMD_OSS_QUERYFIRSTCONSUME_CS::has_dwbegindate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMD_OSS_QUERYFIRSTCONSUME_CS::set_has_dwbegindate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMD_OSS_QUERYFIRSTCONSUME_CS::clear_has_dwbegindate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMD_OSS_QUERYFIRSTCONSUME_CS::clear_dwbegindate() {
  dwbegindate_ = 0;
  clear_has_dwbegindate();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYFIRSTCONSUME_CS::dwbegindate() const {
  return dwbegindate_;
}
inline void CMD_OSS_QUERYFIRSTCONSUME_CS::set_dwbegindate(::google::protobuf::int32 value) {
  set_has_dwbegindate();
  dwbegindate_ = value;
}

// required int32 dwEndDate = 2;
inline bool CMD_OSS_QUERYFIRSTCONSUME_CS::has_dwenddate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMD_OSS_QUERYFIRSTCONSUME_CS::set_has_dwenddate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMD_OSS_QUERYFIRSTCONSUME_CS::clear_has_dwenddate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMD_OSS_QUERYFIRSTCONSUME_CS::clear_dwenddate() {
  dwenddate_ = 0;
  clear_has_dwenddate();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYFIRSTCONSUME_CS::dwenddate() const {
  return dwenddate_;
}
inline void CMD_OSS_QUERYFIRSTCONSUME_CS::set_dwenddate(::google::protobuf::int32 value) {
  set_has_dwenddate();
  dwenddate_ = value;
}

// required int32 iWorldID = 3;
inline bool CMD_OSS_QUERYFIRSTCONSUME_CS::has_iworldid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMD_OSS_QUERYFIRSTCONSUME_CS::set_has_iworldid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMD_OSS_QUERYFIRSTCONSUME_CS::clear_has_iworldid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMD_OSS_QUERYFIRSTCONSUME_CS::clear_iworldid() {
  iworldid_ = 0;
  clear_has_iworldid();
}
inline ::google::protobuf::int32 CMD_OSS_QUERYFIRSTCONSUME_CS::iworldid() const {
  return iworldid_;
}
inline void CMD_OSS_QUERYFIRSTCONSUME_CS::set_iworldid(::google::protobuf::int32 value) {
  set_has_iworldid();
  iworldid_ = value;
}

// -------------------------------------------------------------------

// CMD_OSS_QUERYFIRSTCONSUME_SC

// repeated .Oss.GameCoinItem szFirstConsume = 1;
inline int CMD_OSS_QUERYFIRSTCONSUME_SC::szfirstconsume_size() const {
  return szfirstconsume_.size();
}
inline void CMD_OSS_QUERYFIRSTCONSUME_SC::clear_szfirstconsume() {
  szfirstconsume_.Clear();
}
inline const ::Oss::GameCoinItem& CMD_OSS_QUERYFIRSTCONSUME_SC::szfirstconsume(int index) const {
  return szfirstconsume_.Get(index);
}
inline ::Oss::GameCoinItem* CMD_OSS_QUERYFIRSTCONSUME_SC::mutable_szfirstconsume(int index) {
  return szfirstconsume_.Mutable(index);
}
inline ::Oss::GameCoinItem* CMD_OSS_QUERYFIRSTCONSUME_SC::add_szfirstconsume() {
  return szfirstconsume_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Oss::GameCoinItem >&
CMD_OSS_QUERYFIRSTCONSUME_SC::szfirstconsume() const {
  return szfirstconsume_;
}
inline ::google::protobuf::RepeatedPtrField< ::Oss::GameCoinItem >*
CMD_OSS_QUERYFIRSTCONSUME_SC::mutable_szfirstconsume() {
  return &szfirstconsume_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Oss

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Oss::Cmd>() {
  return ::Oss::Cmd_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Oss::GameCoinType>() {
  return ::Oss::GameCoinType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Oss_2eproto__INCLUDED
